(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports=JSON.parse('{"version":8,"glyphs":"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true","sprite":"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites","metadata":{"mapbox:groups":{"basemap-background":{"name":"basemap-background"},"static":{"name":"static"},"temporal":{"name":"temporal"},"tracks":{"name":"tracks"},"basemap-foreground":{"name":"basemap-foreground"}},"gfw:basemap-layers":[{"id":"satellite","label":"Satellite"},{"id":"north-star","label":"North Star"},{"id":"labels","isOption":true},{"id":"graticules","isOption":true},{"id":"bathymetry","isOption":true}],"gfw:styles":{"selected":{"fill":{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},"circle":{"circle-stroke-width":[2,0.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},"highlighted":{"circle":{"circle-stroke-color":["#fff","#000"]}}}},"sources":{"6":{"metadata":{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{"id":"nama"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"satellite":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256,"attribution":"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href=\'https://www.google.com/intl/en-GB_US/help/terms_maps.html\'>Terms of Use</a><br>"},"north-star":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256},"labels":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256},"graticules":{"metadata":{"gfw:carto-sql":"select * from graticules where scalerank=4"},"type":"vector"},"bathymetry":{"metadata":{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},"type":"vector"},"mpant":{"metadata":{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector"},"mparu":{"metadata":{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector"},"eez":{"metadata":{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, \'eez:\' || mrgid as region_id, geoname as reporting_name, \'eez:\' || mrgid as reporting_id FROM eez","gfw:popups":[{"id":"name"}]},"type":"vector","attribution":"EEZs: marineregions.org"},"highseas":{"metadata":{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{"id":"regionid"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"protectedplanet":{"metadata":{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector","attribution":"MPAs: www.protectedplanet.net"},"rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, \'rfmo:\' || rfb as reporting_id, \'rfmo:\' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{"id":"rfb"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"cp_rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, id, id as rfb FROM carrier_portal_rfmo_hi_res","gfw:popups":[{"id":"rfb"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"bluefin_rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id FROM bluefin_rfmo"},"type":"vector"},"falklands_conservation":{"metadata":{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{"id":"full_name"},{"id":"zone"},{"id":"area_sqkm"}]},"type":"vector"},"encounters_ais":{"type":"vector","tiles":[]},"events_fishing":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},"events_encounter":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_gap":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_port":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/port/tiles/{z},{x},{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_encounter_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"events_gap_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"events_port_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"rulers":{"type":"geojson","data":{"type":"FeatureCollection","features":[]}},"rulers-points":{"type":"geojson","data":{"type":"FeatureCollection","features":[]}}},"layers":[{"id":"background","metadata":{"mapbox:group":"basemap-background"},"type":"background","layout":{"visibility":"visible"},"paint":{"background-color":"#001436"}},{"id":"satellite","metadata":{"mapbox:group":"basemap-background"},"type":"raster","source":"satellite","layout":{"visibility":"visible"}},{"id":"north-star","metadata":{"mapbox:group":"basemap-background"},"type":"raster","source":"north-star"},{"id":"bathymetry","metadata":{"mapbox:group":"basemap-background"},"type":"fill","source":"bathymetry","source-layer":"bathymetry","paint":{"fill-color":["step",["get","depth"],"#1e346c",1000,"#1a2f63",2000,"#142655",3000,"#101f4a",4000,"#0d1b43",5000,"#0a163b",6000,"#061132",7000,"#030d2a",8000,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{"id":"mpant","metadata":{"mapbox:group":"static"},"type":"fill","source":"mpant","source-layer":"mpant"},{"id":"mpant-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"mpant","source-layer":"mpant","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"mparu","metadata":{"mapbox:group":"static"},"type":"fill","source":"mparu","source-layer":"mparu"},{"id":"mparu-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"mparu","source-layer":"mparu","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"eez","metadata":{"mapbox:group":"static"},"type":"fill","source":"eez","source-layer":"eez"},{"id":"eez-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"eez","source-layer":"eez","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"highseas","metadata":{"mapbox:group":"static"},"type":"fill","source":"highseas","source-layer":"highseas"},{"id":"highseas-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"highseas","source-layer":"highseas","layout":{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"rfmo","source-layer":"rfmo"},{"id":"cp_rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"cp_rfmo","source-layer":"cp_rfmo"},{"id":"bluefin_rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"bluefin_rfmo","source-layer":"bluefin_rfmo"},{"id":"rfmo-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"rfmo","source-layer":"rfmo","layout":{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"6","metadata":{"mapbox:group":"static"},"type":"fill","source":"6","source-layer":"6"},{"id":"6-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"6","source-layer":"6","layout":{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"protectedplanet","metadata":{"mapbox:group":"static"},"type":"fill","source":"protectedplanet","source-layer":"protectedplanet"},{"id":"protectedplanet-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"protectedplanet","source-layer":"protectedplanet","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"falklands_conservation","metadata":{"mapbox:group":"static"},"type":"fill","source":"falklands_conservation","source-layer":"falklands_conservation"},{"id":"falklands_conservation-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"falklands_conservation","source-layer":"falklands_conservation","layout":{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"events_fishing","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"type":"circle","source":"events_fishing","source-layer":"default","paint":{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_encounter","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"type":"circle","source":"events_encounter","source-layer":"default","paint":{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"encounters_ais","type":"circle","source":"encounters_ais","source-layer":"points","metadata":{"gfw:temporal":true,"gfw:temporalField":"timeIndex","mapbox:group":"temporal"},"paint":{"circle-color":"#e5647d","circle-radius":3,"circle-opacity":0.9,"circle-stroke-opacity":0}},{"id":"encounters_ais_outline","type":"circle","source":"encounters_ais","source-layer":"points","metadata":{"gfw:temporal":true,"gfw:temporalField":"timeIndex","gfw:mainColorPaintProperty":"circle-stroke-color","mapbox:group":"temporal"},"paint":{"circle-color":"hsla(0, 0%, 0%, 0)","circle-stroke-color":"#e5647d","circle-stroke-width":1,"circle-radius":6}},{"id":"events_gap","type":"circle","source":"events_gap","source-layer":"default","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"paint":{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_port","type":"circle","source":"events_port","source-layer":"default","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"paint":{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_encounter_vessel","source":"events_encounter_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["encounter_highlight","encounter"]}}},"layout":{"icon-image":"encounter","icon-allow-overlap":true}},{"id":"events_encounter_vessel_number","source":"events_encounter_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"events_gap_vessel","source":"events_gap_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["gap_highlight","gap"]}}},"layout":{"icon-image":"gap","icon-allow-overlap":true}},{"id":"events_gap_vessel_number","source":"events_gap_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"events_port_vessel","source":"events_port_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["port_highlight","port"]}}},"layout":{"icon-image":"port","icon-allow-overlap":true}},{"id":"events_port_vessel_number","source":"events_port_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"graticules-lines","metadata":{"mapbox:group":"basemap-foreground"},"type":"line","source":"graticules","source-layer":"graticules","filter":["==","$type","LineString"],"paint":{"line-color":"#174084","line-opacity":{"base":1,"stops":[[0,0.7],[8,0.7],[9,0.2]]},"line-width":0.5}},{"id":"graticules-labels","metadata":{"mapbox:group":"basemap-foreground"},"type":"symbol","source":"graticules","source-layer":"graticules","filter":["==","$type","LineString"],"layout":{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{"base":1,"stops":[[3,500],[8,1000]]},"text-size":{"base":1,"stops":[[3,7],[7,12]]},"text-letter-spacing":0.2},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-width":0.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{"base":1,"stops":[[0,1],[8,1],[9,0]]}}},{"id":"labels","metadata":{"mapbox:group":"basemap-foreground"},"type":"raster","source":"labels"},{"id":"rulers","source":"rulers","type":"line","metadata":{"mapbox:group":"tools"},"paint":{"line-dasharray":[2,1],"line-width":["case",["==",["get","isNew"],true],1.5,1]}},{"id":"ruler-labels","source":"rulers","type":"symbol","layout":{"text-field":"{label}","symbol-placement":"line","text-allow-overlap":true,"text-offset":[0,-0.8],"text-font":["case",["==",["get","isNew"],true],["literal",["Roboto Medium"]],["literal",["Roboto Mono Light"]]],"text-size":["case",["==",["get","isNew"],true],13,12]},"metadata":{"mapbox:group":"tools"}},{"id":"rulers-points","source":"rulers-points","type":"circle","paint":{"circle-radius":["case",["==",["get","isNew"],true],6,3],"circle-opacity":1,"circle-stroke-opacity":0}}]}')},"./src/map/glmap/map.css":function(e,t,a){e.exports={map:"map_map__1TLha",googleLogo:"map_googleLogo__3lQ1y"}},"./src/map/lib/Pack.js":function(e,t,a){"use strict";var r={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},i=function(e,t,a,r,i){void 0==a&&(a=e.length),void 0==t&&(t=0),void 0==i&&(i=t);for(var n=t;n<a;n++)r[n-t+i]=255&e.charCodeAt(n)},n=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},o={typemap:{byname:r,byarray:{}},pack:function(e,t,a){var r=new ArrayBuffer(e.size);return new DataView(r)[e.setter](0,t,a),n(r)},arrayBufferToString:n,stringToArrayBuffer:function(e,t,a){void 0==a&&(a=e.length),void 0==t&&(t=0);var r=new Uint8ClampedArray(a-t);return i(e,t,a,r,0),r.buffer},writeStringToArrayBuffer:i};for(var s in o.typemap.byname){var l=o.typemap.byname[s];l.name=s,o.typemap.byarray[l.array]=l}t.a=o,"undefined"!==typeof o&&o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"Pack",filename:"src/map/lib/Pack.js"}})},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),_Pack__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/map/lib/Pack.js"),PelagosClient=function(){function PelagosClient(){Object(_Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__.a)(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return Object(_Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__.a)(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(a,r){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=a,this.reject=r,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_2__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_2__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_2__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient,"undefined"!==typeof PelagosClient&&PelagosClient&&PelagosClient===Object(PelagosClient)&&Object.isExtensible(PelagosClient)&&Object.defineProperty(PelagosClient,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"PelagosClient",filename:"src/map/lib/pelagosClient.js"}})},"./src/map/map.mdx":function(e,t,a){"use strict";a.r(t);var r=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends.js"),i=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),n=a("../gfw-map/node_modules/react/index.js"),o=a.n(n),s=a("./node_modules/@mdx-js/react/dist/index.es.js"),l=a("./node_modules/docz/dist/index.esm.js"),c=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),p=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),u=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),m=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),d=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),A=a("./node_modules/redux/es/redux.js"),g=a("./node_modules/react-redux/es/index.js"),f=a("./node_modules/lodash/throttle.js"),b=a.n(f),E=a("./node_modules/prop-types/index.js"),h=a.n(E),y={id:h.a.string.isRequired,url:h.a.string,data:h.a.object,color:h.a.string,type:h.a.oneOf(["geojson","pelagos",void 0]),layerTemporalExtents:h.a.arrayOf(h.a.arrayOf(h.a.number)),fitBoundsOnLoad:h.a.bool};"undefined"!==typeof y&&y&&y===Object(y)&&Object.isExtensible(y)&&Object.defineProperty(y,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"trackTypes",filename:"src/map/proptypes/tracks.js"}});var O={id:h.a.string.isRequired,tilesetId:h.a.string,subtype:h.a.string,visible:h.a.bool,hue:h.a.number,opacity:h.a.number,filters:h.a.arrayOf(h.a.shape({hue:h.a.number,filterValues:h.a.object})),header:h.a.shape({endpoints:h.a.object,colsByName:h.a.object,temporalExtents:h.a.arrayOf(h.a.arrayOf(h.a.number)),temporalExtentsLess:h.a.bool}).isRequired,interactive:h.a.bool};"undefined"!==typeof O&&O&&O===Object(O)&&Object.isExtensible(O)&&Object.defineProperty(O,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"heatmapLayerTypes",filename:"src/map/proptypes/layers.js"}});var j={id:h.a.string,visible:h.a.bool};"undefined"!==typeof j&&j&&j===Object(j)&&Object.isExtensible(j)&&Object.defineProperty(j,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"basemapLayerTypes",filename:"src/map/proptypes/layers.js"}});var v={id:h.a.string.isRequired,visible:h.a.bool,selected:h.a.bool,selectedFeatures:h.a.shape({field:h.a.string,values:h.a.arrayOf(h.a.string)}),highlighted:h.a.bool,higlightedFeatures:h.a.shape({field:h.a.string,values:h.a.arrayOf(h.a.string)}),opacity:h.a.number,color:h.a.string,showLabels:h.a.bool,interactive:h.a.bool,filters:h.a.arrayOf(h.a.arrayOf(h.a.string)),isCustom:h.a.bool,subtype:h.a.oneOf([void 0,"geojson","raster"]),url:h.a.string,data:h.a.object,gl:h.a.object};"undefined"!==typeof v&&v&&v===Object(v)&&Object.isExtensible(v)&&Object.defineProperty(v,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"staticLayerTypes",filename:"src/map/proptypes/layers.js"}});var B={content:h.a.node,latitude:h.a.number.isRequired,longitude:h.a.number.isRequired};"undefined"!==typeof B&&B&&B===Object(B)&&Object.isExtensible(B)&&Object.defineProperty(B,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"popupTypes",filename:"src/map/proptypes/shared.js"}});var _={zoom:h.a.number,center:h.a.arrayOf(h.a.number)};"undefined"!==typeof _&&_&&_===Object(_)&&Object.isExtensible(_)&&Object.defineProperty(_,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"viewportTypes",filename:"src/map/proptypes/shared.js"}});var I=a("./node_modules/reselect/es/index.js"),T=a("./node_modules/immutable/dist/immutable.es.js");864e5===Object(864e5)&&Object.isExtensible(864e5)&&Object.defineProperty(864e5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TIMELINE_STEP",filename:"src/map/config.js"}});864e5===Object(864e5)&&Object.isExtensible(864e5)&&Object.defineProperty(864e5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MIN_FRAME_LENGTH_MS",filename:"src/map/config.js"}});6===Object(6)&&Object.isExtensible(6)&&Object.defineProperty(6,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD",filename:"src/map/config.js"}});var S=8;"undefined"!==typeof S&&S&&S===Object(S)&&Object.isExtensible(S)&&Object.defineProperty(S,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_BASE_RADIUS",filename:"src/map/config.js"}});.15===Object(.15)&&Object.isExtensible(.15)&&Object.defineProperty(.15,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HEATMAP_BLUR_FACTOR",filename:"src/map/config.js"}});312===Object(312)&&Object.isExtensible(312)&&Object.defineProperty(312,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ACTIVITY_HIGHLIGHT_HUE",filename:"src/map/config.js"}});.5===Object(.5)&&Object.isExtensible(.5)&&Object.defineProperty(.5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HEATMAP_DIMMING_ALPHA",filename:"src/map/config.js"}});var C=2e5;"undefined"!==typeof C&&C&&C===Object(C)&&Object.isExtensible(C)&&Object.defineProperty(C,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MAX_SPRITES_PER_LAYER",filename:"src/map/config.js"}});10===Object(10)&&Object.isExtensible(10)&&Object.defineProperty(10,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSEL_CLICK_TOLERANCE_PX",filename:"src/map/config.js"}});1===Object(1)&&Object.isExtensible(1)&&Object.defineProperty(1,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"CLUSTER_CLICK_ZOOM_INCREMENT",filename:"src/map/config.js"}});1===Object(1)&&Object.isExtensible(1)&&Object.defineProperty(1,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MIN_ZOOM_LEVEL",filename:"src/map/config.js"}});14===Object(14)&&Object.isExtensible(14)&&Object.defineProperty(14,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MAX_ZOOM_LEVEL",filename:"src/map/config.js"}});10===Object(10)&&Object.isExtensible(10)&&Object.defineProperty(10,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING",filename:"src/map/config.js"}});.5===Object(.5)&&Object.isExtensible(.5)&&Object.defineProperty(.5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TILES_LOAD_ZOOM_OFFSET",filename:"src/map/config.js"}});var w="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG";w===Object(w)&&Object.isExtensible(w)&&Object.defineProperty(w,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"STATIC_LAYERS_CARTO_ENDPOINT",filename:"src/map/config.js"}});var D="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt";D===Object(D)&&Object.isExtensible(D)&&Object.defineProperty(D,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"STATIC_LAYERS_CARTO_TILES_ENDPOINT",filename:"src/map/config.js"}});"temporal"===Object("temporal")&&Object.isExtensible("temporal")&&Object.defineProperty("temporal","__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRACKS_LAYER_IN_FRONT_OF_GROUP",filename:"src/map/config.js"}});var R="dot-world-fishing";"undefined"!==typeof R&&R&&R===Object(R)&&Object.isExtensible(R)&&Object.defineProperty(R,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TILES_URL_NEEDING_AUTHENTICATION",filename:"src/map/config.js"}});"INIT_MODULE"===Object("INIT_MODULE")&&Object.isExtensible("INIT_MODULE")&&Object.defineProperty("INIT_MODULE","__filemeta",{enumerable:!0,configurable:!0,value:{name:"INIT_MODULE",filename:"src/map/module/module.actions.js"}});"SET_TEMPORAL_EXTENT"===Object("SET_TEMPORAL_EXTENT")&&Object.isExtensible("SET_TEMPORAL_EXTENT")&&Object.defineProperty("SET_TEMPORAL_EXTENT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_TEMPORAL_EXTENT",filename:"src/map/module/module.actions.js"}});"SET_HIGHLIGHT_TEMPORAL_EXTENT"===Object("SET_HIGHLIGHT_TEMPORAL_EXTENT")&&Object.isExtensible("SET_HIGHLIGHT_TEMPORAL_EXTENT")&&Object.defineProperty("SET_HIGHLIGHT_TEMPORAL_EXTENT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_HIGHLIGHT_TEMPORAL_EXTENT",filename:"src/map/module/module.actions.js"}});"START_LOADER"===Object("START_LOADER")&&Object.isExtensible("START_LOADER")&&Object.defineProperty("START_LOADER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"START_LOADER",filename:"src/map/module/module.actions.js"}});"COMPLETE_LOADER"===Object("COMPLETE_LOADER")&&Object.isExtensible("COMPLETE_LOADER")&&Object.defineProperty("COMPLETE_LOADER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"COMPLETE_LOADER",filename:"src/map/module/module.actions.js"}});"SET_MODULE_CURSOR"===Object("SET_MODULE_CURSOR")&&Object.isExtensible("SET_MODULE_CURSOR")&&Object.defineProperty("SET_MODULE_CURSOR","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MODULE_CURSOR",filename:"src/map/module/module.actions.js"}});var L=function(e){return function(t){t({type:"INIT_MODULE",payload:e})}};L&&L===Object(L)&&Object.isExtensible(L)&&Object.defineProperty(L,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"initModule",filename:"src/map/module/module.actions.js"}});var M=function(e,t,a){var r=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==a?"".concat(a,"_").concat(r):r}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),a};"undefined"!==typeof M&&M&&M===Object(M)&&Object.isExtensible(M)&&Object.defineProperty(M,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"startLoader",filename:"src/map/module/module.actions.js"}});var k=function(e){return function(t,a){t({type:"COMPLETE_LOADER",payload:e});var r=a();r.map.module.loaders.length||void 0===r.map.module.onLoadComplete||r.map.module.onLoadComplete()}};"undefined"!==typeof k&&k&&k===Object(k)&&Object.isExtensible(k)&&Object.defineProperty(k,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"completeLoader",filename:"src/map/module/module.actions.js"}});var P=function(e){return function(t,a){var r=a(),i=r.map.module.onViewportChange;if(void 0!==i){var n=r.map.viewport;i({interactionState:e,zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}}};P&&P===Object(P)&&Object.isExtensible(P)&&Object.defineProperty(P,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"onViewportChange",filename:"src/map/module/module.actions.js"}});var x=function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}};x&&x===Object(x)&&Object.isExtensible(x)&&Object.defineProperty(x,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setTemporalExtent",filename:"src/map/module/module.actions.js"}});var Q=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}};Q&&Q===Object(Q)&&Object.isExtensible(Q)&&Object.defineProperty(Q,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setHighlightTemporalExtent",filename:"src/map/module/module.actions.js"}});var H=function(){return function(e,t){var a=t();void 0!==a.map.module.onClosePopup&&a.map.module.onClosePopup()}};H&&H===Object(H)&&Object.isExtensible(H)&&Object.defineProperty(H,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"closePopup",filename:"src/map/module/module.actions.js"}});var F=function(e){return{type:"SET_MODULE_CURSOR",payload:e}};F&&F===Object(F)&&Object.isExtensible(F)&&Object.defineProperty(F,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setCursor",filename:"src/map/module/module.actions.js"}});var Y=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),G=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),U=function(e){return e.map.module.temporalExtent};U&&U===Object(U)&&Object.isExtensible(U)&&Object.defineProperty(U,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTemporalExtent",filename:"src/map/module/module.selectors.js"}});var J=function(e){return e.map.module.highlightTemporalExtent};function K(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Z(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?K(a,!0).forEach((function(t){Object(G.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):K(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}J&&J===Object(J)&&Object.isExtensible(J)&&Object.defineProperty(J,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getHighlightTemporalExtent",filename:"src/map/module/module.selectors.js"}});var N=function(e){return e.map.tracks.data};N&&N===Object(N)&&Object.isExtensible(N)&&Object.defineProperty(N,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTracksData",filename:"src/map/tracks/tracks.selectors.js"}});var q=Object(I.a)(N,(function(e){return e.filter((function(e){return void 0!==e.data}))}));"undefined"!==typeof q&&q&&q===Object(q)&&Object.isExtensible(q)&&Object.defineProperty(q,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getGeojsonTracksReady",filename:"src/map/tracks/tracks.selectors.js"}});var V=function(e,t){return{sources:Z({},e.sources,{},t.sources),layers:[].concat(Object(Y.a)(e.layers),Object(Y.a)(t.layers))}},W=function(e,t){var a=t.start,r=t.end;if(!e||!e.features)return null;var i=e.features.reduce((function(e,t){if(t.properties&&t.properties.coordinateProperties&&t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var i=t.geometry.coordinates.reduce((function(e,i,n){var o=t.properties.coordinateProperties.times[n];return o>=a&&o<=r&&(e.coordinates.push(i),e.times.push(o)),e}),{coordinates:[],times:[]});if(!i.coordinates.length)return e;var n=Z({},t,{geometry:Z({},t.geometry,{coordinates:i.coordinates}),properties:Z({},t.properties,{coordinateProperties:{times:i.times}})});e.push(n)}return e}),[]);return Z({},e,{features:i})},z=Object(I.a)([U,q],(function(e,t){var a=e&&e.length>0,r=t&&t.length>0;if(!a||!r)return null;var i={start:e[0].getTime(),end:e[1].getTime()};return t.reduce((function(e,t){if(!t.data)return e;var a="".concat(t.id,"Track"),r={sources:Object(G.a)({},a,{type:"geojson",data:W(t.data,i)}),layers:[{id:"".concat(t.id,"Lines"),source:a,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:a,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return V(e,r)}),{sources:{},layers:[]})})),X=Object(I.a)([J,q],(function(e,t){var a=e&&e.length>0,r=t&&t.length>0;if(!a||!r)return null;var i={start:e[0].getTime(),end:e[1].getTime()};return t.reduce((function(e,t){if(!t.data)return e;var a="".concat(t.id,"HighlightedTrack"),r={sources:Object(G.a)({},a,{type:"geojson",data:W(t.data,i)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:a,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return V(e,r)}),{sources:{},layers:[]})})),$=Object(I.a)([z,X],(function(e,t){return t?V(e,t):e}));"undefined"!==typeof $&&$&&$===Object($)&&Object.isExtensible($)&&Object.defineProperty($,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTracksStyles",filename:"src/map/tracks/tracks.selectors.js"}});var ee=a("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),te=a("./node_modules/@turf/area/index.js"),ae=a.n(te);"rgba(0,0,0,0)"===Object("rgba(0,0,0,0)")&&Object.isExtensible("rgba(0,0,0,0)")&&Object.defineProperty("rgba(0,0,0,0)","__filemeta",{enumerable:!0,configurable:!0,value:{name:"GL_TRANSPARENT",filename:"src/map/constants.js"}});var re={ZOOM:"ZOOM"};"undefined"!==typeof re&&re&&re===Object(re)&&Object.isExtensible(re)&&Object.defineProperty(re,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRANSITION_TYPE",filename:"src/map/constants.js"}});"Encounters"===Object("Encounters")&&Object.isExtensible("Encounters")&&Object.defineProperty("Encounters","__filemeta",{enumerable:!0,configurable:!0,value:{name:"ENCOUNTERS",filename:"src/map/constants.js"}});var ie={NORMAL:0,BULLSEYE:2};"undefined"!==typeof ie&&ie&&ie===Object(ie)&&Object.isExtensible(ie)&&Object.defineProperty(ie,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"BRUSH_RENDERING_STYLE",filename:"src/map/constants.js"}});var ne={RADIAL_GRADIENT:0,CIRCLE:1};"undefined"!==typeof ne&&ne&&ne===Object(ne)&&Object.isExtensible(ne)&&Object.defineProperty(ne,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"BRUSH_ZOOM_RENDERING_STYLE",filename:"src/map/constants.js"}});"POLYGON_LAYERS_AREA"===Object("POLYGON_LAYERS_AREA")&&Object.isExtensible("POLYGON_LAYERS_AREA")&&Object.defineProperty("POLYGON_LAYERS_AREA","__filemeta",{enumerable:!0,configurable:!0,value:{name:"POLYGON_LAYERS_AREA",filename:"src/map/constants.js"}});var oe={geojson:"geojson",raster:"raster"};"undefined"!==typeof oe&&oe&&oe===Object(oe)&&Object.isExtensible(oe)&&Object.defineProperty(oe,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"CUSTOM_LAYERS_SUBTYPES",filename:"src/map/constants.js"}});var se=a("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),le=a("./node_modules/lodash/difference.js"),ce=a.n(le),pe=a("./node_modules/lodash/uniq.js"),ue=a.n(pe),me=a("./node_modules/lodash/uniqBy.js"),de=a.n(me),Ae=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),ge=a("./node_modules/lodash/pull.js"),fe=a.n(ge),be=a("./node_modules/lodash/sumBy.js"),Ee=a.n(be),he=a("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),ye=a("./node_modules/@globalfishingwatch/map-convert/index.js"),Oe=a.n(ye),je=a("./node_modules/lodash/template.js"),ve=a.n(je),Be=a("./node_modules/lodash/templateSettings.js"),_e=a.n(Be),Ie=function(e,t){return _e.a.interpolate=/{{([\s\S]+?)}}/g,ve()(e)(t)},Te=a("./src/map/lib/pelagosClient.js"),Se=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=[];return(t||[null]).forEach((function(t,i){var n={};null!==t&&!0!==a.temporalExtentsLess&&(n.startTimeISO=new Date(t[0]).toISOString(),n.endTimeISO=new Date(t[1]).toISOString()),a.tileCoordinates&&(n.x=a.tileCoordinates.x,n.y=a.tileCoordinates.y,n.z=a.tileCoordinates.zoom);var o=Ie(e,n);(!0===a.temporalExtentsLess||!a.temporalExtentsIndices||a.temporalExtentsIndices.indexOf(i)>-1)&&r.push(o)})),r},Ce=function(e,t,a){for(var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=[],n=Se(e,a,r),o=0,s=n.length;o<s;o++)i.push((new Te.a).obtainTile(n[o],t));return i};"undefined"!==typeof Ce&&Ce&&Ce===Object(Ce)&&Object.isExtensible(Ce)&&Object.defineProperty(Ce,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTilePromises",filename:"src/map/utils/heatmapTileData.js"}});var we=function(e){return e.filter((function(e){return null!==e}))};"undefined"!==typeof we&&we&&we===Object(we)&&Object.isExtensible(we)&&Object.defineProperty(we,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getCleanVectorArrays",filename:"src/map/utils/heatmapTileData.js"}});var De=function(e,t){var a,r={},i=Ee()(e,(function(e){return e.longitude.length})),n=t.filter((function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)}));n.forEach((function(e){r[e]=new Float32Array(i)}));for(var o=0,s=function(e){r[e].set(a[e],o)},l=0,c=e.length;l<c;l++)a=e[l],n.forEach(s),o+=a.longitude.length;return r};"undefined"!==typeof De&&De&&De===Object(De)&&Object.isExtensible(De)&&Object.defineProperty(De,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"groupData",filename:"src/map/utils/heatmapTileData.js"}});var Re=function(e,t,a,r){var i=void 0===r?[]:r,n=a.zoom,o=Oe.a.getZoomFactorRadius(n),s=Oe.a.getZoomFactorRadiusRenderingMode(n),l=Oe.a.getZoomFactorOpacity(n),c={},p=Object.keys(t);p.forEach((function(e){c[e]=!0}));var u=[].concat(p);!0===c.sigma&&u.push("radius"),!0===c.weight&&u.push("opacity"),!0===c.longitude&&(u.push("worldX"),u.push("worldY")),!0===c.id&&u.push("series"),["latitude","longitude","datetime"].forEach((function(e){void 0!==t[e]&&!0!==t[e].hidden||fe()(u,e)})),fe()(u,"sigma","weight"),u=ue()(u);for(var m=e.latitude.length,d={},A=[],g=function(t,a){var r={};p.forEach((function(a){r[a]=e[a][t]}));var i=c.timeIndex?r.timeIndex:Oe.a.getOffsetedTimeAtPrecision(r.datetime),n=Object(he.d)([r.longitude,r.latitude],1),m=Object(Ae.a)(n,2),g=m[0],f=m[1];if(r.worldX=g,r.worldY=f,c.sigma&&(r.radius=Oe.a.sigmaToRadius(r.sigma,s,o)),c.weight&&(r.opacity=Oe.a.weightToOpacity(r.weight,l)),c.id&&(r.series=r.id),!d[i]){A.push(i);var b={};return u.forEach((function(e){b[e]=[r[e]]})),d[i]=b,"continue"}var E=d[i];u.forEach((function(e){E[e].push(r[e])}))},f=0,b=m;f<b;f++)g(f);return A.forEach((function(e){i[e]=d[e]})),i};"undefined"!==typeof Re&&Re&&Re===Object(Re)&&Object.isExtensible(Re)&&Object.defineProperty(Re,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTilePlaybackData",filename:"src/map/utils/heatmapTileData.js"}});var Le=function(e,t,a){return Object.keys(a).every((function(r){return void 0!==e[r]&&a[r].indexOf(e[r][t])>-1}))};Le&&Le===Object(Le)&&Object.isExtensible(Le)&&Object.defineProperty(Le,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"vesselSatisfiesFilters",filename:"src/map/utils/heatmapTileData.js"}});var Me=function(e,t,a,r,i){for(var n=[],o=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var a=e[t];if(void 0===a)return"continue";for(var r=function(e){var r=a.worldX[e],c=a.worldY[e];if((!i.length||function(e,t,a){return a.filter((function(e){return!0!==e.pass})).some((function(a){return Le(e,t,a.filterValues)}))}(a,e,i))&&r>=o-l&&r<=o+l&&c>=s-l&&c<=s+l){var p={};Object.keys(a).forEach((function(t){p[t]=a[t][e]})),p.timeIndex=t,n.push(p)}},c=0;c<a.worldX.length;c++)r(c)},p=a;p<r;p++)c(p);return n};Me&&Me===Object(Me)&&Object.isExtensible(Me)&&Object.defineProperty(Me,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"selectVesselsAt",filename:"src/map/utils/heatmapTileData.js"}});var ke=a("./node_modules/@mapbox/tile-cover/index.js"),Pe=a.n(ke),xe=a("./node_modules/lodash/debounce.js"),Qe=a.n(xe),He=a("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function Fe(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}"SET_CURRENTLY_VISIBLE_TILES"===Object("SET_CURRENTLY_VISIBLE_TILES")&&Object.isExtensible("SET_CURRENTLY_VISIBLE_TILES")&&Object.defineProperty("SET_CURRENTLY_VISIBLE_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_CURRENTLY_VISIBLE_TILES",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"SET_CURRENTLY_LOADED_TILES"===Object("SET_CURRENTLY_LOADED_TILES")&&Object.isExtensible("SET_CURRENTLY_LOADED_TILES")&&Object.defineProperty("SET_CURRENTLY_LOADED_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_CURRENTLY_LOADED_TILES",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"SET_CURRENTLY_SWAPPED_TILE_UIDS"===Object("SET_CURRENTLY_SWAPPED_TILE_UIDS")&&Object.isExtensible("SET_CURRENTLY_SWAPPED_TILE_UIDS")&&Object.defineProperty("SET_CURRENTLY_SWAPPED_TILE_UIDS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_CURRENTLY_SWAPPED_TILE_UIDS",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"MARK_TILES_UIDS_AS_LOADED"===Object("MARK_TILES_UIDS_AS_LOADED")&&Object.isExtensible("MARK_TILES_UIDS_AS_LOADED")&&Object.defineProperty("MARK_TILES_UIDS_AS_LOADED","__filemeta",{enumerable:!0,configurable:!0,value:{name:"MARK_TILES_UIDS_AS_LOADED",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"RELEASE_MARKED_TILES_UIDS"===Object("RELEASE_MARKED_TILES_UIDS")&&Object.isExtensible("RELEASE_MARKED_TILES_UIDS")&&Object.defineProperty("RELEASE_MARKED_TILES_UIDS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"RELEASE_MARKED_TILES_UIDS",filename:"src/map/heatmap/heatmapTiles.actions.js"}});var Ye=function(e){var t=Math.ceil(e+.5),a=!0;return t>10&&(t=10,a=!1),{min_zoom:t,max_zoom:t,tilesAvailable:a}},Ge=function(){return function(e,t){var a=t();if(!a.map.heatmapTiles.currentToLoadTileUids.length){var r=a.map.heatmapTiles.currentToReleaseTileUids;e(rt(r)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},Ue=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(Ge())}};"undefined"!==typeof Ue&&Ue&&Ue===Object(Ue)&&Object.isExtensible(Ue)&&Object.defineProperty(Ue,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"markTileAsLoaded",filename:"src/map/heatmap/heatmapTiles.actions.js"}});var Je=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,a){var r=a(),i=r.map.heatmapTiles.currentVisibleTiles,n=[],o=[];if(!0===e)n=i;else{var s=r.map.heatmapTiles.currentLoadedTiles;i.forEach((function(e){void 0===s.find((function(t){return t.uid===e.uid}))&&n.push(e)})),s.forEach((function(e){void 0===i.find((function(t){return t.uid===e.uid}))&&o.push(e.uid)}))}var l=n.map((function(e){return e.uid}));n.forEach((function(e){t(at(e))})),t({type:"SET_CURRENTLY_LOADED_TILES",payload:i}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:o}}),t(it()),t(Ge())}},Ke=Qe()((function(e){e(Je())}),500),Ze=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,a){var r=a().map.viewport,i=r.viewport;if(i.width&&i.height&&null===r.currentTransition){var n=new He.a(i),o=[n.unproject([0,0]),n.unproject([i.width,i.height])],s=o[0],l=o[1],c=[s[0],l[1],l[0],s[1]],p=c[0],u=c[1],m=c[2],d=c[3],A=[],g=Ye(i.zoom);if(!1!==g.tilesAvailable||!0===e){if(m>180||p<-180){var f=m>180?p:p+360,b=m>180?m-360:m;A.push([[[f,d],[179.999,d],[179.999,u],[f,u],[f,d]]]),A.push([[[-180,d],[b,d],[b,u],[-180,u],[-180,d]]])}else A.push([[[p,d],[m,d],[m,u],[p,u],[p,d]]]);var E={type:"MultiPolygon",coordinates:A},h=Pe.a.tiles(E,g),y=Pe.a.indexes(E,g),O=[];h.forEach((function(e,t){var a=y[t];e[2]>=2&&O.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:a})})),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:O}),!1===(r.prevZoom!==i.zoom)?t(Je(e)):Ke(t)}}}};Ze&&Ze===Object(Ze)&&Object.isExtensible(Ze)&&Object.defineProperty(Ze,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateHeatmapTilesFromViewport",filename:"src/map/heatmap/heatmapTiles.actions.js"}});var Ne=function(e,t){return function(a,r){var i={type:"Point",coordinates:[e.longitude,e.latitude]},n=r().map.viewport.viewport.zoom,o=[n,n-1,n+1].map((function(e){return Ye(e)})).map((function(e){return Pe.a.indexes(i,e)})).map((function(e){return e[0]}));a(ut(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Fe(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Fe(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},e,{uids:o}),t))}};function qe(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Ve(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?qe(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):qe(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}Ne&&Ne===Object(Ne)&&Object.isExtensible(Ne)&&Object.defineProperty(Ne,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"queryHeatmapVessels",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"ADD_HEATMAP_LAYER"===Object("ADD_HEATMAP_LAYER")&&Object.isExtensible("ADD_HEATMAP_LAYER")&&Object.defineProperty("ADD_HEATMAP_LAYER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"ADD_HEATMAP_LAYER",filename:"src/map/heatmap/heatmap.actions.js"}});"UPDATE_HEATMAP_LAYER_STYLE"===Object("UPDATE_HEATMAP_LAYER_STYLE")&&Object.isExtensible("UPDATE_HEATMAP_LAYER_STYLE")&&Object.defineProperty("UPDATE_HEATMAP_LAYER_STYLE","__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_HEATMAP_LAYER_STYLE",filename:"src/map/heatmap/heatmap.actions.js"}});var We="ADD_REFERENCE_TILE";"undefined"!==typeof We&&We&&We===Object(We)&&Object.isExtensible(We)&&Object.defineProperty(We,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ADD_REFERENCE_TILE",filename:"src/map/heatmap/heatmap.actions.js"}});var ze="HIGHLIGHT_VESSELS";"undefined"!==typeof ze&&ze&&ze===Object(ze)&&Object.isExtensible(ze)&&Object.defineProperty(ze,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HIGHLIGHT_VESSELS",filename:"src/map/heatmap/heatmap.actions.js"}});"INIT_HEATMAP_LAYERS"===Object("INIT_HEATMAP_LAYERS")&&Object.isExtensible("INIT_HEATMAP_LAYERS")&&Object.defineProperty("INIT_HEATMAP_LAYERS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"INIT_HEATMAP_LAYERS",filename:"src/map/heatmap/heatmap.actions.js"}});"REMOVE_HEATMAP_LAYER"===Object("REMOVE_HEATMAP_LAYER")&&Object.isExtensible("REMOVE_HEATMAP_LAYER")&&Object.defineProperty("REMOVE_HEATMAP_LAYER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"REMOVE_HEATMAP_LAYER",filename:"src/map/heatmap/heatmap.actions.js"}});var Xe="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES";"undefined"!==typeof Xe&&Xe&&Xe===Object(Xe)&&Object.isExtensible(Xe)&&Object.defineProperty(Xe,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",filename:"src/map/heatmap/heatmap.actions.js"}});var $e="UPDATE_HEATMAP_TILE";"undefined"!==typeof $e&&$e&&$e===Object($e)&&Object.isExtensible($e)&&Object.defineProperty($e,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_HEATMAP_TILE",filename:"src/map/heatmap/heatmap.actions.js"}});"RELEASE_HEATMAP_TILES"===Object("RELEASE_HEATMAP_TILES")&&Object.isExtensible("RELEASE_HEATMAP_TILES")&&Object.defineProperty("RELEASE_HEATMAP_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"RELEASE_HEATMAP_TILES",filename:"src/map/heatmap/heatmap.actions.js"}});"UPDATE_LOADED_TILES"===Object("UPDATE_LOADED_TILES")&&Object.isExtensible("UPDATE_LOADED_TILES")&&Object.defineProperty("UPDATE_LOADED_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_LOADED_TILES",filename:"src/map/heatmap/heatmap.actions.js"}});"HIGHLIGHT_CLICKED_VESSEL"===Object("HIGHLIGHT_CLICKED_VESSEL")&&Object.isExtensible("HIGHLIGHT_CLICKED_VESSEL")&&Object.defineProperty("HIGHLIGHT_CLICKED_VESSEL","__filemeta",{enumerable:!0,configurable:!0,value:{name:"HIGHLIGHT_CLICKED_VESSEL",filename:"src/map/heatmap/heatmap.actions.js"}});function et(e,t){var a=e[0].getTime(),r=e[1].getTime(),i=[];return t.forEach((function(e,t){var n=e[0];e[1]>=a&&n<=r&&i.push(t)})),i}function tt(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(r,i){var n=i(),o=M(r,n,e.join("-")),s=n.map.module.token,l=n.map.heatmap.heatmapLayers,c={};e.forEach((function(e){c[e]=Object(se.a)(l[e].tiles)}));var p=[];e.forEach((function(e){var i=l[e].header,n=Ve({},i),o=n.temporalExtents,u=n.temporalExtentsLess,m=n.colsByName,d=i.endpoints.tiles;t.forEach((function(t){var i=c[e].find((function(e){return e.uid===t.uid}));i||(i={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(i));var n=void 0===a?l[e].visibleTemporalExtentsIndices:a[e],A=ce()(n,i.temporalExtentsIndicesLoaded),g=function(e,t,a,r,i){var n=i.url,o=i.temporalExtents,s=i.temporalExtentsLess;if(void 0===n)throw new Error("URL/endpoints object is not available on this tilesets header");var l=Ce(n,a,o,{tileCoordinates:t,temporalExtentsIndices:r,temporalExtentsLess:s}),c=Promise.all(l);return new Promise((function(t){c.then((function(a){t({loadedLayerId:e,rawTileData:a})}))}))}(e,t.tileCoordinates,s,A,{url:d,temporalExtents:o,temporalExtentsLess:u});p.push(g),g.then((function(e){var a=e.loadedLayerId,n=e.rawTileData;i.temporalExtentsIndicesLoaded=ue()(i.temporalExtentsIndicesLoaded.concat(A)),i.data=function(e,t,a,r){var i,n=we(e);return i=De(n,Object.keys(t)),0===Object.keys(i).length?[]:Re(i,t,a,r)}(n,m,t.tileCoordinates,i.data),r({type:$e,payload:{layerId:a,tile:i}})}))}))})),Promise.all(p).then((function(){r(k(o)),r(Ue(t.map((function(e){return e.uid}))))}))}}function at(e){return function(t,a){t({type:We,payload:e});var r=a().map.heatmap.heatmapLayers,i=Object.keys(r).filter((function(e){return!0===r[e].visible}));i.length&&t(tt(i,[e]))}}"CLEAR_HIGHLIGHT_CLICKED_VESSEL"===Object("CLEAR_HIGHLIGHT_CLICKED_VESSEL")&&Object.isExtensible("CLEAR_HIGHLIGHT_CLICKED_VESSEL")&&Object.defineProperty("CLEAR_HIGHLIGHT_CLICKED_VESSEL","__filemeta",{enumerable:!0,configurable:!0,value:{name:"CLEAR_HIGHLIGHT_CLICKED_VESSEL",filename:"src/map/heatmap/heatmap.actions.js"}}),at&&at===Object(at)&&Object.isExtensible(at)&&Object.defineProperty(at,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTile",filename:"src/map/heatmap/heatmap.actions.js"}});var rt=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}};"undefined"!==typeof rt&&rt&&rt===Object(rt)&&Object.isExtensible(rt)&&Object.defineProperty(rt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"releaseTiles",filename:"src/map/heatmap/heatmap.actions.js"}});var it=function(){return{type:"UPDATE_LOADED_TILES"}};function nt(e){return function(t,a){var r=a().map.heatmap.referenceTiles;t(tt([e],r))}}"undefined"!==typeof it&&it&&it===Object(it)&&Object.isExtensible(it)&&Object.defineProperty(it,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateLoadedTiles",filename:"src/map/heatmap/heatmap.actions.js"}});var ot=function(e,t){return function(a){var r=e.header.temporalExtents;a({type:"ADD_HEATMAP_LAYER",payload:Ve({},e,{visibleTemporalExtentsIndices:et(t,r)})}),!0===e.visible&&a(nt(e.id))}};ot&&ot===Object(ot)&&Object.isExtensible(ot)&&Object.defineProperty(ot,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"addHeatmapLayer",filename:"src/map/heatmap/heatmap.actions.js"}});var st=function(e){return function(t){t({type:"REMOVE_HEATMAP_LAYER",payload:{id:e}})}};function lt(e){return function(t,a){var r=a(),i=r.map.heatmap.heatmapLayers,n={};Object.keys(i).forEach((function(a){var r=i[a],o=r.header.temporalExtents,s=r.visibleTemporalExtentsIndices,l=et(e,o),c=ce()(l,s),p=ce()(s,l);(c.length||p.length)&&t({type:Xe,payload:{layerId:a,newVisibleTemporalExtentsIndices:l,indicesRemoved:p}}),c.length&&(n[a]=c)}));var o=Object.keys(n);o.length&&t(tt(o,r.map.heatmap.referenceTiles,n))}}st&&st===Object(st)&&Object.isExtensible(st)&&Object.defineProperty(st,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"removeHeatmapLayer",filename:"src/map/heatmap/heatmap.actions.js"}}),lt&&lt===Object(lt)&&Object.isExtensible(lt)&&Object.defineProperty(lt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateLayerLoadTemporalExtents",filename:"src/map/heatmap/heatmap.actions.js"}});var ct=function(e,t,a){var r=e.map.heatmap.heatmapLayers,i=a[0],n=a[1],o=[];Object.keys(r).forEach((function(e){var a=r[e];if(!0===a.visible){var s=t.uids.map((function(e){return a.tiles.find((function(t){return t.uid===e}))})).filter((function(e){return void 0!==e&&void 0!==e.data})),l=a.filters;if(s.length){var c=s[0];o.push({layer:a,vessels:Me(c.data,t,i,n,l)})}}}));var s,l,c,p,u,m=o.filter((function(e){return e.vessels.length>0}));if(0===m.length)c=!0;else if(m.length>1)s=!0;else{var d=(p=m[0]).vessels;if(0===d.length)c=!0;else d.filter((function(e){return e.id<0})).length?s=!0:l=(u=de()(d,(function(e){return e.series}))).length>1}return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:u,layer:void 0===p?{}:p.layer}};function pt(){return{type:ze,payload:{isEmpty:!0,clickableCluster:!1}}}function ut(e,t){return function(a,r){var i=r(),n=ct(i,e,t),o=n.layer,s=n.isEmpty,l=n.isCluster,c=n.isMouseCluster,p=n.foundVessels;if(!0===l||void 0!==o.id||i.map.heatmap.highlightedVessels.layerId!==o.id){var u=void 0===o?null:{id:o.id,tilesetId:o.tilesetId,subtype:o.subtype,header:o.header};a({type:ze,payload:{layer:u,isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:p}})}else a(pt())}}pt&&pt===Object(pt)&&Object.isExtensible(pt)&&Object.defineProperty(pt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"clearHighlightedVessels",filename:"src/map/heatmap/heatmap.actions.js"}}),ut&&ut===Object(ut)&&Object.isExtensible(ut)&&Object.defineProperty(ut,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"highlightVesselFromHeatmap",filename:"src/map/heatmap/heatmap.actions.js"}});var mt=function(e,t){return{type:"HIGHLIGHT_CLICKED_VESSEL",payload:{id:e,layerId:t}}};mt&&mt===Object(mt)&&Object.isExtensible(mt)&&Object.defineProperty(mt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"highlightClickedVessel",filename:"src/map/heatmap/heatmap.actions.js"}});var dt=function(){return{type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"}};dt&&dt===Object(dt)&&Object.isExtensible(dt)&&Object.defineProperty(dt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"clearHighlightedClickedVessel",filename:"src/map/heatmap/heatmap.actions.js"}});var At=function(e,t){return function(a,r){if(null!==e){var i=r().map.heatmap.heatmapLayers;e.forEach((function(e){var r=e.id,n=i[r];void 0===n?a(ot(e,t)):(n.visible!==e.visible&&!0===e.visible&&a(nt(r)),n.visible===e.visible&&n.hue===e.hue&&n.opacity===e.opacity&&n.filters===e.filters&&n.interactive===e.interactive||a({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))})),Object.keys(i).forEach((function(t){e.find((function(e){return e.id===t}))||a(st(t))}))}else console.warn("New layers in updateHeatmapLayers can't be null")}};At&&At===Object(At)&&Object.isExtensible(At)&&Object.defineProperty(At,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateHeatmapLayers",filename:"src/map/heatmap/heatmap.actions.js"}});var gt=a("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js");"SET_BOUNDS"===Object("SET_BOUNDS")&&Object.isExtensible("SET_BOUNDS")&&Object.defineProperty("SET_BOUNDS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_BOUNDS",filename:"src/map/glmap/viewport.actions.js"}});"SET_VIEWPORT"===Object("SET_VIEWPORT")&&Object.isExtensible("SET_VIEWPORT")&&Object.defineProperty("SET_VIEWPORT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_VIEWPORT",filename:"src/map/glmap/viewport.actions.js"}});"UPDATE_VIEWPORT"===Object("UPDATE_VIEWPORT")&&Object.isExtensible("UPDATE_VIEWPORT")&&Object.defineProperty("UPDATE_VIEWPORT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_VIEWPORT",filename:"src/map/glmap/viewport.actions.js"}});"SET_ZOOM_INCREMENT"===Object("SET_ZOOM_INCREMENT")&&Object.isExtensible("SET_ZOOM_INCREMENT")&&Object.defineProperty("SET_ZOOM_INCREMENT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_ZOOM_INCREMENT",filename:"src/map/glmap/viewport.actions.js"}});"SET_MOUSE_LAT_LONG"===Object("SET_MOUSE_LAT_LONG")&&Object.isExtensible("SET_MOUSE_LAT_LONG")&&Object.defineProperty("SET_MOUSE_LAT_LONG","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MOUSE_LAT_LONG",filename:"src/map/glmap/viewport.actions.js"}});"TRANSITION_END"===Object("TRANSITION_END")&&Object.isExtensible("TRANSITION_END")&&Object.defineProperty("TRANSITION_END","__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRANSITION_END",filename:"src/map/glmap/viewport.actions.js"}});"SET_NATIVE_VIEWPORT"===Object("SET_NATIVE_VIEWPORT")&&Object.isExtensible("SET_NATIVE_VIEWPORT")&&Object.defineProperty("SET_NATIVE_VIEWPORT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_NATIVE_VIEWPORT",filename:"src/map/glmap/viewport.actions.js"}});var ft=function(e){return{type:"SET_BOUNDS",payload:e}};ft&&ft===Object(ft)&&Object.isExtensible(ft)&&Object.defineProperty(ft,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setBounds",filename:"src/map/glmap/viewport.actions.js"}});var bt=function(e,t){return function(a){a({type:"SET_VIEWPORT",payload:e}),a(Ze()),a(P(t))}};bt&&bt===Object(bt)&&Object.isExtensible(bt)&&Object.defineProperty(bt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setViewport",filename:"src/map/glmap/viewport.actions.js"}});var Et=function(e){return function(t){t({type:"UPDATE_VIEWPORT",payload:e}),t(Ze())}};Et&&Et===Object(Et)&&Object.isExtensible(Et)&&Object.defineProperty(Et,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateViewport",filename:"src/map/glmap/viewport.actions.js"}});var ht=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(i){i({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:a,zoom:r}}),i(Ze()),i(P())}},yt=function(e){return function(t){t(ht(null,e.center[0],e.center[1],e.zoom))}};yt&&yt===Object(yt)&&Object.isExtensible(yt)&&Object.defineProperty(yt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"transitionToZoom",filename:"src/map/glmap/viewport.actions.js"}});var Ot=function(){return function(e){e({type:"TRANSITION_END"}),e(Ze()),e(P())}};Ot&&Ot===Object(Ot)&&Object.isExtensible(Ot)&&Object.defineProperty(Ot,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"transitionEnd",filename:"src/map/glmap/viewport.actions.js"}});var jt=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return function(r){r(ht(1,e,t,a))}};jt&&jt===Object(jt)&&Object.isExtensible(jt)&&Object.defineProperty(jt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"zoomIntoVesselCenter",filename:"src/map/glmap/viewport.actions.js"}});var vt=function(e){return function(t,a){var r=a(),i=Object(gt.a)({bounds:[[e.minLng,e.minLat],[e.maxLng,e.maxLat]],width:r.map.viewport.viewport.width,height:r.map.viewport.viewport.height,padding:50});t(ht(null,i.latitude,i.longitude,i.zoom))}};vt&&vt===Object(vt)&&Object.isExtensible(vt)&&Object.defineProperty(vt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"fitToBounds",filename:"src/map/glmap/viewport.actions.js"}});var Bt=function(e){return function(t){var a=[0,0],r=[e.width,e.height],i=Object(he.e)(a,e.pixelUnprojectionMatrix),n=Object(he.e)(r,e.pixelUnprojectionMatrix),o=i[0]/e.scale,s=n[0]/e.scale,l=e.unproject(a),c=e.unproject(r);t({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:o,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}};function _t(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}Bt&&Bt===Object(Bt)&&Object.isExtensible(Bt)&&Object.defineProperty(Bt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"exportNativeViewport",filename:"src/map/glmap/viewport.actions.js"}});"SET_POPUP"===Object("SET_POPUP")&&Object.isExtensible("SET_POPUP")&&Object.defineProperty("SET_POPUP","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_POPUP",filename:"src/map/glmap/interaction.actions.js"}});"CLEAR_POPUP"===Object("CLEAR_POPUP")&&Object.isExtensible("CLEAR_POPUP")&&Object.defineProperty("CLEAR_POPUP","__filemeta",{enumerable:!0,configurable:!0,value:{name:"CLEAR_POPUP",filename:"src/map/glmap/interaction.actions.js"}});"SET_MAP_CURSOR"===Object("SET_MAP_CURSOR")&&Object.isExtensible("SET_MAP_CURSOR")&&Object.defineProperty("SET_MAP_CURSOR","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MAP_CURSOR",filename:"src/map/glmap/interaction.actions.js"}});var It=function(e){return(Math.pow(10,-6)*ae()(e.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})},Tt=function(e,t,a){var r={properties:e.properties},i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=t&&void 0!==t.metadata&&void 0!==t.metadata["gfw:popups"]?t.metadata["gfw:popups"]:[],r=e.properties,i=Object.keys(e.properties).filter((function(e){return 0===a.length||void 0!==a.find((function(t){return t.id===e}))})),n=i.map((function(t){var i="POLYGON_LAYERS_AREA"===t?It(e):r[t],n=a.find((function(e){return e.id===t}))||{},o=n.label||t;return{id:t,label:o,value:i,title:"".concat(o,": ").concat(i),isLink:n.isLink,isMain:n.isMain}})),o=n.find((function(e){return!0===e.isMain}))||n.find((function(e){return"name"===e.id}))||n.find((function(e){return"id"===e.id}))||n[0];return void 0!==o&&(o.isMain=!0),n}(e,a);r.fields=i;var n=i.find((function(e){return!0===e.isMain}));return r.title=void 0===n?t:n.value,r},St=function(e,t,a,r,i){return function(n,o){"click"===e&&n({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s,l=o().map.style.mapStyle.toJS(),c={latitude:t,longitude:a,features:[]},p=o().map.heatmap.highlightedVessels;if(!0!==p.isEmpty){var u=void 0===p.foundVessels?[]:p.foundVessels,m=0===u.length?[]:u[0],d=!0===p.clickableCluster,A=!0===d&&!1===p.highlightableCluster?-1:u.length;s={isCluster:d,count:A,layer:{id:p.layer.id,group:"legacyHeatmap"},properties:m},c.features.push(s)}var g=[];(r||[]).forEach((function(e){var t=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source}(e),a=l.sources[t],r=function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?_t(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):_t(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({layer:{id:t,group:e.layer.metadata&&e.layer.metadata["mapbox:group"]}},Tt(e,t,a));if(!0===e.properties.cluster){var n=function(e,t){var a=e.properties.cluster_id,r=t(e.source);return new Promise((function(t,i){r.getClusterExpansionZoom(a,(function(n,o){r.getClusterLeaves(a,99,0,(function(a,s){(n||a)&&i();var l=s.map((function(t){return Tt(t,e.layer.id,r)}));t({zoom:o,childrenFeatures:l})}))}))}))}(e,i).then((function(e){r.cluster=e,r.count=e.childrenFeatures.length}));g.push(n),r.isCluster=!0}else r.isCluster=!1;c.features.push(r)})),Promise.all(g).then((function(){c.isCluster=c.features.length>1||c.features.some((function(e){return!0===e.isCluster})),void 0!==s&&-1===s.count?c.count=-1:c.count=c.features.reduce((function(e,t){return e+(t.count||1)}),0),1===c.count&&(c.feature=c.features[0]);var r=!0===o().map.module.autoClusterZoom,i=o().map.module.isCluster(c);if(c.isCluster=i,r&&"click"===e&&!0===c.isCluster){n(pt());var l=c.features[0].cluster&&c.features[0].cluster.zoom;n(jt(t,a,l))}var p=c.features.length?"pointer":null;!0===c.isCluster&&(p="zoom-in"),n({type:"SET_MAP_CURSOR",payload:p});var u="click"===e?o().map.module.onClick:o().map.module.onHover;void 0!==u&&u(c)}))}};St&&St===Object(St)&&Object.isExtensible(St)&&Object.defineProperty(St,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"mapInteraction",filename:"src/map/glmap/interaction.actions.js"}});var Ct=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js"),wt=a.n(Ct),Dt=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),Rt=a("./node_modules/react-map-gl/dist/esm/index.js"),Lt=(a("./node_modules/mapbox-gl/dist/mapbox-gl.css"),a("./node_modules/pixi.js/lib/index.js"));31===Object(31)&&Object.isExtensible(31)&&Object.defineProperty(31,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HUES_INCREMENTS_NUM",filename:"src/map/utils/map-colors.js"}});12===Object(12)&&Object.isExtensible(12)&&Object.defineProperty(12,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HUES_INCREMENT",filename:"src/map/utils/map-colors.js"}});var Mt={orange:0,peach:22,yellow:60,green:85,brightGreen:145,lightBlue:182,blue:236,purple:284,pink:312};"undefined"!==typeof Mt&&Mt&&Mt===Object(Mt)&&Object.isExtensible(Mt)&&Object.defineProperty(Mt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"COLOR_HUES",filename:"src/map/utils/map-colors.js"}});var kt=function(e,t){var a=null;return Object.entries(e).forEach((function(e){e[1]===t&&(a=e[0])})),a};kt&&kt===Object(kt)&&Object.isExtensible(kt)&&Object.defineProperty(kt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getKeyByValue",filename:"src/map/utils/map-colors.js"}});var Pt=function(e,t,a){var r,i=e/255,n=t/255,o=a/255,s=Math.max(i,n,o),l=Math.min(i,n,o),c=s,p=s-l,u=0===s?0:p/s;if(s===l)r=0;else{switch(s){case i:r=(n-o)/p+(n<o?6:0);break;case n:r=(o-i)/p+2;break;case o:r=(i-n)/p+4;break;default:r=0}r/=6}return[r,u,c]};Pt&&Pt===Object(Pt)&&Object.isExtensible(Pt)&&Object.defineProperty(Pt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"rgbToHsv",filename:"src/map/utils/map-colors.js"}});var xt=function(e,t,a){var r=e%360/parseFloat(360)*6,i=100===t?1:t%100/parseFloat(100),n=100===a?1:a%100/parseFloat(100),o=Math.floor(r),s=r-o,l=n*(1-i),c=n*(1-s*i),p=n*(1-(1-s)*i),u=o%6,m=[n,c,l,l,p,n][u],d=[p,n,n,c,l,l][u],A=[l,l,p,n,n,c][u];return{r:Math.round(255*m),g:Math.round(255*d),b:Math.round(255*A)}};xt&&xt===Object(xt)&&Object.isExtensible(xt)&&Object.defineProperty(xt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hsvToRgb",filename:"src/map/utils/map-colors.js"}});var Qt=function(e){return xt(e,50,100)},Ht=function(e){var t=Qt(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")};Ht&&Ht===Object(Ht)&&Object.isExtensible(Ht)&&Object.defineProperty(Ht,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToRgbString",filename:"src/map/utils/map-colors.js"}});var Ft=function(e,t){var a=["r","g","b"].map((function(t){var a=e[t],r=a.toString(16);return a<16&&(r="0".concat(r)),r})).join("");return"".concat(!0===t?"#":"0x").concat(a)};Ft&&Ft===Object(Ft)&&Object.isExtensible(Ft)&&Object.defineProperty(Ft,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"rgbToHexString",filename:"src/map/utils/map-colors.js"}});var Yt=function(e,t){var a=Qt(e);return Ft(a,t)};Yt&&Yt===Object(Yt)&&Object.isExtensible(Yt)&&Object.defineProperty(Yt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToRgbHexString",filename:"src/map/utils/map-colors.js"}});var Gt=function(e){if(void 0!==e&&null!==e){var t,a=Object.keys(Mt).map((function(e){return Mt[e]})),r=(t=e,a.reduce((function(e,a){return Math.abs(a-t)<Math.abs(e-t)?a:e})));return kt(Mt,r)}};Gt&&Gt===Object(Gt)&&Object.isExtensible(Gt)&&Object.defineProperty(Gt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToClosestColor",filename:"src/map/utils/map-colors.js"}});var Ut=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null};Ut&&Ut===Object(Ut)&&Object.isExtensible(Ut)&&Object.defineProperty(Ut,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hexToRgb",filename:"src/map/utils/map-colors.js"}});var Jt=function(e,t){return"rgba(".concat(e.r,", ").concat(e.g,", ").concat(e.b,", ").concat(t,")")},Kt=function(e,t){var a=Qt(e);return Jt(a,t)};Kt&&Kt===Object(Kt)&&Object.isExtensible(Kt)&&Object.defineProperty(Kt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToRgbaString",filename:"src/map/utils/map-colors.js"}});var Zt=function(e,t){var a=Ut(e);return Jt(a,t)};Zt&&Zt===Object(Zt)&&Object.isExtensible(Zt)&&Object.defineProperty(Zt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hexToRgba",filename:"src/map/utils/map-colors.js"}});var Nt=function(e){return 12*e};Nt&&Nt===Object(Nt)&&Object.isExtensible(Nt)&&Object.defineProperty(Nt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueIncrementToHue",filename:"src/map/utils/map-colors.js"}});var qt=function(e){return Math.round(e/360*30)};qt&&qt===Object(qt)&&Object.isExtensible(qt)&&Object.defineProperty(qt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToHueIncrement",filename:"src/map/utils/map-colors.js"}});var Vt=function(e){return e%360};Vt&&Vt===Object(Vt)&&Object.isExtensible(Vt)&&Object.defineProperty(Vt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"wrapHue",filename:"src/map/utils/map-colors.js"}});var Wt=function(e,t){return void 0!==t?Yt(t,!0):e};Wt&&Wt===Object(Wt)&&Object.isExtensible(Wt)&&Object.defineProperty(Wt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueOrColorToHexColor",filename:"src/map/utils/map-colors.js"}});var zt=a("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),Xt=a("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),$t=a("./node_modules/@babel/runtime/helpers/esm/createClass.js"),ea=a("./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),ta=a("./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),aa=a("./node_modules/@babel/runtime/helpers/esm/inherits.js"),ra=function(){function e(t,a,r){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Object(Xt.a)(this,e),this.stage=new PIXI.particles.ParticleContainer(C,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===i&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var n=new PIXI.Rectangle(0,0,2*S,2*S);this.mainVesselTexture=new PIXI.Texture(t,n),this._setTextureFrame(a,r),this.clearSpriteProps()}return Object($t.a)(e,[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(C),y:new Float32Array(C),a:new Float32Array(C),s:new Float32Array(C)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,a,r){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=a,this.spritesProps.s[this.spritesPropsCount]=r,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=this.mainVesselTexture.frame.clone();if(null!==e&&(a.x=2*S*e+e),null!==t){var r=qt(t);30===r&&(r=0),a.y=r*S*2,r>0&&(a.y+=r)}this.mainVesselTexture.frame=a,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var a=this.stage.children[t],r=this.spritesProps.s[t];a.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],r,r),a.alpha=this.spritesProps.a[t]}for(var i=this.stage.children.length,n=e;n<i;n++){this.stage.children[n].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),a=0;a<t;a++)this.stage.removeChildAt(0);if(e>0){var r=Math.max(5e3,e);this._addSprites(r)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var a=new PIXI.Sprite(this.mainVesselTexture);a.anchor.x=.5,a.anchor.y=.5,a.x=-100,this.stage.addChild(a)}}}]),e}();"undefined"!==typeof ra&&ra&&ra===Object(ra)&&Object.isExtensible(ra)&&Object.defineProperty(ra,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HeatmapSubLayer",filename:"src/map/heatmap/HeatmapSubLayer.js"}}),"undefined"!==typeof ra&&ra&&ra===Object(ra)&&Object.isExtensible(ra)&&Object.defineProperty(ra,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HeatmapSubLayer",filename:"src/map/heatmap/HeatmapSubLayer.js"}});var ia=function(e,t,a){return[1/1.5*(a[0]*e+a[4]*t+a[12]),1/1.5*(a[5]*t+a[13])]},na=function(e){function t(){return Object(Xt.a)(this,t),Object(ea.a)(this,Object(ta.a)(t).apply(this,arguments))}return Object(aa.a)(t,e),Object($t.a)(t,[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,a=e.rootStage,r=e.useRadialGradientStyle,i=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:i,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(r),this.stage=new Lt.Container,a.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ie.NORMAL;this.brushRenderingStyle="string"===typeof e?ie[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?ne.RADIAL_GRADIENT:ne.CIRCLE,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===ie.NORMAL?this.brushZoomRenderingStyle:0,a=this.brushRenderingStyle+t;a!==this.renderingStyleIndex&&(this.renderingStyleIndex=a,Object.values(this.subLayers).forEach((function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)})))}},{key:"_redraw",value:function(){var e=this,t=this.props,a=t.filters,r=t.baseTexture,i=t.layer;if(null!==i&&void 0!==i&&void 0!==i.tiles&&!1!==i.visible){this.stage.visible=!0,this.stage.alpha=i.opacity;for(var n=i.tiles,o=i.hue,s=void 0!==a&&a.length?a.filter((function(e){return!0!==e.pass})).map((function(e){return void 0===e.hue?"0":e.hue.toString()})):[o.toString()],l=Object.keys(this.subLayers),c=ue()(s.concat(l)),p=0;p<c.length;p++){var u=c[p];-1!==s.indexOf(u)?(-1===l.indexOf(u)&&(this.subLayers[u]=this._createSublayer(r,this.renderingStyleIndex,u)),this.subLayers[u].clearSpriteProps()):(this._destroySubLayer(this.subLayers[u]),delete this.subLayers[u])}s.length&&(n.forEach((function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:a.length,defaultHue:o})})),s.forEach((function(t){e.subLayers[t].render()})))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,a=e.numFilters,r=e.defaultHue;if(t)for(var i=this.props,n=i.startIndex,o=i.endIndex,s=i.viewport,l=i.filters,c=i.viewportLeft,p=i.viewportRight,u=n;u<o;u++){var m=t[u];if(m)for(var d=0,A=m.worldX.length;d<A;d++){var g=void 0;void 0!==l&&l.length||(g=r);for(var f=0;f<a;f++){var b=l[f];if(Le(m,d,b.filterValues)){g=b.hue;break}}if(void 0!==g){var E=m.worldX[d];c>0&&E<c?E+=512:c<0&&E>p&&(E-=512);var h=E*s.scale,y=m.worldY[d]*s.scale,O=s.pixelProjectionMatrix,j=0===s.pitch?ia(h,y,O):Object(he.h)([h,y],O),v=Object(zt.a)(j,2),B=v[0],_=v[1];B>-10&&B<s.width+10&&_>-10&&_<s.height+10&&this.subLayers[g].pushSpriteProps(B,_,m.opacity?m.opacity[d]:this.renderingStyle.defaultOpacity,m.radius?m.radius[d]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,a){var r=new ra(e,t,a,this.brushRenderingStyle===ie.BULLSEYE);return this.stage.addChild(r.stage),r}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}]),t}(o.a.Component),oa=na;function sa(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function la(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?sa(a,!0).forEach((function(t){Object(G.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):sa(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}"undefined"!==typeof na&&na&&na===Object(na)&&Object.isExtensible(na)&&Object.defineProperty(na,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HeatmapLayer",filename:"src/map/heatmap/HeatmapLayer.js"}});var ca=function(e){function t(){var e,a;Object(c.a)(this,t);for(var r=arguments.length,i=new Array(r),n=0;n<r;n++)i[n]=arguments[n];return(a=Object(u.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(i)))).state={pixiReady:!1},a.onTouchStart=function(e){e.touches.length&&a.queryCoords(e.touches[0].clientX,e.touches[0].clientY)},a.onMouseMove=function(e){a.queryCoords(e.clientX,e.clientY)},a._onTick=function(){!0===a.heatmapFadingIn&&a.heatmapStage.alpha<1&&a._heatmapFadeinStep()},a}return Object(d.a)(t,e),Object(p.a)(t,[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,a=e.height;this.pixi=new Lt.Application({width:t,height:a,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var r=function(e,t){var a=document.createElement("canvas"),r=a.getContext("2d"),i=2*e;a.width=3*i+2,a.height=31*i+31;for(var n=0;n<31;n++){var o=i*n+n,s=o+e,l=e,c=r.createRadialGradient(l,s,e*t,l,s,e),p=Nt(n),u=Ht(p);c.addColorStop(0,u);var m=xt(Vt(p+30),80,100);c.addColorStop(1,"rgba(".concat(m.r,", ").concat(m.g,", ").concat(m.b,", 0)")),r.fillStyle=c,r.fillRect(0,o,i,i),l+=i+1,r.beginPath(),r.arc(l,s,e,0,2*Math.PI,!1),r.fillStyle=u,r.fill(),l+=i+1,r.beginPath(),r.arc(l,s,.4*e,0,2*Math.PI,!1),r.fillStyle=u,r.fill(),r.beginPath(),r.arc(l,s,.95*e,0,2*Math.PI,!1),r.lineWidth=1,r.strokeStyle=u,r.stroke()}return a}(S,.15);this.baseTexture=Lt.Texture.fromCanvas(r),this.heatmapStage=new Lt.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_destroy",value:function(){this.pixi.destroy()}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every((function(e){return!0!==e.interactive}))){var a=this._context.viewport,r=a.unproject([e,t]),i=Object(Ae.a)(r,2),n=i[0],o=i[1],s=n;s>180?s-=360:s<-180&&(s+=360);var l=Object(he.d)([s,o],1),c=Object(Ae.a)(l,2),p=c[0],u=c[1],m=10/a.scale;this.props.queryHeatmapVessels({longitude:s,latitude:o,worldX:p,worldY:u,toleranceRadiusInWorldUnits:m},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,a){var r={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},i=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)r=la({highlightLayerData:r},a.find((function(t){return t.id===e.layer.id}))),i=e.foundVessels.map((function(e){return{hue:312,filterValues:{series:[e.series]}}}));else if(null!==t){r=la({highlightLayerData:r},a.find((function(e){return e.id===t.layer.id}))),i=[{hue:312,filterValues:{series:[t.id]}}]}return{highlightLayerData:r,highlightFilters:i}}},{key:"_render",value:function(){var e=this,t=this.props,a=t.zoom,r=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightedVessels,l=t.highlightedClickedVessel,c=t.leftWorldScaled,p=t.rightWorldScaled,u=this._context.viewport,m=this.state.pixiReady,d=i[0],A=i[1],g=function(e){return e<6}(a);if(!0!==s.isEmpty&&this.toggleHeatmapDimming(!0),!0===s.isEmpty&&this._startHeatmapFadein(),this.renderer&&this.renderer.gl&&void 0!==this.renderer.gl.getError){var f=this.renderer.gl.getError();0!==f&&console.log(f)}var b=this._getHighlightData(s,l,r),E=b.highlightLayerData,h=b.highlightFilters;return o.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===m&&o.a.createElement(n.Fragment,null,r.map((function(t){return o.a.createElement(oa,{key:t.id,layer:t,filters:t.filters||[],viewport:u,startIndex:d,endIndex:A,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:g,customRenderingStyle:{},viewportLeft:c,viewportRight:p})})),void 0!==this.stage&&o.a.createElement(oa,{key:"highlighted",layer:E,filters:h,viewport:u,startIndex:d,endIndex:A,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:g,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:c,viewportRight:p})))}}]),t}(Rt.a);ca.propTypes={zoom:h.a.number,heatmapLayers:h.a.array,temporalExtentIndexes:h.a.array,highlightedVessels:h.a.object,highlightedClickedVessel:h.a.object,queryHeatmapVessels:h.a.func,exportNativeViewport:h.a.func,leftWorldScaled:h.a.number,rightWorldScaled:h.a.number},ca.contextTypes={viewport:h.a.object};var pa=ca;function ua(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}"undefined"!==typeof ca&&ca&&ca===Object(ca)&&Object.isExtensible(ca)&&Object.defineProperty(ca,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ActivityLayers",filename:"src/map/activity/ActivityLayers.js"}});var ma=Object(I.a)([function(e){return e.map.heatmap.heatmapLayers}],(function(e){return Object.keys(e).map((function(t){return function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?ua(a,!0).forEach((function(t){Object(G.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ua(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},e[t])}))})),da=Object(I.a)([U],(function(e){var t=e[0].getTime(),a=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[Oe.a.getOffsetedTimeAtPrecision(t),Oe.a.getOffsetedTimeAtPrecision(a)]})),Aa=Object(g.b)((function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:ma(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:da(e)}}),(function(e,t){return{queryHeatmapVessels:function(t,a){e(Ne(t,a))},exportNativeViewport:function(t){e(Bt(t))}}}))(pa),ga=a("./src/map/glmap/map.css"),fa=a.n(ga);function ba(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}var Ea=function(e){var t=e.latitude,a=e.longitude,r=e.children,i=e.closeButton,n=e.onClose;return o.a.createElement(Rt.c,{latitude:t,longitude:a,closeButton:i,onClose:n,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},r)};Ea.defaultProps={onClose:function(){}};var ha=function(e){function t(e){var r;return Object(c.a)(this,t),(r=Object(u.a)(this,Object(m.a)(t).call(this,e))).onLoad=function(){void 0!==r.props.onLoad&&r.props.onLoad(r.getBounds())},r.setBounds=function(){var e=r.getBounds();null!==e&&void 0!==r.props.setBounds&&r.props.setBounds(e)},r.getBounds=function(){if(!r.glMap)return null;var e=r.glMap.getBounds(),t=e._ne,a=e._sw;return{north:t.lat,south:a.lat,west:a.lng,east:t.lng}},r.loadObserver=Object(Dt.a)(wt.a.mark((function e(){var t;return wt.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("ResizeObserver"in window!==!1){e.next=5;break}return e.next=3,a.e(0).then(a.bind(null,"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"));case 3:t=e.sent,window.ResizeObserver=t.ResizeObserver||t.default;case 5:r._containerResizeObserver=new ResizeObserver(r.handleResizeObserver),r._containerResizeObserver.observe(r._mapContainerRef);case 7:case"end":return e.stop()}}),e)}))),r.handleResizeObserver=function(e){var t=e[0].contentRect,a=t.width,i=t.height,n=r.props,o=n.viewport,s=n.setViewport;a===o.width&&i===o.height||s(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?ba(a,!0).forEach((function(t){Object(G.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ba(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},o,{width:a,height:i}))},r.onViewportChange=function(e,t){var a=r.props.viewport;a.latitude===e.latitude&&a.longitude===e.longitude&&a.zoom===e.zoom&&a.bearing===e.bearing&&a.pitch===e.pitch||r.props.setViewport(e,t)},r.onMapInteraction=function(e,t){r.props.mapInteraction(t,e.lngLat[1],e.lngLat[0],e.features,r.glGetSource)},r.onHover=function(e){r.onMapInteraction(e,"hover")},r.onClick=function(e){r.onMapInteraction(e,"click")},r.getRef=function(e){null!==e&&(r.glMap=e.getMap(),r.glGetSource=r.glMap.getSource.bind(r.glMap))},r.getCursor=function(e){var t=e.isDragging,a=r.props.cursor;return null===a?t?"grabbing":"grab":a},r.transformRequest=function(e,t){var a=r.props.token;if(null!==a&&"Tile"===t&&e.match(R))return{url:e,headers:{Authorization:"Bearer "+a}}},r.state={mouseOver:!0},r._mapContainerRef=null,r}return Object(d.a)(t,e),Object(p.a)(t,[{key:"componentDidMount",value:function(){this.setBounds()}},{key:"componentDidUpdate",value:function(){this.setBounds()}},{key:"componentWillUnmount",value:function(){this._containerResizeObserver&&this._containerResizeObserver.disconnect()}},{key:"render",value:function(){var e=this,t=this.props,a=t.viewport,i=t.maxZoom,n=t.minZoom,s=t.transitionEnd,l=t.mapStyle,c=t.onClosePopup,p=t.clickPopup,u=t.hoverPopup,m=t.hasHeatmapLayers,d=t.markers,A=t.interactiveLayerIds;return o.a.createElement("div",{id:"map",className:fa.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},o.a.createElement(Rt.d,Object(r.a)({},a,{ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:s,onLoad:this.onLoad,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:l,maxZoom:i,minZoom:n,onViewportChange:this.onViewportChange,interactiveLayerIds:A,clickRadius:4}),!1!==m&&o.a.createElement(Aa,null),void 0!==p&&null!==p&&o.a.createElement(Ea,{latitude:p.latitude,longitude:p.longitude,closeButton:!0,onClose:c},p.content),!0===this.state.mouseOver&&void 0!==u&&null!==u&&o.a.createElement(Ea,{latitude:u.latitude,longitude:u.longitude,closeButton:!1},u.content),null!==d&&d.length>0&&d.map((function(e,t){return o.a.createElement(Rt.b,{key:t,latitude:e.latitude,longitude:e.longitude},e.content)}))),o.a.createElement("div",{className:fa.a.googleLogo}))}}]),t}(o.a.Component);ha.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapInteraction:function(){},onLoad:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,markers:null,interactiveLayerIds:null,setBounds:void 0};var ya=ha;"undefined"!==typeof ha&&ha&&ha===Object(ha)&&Object.isExtensible(ha)&&Object.defineProperty(ha,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"Map",filename:"src/map/glmap/Map.js"}});var Oa=Object(I.a)([function(e){return e.map.heatmap.heatmapLayers}],(function(e){return Object.keys(e).length>0})),ja=Object(I.a)([function(e){return e.map.style.staticLayers}],(function(e){return e.reduce((function(e,t){return t.interactive&&t.visible?(void 0!==t.gl?t.gl.layers.forEach((function(a,r){if(1===t.gl.layers.length||void 0!==a.metadata&&!0===a.metadata["gfw:interactive"]){var i=a.id||r>0?"".concat(t.id,"-").concat(r):t.id;e.push(i)}})):e.push(t.id),e):e}),[])})),va=Object(I.a)([function(e){return e.map.style.mapStyle},$],(function(e,t){if(!t)return e;var a=e.toJS().layers.filter((function(e){return void 0!==e.metadata})).map((function(e){return e.metadata["mapbox:group"]})).lastIndexOf("temporal")+1,r=e.mergeIn(["sources"],t.sources),i=e.get("layers");return t.layers.forEach((function(e,t){i=i.insert(a+t,Object(T.a)(e))})),r=r.set("layers",i)})),Ba=Object(I.a)([function(e){return e.map.interaction.cursor},function(e){return e.map.module.cursor}],(function(e,t){return null!==t?t:e})),_a=Object(g.b)((function(e){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,onLoad:e.map.module.onLoad,cursor:Ba(e),token:e.map.module.token,mapStyle:va(e),hasHeatmapLayers:Oa(e),interactiveLayerIds:ja(e)}}),(function(e){return{setViewport:function(t,a){e(bt(t,a))},setBounds:function(t){e(ft(t))},mapInteraction:function(t,a,r,i,n,o){e(St(t,a,r,i,n))},transitionEnd:function(){e(Ot())},onClosePopup:function(){e((function(e,t){var a=t();void 0!==a.map.module.onClosePopup&&a.map.module.onClosePopup()}))}}}))(ya),Ia=a("./src/map/glmap/gl-styles/style.json");function Ta(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Sa(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Ta(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Ta(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Ca=ue()(Object.keys(Ia.sources).map((function(e){return Ia.sources[e].attribution})).filter((function(e){return void 0!==e}))),wa=function(e){if(void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),void 0===e.metadata&&(e.metadata={}),!0===e.metadata["gfw:temporal"]){var t=void 0===e.metadata["gfw:temporalField"]?"timestamp":e.metadata["gfw:temporalField"];e.filter=["all",[">",t,0],["<",t,999999999999]]}return void 0===e.metadata["mapbox:group"]&&(e.metadata["mapbox:group"]="temporal"),"visible"!==e.layout.visibility&&(e.layout.visibility="none"),e};wa&&wa===Object(wa)&&Object.isExtensible(wa)&&Object.defineProperty(wa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setLayerStyleDefaults",filename:"src/map/glmap/style.reducer.js"}});var Da,Ra={mapStyle:Object(T.a)((Da=Ia,Da.layers.forEach((function(e){wa(e)})),Da)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:Ca},La=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function Ma(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function ka(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Ma(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Ma(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Pa="INIT_MAP_STYLE";"undefined"!==typeof Pa&&Pa&&Pa===Object(Pa)&&Object.isExtensible(Pa)&&Object.defineProperty(Pa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"INIT_MAP_STYLE",filename:"src/map/glmap/style.actions.js"}});var xa="SET_MAP_STYLE";"undefined"!==typeof xa&&xa&&xa===Object(xa)&&Object.isExtensible(xa)&&Object.defineProperty(xa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MAP_STYLE",filename:"src/map/glmap/style.actions.js"}});var Qa="MARK_CARTO_LAYERS_AS_INSTANCIATED";"undefined"!==typeof Qa&&Qa&&Qa===Object(Qa)&&Object.isExtensible(Qa)&&Object.defineProperty(Qa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MARK_CARTO_LAYERS_AS_INSTANCIATED",filename:"src/map/glmap/style.actions.js"}});var Ha="SET_STATIC_LAYERS";"undefined"!==typeof Ha&&Ha&&Ha===Object(Ha)&&Object.isExtensible(Ha)&&Object.defineProperty(Ha,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_STATIC_LAYERS",filename:"src/map/glmap/style.actions.js"}});var Fa="SET_BASEMAP_LAYERS";"undefined"!==typeof Fa&&Fa&&Fa===Object(Fa)&&Object.isExtensible(Fa)&&Object.defineProperty(Fa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_BASEMAP_LAYERS",filename:"src/map/glmap/style.actions.js"}});var Ya=function(e,t){if("vector"!==e.type)return e;var a=e.tiles,r=void 0===t?[]:[t];return ka({},e,{tiles:void 0!==a&&a.length>0?ue()([].concat(r,Object(se.a)(a))):r})},Ga=function(e){var t=e.glyphsPath;return{type:Pa,payload:{glyphsPath:t}}};Ga&&Ga===Object(Ga)&&Object.isExtensible(Ga)&&Object.defineProperty(Ga,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"initStyle",filename:"src/map/glmap/style.actions.js"}});var Ua=function(e){return{type:xa,payload:e}},Ja=function(e,t,a){for(var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=t().map.style,n=i.mapStyle,o=n.toJS(),s=o.layers,l=Math.round(a[0].getTime()/1e3),c=Math.round(a[1].getTime()/1e3),p=Oe.a.getOffsetedTimeAtPrecision(a[0].getTime()),u=Oe.a.getOffsetedTimeAtPrecision(a[1].getTime()),m=0;m<s.length;m++){var d=s[m];if(void 0!==d.metadata&&!0===d.metadata["gfw:temporal"]&&!(!0===r&&!0!==d.metadata["gfw:temporal:throttled"]||!1===r&&!0===d.metadata["gfw:temporal:throttled"])){var A=n.getIn(["layers",m,"filter"]).toJS();if(null===A)throw new Error("filter must be preset on style.json for temporal layer: ",d.id);var g=d.metadata&&"timeIndex"===d.metadata["gfw:temporalField"];A[1][2]=g?p:l,A[2][2]=g?u:c,n=n.setIn(["layers",m,"filter"],Object(T.a)(A))}}e(Ua(n))},Ka=b()((function(e,t,a){Ja(e,t,a,!0)}),400),Za=function(e){return function(t,a){Ja(t,a,e),Ka(t,a,e)}};Za&&Za===Object(Za)&&Object.isExtensible(Za)&&Object.defineProperty(Za,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"applyTemporalExtent",filename:"src/map/glmap/style.actions.js"}});var Na=function(e,t,a){var r=e.toJS().layers,i=e,n=r.findIndex((function(e){return e.id===t})),o=r.find((function(e){return e.id===t}));if(i=function(e,t,a){var r=!0===t.visible?"visible":"none";return e.setIn(["layers",a,"layout","visibility"],r)}(i,a,n),!0===a.isBasemap)return i;var s=void 0===a.opacity?1:a.opacity;switch(o.type){case"fill":i=i.setIn(["layers",n,"paint","fill-opacity"],s).setIn(["layers",n,"paint","fill-outline-color"],a.color).setIn(["layers",n,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":var l=a.color||o.paint&&o.paint["line-color"];i=i.setIn(["layers",n,"paint","line-opacity"],s).setIn(["layers",n,"paint","line-color"],l);break;case"symbol":if(o.metadata&&!0===o.metadata["gfw:isLabel"]){var c="visible"===i.getIn(["layers",n,"layout","visibility"])&&!0===a.showLabels?"visible":"none";if(i=i.setIn(["layers",n,"layout","visibility"],c),!0!==a.showLabels)break}i=i.setIn(["layers",n,"paint","text-opacity"],s),void 0!==a.color&&(i=i.setIn(["layers",n,"paint","text-color"],a.color));break;case"circle":if(i=i.setIn(["layers",n,"paint","circle-opacity"],s).setIn(["layers",n,"paint","circle-stroke-opacity"],s),void 0!==a.color){var p=o&&o.metadata&&o.metadata["gfw:mainColorPaintProperty"]?o.metadata["gfw:mainColorPaintProperty"]:"circle-color";i=i.setIn(["layers",n,"paint",p],a.color)}break;case"raster":i=i.setIn(["layers",n,"paint","raster-opacity"],s)}return i=function(e,t,a,r){var i=e,n=e.toJS(),o=a.type,s=n.metadata["gfw:styles"],l=a.metadata;return["selected","highlighted"].forEach((function(e){var n=t["".concat(e,"Features")],c=n&&n.style?n.style[o]:{},p=null!==n&&void 0!==n&&n.values.length>0,u=t[e],m=ka({},s[e][o]||{},{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{},{},c);Object.keys(m).length&&Object.keys(m).forEach((function(e){var o,s=m[e][0],l=m[e][1],c=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===p&&!0!==u&&!1!==u){var d=Ia.layers.find((function(e){return e.id===a.id}));o=void 0!==d?a.metadata&&a.metadata["gfw:mainColorPaintProperty"]===e?null:d[c][e]:null}else if(!0===u||!1===u)o=!0===u?s:l;else{var A="";if(null!==t.color&&void 0!==t.color){var g=Ut(t.color);A="".concat(g.r,",").concat(g.g,",").concat(g.b)}o=["match",["get",n.field],n.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",A),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",A)]}void 0!==o&&null!==o&&(i=i.setIn(["layers",r,c,e],o))}))})),i}(i,a,o,n)},qa=function(e,t,a,r){return function(i,n){var o=n().map.style.mapStyle,s=o.toJS();if(void 0===s.sources[t]){var l={type:e};e===oe.geojson?l.data=r:e===oe.raster&&(l.tiles=[a],l.tileSize=256),o=o.setIn(["sources",t],Object(T.a)(l))}if(void 0===s.layers.find((function(e){return e.id===t}))){var c=e===oe.geojson?function(e){var t=e.features.map((function(e){var t=e.geometry;return void 0===t?null:t.type})),a=La.map((function(e){var a=0;return t.forEach((function(t){e.geoJSON.indexOf(t)>-1&&a++})),{gl:e.gl,num:a}})),r="fill",i=0;return a.forEach((function(e){e.num>i&&(r=e.gl,i=e.num)})),r}(r):e,p=Object(T.a)({id:t,source:t,type:c,layout:{},paint:{}}),u=e===oe.raster?s.layers.length-1-s.layers.filter((function(e){return"labels"!==e.id})).reverse().findIndex((function(e){return"raster"===e.type})):s.layers.length-1;o=o.set("layers",o.get("layers").splice(u,0,p))}i(Ua(o))}},Va=function(e){return function(t,a){t({type:Qa,payload:e.map((function(e){return e.sourceId}))});var r=e.map((function(e){return a=(t=e).sourceId,r=t.sourceCartoSQL,i={layers:[{id:a,options:{sql:r}}]},n=encodeURIComponent(JSON.stringify(i)),o=w.replace("$MAPCONFIG",n),new Promise((function(e){fetch(o).then((function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(a)),Promise.reject(),null):e.json()})).then((function(t){e({layergroupid:t.layergroupid,sourceId:a})})).catch((function(e){console.warn(e)}))}));var t,a,r,i,n,o}));Promise.all(r.map((function(e){return e.catch((function(e){return e}))}))).then((function(r){var i=a().map.style.mapStyle,n=i.toJS();r.forEach((function(t){var a=D.replace("$LAYERGROUPID",t.layergroupid),r="".concat(t.sourceId,"-instanciated");i=(i=i.setIn(["sources",r],Object(T.a)({type:"vector",tiles:[a]}))).deleteIn(["sources",t.sourceId]),n.layers.forEach((function(a,n){if(a.source===t.sourceId){i=(i=i.setIn(["layers",n,"source"],r)).setIn(["layers",n,"metadata","gfw:id"],t.sourceId);var o=e.find((function(e){return e.refLayer.id===t.sourceId})).refLayer;i=Na(i,a.id,o)}}))})),t(Ua(i))})).catch((function(e){console.warn(e)}))}},Wa=function(e,t){return function(a,r){a({type:Ha,payload:e}),a({type:Fa,payload:t});var i=[].concat(Object(se.a)(e),Object(se.a)(t.map((function(e){return ka({},e,{isBasemap:!0})})))),n=r().map.style.mapStyle.toJS().sources,o=i.filter((function(e){return void 0!==e.gl}));o.length&&a(function(e){return function(t,a){var r=a(),i=r.map.style.mapStyle;e.forEach((function(e){var t=e.id,a=e.gl,r=Ya(a.source,e.url),n=(i=i.setIn(["sources",t],Object(T.a)(r))).get("layers").toJS().map((function(e){return e.id}));a.layers.filter((function(e,a){var r=e.id||a>0?"".concat(t,"-").concat(a):t;return!n.includes(r)})).forEach((function(e,r){var n=e.id||r>0?"".concat(t,"-").concat(r):t,o=ka({},wa(e),{id:n,source:t});if("vector"===a.source.type){var s=void 0===e["source-layer"]?t:e["source-layer"];o["source-layer"]=s}var l=i.get("layers"),c=o.metadata["mapbox:group"],p=l.findLastIndex((function(e){return c===e.toJS().metadata["mapbox:group"]}));i=i.set("layers",l.splice(p,0,Object(T.a)(o)))}))})),t(Ua(i)),t(Za(r.map.module.temporalExtent))}}(o));var s=i.filter((function(e){return!0===e.isCustom&&void 0===n[e.id]}));s.length&&s.forEach((function(e){a(qa(e.subtype,e.id,e.url,e.data))}));var l=r().map.style,c=l.mapStyle,p=c.toJS(),u=p.layers,m=p.sources,d=[];e.forEach((function(e){var t=e.id;if(void 0!==n[t]&&!0===e.visible&&(void 0!==e.data&&(c=c.setIn(["sources",t,"data"],Object(T.a)(e.data))),void 0!==e.url)){var a=Ya(n[t],e.url);c=c.setIn(["sources",t],Object(T.a)(a))}}));for(var A=function(e){var t=u[e],a=t.source,r=m[a],n=void 0!==t.metadata&&t.metadata["gfw:id"]||a,o=i.find((function(e){return e.id===n}));if(void 0===o)return t.type,"continue";var s=void 0!==r.metadata&&r.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var p=l.cartoLayersInstanciated.indexOf(a)>-1;return!0!==o.visible||p||d.find((function(e){return e.sourceId===a}))||d.push({sourceId:a,sourceCartoSQL:s,refLayer:o}),"continue"}c=Na(c,t.id,o)},g=0;g<u.length;g++)A(g);d.length&&a(Va(d)),a(Ua(c))}};Wa&&Wa===Object(Wa)&&Object.isExtensible(Wa)&&Object.defineProperty(Wa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"commitStyleUpdates",filename:"src/map/glmap/style.actions.js"}});var za=a("./node_modules/lodash/cloneDeep.js"),Xa=a.n(za),$a=a("./node_modules/redux-thunk/es/index.js"),er=a("./node_modules/react-map-gl/dist/esm/utils/transition/viewport-fly-to-interpolator.js"),tr=a("./node_modules/d3-ease/src/index.js");function ar(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function rr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?ar(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ar(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}500===Object(500)&&Object.isExtensible(500)&&Object.defineProperty(500,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRANSITION_DURATION",filename:"src/map/glmap/viewport.reducer.js"}});var ir={transitionDuration:500,transitionInterpolator:new er.a,transitionEasing:tr.a},nr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800,bounds:{}},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};var or=A.d,sr=Object(A.e)((function(){}),{},or(Object(A.a)($a.a))),lr=function(e){var t=sr.getState().map.tracks.data.find((function(t){return t.id===e.toString()}));return sr.dispatch(vt(t.geoBounds)),t.timelineBounds};"undefined"!==typeof lr&&lr&&lr===Object(lr)&&Object.isExtensible(lr)&&Object.defineProperty(lr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"targetMapVessel",filename:"src/map/store/index.js"}});var cr=function(e){sr.dispatch(vt(e)),setTimeout((function(){null!==sr.getState().map.viewport.currentTransition&&sr.dispatch(Ot())}),501)};cr&&cr===Object(cr)&&Object.isExtensible(cr)&&Object.defineProperty(cr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"fitToBounds",filename:"src/map/store/index.js"}});var pr=sr;"undefined"!==typeof sr&&sr&&sr===Object(sr)&&Object.isExtensible(sr)&&Object.defineProperty(sr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"store",filename:"src/map/store/index.js"}});var ur="ADD_TRACK";"undefined"!==typeof ur&&ur&&ur===Object(ur)&&Object.isExtensible(ur)&&Object.defineProperty(ur,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ADD_TRACK",filename:"src/map/tracks/tracks.actions.js"}});var mr="UPDATE_TRACK";"undefined"!==typeof mr&&mr&&mr===Object(mr)&&Object.isExtensible(mr)&&Object.defineProperty(mr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_TRACK",filename:"src/map/tracks/tracks.actions.js"}});"REMOVE_TRACK"===Object("REMOVE_TRACK")&&Object.isExtensible("REMOVE_TRACK")&&Object.defineProperty("REMOVE_TRACK","__filemeta",{enumerable:!0,configurable:!0,value:{name:"REMOVE_TRACK",filename:"src/map/tracks/tracks.actions.js"}});var dr=function(e){for(var t,a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"track",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"LineString";return{type:"Feature",geometry:{type:a,coordinates:[]},properties:{type:t,segId:e,coordinateProperties:{times:[]}}}},r=e.series[0],i=a(r),n=a("fishing","fishing","MultiPoint"),o=[],s=0,l=0,c=e.latitude.length;l<c;l++){var p=e.series[l],u=e.longitude[l],m=e.latitude[l],d=e.weight[l];t&&(u-t<-180?s+=360:u-t>180&&(s-=360));var A=[u+s,m];p!==r&&0!==l&&(o.push(Xa()(i)),i=a(p)),i.geometry.coordinates.push(A),d>0&&(n.geometry.coordinates.push(A),n.properties.coordinateProperties.times.push(e.datetime[l])),i.properties.coordinateProperties.times.push(e.datetime[l]),r=p,t=u}return o.push(n),{type:"FeatureCollection",features:o}};function Ar(e){return function(t,a){var r=e.id,i=e.url,n=e.type,o=e.fitBoundsOnLoad,s=e.layerTemporalExtents,l=e.color,c=e.data,p=a();if(!p.map.tracks.data.find((function(e){return e.id===r}))){var u={id:r,url:i,type:n,color:l,fitBoundsOnLoad:o},m=void 0!==e.data&&null!==e.data,d=void 0!==i&&null!==i&&""!==i;if(m&&(u.data=c,u.geoBounds=Zr(c)),t({type:ur,payload:u}),!m&&d){var A=M(t,p);if("geojson"!==n){var g=p.map.module.token,f=Ce(i,g,s);Promise.all(f.map((function(e){return e.catch((function(e){return e}))}))).then((function(e){var a=we(e);if(a.length){var i=De(a,["latitude","longitude","datetime","series","weight","sigma"]),n=dr(i),o=Kr(n),s=Zr(n);t({type:mr,payload:{id:r,data:n,geoBounds:s,timelineBounds:o}}),t(k(A))}}))}else fetch(i).then((function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()})).then((function(e){var a=Kr(e),i=Zr(e);t({type:mr,payload:{id:r,data:e,geoBounds:i,timelineBounds:a}}),o&&lr(r)})).catch((function(e){return console.warn(e)})).finally((function(){return t(k(A))}))}}}}var gr=function(e){return{type:"REMOVE_TRACK",payload:{trackId:e}}},fr=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,a){var r=a().map.tracks.data;e&&e.forEach((function(e){var a=e.id,i=r.find((function(e){return e.id===a}));void 0===i?t(Ar(e)):i.color!==e.color&&t({type:mr,payload:{id:e.id,color:e.color}})})),r.forEach((function(a){e&&e.find((function(e){return e.id===a.id}))||t(gr(a.id))}))}};fr&&fr===Object(fr)&&Object.isExtensible(fr)&&Object.defineProperty(fr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateTracks",filename:"src/map/tracks/tracks.actions.js"}});var br=function(e,t){return function(e){return e}},Er=br;function hr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function yr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?hr(a,!0).forEach((function(t){Object(G.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):hr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}br&&br===Object(br)&&Object.isExtensible(br)&&Object.defineProperty(br,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"withReducerPropTypes",filename:"src/map/utils/withReducerTypes.js"}});var Or={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,cursor:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoad:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},jr=Er("module",{loaders:h.a.arrayOf(h.a.number),token:h.a.string,temporalExtent:h.a.arrayOf(h.a.instanceOf(Date)),onViewportChange:h.a.func,onHover:h.a.func,onClick:h.a.func,onLoad:h.a.func,onLoadStart:h.a.func,onLoadComplete:h.a.func,onClosePopup:h.a.func,onAttributionsChange:h.a.func})((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Or,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return yr({},e,{},t.payload);case"SET_TEMPORAL_EXTENT":return yr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return yr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var a=null!==e.loaders?Object(Y.a)(e.loaders):[];return a.push(t.payload),yr({},e,{loaders:a});case"COMPLETE_LOADER":var r=Object(Y.a)(e.loaders),i=r.findIndex((function(e){return e===t.payload}));return r.splice(i,1),yr({},e,{loaders:r});case"SET_MODULE_CURSOR":return yr({},e,{cursor:t.payload});default:return e}}));function vr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Br(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?vr(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):vr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var _r={data:[]},Ir=Er("tracks",{data:h.a.arrayOf(h.a.exact(Br({},y,{data:h.a.object,timelineBounds:h.a.array,geoBounds:h.a.exact({minLat:h.a.number,minLng:h.a.number,maxLat:h.a.number,maxLng:h.a.number})})))})((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_r,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case ur:var a=[].concat(Object(se.a)(e.data),[t.payload]);return Br({},e,{data:a});case mr:var r=t.payload,i=e.data.map((function(e){return e.id!==r.id?e:Br({},e,{},r)}));return Br({},e,{data:i});case"REMOVE_TRACK":var n=t.payload.trackId,o=e.data.filter((function(e){return e.id!==n}));return Br({},e,{data:o});default:return e}}));function Tr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Sr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Tr(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Tr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Cr={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function wr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Dr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?wr(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):wr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Rr={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]};function Lr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Mr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Lr(a,!0).forEach((function(t){Object(ee.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Lr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var kr={cursor:"progress"},Pr=Object(A.c)({module:jr,tracks:Ir,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Cr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case Xe:var a=e.heatmapLayers;return a[t.payload.layerId].visibleTemporalExtentsIndices=t.payload.newVisibleTemporalExtentsIndices,a[t.payload.layerId].tiles.forEach((function(e){e.temporalExtentsIndicesLoaded=ce()(e.temporalExtentsIndicesLoaded,t.payload.indicesRemoved)})),Sr({},e,{heatmapLayers:a});case"ADD_HEATMAP_LAYER":var r=Object.assign({},e.heatmapLayers,Object(ee.a)({},t.payload.id,Sr({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:r});case"UPDATE_HEATMAP_LAYER_STYLE":var i=t.payload,n=Sr({},e.heatmapLayers[i.id],{},i),o=Sr({},e.heatmapLayers,Object(ee.a)({},i.id,n));return Sr({},e,{heatmapLayers:o});case"REMOVE_HEATMAP_LAYER":var s=Object.assign({},e.heatmapLayers);return delete s[t.payload.id],Object.assign({},e,{heatmapLayers:s});case We:return Object.assign({},e,{referenceTiles:[].concat(Object(se.a)(e.referenceTiles),[t.payload])});case $e:var l=t.payload.layerId,c=t.payload.tile,p=Sr({},e.heatmapLayers[l]),u=Object(se.a)(p.tiles),m=u.findIndex((function(e){return e.uid===c.uid}));-1===m?u.push(c):u=[].concat(Object(se.a)(u.slice(0,m)),[c],Object(se.a)(u.slice(m+1))),p.tiles=u;var d=Sr({},e.heatmapLayers,Object(ee.a)({},l,p));return Sr({},e,{heatmapLayers:d});case"RELEASE_HEATMAP_TILES":var A=t.payload,g=Object.keys(e.heatmapLayers),f=Sr({},e.heatmapLayers);g.forEach((function(e){var t=Sr({},f[e]);A.forEach((function(e){var a=t.tiles.findIndex((function(t){return t.uid===e}));a>-1&&t.tiles.splice(a,1)}))}));var b=Object(se.a)(e.referenceTiles);return A.forEach((function(e){var t=b.findIndex((function(t){return t.uid===e}));t>-1&&(b=[].concat(Object(se.a)(b.slice(0,t)),Object(se.a)(b.slice(t+1))))})),Sr({},e,{heatmapLayers:f,referenceTiles:b});case"UPDATE_LOADED_TILES":var E=Sr({},e.heatmapLayers);return Sr({},e,{heatmapLayers:E});case ze:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return Sr({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return Sr({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Rr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":var a=[].concat(t.payload);return Dr({},e,{currentVisibleTiles:a});case"SET_CURRENTLY_LOADED_TILES":var r=[].concat(t.payload);return Dr({},e,{currentLoadedTiles:r});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var i=ue()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),n=ue()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids)),o=i.filter((function(e){return-1===n.indexOf(e)}));return Dr({},e,{currentToLoadTileUids:o,currentToReleaseTileUids:n});case"MARK_TILES_UIDS_AS_LOADED":var s=e.currentToLoadTileUids,l=t.payload,c=s.filter((function(e){return-1===l.indexOf(e)}));return Dr({},e,{currentToLoadTileUids:c});case"RELEASE_MARKED_TILES_UIDS":return Dr({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ra,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Pa:var a=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return Sa({},e,{mapStyle:a});case xa:return Sa({},e,{mapStyle:t.payload});case Ha:return Sa({},e,{staticLayers:t.payload});case Fa:return Sa({},e,{basemapLayers:t.payload});case Qa:var r=[].concat(Object(se.a)(e.cartoLayersInstanciated),Object(se.a)(t.payload));return Sa({},e,{cartoLayersInstanciated:r});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:nr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return rr({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"SET_BOUNDS":return rr({},e,{bounds:t.payload});case"UPDATE_VIEWPORT":var a=rr({},e.viewport,{},t.payload);return rr({},e,{viewport:a,prevZoom:a.zoom});case"SET_ZOOM_INCREMENT":var r=e.viewport.zoom,i=Math.min(e.maxZoom,t.payload.zoom||r+t.payload.increment),n=rr({},e.viewport,{},ir,{zoom:i,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return rr({},e,{viewport:n,canZoomIn:i<e.maxZoom,canZoomOut:i>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:re.ZOOM});case"SET_MOUSE_LAT_LONG":return rr({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return rr({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return rr({},e,{},t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:kr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return Mr({},e,{cursor:t.payload});default:return e}}}),xr=Pr;"undefined"!==typeof Pr&&Pr&&Pr===Object(Pr)&&Object.isExtensible(Pr)&&Object.defineProperty(Pr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"mapReducer",filename:"src/map/store/reducers.js"}});var Qr=Object(A.c)({map:xr});pr.replaceReducer(Qr);var Hr=b()((function(e){pr.dispatch(Za(e)),pr.dispatch(x(e))}),16),Fr=function(e){pr.dispatch(Et({latitude:e.center[0],longitude:e.center[1],zoom:e.zoom}))},Yr=function(e){function t(){var e,a;Object(c.a)(this,t);for(var r=arguments.length,i=new Array(r),n=0;n<r;n++)i[n]=arguments[n];return(a=Object(u.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(i)))).state={initialized:!1,error:null,errorInfo:null},a}return Object(d.a)(t,e),Object(p.a)(t,[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){void 0!==this.props.viewport&&Fr(this.props.viewport),null!==this.props.glyphsPath&&pr.dispatch(Ga({glyphsPath:this.props.glyphsPath})),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(pr.getState().map.style.attributions),pr&&void 0===pr.getState().map.module.token&&pr.dispatch(L({token:this.props.token,autoClusterZoom:this.props.autoClusterZoom,isCluster:this.props.isCluster,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoad:this.props.onLoad,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&pr.dispatch(Q(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&pr.dispatch(Wa(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&pr.dispatch(fr(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&Hr(this.props.temporalExtent),this.setState({initialized:!0}),null!==this.props.heatmapLayers&&pr.dispatch(At(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){this.props.tracks!==e.tracks&&pr.dispatch(fr(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&pr.dispatch(At(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&(this.props.basemapLayers===e.basemapLayers&&this.props.staticLayers===e.staticLayers||pr.dispatch(Wa(this.props.staticLayers||[],this.props.basemapLayers||[]))),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||pr.dispatch(lt(this.props.loadTemporalExtent))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||Hr(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||pr.dispatch(Q(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&pr.dispatch(Q(this.props.highlightTemporalExtent));var t=pr.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===pr.getState().map.viewport.currentTransition&&(t.latitude===this.props.viewport.center[0]&&t.longitude===this.props.viewport.center[1]&&t.zoom===this.props.viewport.zoom||(1===Math.abs(t.zoom-this.props.viewport.zoom)?pr.dispatch(yt(this.props.viewport)):Fr(this.props.viewport))),this.props.cursor!==e.cursor&&pr.dispatch(F(this.props.cursor))}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),o.a.createElement("div",null,o.a.createElement("h2",null,"Map component crashed!"),o.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),o.a.createElement("div",null,"Component Stack Error Details:"),o.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:o.a.createElement(g.a,{store:pr},o.a.createElement(_a,this.props))}}]),t}(o.a.Component);Yr.defaultProps={token:null,glyphsPath:null,autoClusterZoom:!0,isCluster:function(e){return!0===e.isCluster},highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,cursor:null,onViewportChange:function(){},onLoad:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var Gr=Yr;"undefined"!==typeof Yr&&Yr&&Yr===Object(Yr)&&Object.isExtensible(Yr)&&Object.defineProperty(Yr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MapModule",filename:"src/map/map.js"}});var Ur=a("./node_modules/@turf/bbox/index.js"),Jr=a.n(Ur),Kr=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach((function(e){e.properties&&e.properties.coordinateProperties&&e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach((function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)}))})),[t.start,t.end]};"undefined"!==typeof Kr&&Kr&&Kr===Object(Kr)&&Object.isExtensible(Kr)&&Object.defineProperty(Kr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTrackTimeBounds",filename:"src/map/utils/getTrackBounds.js"}});var Zr=function(e){var t=Jr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}};"undefined"!==typeof Zr&&Zr&&Zr===Object(Zr)&&Object.isExtensible(Zr)&&Object.defineProperty(Zr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTrackBounds",filename:"src/map/utils/getTrackBounds.js"}});var Nr=Ia.metadata["gfw:basemap-layers"];"undefined"!==typeof Nr&&Nr&&Nr===Object(Nr)&&Object.isExtensible(Nr)&&Object.defineProperty(Nr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"AVAILABLE_BASEMAPS",filename:"src/map/basemaps/index.js"}});var qr=Gr;"undefined"!==typeof Gr&&Gr&&Gr===Object(Gr)&&Object.isExtensible(Gr)&&Object.defineProperty(Gr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"__DOCZ_DUMMY_EXPORT_DEFAULT",filename:"src/map/index.js"}}),"undefined"!==typeof targetMapVessel&&targetMapVessel&&targetMapVessel===Object(targetMapVessel)&&Object.isExtensible(targetMapVessel)&&Object.defineProperty(targetMapVessel,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"targetMapVessel",filename:"src/map/index.js"}}),"undefined"!==typeof fitToBounds&&fitToBounds&&fitToBounds===Object(fitToBounds)&&Object.isExtensible(fitToBounds)&&Object.defineProperty(fitToBounds,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"fitToBounds",filename:"src/map/index.js"}}),"undefined"!==typeof getTrackTimeBounds&&getTrackTimeBounds&&getTrackTimeBounds===Object(getTrackTimeBounds)&&Object.isExtensible(getTrackTimeBounds)&&Object.defineProperty(getTrackTimeBounds,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTrackTimeBounds",filename:"src/map/index.js"}}),"undefined"!==typeof getTrackBounds&&getTrackBounds&&getTrackBounds===Object(getTrackBounds)&&Object.isExtensible(getTrackBounds)&&Object.defineProperty(getTrackBounds,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTrackBounds",filename:"src/map/index.js"}}),"undefined"!==typeof AVAILABLE_BASEMAPS&&AVAILABLE_BASEMAPS&&AVAILABLE_BASEMAPS===Object(AVAILABLE_BASEMAPS)&&Object.isExtensible(AVAILABLE_BASEMAPS)&&Object.defineProperty(AVAILABLE_BASEMAPS,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"AVAILABLE_BASEMAPS",filename:"src/map/index.js"}}),a.d(t,"default",(function(){return zr}));var Vr={},Wr="wrapper";function zr(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(s.b)(Wr,Object(r.a)({},Vr,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"map"},"Map"),Object(s.b)("h2",{id:"description"},"Description"),Object(s.b)("p",null,"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}),"Map client")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}),"Vessel profiles")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}),"Data portal"))),Object(s.b)("h2",{id:"available-properties"},"Available properties"),Object(s.b)("p",null,"TODO: fix crash on Props docz component"),Object(s.b)("h2",{id:"basic-usage"},"Basic usage"),Object(s.b)(l.c,{__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:a,Playground:l.c,Props:l.d,Map:qr},__codesandbox:"",mdxType:"Playground"},Object(s.b)(qr,{viewport:{center:[.026,123.61],zoom:5},mdxType:"Map"})))}zr&&zr===Object(zr)&&Object.isExtensible(zr)&&Object.defineProperty(zr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/map/map.mdx"}}),zr.isMDXComponent=!0}}]);
//# sourceMappingURL=src-map-map.38a369ac052eb5df17b4.js.map