{"version":3,"sources":["webpack:///./src/map/glmap/map.css","webpack:///./src/map/lib/Pack.js","webpack:///./src/map/lib/pelagosClient.js","webpack:///./src/map/proptypes/tracks.js","webpack:///./src/map/proptypes/layers.js","webpack:///./src/map/proptypes/shared.js","webpack:///./src/map/config.js","webpack:///./src/map/module/module.actions.js","webpack:///./src/map/module/module.selectors.js","webpack:///./src/map/tracks/tracks.selectors.js","webpack:///./src/map/constants.js","webpack:///./src/map/utils/heatmapTileData.js","webpack:///./src/map/utils/buildEndpoint.js","webpack:///./src/map/heatmap/heatmapTiles.actions.js","webpack:///./src/map/heatmap/heatmap.actions.js","webpack:///./src/map/glmap/viewport.actions.js","webpack:///./src/map/glmap/interaction.actions.js","webpack:///./src/map/utils/map-colors.js","webpack:///./src/map/heatmap/HeatmapSubLayer.js","webpack:///./src/map/heatmap/HeatmapLayer.js","webpack:///./src/map/activity/ActivityLayers.js","webpack:///./src/map/activity/ActivityLayers.container.js","webpack:///./src/map/glmap/Map.js","webpack:///./src/map/glmap/Map.container.js","webpack:///./src/map/glmap/style.reducer.js","webpack:///./src/map/utils/getMainGeomType.js","webpack:///./src/map/glmap/style.actions.js","webpack:///./src/map/glmap/viewport.reducer.js","webpack:///./src/map/store/index.js","webpack:///./src/map/utils/getTrackBounds.js","webpack:///./src/map/tracks/tracks.actions.js","webpack:///./src/map/utils/withReducerTypes.js","webpack:///./src/map/module/module.reducer.js","webpack:///./src/map/tracks/tracks.reducer.js","webpack:///./src/map/heatmap/heatmap.reducer.js","webpack:///./src/map/heatmap/heatmapTiles.reducer.js","webpack:///./src/map/glmap/interaction.reducer.js","webpack:///./src/map/store/reducers.js","webpack:///./src/map/map.js","webpack:///./src/map/basemaps/index.js","webpack:///./src/map/map.mdx"],"names":["module","exports","map","googleLogo","byname","Uint8","size","Uint8Array","BYTES_PER_ELEMENT","array","getter","setter","Int8","Int8Array","Uint16","Uint16Array","Int16","Int16Array","Uint32","Uint32Array","Int32","Int32Array","Float32","Float32Array","Float64","Float64Array","writeStringToArrayBuffer","str","start","end","buf","bufstart","undefined","length","i","charCodeAt","arrayBufferToString","String","fromCharCode","apply","Pack","typemap","byarray","pack","typespec","value","littleendian","ArrayBuffer","DataView","stringToArrayBuffer","res","Uint8ClampedArray","buffer","name","spec","PelagosClient","_classCallCheck","this","MAGIC_COOKIE","url","token","Promise","resolve","reject","request","XMLHttpRequest","open","setRequestHeader","concat","responseType","onload","handleData","bind","onerror","send","self","error","readyState","success","status","isFileUri","response","byteLength","dataView","headerLen","cookie","slice","getInt32","offset","headerIsLoaded","header","JSON","parse","rowLen","colsByName","colidx","cols","col","idx","type","multiplier","min","max","orientation","errorLoading","toString","allLoaded","result","rowidx","row","val","colValues","eval","trackTypes","id","PropTypes","string","isRequired","data","object","color","oneOf","layerTemporalExtents","arrayOf","number","fitBoundsOnLoad","bool","shape","hue","filterValues","endpoints","temporalExtents","temporalExtentsLess","field","values","node","VESSELS_BASE_RADIUS","MAX_SPRITES_PER_LAYER","TILES_URL_NEEDING_AUTHENTICATION","startLoader","dispatch","state","loaderId","timestamp","Date","getTime","payload","onLoadStart","completeLoader","getState","loaders","onLoadComplete","onViewportChange","interactionState","callback","viewport","zoom","center","latitude","longitude","bounds","canZoomIn","canZoomOut","mouseLatLong","setHighlightTemporalExtent","highlightTemporalExtent","getTemporalExtent","temporalExtent","getGeojsonTracksReady","createSelector","tracks","filter","t","mergeStyles","style1","style2","sources","_objectSpread","layers","_toConsumableArray","filterGeojsonByTimerange","geojson","_ref","features","featuresFiltered","reduce","filteredFeatures","feature","properties","coordinateProperties","times","filtered","geometry","coordinates","filteredCoordinates","coordinate","index","timeCoordinate","push","filteredFeature","getFullTracksStyles","hasTemporalExtent","hasTracks","timerange","acc","track","source","style","_defineProperty","paint","line-width","line-color","circle-radius","circle-color","getHighlightedTrackStyles","getTracksStyles","trackStyles","highlightedTrackStyles","TRANSITION_TYPE","BRUSH_RENDERING_STYLE","NORMAL","BULLSEYE","BRUSH_ZOOM_RENDERING_STYLE","CUSTOM_LAYERS_SUBTYPES","getTemporalTileURLs","urlTemplate","params","arguments","urls","forEach","extent","urlParams","startTimeISO","toISOString","endTimeISO","tileCoordinates","x","y","z","templateSettings","interpolate","template","urlTemplateCompiled","buildEndpoint","temporalExtentsIndices","indexOf","getTilePromises","tilesetUrl","promises","urlIndex","obtainTile","getCleanVectorArrays","rawTileData","vectorArray","groupData","cleanVectorArrays","columns","currentArray","totalVectorArraysLength","sumBy","a","filteredColumns","column","console","warn","key","cumulatedOffsets","appendValues","set","getTilePlaybackData","prevPlaybackData","tilePlaybackData","zoomFactorRadius","convert","getZoomFactorRadius","zoomFactorRadiusRenderingMode","getZoomFactorRadiusRenderingMode","zoomFactorOpacity","getZoomFactorOpacity","columnsArr","Object","keys","c","storedColumns","sigma","weight","hidden","pull","uniq","numPoints","newFrames","timeIndexes","_loop","point","timeIndex","getOffsetedTimeAtPrecision","datetime","_lngLatToWorld2","_slicedToArray","lngLatToWorld","worldX","worldY","radius","sigmaToRadius","opacity","weightToOpacity","series","frame","vesselSatisfiesFilters","every","selectVesselsAt","tileData","tileQuery","startIndex","endIndex","currentFilters","vessels","toleranceRadiusInWorldUnits","_loop2","f","_loop3","wx","wy","filters","pass","some","vesselSatisfiesAllFilters","vessel","getTilecoverLimits","viewportZoom","Math","ceil","tilesAvailable","min_zoom","max_zoom","flushToReleaseTiles","heatmapTiles","currentToLoadTileUids","currentTilesToReleaseUids","currentToReleaseTileUids","releaseTiles","markTileAsLoaded","tileUids","flushTileState","forceLoadingAllVisibleTiles","currentVisibleTiles","tilesToLoad","tilesToReleaseUids","currentLoadedTiles","visibleTile","find","uid","loadedTile","tilesToLoadUids","tile","referenceTile","ADD_REFERENCE_TILE","visibleHeatmapLayers","heatmap","heatmapLayers","visibleHeatmapLayersIds","visible","getTiles","updateLoadedTiles","debouncedFlushState","debounce","updateHeatmapTilesFromViewport","mapViewport","width","height","currentTransition","boundsViewport","PerspectiveMercatorViewport","unproject","wn","es","w","s","e","n","boundsPolygonsCoordinates","limits","w1","e2","geom","viewportTilesCoords","tilecover","tiles","viewportTilesIndexes","indexes","visibleTiles","coords","prevZoom","queryHeatmapVessels","temporalExtentIndexes","uids","_queryHeatmap2","_queryHeatmap","layer","isEmpty","isCluster","isMouseCluster","foundVessels","highlightedVessels","layerId","layerPayload","tilesetId","subtype","HIGHLIGHT_VESSELS","clickableCluster","highlightableCluster","clearHighlightedVessels","highlightVesselFromHeatmap","heatmapTiles_actions_objectSpread","UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES","UPDATE_HEATMAP_TILE","getTemporalExtentsVisibleIndices","loadTemporalExtent","currentExtentStart","currentExtentEnd","indices","temporalExtentStart","layerIds","referenceTiles","newTemporalExtentsToLoad","loaderID","join","tilesByLayer","heatmap_actions_toConsumableArray","allPromises","heatmapLayerHeader","_heatmapLayerHeader","heatmap_actions_objectSpread","temporalExtentsIndicesLoaded","queriedTemporalExtentsIndices","visibleTemporalExtentsIndices","temporalExtentsIndicesToLoad","difference","tilePromise","Error","pelagosPromises","allLayerPromises","all","then","loadedLayerId","loadLayerTile","_ref2","parseLayerTile","loadAllTilesForLayer","layersVessels","availableTiles","bestTile","layerVesselsResult","layersVesselsResults","layerVessels","v","uniqBy","updateHeatmapLayers","newLayers","currentLoadTemporalExtent","prevLayersDict","newLayer","prevLayer","interactive","prevLayerId","l","transitionTo","increment","transitionEnd","fitToBounds","vp","fitBounds","minLng","minLat","maxLng","maxLat","padding","getFields","glFeature","fieldsDefinition","metadata","fields","k","fd","fieldKey","pow","area","toLocaleString","maximumFractionDigits","getAreaKm2","def","label","title","isLink","isMain","mainField","getFeature","mapInteraction","interactionType","glFeatures","glGetSource","legacyHeatmapFeature","currentStyle","mapStyle","toJS","event","currentLegacyHeatmapData","count","group","clusterPromises","getStaticLayerIdFromGlFeature","interaction_actions_objectSpread","cluster","clusterPromise","clusterId","cluster_id","glSource","getClusterExpansionZoom","err1","getClusterLeaves","err2","children","childrenFeatures","child","getCluster","autoClusterZoom","clusterBehavior","clusterZoom","zoomIntoVesselCenter","cursor","onClick","onHover","hsvToRgb","h_","s_","v_","h","parseFloat","floor","p","q","mod","r","g","b","round","hueToRgbDefaults","hueToRgbString","rgb","hexToRgb","hex","exec","parseInt","hueIncrementToHue","hueIncrement","wrapHue","HeatmapSubLayer","baseTexture","renderingStyleIndex","useNormalBlendMode","stage","PIXI","particles","ParticleContainer","scale","alpha","position","uvs","blendMode","BLEND_MODES","SCREEN","spritesPool","initialTextureFrame","Rectangle","mainVesselTexture","Texture","_setTextureFrame","clearSpriteProps","spritesProps","spritesPropsCount","destroy","textureFrame","clone","hueToHueIncrement","VESSELS_HUES_INCREMENTS_NUM","update","numProps","resizeSpritesPool","sprite","setTransform","numSprites","delta","toRemove","removeChildAt","toAdd","_addSprites","num","Sprite","anchor","addChild","worldToPixelsSimple","m","HeatmapLayer","React","Component","_build","_destroy","_redraw","nextProps","useRadialGradientStyle","props","setBrushZoomRenderingStyle","_this$props","rootStage","customRenderingStyle","subLayers","renderingStyle","rendering","setBrushRenderingStyle","brushRenderingStyle","toUpperCase","_setBrushRenderingStyleIndex","brushZoomRenderingStyle","_this","cappedZoomRenderingStyle","newStyleIndex","subLayer","setRenderingStyleIndex","_this2","_this$props2","defaultHue","allHuesToRender","currentlyUsedHues","allHues","_createSublayer","_destroySubLayer","_setSubLayersSpritePropsForTile","numFilters","hueToRender","render","_this$props3","viewportLeft","viewportRight","len","fi","scaledX","scaledY","mtx","pixelProjectionMatrix","_ref3","HeatmapLayer_slicedToArray","pitch","worldToPixels","pushSpriteProps","defaultOpacity","defaultSize","removeChild","ActivityLayers","pixiReady","onTouchStart","touches","queryCoords","clientX","clientY","onMouseMove","_onTick","heatmapFadingIn","heatmapStage","_heatmapFadeinStep","BaseControl","setState","exportNativeViewport","_context","_updateViewportSize","_this$props$viewport","pixi","transparent","antialias","renderer","canvas","view","container","appendChild","baseTextureCanvas","blurFactor","tplCanvas","document","createElement","tplCtx","getContext","diameter","yCenter","gradient","createRadialGradient","rgbString","addColorStop","rgbOuter","fillStyle","fillRect","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","getVesselTexture","fromCanvas","ticker","add","viewportWidth","viewportHeight","resize","dim","_viewport$unproject2","ActivityLayers_slicedToArray","wrappedLongitude","heatmapFadeinStartTimestamp","now","timeElapsed","highlightedClickedVessel","highlightLayerData","highlightFilters","ActivityLayers_objectSpread","leftWorldScaled","rightWorldScaled","shouldUseRadialGradientStyle","toggleHeatmapDimming","_startHeatmapFadein","gl","getError","err","log","_this$_getHighlightDa","_getHighlightData","react_default","ref","react","heatmap_HeatmapLayer","propTypes","func","contextTypes","getHeatmapLayersAsArray","ActivityLayers_container_objectSpread","getTemporalExtentIndexes","startTimestamp","endTimestamp","connect","ownProps","nativeViewport","topLeftPx","bottomRightPx","topLeftWorld","pixelsToWorld","pixelUnprojectionMatrix","bottomRightWorld","northWest","southEast","north","south","west","east","PopupWrapper","closeButton","onClose","esm","offsetTop","tipSize","closeOnClick","defaultProps","Map","Map_classCallCheck","Map_possibleConstructorReturn","Map_getPrototypeOf","call","onLoad","getBounds","setBounds","glMap","_this$glMap$getBounds","_ne","_sw","lat","lng","loadObserver","_asyncToGenerator","regenerator_default","mark","_callee","wrap","prev","next","window","__webpack_require__","sent","ResizeObserver","default","_containerResizeObserver","handleResizeObserver","observe","_mapContainerRef","stop","entries","_entries$0$contentRec","contentRect","setViewport","Map_objectSpread","propsViewport","bearing","onMapInteraction","lngLat","getRef","getMap","getSource","getCursor","isDragging","transformRequest","resourceType","match","headers","Authorization","mouseOver","disconnect","maxZoom","minZoom","onClosePopup","clickPopup","hoverPopup","hasHeatmapLayers","markers","interactiveLayerIds","className","styles","onMouseLeave","onMouseEnter","assign","onTransitionEnd","clickRadius","ActivityLayers_container","Map_PopupWrapper","content","marker","getInteractiveLayerIds","staticLayers","glLayer","glLayerId","getMapStyle","mapStyles","trackLayersIndex","lastIndexOf","finalMapStyles","mergeIn","mapStylesLayers","get","trackLayer","insert","fromJS","interaction","internalCursor","moduleCursor","long","attributions","GL_STYLE","sourceKey","attribution","setLayerStyleDefaults","layout","temporalField","visibility","initialState","cartoLayersInstanciated","basemapLayers","TYPES","geoJSON","INIT_MAP_STYLE","SET_MAP_STYLE","MARK_CARTO_LAYERS_AS_INSTANCIATED","SET_STATIC_LAYERS","SET_BASEMAP_LAYERS","setDefaultVectorTiles","currentSource","refLayerUrl","refLayerUrls","style_actions_objectSpread","style_actions_toConsumableArray","setMapStyle","setStyleTemporalExtent","applyToThrottled","glLayers","currentFilter","getIn","isLegacy","setIn","applyTemporalExtentThrottled","throttle","applyTemporalExtent","updateGLLayer","refLayer","currentStyleLayers","newStyle","glLayerIndex","findIndex","toggleLayerVisibility","isBasemap","refLayerOpacity","labelsVisibility","showLabels","colorPaintProperty","currentGlLayer","glType","defaultStyles","styleType","refLayerStyle","hasFeatures","applyStyleToAllFeatures","allPaintProperties","glPaintProperty","glPaintFinalValue","selectedValue","fallbackValue","paintOrLayout","includes","originalLayerStyle","layerColorRgbString","layerColorRgb","replace","applyLayerExpressions","addCustomGLLayer","tileSize","allGeoJSONTypes","numByGLType","geoJSONType","glTypeMax","getMainGeomType","layerIndex","reverse","splice","instanciateCartoLayers","sourceId","cartoLayersPromises","sourceCartoSQL","mapConfig","options","sql","mapConfigURL","encodeURIComponent","stringify","cartoAnonymousMapUrl","fetch","json","layergroupid","catch","instanciatedCartoLayers","cartoLayer","tilesURL","newSourceId","deleteIn","commitStyleUpdates","bl","currentGLSources","workspaceGLLayers","workspaceGLLayer","finalSource","existingLayerIds","layerToAdd","layerToAddId","sourceLayer","existingLayers","newLayerGroup","newLayerIndex","findLastIndex","updateWorkspaceGLLayers","customLayers","isCustom","glSources","cartoLayersToInstanciate","newSource","cartoLayerInstanciated","DEFAULT_TRANSITION","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","targetMapVessel","fitToBoundsAction","geoBounds","timelineBounds","getTrackTimeBounds","time","Infinity","getTrackBounds","tbbox","ADD_TRACK","UPDATE_TRACK","convertLegacyTrackToGeoJSON","vectorArrays","currentLng","createFeature","segId","currentSeries","currentFeature","fishingPoints","lngOffset","ll","updateTracks","newTracks","prevTracks","newTrack","trackId","prevTrack","trackHasData","trackHasUrl","cleanData","rawTrackData","statusText","finally","withReducerPropTypes","propTypesSchema","reducer","onAttributionsChange","withReducerTypes","instanceOf","action","module_reducer_objectSpread","module_reducer_toConsumableArray","loaderIndex","exact","tracks_reducer_objectSpread","tracks_reducer_toConsumableArray","trackData","removedTrackId","mapReducer","combineReducers","ModuleReducer","TracksReducer","newVisibleTemporalExtentsIndices","indicesRemoved","heatmap_reducer_objectSpread","heatmap_reducer_defineProperty","heatmap_reducer_toConsumableArray","newTile","layerTiles","tileIndex","tileUid","releasedTileIndex","releasedRefTileIndex","newHeatmapLayers","heatmapTiles_reducer_objectSpread","tileUidsMarkedAsLoaded","newMapStyle","glyphsPath","style_reducer_objectSpread","style_reducer_toConsumableArray","viewport_reducer_objectSpread","currentZoom","interaction_reducer_objectSpread","mapReducers","replaceReducer","throttleApplyTemporalExtent","setTemporalExtent","updateViewportFromIncomingProps","incomingViewport","viewportUpdate","MapModule","initialized","errorInfo","prevProps","indicesToAddByLayer","heatmapLayer","oldVisibleTemporalExtentsIndices","indicesAdded","layerIdsWithIndicesToAdd","currentViewport","abs","componentStack","react_redux_es","Map_container","MDXContent","map_map_classCallCheck","map_map_possibleConstructorReturn","map_map_getPrototypeOf","components","_objectWithoutProperties","dist","parentName","href","index_m","__codesandbox","__position","__code","__scope","map_map"],"mappings":"+mbACAA,EAAAC,QAAA,CAAkBC,IAAA,iBAAAC,WAAA,+ECAlB,IAAIC,EAAS,CACXC,MAAO,CACLC,KAAMC,WAAWC,kBACjBC,MAAO,eACPC,OAAQ,WACRC,OAAQ,YAEVC,KAAM,CACJN,KAAMO,UAAUL,kBAChBC,MAAO,eACPC,OAAQ,WACRC,OAAQ,YAEVG,OAAQ,CACNR,KAAMS,YAAYP,kBAClBC,MAAO,eACPC,OAAQ,YACRC,OAAQ,aAEVK,MAAO,CACLV,KAAMW,WAAWT,kBACjBC,MAAO,eACPC,OAAQ,WACRC,OAAQ,YAEVO,OAAQ,CACNZ,KAAMa,YAAYX,kBAClBC,MAAO,eACPC,OAAQ,YACRC,OAAQ,aAEVS,MAAO,CACLd,KAAMe,WAAWb,kBACjBC,MAAO,eACPC,OAAQ,WACRC,OAAQ,YAEVW,QAAS,CACPhB,KAAMiB,aAAaf,kBACnBC,MAAO,eACPC,OAAQ,aACRC,OAAQ,cAEVa,QAAS,CACPlB,KAAMmB,aAAajB,kBACnBC,MAAO,eACPC,OAAQ,aACRC,OAAQ,eAIRe,EAA2B,SAASC,EAAKC,EAAOC,EAAKC,EAAKC,QACjDC,GAAPH,IACFA,EAAMF,EAAIM,aAECD,GAATJ,IACFA,EAAQ,QAEMI,GAAZD,IACFA,EAAWH,GAEb,IAAK,IAAIM,EAAIN,EAAOM,EAAIL,EAAKK,IAC3BJ,EAAII,EAAIN,EAAQG,GAAgC,IAApBJ,EAAIQ,WAAWD,IAkB3CE,EAAsB,SAASN,GACjC,OAAOO,OAAOC,aAAaC,MAAM,KAAM,IAAIhC,WAAWuB,KASpDU,EAAO,CACTC,QAAS,CACPrC,OAAQA,EACRsC,QAAS,IAEXC,KAXS,SAASC,EAAUC,EAAOC,GACnC,IAAIrC,EAAQ,IAAIsC,YAAYH,EAAStC,MAErC,OADA,IAAI0C,SAASvC,GAAOmC,EAASjC,QAAQ,EAAGkC,EAAOC,GACxCV,EAAoB3B,IAS3B2B,oBAAqBA,EACrBa,oBA/BwB,SAAStB,EAAKC,EAAOC,QAGlCG,GAAPH,IACFA,EAAMF,EAAIM,aAECD,GAATJ,IACFA,EAAQ,GAEV,IAAIsB,EAAM,IAAIC,kBAAkBtB,EAAMD,GAEtC,OADAF,EAAyBC,EAAKC,EAAOC,EAAKqB,EAAK,GACxCA,EAAIE,QAqBX1B,yBAA0BA,GAE5B,IAAK,IAAI2B,KAAQb,EAAKC,QAAQrC,OAAQ,CACpC,IAAIkD,EAAOd,EAAKC,QAAQrC,OAAOiD,GAC/BC,EAAKD,KAAOA,EACZb,EAAKC,QAAQC,QAAQY,EAAK7C,OAAS6C,EAGtBd,4kBCvGTe,yBACJ,SAAAA,gBAAcC,gBAAAC,KAAAF,eACZE,KAAKC,aAAe,2EAGXC,EAAKC,GACd,OAAO,IAAIC,QACT,SAASC,EAASC,GAEhB,GADAN,KAAKO,QAAU,KACc,oBAAlBC,eAGT,KAAM,6BAFNR,KAAKO,QAAU,IAAIC,eAIrBR,KAAKK,QAAUA,EACfL,KAAKM,OAASA,EACdN,KAAKO,QAAQE,KAAK,MAAOP,GAAK,GAC1BC,GACFH,KAAKO,QAAQG,iBAAiB,gBAA9B,UAAAC,OAAyDR,IAE3DH,KAAKO,QAAQK,aAAe,cAC5BZ,KAAKO,QAAQM,OAASb,KAAKc,WAAWC,KAAKf,MAC3CA,KAAKO,QAAQS,QAAUhB,KAAKc,WAAWC,KAAKf,MAC5CA,KAAKO,QAAQU,KAAK,OAClBF,KAAKf,uDAKT,IAAIkB,KAAOlB,KACX,GAAKA,KAAKO,QAAV,CAGA,GAAIP,KAAKmB,MACP,OAAO,EAGT,GAA+B,GAA3BnB,KAAKO,QAAQa,WAAiB,CAKhC,IAAIC,QAAiC,KAAvBrB,KAAKO,QAAQe,QAAkBtB,KAAKuB,WAAoC,GAAvBvB,KAAKO,QAAQe,OAC5E,IAAKD,QAEH,YADArB,KAAKK,QAAQ,MAKjB,GAAKL,KAAKO,QAAQiB,SAAlB,CAGA,IAAIhD,OAASwB,KAAKO,QAAQiB,SAASC,WAC/BD,SAAWxB,KAAKO,QAAQiB,SACxBE,SAAW,IAAInC,SAASiC,UAE5B,KAAIhD,OAAS,GAAb,CAGA,GAAsB,MAAlB0C,KAAKS,UAAmB,CAC1B,IAAIC,OAAS7C,qCAAKJ,oBAAoB6C,SAASK,MAAM,EAAG,IACxD,GAAID,QAAU5B,KAAKC,aAQjB,YAPAD,KAAKM,OACH,kBACEN,KAAKE,IACL,2CACAF,KAAK4B,OACL,KAKNV,KAAKS,UAAYD,SAASI,SAAS,GAAG,GAEtCZ,KAAKa,OAAS,EAEhB,KAAIvD,OAAS0C,KAAKa,OAASb,KAAKS,WAAhC,CAGA,IAAKT,KAAKc,eAAgB,CACxBd,KAAKe,OAASC,KAAKC,MACjBpD,qCAAKJ,oBAAoB6C,SAASK,MAAMX,KAAKa,OAAQb,KAAKa,OAASb,KAAKS,aAE1ET,KAAKkB,OAAS,EACdlB,KAAKe,OAAOI,WAAa,GACzB,IAAK,IAAIC,OAAS,EAAGA,OAASpB,KAAKe,OAAOM,KAAK/D,OAAQ8D,SAAU,CAC/D,IAAIE,IAAMtB,KAAKe,OAAOM,KAAKD,QAC3BE,IAAIC,IAAMH,OACVpB,KAAKe,OAAOI,WAAWG,IAAI5C,MAAQ4C,IACnCA,IAAIrD,SAAWJ,qCAAKC,QAAQrC,OAAO6F,IAAIE,WAEjBnE,GAAlBiE,IAAIG,iBAAsCpE,GAAXiE,IAAII,MACrCJ,IAAII,IAAMJ,IAAII,IAAMJ,IAAIG,iBAERpE,GAAdiE,IAAIT,aAAkCxD,GAAXiE,IAAII,MACjCJ,IAAII,IAAMJ,IAAII,IAAMJ,IAAIT,aAEJxD,GAAlBiE,IAAIG,iBAAsCpE,GAAXiE,IAAIK,MACrCL,IAAIK,IAAML,IAAIK,IAAML,IAAIG,iBAERpE,GAAdiE,IAAIT,aAAkCxD,GAAXiE,IAAIK,MACjCL,IAAIK,IAAML,IAAIK,IAAML,IAAIT,QAG1Bb,KAAKkB,QAAUI,IAAIrD,SAAStC,KAQ9B,GANAqE,KAAKa,QAAUb,KAAKS,UAGpBT,KAAKa,SAAW,EAAKb,KAAKS,UAAY,GAAM,EAE5CT,KAAKc,gBAAiB,EACS,WAA3Bd,KAAKe,OAAOa,aAAuD,cAA3B5B,KAAKe,OAAOa,YAatD,OAZA5B,KAAK6B,aAAa,CAChBD,YAAa5B,KAAKe,OAAOa,YACzBE,SAAU,WACR,MACE,kBACAhD,KAAKE,IACL,sDACAF,KAAK8C,YACL,qDAIC,EAIT,IAAK5B,KAAKkB,OAER,OADAlB,KAAK+B,aACE,EAGX,GAA+B,WAA3B/B,KAAKe,OAAOa,YAA0B,CAExC,IADA,IAAII,OAAS,GACNhC,KAAKa,OAASb,KAAKkB,QAAU5D,OAAQ0C,KAAKiC,SAAU,CAEzD,IADA,IAAIC,IAAM,GACDd,OAAS,EAAGA,OAASpB,KAAKe,OAAOM,KAAK/D,OAAQ8D,SAAU,CAC/D,IAAIE,IAAMtB,KAAKe,OAAOM,KAAKD,QACvBe,IAAM3B,SAASc,IAAIrD,SAASlC,QAAQiE,KAAKa,QAAQ,GACrDqB,IAAIZ,IAAI5C,MAAQyD,IAChBnC,KAAKa,QAAUS,IAAIrD,SAAStC,KAI9BqG,OAAOV,IAAI5C,MAAQwD,IAEjBlC,KAAKiC,QAAUjC,KAAKe,OAAOzD,QAE7BwB,KAAKK,QAAQ6C,aAIV,GAA+B,cAA3BhC,KAAKe,OAAOa,YAA6B,CAClD,IAAIQ,UAAY,KACZJ,OAAS,GACb,GAAI1E,QAAU0C,KAAKa,OAASb,KAAKe,OAAOzD,OAAS0C,KAAKkB,OAAQ,CAC5D,IAAK,IAAIE,OAAS,EAAGA,OAASpB,KAAKe,OAAOM,KAAK/D,OAAQ8D,SAAU,CAC/D,IAAIE,IAAMtB,KAAKe,OAAOM,KAAKD,QAE3BgB,UAAY,IAAKC,KAAKf,IAAIrD,SAASnC,OAAvB,CACVwE,SAASK,MAAMX,KAAKa,OAAQb,KAAKa,OAASS,IAAIrD,SAAStC,KAAOqE,KAAKe,OAAOzD,SAE5E0C,KAAKa,QAAUb,KAAKe,OAAOzD,OAASgE,IAAIrD,SAAStC,KAEjDqG,OAAOV,IAAI5C,MAAQ0D,UAKrB,OADAtD,KAAKK,QAAQ6C,SACN,6BAMApD,qaCnLF0D,EAAa,CACxBC,GAAIC,IAAUC,OAAOC,WACrB1D,IAAKwD,IAAUC,OACfE,KAAMH,IAAUI,OAChBC,MAAOL,IAAUC,OACjBjB,KAAMgB,IAAUM,MAAM,CAAC,UAAW,eAAWzF,IAC7C0F,qBAAsBP,IAAUQ,QAAQR,IAAUQ,QAAQR,IAAUS,SACpEC,gBAAiBV,IAAUW,SCNvBX,IAAUC,OAAOC,WACVF,IAAUC,OACZD,IAAUC,OACVD,IAAUW,KACdX,IAAUS,OACNT,IAAUS,OACVT,IAAUQ,QACjBR,IAAUY,MAAM,CAEdC,IAAKb,IAAUS,OAIfK,aAAcd,IAAUI,UAGpBJ,IAAUY,MAAM,CACtBG,UAAWf,IAAUI,OACrBzB,WAAYqB,IAAUI,OACtBY,gBAAiBhB,IAAUQ,QAAQR,IAAUQ,QAAQR,IAAUS,SAC/DQ,oBAAqBjB,IAAUW,OAC9BT,WACUF,IAAUW,KAInBX,IAAUC,OACLD,IAAUW,KAIfX,IAAUC,OAAOC,WAEZF,IAAUW,KACTX,IAAUW,KACFX,IAAUY,MAAM,CAChCM,MAAOlB,IAAUC,OACjBkB,OAAQnB,IAAUQ,QAAQR,IAAUC,UAEzBD,IAAUW,KACHX,IAAUY,MAAM,CAClCM,MAAOlB,IAAUC,OACjBkB,OAAQnB,IAAUQ,QAAQR,IAAUC,UAE7BD,IAAUS,OACZT,IAAUC,OACLD,IAAUW,KACTX,IAAUW,KACdX,IAAUQ,QAAQR,IAAUQ,QAAQR,IAAUC,SAC7CD,IAAUW,KACXX,IAAUM,MAAM,MAACzF,EAAW,UAAW,WAC3CmF,IAAUC,OACTD,IAAUI,OACZJ,IAAUI,OCrDLJ,IAAUoB,KACTpB,IAAUS,OAAOP,WAChBF,IAAUS,OAAOP,WAItBF,IAAUS,OACRT,IAAUQ,QAAQR,IAAUS,uGCFzBY,EAAsB,EAQtBC,EAAwB,IAgCxBC,EAAmC,oBClCnCC,EAAc,SAACC,EAAUC,EAAOC,GAC3C,IAAMC,GAAY,IAAIC,MAAOC,UAS7B,OAPAL,EAAS,CACPzC,KAfwB,eAgBxB+C,aAHqClH,IAAb8G,EAAA,GAAA1E,OAA4B0E,EAA5B,KAAA1E,OAAwC2E,GAAcA,SAK3C/G,IAAjC6G,EAAM3I,IAAIF,OAAOmJ,aACnBN,EAAM3I,IAAIF,OAAOmJ,cAEZL,GAGIM,EAAiB,SAACN,GAAD,OAAc,SAACF,EAAUS,GACrDT,EAAS,CACPzC,KAzB2B,kBA0B3B+C,QAASJ,IAEX,IAAMD,EAAQQ,IACER,EAAM3I,IAAIF,OAAOsJ,QACpBrH,aAA8CD,IAApC6G,EAAM3I,IAAIF,OAAOuJ,gBACtCV,EAAM3I,IAAIF,OAAOuJ,mBAIRC,EAAmB,SAACC,GAAD,OAAsB,SAACb,EAAUS,GAC/D,IAAMR,EAAQQ,IACRK,EAAWb,EAAM3I,IAAIF,OAAOwJ,iBAElC,QAAiBxH,IAAb0H,EAAJ,CAGA,IAAMC,EAAWd,EAAM3I,IAAIyJ,SAE3BD,EAAS,CACPD,mBACAG,KAAMD,EAASA,SAASC,KACxBC,OAAQ,CAACF,EAASA,SAASG,SAAUH,EAASA,SAASI,WACvDC,OAAQL,EAASK,OACjBC,UAAWN,EAASM,UACpBC,WAAYP,EAASO,WACrBC,aAAcR,EAASQ,kBASdC,EAA6B,SAACC,GAAD,MAA8B,CACtElE,KA/D2C,gCAgE3C+C,QAASmB,IClEEC,EAAoB,SAACzB,GAAD,OAAWA,EAAM3I,IAAIF,OAAOuK,kyBCGtD,IAEMC,EAAwBC,YAFR,SAAC5B,GAAD,OAAWA,EAAM3I,IAAIwK,OAAOpD,MAIvD,SAACoD,GAAD,OAAYA,EAAOC,OAAO,SAACC,GAAD,YAAkB5I,IAAX4I,EAAEtD,SAG/BuD,EAAc,SAACC,EAAQC,GAAT,MAAqB,CACvCC,QAAOC,EAAA,GAAOH,EAAOE,QAAYD,EAAOC,SACxCE,OAAM,GAAA9G,OAAA+G,EAAML,EAAOI,QAAbC,EAAwBJ,EAAOG,WAGjCE,EAA2B,SAACC,EAADC,GAA6B,IAAjB1J,EAAiB0J,EAAjB1J,MAAOC,EAAUyJ,EAAVzJ,IAClD,IAAKwJ,IAAYA,EAAQE,SAAU,OAAO,KAC1C,IAAMC,EAAmBH,EAAQE,SAASE,OAAO,SAACC,EAAkBC,GAMlE,GAJEA,EAAQC,YACRD,EAAQC,WAAWC,sBACnBF,EAAQC,WAAWC,qBAAqBC,OACxCH,EAAQC,WAAWC,qBAAqBC,MAAM7J,OAAS,EAC3C,CACZ,IAAM8J,EAAWJ,EAAQK,SAASC,YAAYR,OAC5C,SAACS,EAAqBC,EAAYC,GAChC,IAAMC,EAAiBV,EAAQC,WAAWC,qBAAqBC,MAAMM,GAMrE,OALqBC,GAAkBzK,GAASyK,GAAkBxK,IAEhEqK,EAAoBD,YAAYK,KAAKH,GACrCD,EAAoBJ,MAAMQ,KAAKD,IAE1BH,GAET,CAAED,YAAa,GAAIH,MAAO,KAE5B,IAAKC,EAASE,YAAYhK,OAAQ,OAAOyJ,EAEzC,IAAMa,EAAetB,EAAA,GAChBU,EADgB,CAEnBK,SAAQf,EAAA,GACHU,EAAQK,SADL,CAENC,YAAaF,EAASE,cAExBL,WAAUX,EAAA,GACLU,EAAQC,WADH,CAERC,qBAAsB,CACpBC,MAAOC,EAASD,WAItBJ,EAAiBY,KAAKC,GAExB,OAAOb,GACN,IAKH,OAJqBT,EAAA,GAChBI,EADgB,CAEnBE,SAAUC,KAKRgB,EAAsB/B,YAC1B,CAACH,EAAmBE,GACpB,SAACD,EAAgBG,GACf,IAAM+B,EAAoBlC,GAAkBA,EAAetI,OAAS,EAC9DyK,EAAYhC,GAAUA,EAAOzI,OAAS,EAC5C,IAAKwK,IAAsBC,EAAW,OAAO,KAE7C,IAAMC,EAAY,CAChB/K,MAAO2I,EAAe,GAAGtB,UACzBpH,IAAK0I,EAAe,GAAGtB,WAwCzB,OAtCeyB,EAAOe,OACpB,SAACmB,EAAKC,GACJ,IAAKA,EAAMvF,KAAM,OAAOsF,EAExB,IAAME,EAAM,GAAA1I,OAAMyI,EAAM3F,GAAZ,SACN6F,EAAQ,CACZ/B,QAAOgC,EAAA,GACJF,EAAS,CACR3G,KAAM,UACNmB,KAAM8D,EAAyByB,EAAMvF,KAAMqF,KAG/CzB,OAAQ,CACN,CACEhE,GAAE,GAAA9C,OAAKyI,EAAM3F,GAAX,SACF4F,SACA3G,KAAM,OACN8G,MAAO,CACLC,aAAc,EACdC,aAAcN,EAAMrF,QAGxB,CACEN,GAAE,GAAA9C,OAAKyI,EAAM3F,GAAX,UACF4F,SACA3G,KAAM,SACNwE,OAAQ,CAAC,QAAS,CAAC,iBAAkB,CAAC,GAAI,UAAU,GAAM,GAC1DsC,MAAO,CACLG,gBAAiB,EACjBC,eAAgBR,EAAMrF,UAK9B,OAAOqD,EAAY+B,EAAKG,IAE1B,CAAE/B,QAAS,GAAIE,OAAQ,OAMvBoC,EAA4B7C,YAChC,CDlHwC,SAAC5B,GAAD,OAAWA,EAAM3I,IAAIF,OAAOqK,yBCkHvCG,GAC7B,SAACH,EAAyBK,GACxB,IAAM+B,EAAoBpC,GAA2BA,EAAwBpI,OAAS,EAChFyK,EAAYhC,GAAUA,EAAOzI,OAAS,EAC5C,IAAKwK,IAAsBC,EAAW,OAAO,KAE7C,IAAMC,EAAY,CAChB/K,MAAOyI,EAAwB,GAAGpB,UAClCpH,IAAKwI,EAAwB,GAAGpB,WA8BlC,OA5BeyB,EAAOe,OACpB,SAACmB,EAAKC,GACJ,IAAKA,EAAMvF,KAAM,OAAOsF,EAExB,IAAME,EAAM,GAAA1I,OAAMyI,EAAM3F,GAAZ,oBACN6F,EAAQ,CACZ/B,QAAOgC,EAAA,GACJF,EAAS,CACR3G,KAAM,UACNmB,KAAM8D,EAAyByB,EAAMvF,KAAMqF,KAG/CzB,OAAQ,CACN,CACEhE,GAAE,GAAA9C,OAAKyI,EAAM3F,GAAX,oBACF4F,SACA3G,KAAM,OACN8G,MAAO,CACLC,aAAc,EACdC,aAAc,WAKtB,OAAOtC,EAAY+B,EAAKG,IAE1B,CAAE/B,QAAS,GAAIE,OAAQ,OAMhBqC,EAAkB9C,YAC7B,CAAC+B,EAAqBc,GACtB,SAACE,EAAaC,GACZ,OAAKA,EACE5C,EAAY2C,EAAaC,GADID,uDC/J3BE,EACL,OAKKC,EAAwB,CACnCC,OAAQ,EACRC,SAAU,GAGCC,EACM,EADNA,EAEH,EAKGC,EACF,UADEA,EAEH,27BCLV,IAAMC,GAAsB,SAACC,EAAa9F,GAAiC,IAAhB+F,EAAgBC,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAP,GAC5DC,EAAO,GAwBb,OAtBEjG,GAAmB,CAAC,OAAOkG,QAAQ,SAACC,EAAQlC,GAC5C,IAAMmC,EAAY,GACH,OAAXD,IAAkD,IAA/BJ,EAAO9F,sBAC5BmG,EAAUC,aAAe,IAAIxF,KAAKsF,EAAO,IAAIG,cAC7CF,EAAUG,WAAa,IAAI1F,KAAKsF,EAAO,IAAIG,eAEzCP,EAAOS,kBACTJ,EAAUK,EAAIV,EAAOS,gBAAgBC,EACrCL,EAAUM,EAAIX,EAAOS,gBAAgBE,EACrCN,EAAUO,EAAIZ,EAAOS,gBAAgB/E,MAGvC,IAAMjG,EC7BK,SAACsK,EAAaM,GAG3B,OAFAQ,KAAiBC,YAAc,kBACHC,KAAShB,EAC9BiB,CAAoBX,GD0BbY,CAAclB,EAAaM,KAGN,IAA/BL,EAAO9F,sBACN8F,EAAOkB,wBACRlB,EAAOkB,uBAAuBC,QAAQjD,IAAU,IAEhDgC,EAAK9B,KAAK3I,KAGPyK,GAMIkB,GAAkB,SAACC,EAAY3L,EAAOuE,GAGjD,IAHkF,IAAhB+F,EAAgBC,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAP,GACrEqB,EAAW,GACXpB,EAAOJ,GAAoBuB,EAAYpH,EAAiB+F,GACrDuB,EAAW,EAAGxN,EAASmM,EAAKnM,OAAQwN,EAAWxN,EAAQwN,IAC9DD,EAASlD,MAAK,IAAI/I,MAAgBmM,WAAWtB,EAAKqB,GAAW7L,IAG/D,OAAO4L,GAGIG,GAAuB,SAACC,GAAD,OAClCA,EAAYjF,OAAO,SAACkF,GAAD,OAAiC,OAAhBA,KASzBC,GAAY,SAACC,EAAmBC,GAC3C,IAgBIC,EAhBE3I,EAAO,GAEP4I,EAA0BC,IAAMJ,EAAmB,SAACK,GAAD,OAAOA,EAAErG,UAAU9H,SAEtEoO,EAAkBL,EAAQrF,OAAO,SAAC2F,GACtC,OAAIP,EAAkB,SAAuC/N,IAAjC+N,EAAkB,GAAGO,KAC/CC,QAAQC,KAAR,UAAApM,OAAuBkM,EAAvB,gEACO,KAKXD,EAAgBhC,QAAQ,SAACoC,GACvBnJ,EAAKmJ,GAAO,IAAIlP,aAAa2O,KAU/B,IANA,IAAIQ,EAAmB,EAEjBC,EAAe,SAACF,GACpBnJ,EAAKmJ,GAAKG,IAAIX,EAAaQ,GAAMC,IAG1BtE,EAAQ,EAAGnK,EAAS8N,EAAkB9N,OAAQmK,EAAQnK,EAAQmK,IACrE6D,EAAeF,EAAkB3D,GACjCiE,EAAgBhC,QAAQsC,GACxBD,GAAoBT,EAAalG,UAAU9H,OAE7C,OAAOqF,GAgBIuJ,GAAsB,SAACvJ,EAAMxB,EAAY6I,EAAiBmC,GACrE,IAAMC,OAAwC/O,IAArB8O,EAAiC,GAAKA,EAEzDlH,EAAO+E,EAAgB/E,KACvBoH,EAAmBC,IAAQC,oBAAoBtH,GAC/CuH,EAAgCF,IAAQG,iCAAiCxH,GACzEyH,EAAoBJ,IAAQK,qBAAqB1H,GAGjDoG,EAAU,GACVuB,EAAaC,OAAOC,KAAK3L,GAC/ByL,EAAWlD,QAAQ,SAACqD,GAClB1B,EAAQ0B,IAAK,IAIf,IAAIC,EAAgB,GAAGvN,OAAOmN,IACR,IAAlBvB,EAAQ4B,OAAgBD,EAAcrF,KAAK,WACxB,IAAnB0D,EAAQ6B,QAAiBF,EAAcrF,KAAK,YACtB,IAAtB0D,EAAQjG,YACV4H,EAAcrF,KAAK,UACnBqF,EAAcrF,KAAK,YAEF,IAAf0D,EAAQ9I,IACVyK,EAAcrF,KAAK,UAKpB,CAAC,WAAY,YAAa,YAAY+B,QAAQ,SAACpI,QACtBjE,IAApB8D,EAAWG,KAAiD,IAA3BH,EAAWG,GAAK6L,QACnDC,IAAKJ,EAAe1L,KAIxB8L,IAAKJ,EAAe,QAAS,UAC7BA,EAAgBK,IAAKL,GAMrB,IAJA,IAAMM,EAAY3K,EAAKwC,SAAS7H,OAE1BiQ,EAAY,GACZC,EAAc,GAzCsEC,EAAA,SA0CjFhG,EAAWnK,GAClB,IAAIoQ,EAAQ,GACZd,EAAWlD,QAAQ,SAACqD,GAClBW,EAAMX,GAAKpK,EAAKoK,GAAGtF,KAGrB,IAAMkG,EAAYtC,EAAQsC,UACtBD,EAAMC,UACNrB,IAAQsB,2BAA2BF,EAAMG,UAlD2CC,EAAAC,GAqD/DC,YAAc,CAACN,EAAMtI,UAAWsI,EAAMvI,UAAW,GArDc,GAqDjF8I,EArDiFH,EAAA,GAqDzEI,EArDyEJ,EAAA,GAuExF,GAjBAJ,EAAMO,OAASA,EACfP,EAAMQ,OAASA,EAEX7C,EAAQ4B,QACVS,EAAMS,OAAS7B,IAAQ8B,cACrBV,EAAMT,MACNT,EACAH,IAGAhB,EAAQ6B,SACVQ,EAAMW,QAAU/B,IAAQgC,gBAAgBZ,EAAMR,OAAQR,IAEpDrB,EAAQ9I,KACVmL,EAAMa,OAASb,EAAMnL,KAGlBgL,EAAUI,GAAY,CACzBH,EAAY7F,KAAKgG,GACjB,IAAMa,EAAQ,GAKd,OAJAxB,EAActD,QAAQ,SAACiC,GACrB6C,EAAM7C,GAAU,CAAC+B,EAAM/B,MAEzB4B,EAAUI,GAAaa,EACvB,WAEF,IAAMA,EAAQjB,EAAUI,GACxBX,EAActD,QAAQ,SAACiC,GACrB6C,EAAM7C,GAAQhE,KAAK+F,EAAM/B,OAxCpBlE,EAAQ,EAAGnK,EAASgQ,EAAW7F,EAAQnK,EAAQmK,IAASgG,EAAxDhG,GAiDT,OAHA+F,EAAY9D,QAAQ,SAACiE,GACnBvB,EAAiBuB,GAAaJ,EAAUI,KAEnCvB,GAGIqC,GAAyB,SAACD,EAAO/G,EAAOnE,GASnD,OARyBuJ,OAAOC,KAAKxJ,GAAcoL,MAAM,SAAChL,GACxD,YAAqBrG,IAAjBmR,EAAM9K,IAKHJ,EAAaI,GAAOgH,QAAQ8D,EAAM9K,GAAO+D,KAAW,KAYlDkH,GAAkB,SAACC,EAAUC,EAAWC,EAAYC,EAAUC,GAKzE,IAJA,IAAMC,EAAU,GAERhB,EAAgDY,EAAhDZ,OAAQC,EAAwCW,EAAxCX,OAAQgB,EAAgCL,EAAhCK,4BAHoEC,EAAA,SAKnFC,GACP,IAAMZ,EAAQI,EAASQ,GACvB,QAAc/R,IAAVmR,EAAqB,iBACzB,IAR0F,IAAAa,EAAA,SAQjF9R,GACP,IAAM+R,EAAKd,EAAMP,OAAO1Q,GAClBgS,EAAKf,EAAMN,OAAO3Q,GAExB,KACIyR,EAAe1R,QApBS,SAACkR,EAAO/G,EAAO+H,GAI/C,OAH4BA,EACzBxJ,OAAO,SAACoJ,GAAD,OAAkB,IAAXA,EAAEK,OAChBC,KAAK,SAAC1J,GAAD,OAAYyI,GAAuBD,EAAO/G,EAAOzB,EAAO1C,gBAiB/BqM,CAA0BnB,EAAOjR,EAAGyR,KAC/DM,GAAMrB,EAASiB,GACfI,GAAMrB,EAASiB,GACfK,GAAMrB,EAASgB,GACfK,GAAMrB,EAASgB,EACf,CACA,IAAMU,EAAS,GAEf/C,OAAOC,KAAK0B,GAAO9E,QAAQ,SAACoC,GAC1B8D,EAAO9D,GAAO0C,EAAM1C,GAAKvO,KAE3BqS,EAAOjC,UAAYyB,EACnBH,EAAQtH,KAAKiI,KAjBRrS,EAAI,EAAGA,EAAIiR,EAAMP,OAAO3Q,OAAQC,IAAK8R,EAArC9R,IAHF6R,EAAIN,EAAYM,EAAIL,EAAUK,IAAKD,EAAnCC,GAwBT,OAAOH,kUEpPF,IAQDY,GAAqB,SAACC,GAC1B,IAAI7K,EAAO8K,KAAKC,KAAKF,EPmBe,IOlBhCG,GAAiB,EAKrB,OAJIhL,EPUqD,KOTvDA,EPSuD,GORvDgL,GAAiB,GAEZ,CACLC,SAAUjL,EACVkL,SAAUlL,EACVgL,mBAIEG,GAAsB,kBAAM,SAACnM,EAAUS,GAC3C,IAAMR,EAAQQ,IAMd,IAL8BR,EAAM3I,IAAI8U,aAAaC,sBAK1BhT,OAAQ,CACjC,IAAMiT,EAA4BrM,EAAM3I,IAAI8U,aAAaG,yBAEzDvM,EAASwM,GAAaF,IACtBtM,EAAS,CACPzC,KA9BmC,iCAmC5BkP,GAAmB,SAACC,GAAD,OAAc,SAAC1M,GAC7CA,EAAS,CACPzC,KAtCqC,4BAuCrC+C,QAASoM,IAGX1M,EAASmM,QAGLQ,GAAiB,eAACC,EAADrH,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,IAAAA,UAAA,UAAyC,SAACvF,EAAUS,GACzE,IAAMR,EAAQQ,IACRoM,EAAsB5M,EAAM3I,IAAI8U,aAAaS,oBAC/CC,EAAc,GACZC,EAAqB,GAE3B,IAAoC,IAAhCH,EACFE,EAAcD,MACT,CACL,IAAMG,EAAqB/M,EAAM3I,IAAI8U,aAAaY,mBAElDH,EAAoBpH,QAAQ,SAACwH,QACuC7T,IAA9D4T,EAAmBE,KAAK,SAAClL,GAAD,OAAOA,EAAEmL,MAAQF,EAAYE,OACvDL,EAAYpJ,KAAKuJ,KAIrBD,EAAmBvH,QAAQ,SAAC2H,QACwChU,IAA9DyT,EAAoBK,KAAK,SAAClL,GAAD,OAAOA,EAAEmL,MAAQC,EAAWD,OACvDJ,EAAmBrJ,KAAK0J,EAAWD,OAKzC,IAAME,EAAkBP,EAAYxV,IAAI,SAAC0K,GAAD,OAAOA,EAAEmL,MAOjDL,EAAYrH,QAAQ,SAAC6H,GCsHhB,IAAiBC,EDrHpBvN,GCqHoBuN,EDrHHD,ECsHZ,SAACtN,EAAUS,GAChBT,EAAS,CACPzC,KAAMiQ,GACNlN,QAASiN,IAEX,IAAME,EAAuBhN,IAAWnJ,IAAIoW,QAAQC,cAC9CC,EAA0BhF,OAAOC,KAAK4E,GAAsB1L,OAChE,SAACzD,GAAD,OAA6C,IAArCmP,EAAqBnP,GAAIuP,UAG/BD,EAAwBvU,QAC1B2G,EAAS8N,GAASF,EAAyB,CAACL,UD/HhDvN,EAAS,CACPzC,KAlFsC,6BAmFtC+C,QAASuM,IAGX7M,EAAS,CACPzC,KAtF2C,kCAuF3C+C,QAAS,CACP+M,kBACAN,wBAIJ/M,EAAS+N,MACT/N,EAASmM,QAML6B,GAAsBC,KAHC,SAACjO,GAC5BA,EAAS2M,OAEgD,KAE9CuB,GAAiC,eAACtB,EAADrH,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,IAAAA,UAAA,UAAyC,SACrFvF,EACAS,GAgBA,IAAM0N,EAAc1N,IAAWnJ,IAAIyJ,SAC7BA,EAAWoN,EAAYpN,SAI7B,GAAKA,EAASqN,OAAUrN,EAASsN,QAA4C,OAAlCF,EAAYG,kBAAvD,CAKA,IAAMC,EAAiB,IAAIC,KAA4BzN,GACjDK,EAAS,CACbmN,EAAeE,UAAU,CAAC,EAAG,IAC7BF,EAAeE,UAAU,CAAC1N,EAASqN,MAAOrN,EAASsN,UAG9CK,EAAUtN,EA/Bd,GA+BQuN,EAAMvN,EA/Bd,GAAAsB,EAgCkB,CAACgM,EAAG,GAAIC,EAAG,GAAIA,EAAG,GAAID,EAAG,IAAvCE,EAhCJlM,EAAA,GAgCOmM,EAhCPnM,EAAA,GAgCUoM,EAhCVpM,EAAA,GAgCaqM,EAhCbrM,EAAA,GAiCGsM,EAA4B,GAE5BC,EAASrD,GAAmB7K,EAASC,MAC3C,IAA8B,IAA1BiO,EAAOjD,iBAA4D,IAAhCY,EAAvC,CAIA,GAAIkC,EAAI,KAAOF,GAAK,IAAK,CAEvB,IAAMM,EAAKJ,EAAI,IAAMF,EAAIA,EAAI,IAGvBO,EAAKL,EAAI,IAAMA,EAAI,IAAMA,EAC/BE,EAA0BtL,KAAK,CAAC,CAAC,CAACwL,EAAIH,GAAI,CAH/B,QAGoCA,GAAI,CAHxC,QAG6CF,GAAI,CAACK,EAAIL,GAAI,CAACK,EAAIH,MAC1EC,EAA0BtL,KAAK,CAAC,CAAC,EAHtB,IAG2BqL,GAAI,CAACI,EAAIJ,GAAI,CAACI,EAAIN,GAAI,EAHjD,IAGsDA,GAAI,EAH1D,IAG+DE,WAE1EC,EAA0BtL,KAAK,CAAC,CAAC,CAACkL,EAAGG,GAAI,CAACD,EAAGC,GAAI,CAACD,EAAGD,GAAI,CAACD,EAAGC,GAAI,CAACD,EAAGG,MAGvE,IAAMK,EAAO,CACX7R,KAAM,eACN8F,YAAa2L,GAITK,EAAsBC,KAAUC,MAAMH,EAAMH,GAC5CO,EAAuBF,KAAUG,QAAQL,EAAMH,GAC/CS,EAAe,GAErBL,EAAoB5J,QAAQ,SAACkK,EAAQrW,GACnC,IAAM6T,EAAMqC,EAAqBlW,GACpBqW,EAAO,IACR,GACVD,EAAahM,KAAK,CAChBqC,gBAAiB,CACfC,EAAG2J,EAAO,GACV1J,EAAG0J,EAAO,GACV3O,KAAM2O,EAAO,IAEfxC,UAKNnN,EAAS,CACPzC,KAzLuC,8BA0LvC+C,QAASoP,KAKiB,KAFAvB,EAAYyB,WAAa7O,EAASC,MAG5DhB,EAAS2M,GAAeC,IAExBoB,GAAoBhO,OAIX6P,GAAsB,SAACF,EAAQG,GAAT,OAAmC,SAAC9P,EAAUS,GAE/E,IAAM2O,EAAO,CACX7R,KAAM,QACN8F,YAAa,CAACsM,EAAOxO,UAAWwO,EAAOzO,WAEnCF,EAAOP,IAAWnJ,IAAIyJ,SAASA,SAASC,KAIxC+O,EAAO,CAAC/O,EAAMA,EAAO,EAAGA,EAAO,GAClC1J,IAAI,SAAC4O,GAAD,OAAO0F,GAAmB1F,KAC9B5O,IAAI,SAAC2X,GAAD,OAAYK,KAAUG,QAAQL,EAAMH,KACxC3X,IAAI,SAACmY,GAAD,OAAaA,EAAQ,KAQ5BzP,EC+LK,SAAoC4K,EAAWkF,GACpD,OAAO,SAAC9P,EAAUS,GAChB,IAAMR,EAAQQ,IADeuP,EAEuCC,GAClEhQ,EACA2K,EACAkF,GAHMI,EAFqBF,EAErBE,MAAOC,EAFcH,EAEdG,QAASC,EAFKJ,EAELI,UAAWC,EAFNL,EAEMK,eAAgBC,EAFtBN,EAEsBM,aAMnD,IACgB,IAAdF,QACahX,IAAb8W,EAAM5R,IACN2B,EAAM3I,IAAIoW,QAAQ6C,mBAAmBC,UAAYN,EAAM5R,GACvD,CACA,IAAMmS,OACMrX,IAAV8W,EACI,KACA,CACE5R,GAAI4R,EAAM5R,GACVoS,UAAWR,EAAMQ,UACjBC,QAAST,EAAMS,QACf7T,OAAQoT,EAAMpT,QAEtBkD,EAAS,CACPzC,KAAMqT,GACNtQ,QAAS,CACP4P,MAAOO,EACPN,UACAU,kBAAgC,IAAdT,IAAyC,IAAnBC,EACxCS,sBAAoC,IAAdV,EACtBE,uBAIJtQ,EAAS+Q,ODjOJC,qUANEC,CAAA,GACNtB,EADM,CAETI,SAIyCD,4xBCzNtC,IAEMtC,GAAqB,qBACrBoD,GAAoB,oBAGpBM,GACX,uDACWC,GAAsB,sBAYnC,SAASC,GAAiCC,EAAoBvS,GAC5D,IAAMwS,EAAqBD,EAAmB,GAAGhR,UAC3CkR,EAAmBF,EAAmB,GAAGhR,UACzCmR,EAAU,GAQhB,OAPA1S,EAAqB2G,QAAQ,SAAC9D,EAAgB6B,GAC5C,IAAMiO,EAAsB9P,EAAe,GACjBA,EAAe,IAChB2P,GAAsBG,GAAuBF,GACpEC,EAAQ9N,KAAKF,KAGVgO,EA0ET,SAAS1D,GAAS4D,EAAUC,GAAsD,IAAtCC,EAAsCrM,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,QAAXnM,EACrE,OAAO,SAAC4G,EAAUS,GAChB,IAAMR,EAAQQ,IACRoR,EAAW9R,EAAYC,EAAUC,EAAOyR,EAASI,KAAK,MACtD9W,EAAQiF,EAAM3I,IAAIF,OAAO4D,MACzB2S,EAAgB1N,EAAM3I,IAAIoW,QAAQC,cAClCoE,EAAe,GACrBL,EAASjM,QAAQ,SAACnH,GAChByT,EAAazT,GAAb0T,GAAuBrE,EAAcrP,GAAIiR,SAE3C,IAAM0C,EAAc,GAEpBP,EAASjM,QAAQ,SAAC+K,GAChB,IAAM0B,EAAqBvE,EAAc6C,GAAS1T,OADtBqV,EAAAC,GAAA,GAEsCF,GAA1D3S,EAFoB4S,EAEpB5S,gBAAiBC,EAFG2S,EAEH3S,oBAAqBtC,EAFlBiV,EAEkBjV,WACxCnC,EAAMmX,EAAmB5S,UAAUiQ,MAEzCoC,EAAelM,QAAQ,SAAC8H,GAEtB,IAAID,EAAOyE,EAAavB,GAAStD,KAAK,SAAClL,GAAD,OAAOA,EAAEmL,MAAQI,EAAcJ,MAChEG,IAEHA,EAAO,CACLH,IAAKI,EAAcJ,IACnBkF,6BAA8B,IAEhCN,EAAavB,GAAS9M,KAAK4J,IAK7B,IAAMgF,OACyBlZ,IAA7BwY,EACIjE,EAAc6C,GAAS+B,8BACvBX,EAAyBpB,GAEzBgC,EAA+BC,IACnCH,EACAhF,EAAK+E,8BAGDK,EApGd,SACElC,EACAzK,EACA/K,EACAwL,EAJF9D,GAME,IADE3H,EACF2H,EADE3H,IAAKwE,EACPmD,EADOnD,gBAAiBC,EACxBkD,EADwBlD,oBAGxB,QAAYpG,IAAR2B,EACF,MAAM,IAAI4X,MAAM,iEAElB,IAAMC,EAAkBlM,GAAgB3L,EAAKC,EAAOuE,EAAiB,CACnEwG,kBACAS,yBACAhH,wBAEIqT,EAAmB5X,QAAQ6X,IAAIF,GAWrC,OATyB,IAAI3X,QAAQ,SAACC,GACpC2X,EAAiBE,KAAK,SAAC/L,GACrB9L,EAAQ,CACN8X,cAAexC,EACfxJ,oBA8EoBiM,CAClBzC,EACAjD,EAAcxH,gBACd/K,EACAwX,EACA,CACEzX,MACAwE,kBACAC,wBAIJyS,EAAYvO,KAAKgP,GAEjBA,EAAYK,KAAK,SAAAG,GAAoC,IAAjCF,EAAiCE,EAAjCF,cAAehM,EAAkBkM,EAAlBlM,YACjCsG,EAAK+E,6BAA+BjJ,IAClCkE,EAAK+E,6BAA6B7W,OAAOgX,IAE3ClF,EAAK5O,KA/Ef,SAAwBsI,EAAa9J,EAAY6I,EAAiBmC,GAChE,IAAIxJ,EAEEyI,EAAoBJ,GAAqBC,GAE/C,OADAtI,EAAOwI,GAAUC,EAAmByB,OAAOC,KAAK3L,IACf,IAA7B0L,OAAOC,KAAKnK,GAAMrF,OACb,GAGY4O,GAAoBvJ,EAAMxB,EAAY6I,EAAiBmC,GAsExDiL,CACVnM,EACA9J,EACAqQ,EAAcxH,gBACduH,EAAK5O,MAGPsB,EAAS,CACPzC,KAAM4T,GACN7Q,QAAS,CACPkQ,QAASwC,EACT1F,gBAOVrS,QAAQ6X,IAAIb,GAAac,KAAK,WAC5B/S,EAASQ,EAAeqR,IACxB7R,EAASyM,GAAiBkF,EAAera,IAAI,SAACgW,GAAD,OAAUA,EAAKH,WAgC3D,IAAMX,GAAe,SAACuD,GAAD,MAAW,CACrCxS,KAhNmC,wBAiNnC+C,QAASyP,IAGEhC,GAAoB,iBAAO,CACtCxQ,KApNiC,wBAwNnC,SAAS6V,GAAqB5C,GAC5B,OAAO,SAACxQ,EAAUS,GAEhB,IAAMkR,EAAiBlR,IAAWnJ,IAAIoW,QAAQiE,eAC9C3R,EAAS8N,GAAS,CAAC0C,GAAUmB,KA+FjC,IAAM1B,GAAgB,SAAChQ,EAAO2K,EAAWkF,GACvC,IAAMxN,EAASrC,EAAM3I,IAAIoW,QAAQC,cAC3B9C,EAAaiF,EAAsB,GACnChF,EAAWgF,EAAsB,GACjCuD,EAAgB,GAEtBzK,OAAOC,KAAKvG,GAAQmD,QAAQ,SAAC+K,GAC3B,IAAMN,EAAQ5N,EAAOkO,GACrB,IAAsB,IAAlBN,EAAMrC,QAAV,CAGA,IAGMyF,EAH+B1I,EAAUmF,KAAKzY,IAAI,SAAC6V,GAAD,OACtD+C,EAAMX,MAAMrC,KAAK,SAACI,GAAD,OAAUA,EAAKH,MAAQA,MAEUpL,OAClD,SAACuL,GAAD,YAAmBlU,IAATkU,QAAoClU,IAAdkU,EAAK5O,OAGjCqM,EAAiBmF,EAAM3E,QAC7B,GAAI+H,EAAeja,OAAQ,CACzB,IAAMka,EAAWD,EAAe,GAChCD,EAAc3P,KAAK,CACjBwM,QACAlF,QAASN,GAAgB6I,EAAS7U,KAAMkM,EAAWC,EAAYC,EAAUC,SAK/E,IAKIqF,EAEAC,EACAF,EACAqD,EACAlD,EAVEmD,EAAuBJ,EAActR,OACzC,SAAC2R,GAAD,OAAkBA,EAAa1I,QAAQ3R,OAAS,IAWlD,GAAoC,IAAhCoa,EAAqBpa,OACvB8W,GAAU,OACL,GAAIsD,EAAqBpa,OAAS,EAGvC+W,GAAY,MACP,CAML,IAAMpF,GAJNwI,EAAqBC,EAAqB,IAIPzI,QAEnC,GAAuB,IAAnBA,EAAQ3R,OACV8W,GAAU,OAGenF,EAAQjJ,OAAO,SAAC4R,GAAD,OAAOA,EAAErV,GAAK,IACjCjF,OACnB+W,GAAY,EAGZC,GADAC,EAAesD,IAAO5I,EAAS,SAAC2I,GAAD,OAAOA,EAAErJ,UACVjR,OAAS,EAO7C,MAAO,CAAE8W,UAASC,YAAWC,iBAAgBC,eAAcJ,WAFtB9W,IAAvBoa,EAAmC,GAAKA,EAAmBtD,QAKpE,SAASa,KACd,MAAO,CACLxT,KAAMqT,GACNtQ,QAAS,CACP6P,SAAS,EACTU,kBAAkB,IA4CjB,IAYMgD,GAAsB,SAACC,EAAWC,GAAZ,OAA0C,SAC3E/T,EACAS,GAEA,GAAkB,OAAdqT,EAAJ,CAIA,IAAME,EAAiBvT,IAAWnJ,IAAIoW,QAAQC,cAG9CmG,EAAUrO,QAAQ,SAACwO,GACjB,IA7O4B/D,EAAOmB,EA6O7Bb,EAAUyD,EAAS3V,GACnB4V,EAAYF,EAAexD,QACfpX,IAAd8a,EAEFlU,GAjP0BkQ,EAiPD+D,EAjPQ5C,EAiPE0C,EAjPqB,SAAC/T,GAC7D,IAAMlB,EAAuBoR,EAAMpT,OAAOyC,gBAC1CS,EAAS,CACPzC,KA7O6B,oBA8O7B+C,QAAQ8R,GAAA,GACHlC,EADE,CAGLqC,8BAA+BnB,GAC7BC,EACAvS,QAKgB,IAAlBoR,EAAMrC,SACR7N,EAASoT,GAAqBlD,EAAM5R,SAoO9B4V,EAAUrG,UAAYoG,EAASpG,UAAgC,IAArBoG,EAASpG,SACrD7N,EAASoT,GAAqB5C,IAG9B0D,EAAUrG,UAAYoG,EAASpG,SAC/BqG,EAAU9U,MAAQ6U,EAAS7U,KAC3B8U,EAAU9J,UAAY6J,EAAS7J,SAC/B8J,EAAU3I,UAAY0I,EAAS1I,SAC/B2I,EAAUC,cAAgBF,EAASE,aAGnCnU,EAAS,CACPzC,KAxegC,6BAyehC+C,QAAS,CACPhC,GAAI2V,EAAS3V,GACbuP,QAASoG,EAASpG,QAClBzO,IAAK6U,EAAS7U,IACdgL,QAAS6J,EAAS7J,QAClBmB,QAAS0I,EAAS1I,QAClB4I,YAAaF,EAASE,kBAQhCvL,OAAOC,KAAKmL,GAAgBvO,QAAQ,SAAC2O,GA3PL,IAAC9V,EA4P1BwV,EAAU5G,KAAK,SAACmH,GAAD,OAAOA,EAAE/V,KAAO8V,KAClCpU,GA7P6B1B,EA6PD8V,EA7PQ,SAACpU,GACzCA,EAAS,CACPzC,KA1PgC,uBA2PhC+C,QAAS,CACPhC,kBA+MFqJ,QAAQC,KAAK,6HCxbX0M,GAAe,SAACC,GAAD,IAAYrT,EAAZqE,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAuB,KAAMpE,EAA7BoE,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAyC,KAAMvE,EAA/CuE,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAsD,KAAtD,OAA+D,SAACvF,GACnFA,EAAS,CACPzC,KA/B8B,qBAgC9B+C,QAAS,CACPiU,YACArT,WACAC,YACAH,UAGJhB,EAASkO,MACTlO,EAASY,OAOE4T,GAAgB,kBAAM,SAACxU,GAClCA,EAAS,CACPzC,KA/C0B,mBAiD5ByC,EAASkO,MACTlO,EAASY,OAOE6T,GAAc,SAACrT,GAAD,OAAY,SAACpB,EAAUS,GAChD,IAAMR,EAAQQ,IACRiU,EAAKC,aAAU,CACnBvT,OAAQ,CAAC,CAACA,EAAOwT,OAAQxT,EAAOyT,QAAS,CAACzT,EAAO0T,OAAQ1T,EAAO2T,SAChE3G,MAAOnO,EAAM3I,IAAIyJ,SAASA,SAASqN,MACnCC,OAAQpO,EAAM3I,IAAIyJ,SAASA,SAASsN,OACpC2G,QAAS,KAEXhV,EAASsU,GAAa,KAAMI,EAAGxT,SAAUwT,EAAGvT,UAAWuT,EAAG1T,kICtErD,IAUDiU,GAAY,SAACC,GAA6B,IAAlBhR,EAAkBqB,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAT,KAK/B4P,EACHjR,QAA8B9K,IAApB8K,EAAOkR,eAA4Dhc,IAAlC8K,EAAOkR,SAAS,cAExDlR,EAAOkR,SAAS,cADhB,GAGApS,EAAakS,EAAUlS,WAOvBqS,EAJazM,OAAOC,KAAKqM,EAAUlS,YAAYjB,OACnD,SAACuT,GAAD,OAAmC,IAA5BH,EAAiB9b,aAA+DD,IAA/C+b,EAAiBjI,KAAK,SAACqI,GAAD,OAAQA,EAAGjX,KAAOgX,MAGxDhe,IAAI,SAACke,GAC7B,IAAMvb,ENfyB,wBMejBub,EAxBC,SAACN,GAGlB,OAFgBpJ,KAAA2J,IAAA,IAAO,GAAIC,IAAKR,EAAU9R,WAChBuS,eAAe,QAAS,CAAEC,sBAAuB,IAsBxBC,CAAWX,GAAalS,EAAWwS,GAC9EM,EAAMX,EAAiBjI,KAAK,SAACqI,GAAD,OAAQA,EAAGjX,KAAOkX,KAAa,GAC3DO,EAAQD,EAAIC,OAASP,EAC3B,MAAO,CACLlX,GAAIkX,EACJO,QACA9b,QACA+b,MAAK,GAAAxa,OAAKua,EAAL,MAAAva,OAAevB,GACpBgc,OAAQH,EAAIG,OACZC,OAAQJ,EAAII,UAIVC,EACJd,EAAOnI,KAAK,SAAC/B,GAAD,OAAoB,IAAbA,EAAE+K,UACrBb,EAAOnI,KAAK,SAAC/B,GAAD,MAAgB,SAATA,EAAE7M,MACrB+W,EAAOnI,KAAK,SAAC/B,GAAD,MAAgB,OAATA,EAAE7M,MACrB+W,EAAO,GAKT,YAHkBjc,IAAd+c,IACFA,EAAUD,QAAS,GAEdb,GA0BHe,GAAa,SAAClB,EAAW1E,EAAStM,GACtC,IAAMnB,EAAU,CACdC,WAAYkS,EAAUlS,YAElBqS,EAASJ,GAAUC,EAAWhR,GACpCnB,EAAQsS,OAASA,EAGjB,IAAMc,EAAYd,EAAOnI,KAAK,SAAC/B,GAAD,OAAoB,IAAbA,EAAE+K,SAGvC,OAFAnT,EAAQiT,WAAsB5c,IAAd+c,EAA0B3F,EAAU2F,EAAUlc,MAEvD8I,GAGIsT,GAAiB,SAACC,EAAiBpV,EAAUC,EAAWoV,EAAYC,GAAnD,OAAmE,SAC/FxW,EACAS,GAEwB,UAApB6V,GACFtW,EFgXgD,CAClDzC,KA5b4C,mCE8E5C,IAUIkZ,EAVEC,EAAejW,IAAWnJ,IAAI6M,MAAMwS,SAASC,OAE7CC,EAAQ,CACZ3V,WACAC,YACAwB,SAAU,IAINmU,EAA2BrW,IAAWnJ,IAAIoW,QAAQ6C,mBAGxD,IAAyC,IAArCuG,EAAyB3G,QAAkB,CAC7C,IAAMG,OACsClX,IAA1C0d,EAAyBxG,aACrB,GACAwG,EAAyBxG,aACzBtN,EAAqC,IAAxBsN,EAAajX,OAAe,GAAKiX,EAAa,GAC3DF,GAA0D,IAA9C0G,EAAyBjG,iBACrCkG,GACU,IAAd3G,IAAwE,IAAlD0G,EAAyBhG,sBAC1C,EACDR,EAAajX,OACnBod,EAAuB,CACrBrG,YACA2G,QACA7G,MAAO,CACL5R,GAAIwY,EAAyB5G,MAAM5R,GACnC0Y,MAAO,iBAEThU,cAEF6T,EAAMlU,SAASe,KAAK+S,GAKtB,IAKMQ,EAAkB,IACFV,GAAc,IACtB9Q,QAAQ,SAACyP,GACrB,IAAM1E,EAR8B,SAAC0E,GAAD,YACN9b,IAA7B8b,EAAUhF,MAAMkF,UAA0BF,EAAUhF,MAAMkF,SAAS,WACpEF,EAAUhF,MAAMhM,OAMAgT,CAA8BhC,GACxChR,EAASwS,EAAatU,QAAQoO,GAC9BzN,sUAAOoU,CAAA,CACXjH,MAAO,CACL5R,GAAIkS,EACJwG,MAAO9B,EAAUhF,MAAMkF,UAAYF,EAAUhF,MAAMkF,SAAS,kBAE3DgB,GAAWlB,EAAW1E,EAAStM,IAGpC,IAAqC,IAAjCgR,EAAUlS,WAAWoU,QAAkB,CAEzC,IAAMC,EAtGO,SAACnC,EAAWsB,GAC7B,IAAMc,EAAYpC,EAAUlS,WAAWuU,WAEjCC,EAAWhB,EADAtB,EAAUhR,QAkB3B,OAhBgB,IAAIjJ,QAAQ,SAACC,EAASC,GACpCqc,EAASC,wBAAwBH,EAAW,SAACI,EAAM1W,GACjDwW,EAASG,iBAAiBL,EAAW,GAAI,EAAG,SAACM,EAAMC,IAC7CH,GAAQE,IACVzc,IAEF,IAAM2c,EAAmBD,EAASvgB,IAAI,SAACygB,GAAD,OACpC3B,GAAW2B,EAAO7C,EAAUhF,MAAM5R,GAAIkZ,KAExCtc,EAAQ,CACN8F,OACA8W,2BAuFmBE,CAAW9C,EAAWsB,GAAazD,KAAK,SAACqE,GAC9DrU,EAAQqU,QAAUA,EAClBrU,EAAQgU,MAAQK,EAAQU,iBAAiBze,SAE3C4d,EAAgBvT,KAAK2T,GACrBtU,EAAQqN,WAAY,OAEpBrN,EAAQqN,WAAY,EAEtByG,EAAMlU,SAASe,KAAKX,KAGtB9H,QAAQ6X,IAAImE,GAAiBlE,KAAK,WAGhC8D,EAAMzG,UACJyG,EAAMlU,SAAStJ,OAAS,GAAKwd,EAAMlU,SAAS8I,KAAK,SAAC1I,GAAD,OAAmC,IAAtBA,EAAQqN,iBAG3ChX,IAAzBqd,IAAsE,IAAhCA,EAAqBM,MAC7DF,EAAME,OAAS,EAEfF,EAAME,MAAQF,EAAMlU,SAASE,OAAO,SAACkU,EAAOhU,GAE1C,OAAOgU,GADYhU,EAAQgU,OAAS,IAEnC,GAGe,IAAhBF,EAAME,QACRF,EAAM9T,QAAU8T,EAAMlU,SAAS,IAIjC,IAAMsV,GAA4D,IAA1CxX,IAAWnJ,IAAIF,OAAO6gB,gBAIxCC,EAAkBzX,IAAWnJ,IAAIF,OAAOgZ,UAAUyG,GAGxD,GAFAA,EAAMzG,UAAY8H,EAEdD,GACsB,UAApB3B,IAAmD,IAApBO,EAAMzG,UAAoB,CAC3DpQ,EAAS+Q,MACT,IAAMoH,EAActB,EAAMlU,SAAS,GAAGyU,SAAWP,EAAMlU,SAAS,GAAGyU,QAAQpW,KAC3EhB,ED7I4B,SAACkB,EAAUC,GAAX,IAAsBH,EAAtBuE,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAA6B,KAA7B,OAAsC,SAACvF,GACzEA,EAASsU,GTzCiC,ESyCUpT,EAAUC,EAAWH,KC4I1DoX,CAAqBlX,EAAUC,EAAWgX,IAIvD,IAAIE,EAASxB,EAAMlU,SAAStJ,OAAS,UAAY,MACzB,IAApBwd,EAAMzG,YACRiI,EAAS,WAGXrY,EAAS,CACPzC,KA/MwB,iBAgNxB+C,QAAS+X,IAGX,IAAMvX,EACgB,UAApBwV,EAA8B7V,IAAWnJ,IAAIF,OAAOkhB,QAAU7X,IAAWnJ,IAAIF,OAAOmhB,aAErEnf,IAAb0H,GACFA,EAAS+V,kOCjJF2B,GAAW,SAACC,EAAIC,EAAIC,GAC/B,IAAMC,EAAMH,EA7EE,IA6EcI,WA7Ed,KA6EqC,EAC7ChK,EA7EO,MA6EH6J,EAAgB,EAAKA,EA7ElB,IA6EiCG,WA7EjC,KA8EPlF,EA9EO,MA8EHgF,EAAgB,EAAKA,EA9ElB,IA8EiCE,WA9EjC,KAgFPvf,EAAIwS,KAAKgN,MAAMF,GACfzN,EAAIyN,EAAItf,EACRyf,EAAIpF,GAAK,EAAI9E,GACbmK,EAAIrF,GAAK,EAAIxI,EAAI0D,GACjB7M,EAAI2R,GAAK,GAAK,EAAIxI,GAAK0D,GACvBoK,EAAM3f,EAAI,EACV4f,EAAI,CAACvF,EAAGqF,EAAGD,EAAGA,EAAG/W,EAAG2R,GAAGsF,GACvBE,EAAI,CAACnX,EAAG2R,EAAGA,EAAGqF,EAAGD,EAAGA,GAAGE,GACvBG,EAAI,CAACL,EAAGA,EAAG/W,EAAG2R,EAAGA,EAAGqF,GAAGC,GAE7B,MAAO,CAAEC,EAAGpN,KAAKuN,MA5FH,IA4FSH,GAAcC,EAAGrN,KAAKuN,MA5F/B,IA4FqCF,GAAcC,EAAGtN,KAAKuN,MA5F3D,IA4FiED,KAI3EE,GAAmB,SAACla,GAAD,OAASoZ,GAASpZ,EAAK,GAAI,MAEvCma,GAAiB,SAACna,GAC7B,IAAMoa,EAAMF,GAAiBla,GAC7B,aAAA5D,OAAcge,EAAIN,EAAlB,MAAA1d,OAAwBge,EAAIL,EAA5B,MAAA3d,OAAkCge,EAAIJ,EAAtC,MAiCWK,GAAW,SAACC,GACvB,IAAM3b,EAAS,4CAA4C4b,KAAKD,GAChE,OAAO3b,EACH,CACEmb,EAAGU,SAAS7b,EAAO,GAAI,IACvBob,EAAGS,SAAS7b,EAAO,GAAI,IACvBqb,EAAGQ,SAAS7b,EAAO,GAAI,KAEzB,MAeO8b,GAAoB,SAACC,GAAD,OAvJK,GAuJaA,GAKtCC,GAAU,SAAC3a,GAAD,OAASA,EAAM,gLC5JjB4a,cACnB,SAAAA,EAAYC,EAAaC,EAAqB9a,GAAiC,IAA5B+a,EAA4B5U,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,IAAAA,UAAA,gGAAA3K,CAAAC,KAAAmf,GAG7Enf,KAAKuf,MAAQ,IAAIC,KAAKC,UAAUC,kBAAkB1a,EAAuB,CACvE2a,OAAO,EACPC,OAAO,EACPC,UAAU,EACVC,KAAK,KAEoB,IAAvBR,IACFtf,KAAKuf,MAAMQ,UAAYP,KAAKQ,YAAYC,QAG1CjgB,KAAKkgB,YAAc,GAEnB,IAAMC,EAAsB,IAAIX,KAAKY,UACnC,EACA,EACsB,EAAtBrb,EACsB,EAAtBA,GAEF/E,KAAKqgB,kBAAoB,IAAIb,KAAKc,QAAQlB,EAAae,GACvDngB,KAAKugB,iBAAiBlB,EAAqB9a,GAE3CvE,KAAKwgB,qFAILxgB,KAAKygB,aAAe,CAClBtV,EAAG,IAAIrN,aAAakH,GACpBoG,EAAG,IAAItN,aAAakH,GACpB2H,EAAG,IAAI7O,aAAakH,GACpBgP,EAAG,IAAIlW,aAAakH,IAEtBhF,KAAK0gB,kBAAoB,0CAGXvV,EAAGC,EAAGuB,EAAGqH,GACvBhU,KAAKygB,aAAatV,EAAEnL,KAAK0gB,mBAAqBvV,EAC9CnL,KAAKygB,aAAarV,EAAEpL,KAAK0gB,mBAAqBtV,EAC9CpL,KAAKygB,aAAa9T,EAAE3M,KAAK0gB,mBAAqB/T,EAC9C3M,KAAKygB,aAAazM,EAAEhU,KAAK0gB,mBAAqB1M,EAC9ChU,KAAK0gB,mEAGgBrB,GACrBrf,KAAKugB,iBAAiBlB,qCAItBrf,KAAKkgB,YAAc,KACnBlgB,KAAKuf,MAAMoB,QAAQ,CAAE3D,UAAU,+CASwB,IAAxCqC,EAAwC3U,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAlB,KAAMnG,EAAYmG,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAN,KAC3CkW,EAAe5gB,KAAKqgB,kBAAkB3Q,MAAMmR,QAOlD,GAL4B,OAAxBxB,IAEFuB,EAAazV,EAA0B,EAAtBpG,EAA0Bsa,EAAsBA,GAGvD,OAAR9a,EAAc,CAChB,IAAI0a,EDmFuB,SAAC1a,GAAD,OAC/B0M,KAAKuN,MAAOja,EAAM,IAAP,ICpFYuc,CAAkBvc,GAChBwc,KAAjB9B,IACFA,EAAe,GAEjB2B,EAAaxV,EAAI6T,EAAela,EAAsB,EAClDka,EAAe,IACjB2B,EAAaxV,GAAK6T,GAItBjf,KAAKqgB,kBAAkB3Q,MAAQkR,EAC/B5gB,KAAKqgB,kBAAkBW,0CAIvB,IAAMC,EAAWjhB,KAAK0gB,kBACtB1gB,KAAKkhB,oBAEL,IAAK,IAAIziB,EAAI,EAAGA,EAAIwiB,EAAUxiB,IAAK,CACjC,IAAM0iB,EAASnhB,KAAKuf,MAAMvC,SAASve,GAC7BuV,EAAIhU,KAAKygB,aAAazM,EAAEvV,GAC9B0iB,EAAOC,aAAaphB,KAAKygB,aAAatV,EAAE1M,GAAIuB,KAAKygB,aAAarV,EAAE3M,GAAIuV,EAAGA,GACvEmN,EAAOvB,MAAQ5f,KAAKygB,aAAa9T,EAAElO,GAIrC,IADA,IAAM4iB,EAAarhB,KAAKuf,MAAMvC,SAASxe,OAC9BC,EAAIwiB,EAAUxiB,EAAI4iB,EAAY5iB,IAAK,CAC3BuB,KAAKuf,MAAMvC,SAASve,GAC5B0M,GAAK,iDAKd,IAEMmW,EAFWthB,KAAK0gB,kBACC1gB,KAAKuf,MAAMvC,SAASxe,OAI3C,GAAI8iB,GAAS,KAIX,IAFA,IAAMC,EAAWtQ,KAAKrO,IAAI,KAAM0e,GAEvB7iB,EAAI,EAAGA,EAAI8iB,EAAU9iB,IAC5BuB,KAAKuf,MAAMiC,cAAc,GAI7B,GAAIF,EAAQ,EAAG,CACb,IAAMG,EAAQxQ,KAAKpO,IAAI,IAAMye,GAE7BthB,KAAK0hB,YAAYD,wCAITE,GACV,IAAK,IAAIljB,EAAI,EAAGA,EAAIkjB,EAAKljB,IAAK,CAC5B,IAAMqS,EAAS,IAAI0O,KAAKoC,OAAO5hB,KAAKqgB,mBACpCvP,EAAO+Q,OAAO1W,EAAI,GAClB2F,EAAO+Q,OAAOzW,EAAI,GAElB0F,EAAO3F,GAAK,IAGZnL,KAAKuf,MAAMuC,SAAShR,45EC/H1B,IACMiR,GAAsB,SAAC5W,EAAGC,EAAG4W,GAGjC,MAAO,CAJC,EAAI,KAEIA,EAAE,GAAK7W,EAAI6W,EAAE,GAAK5W,EAAI4W,EAAE,KAFhC,EAAI,KAGIA,EAAE,GAAK5W,EAAI4W,EAAE,OAIzBC,qaAAqBC,IAAMC,6DAE7BniB,KAAKoiB,wDAILpiB,KAAKqiB,wDAILriB,KAAKsiB,4DAGmBC,GACpBA,EAAUC,yBAA2BxiB,KAAKyiB,MAAMD,wBAClDxiB,KAAK0iB,2BAA2BH,EAAUC,yDAIrC,IAAAG,EACoE3iB,KAAKyiB,MAAxEpN,EADDsN,EACCtN,MAAOuN,EADRD,EACQC,UAAWJ,EADnBG,EACmBH,uBAAwBK,EAD3CF,EAC2CE,qBAClD7iB,KAAK8iB,UAAY,GACjB9iB,KAAK+iB,eACH1N,EAAMpT,QAAUoT,EAAMpT,OAAO+gB,UAAY3N,EAAMpT,OAAO+gB,UAAYH,EAEpE7iB,KAAKijB,uBAAuBjjB,KAAK+iB,eAAezZ,OAChDtJ,KAAK0iB,2BAA2BF,GAEhCxiB,KAAKuf,MAAQ,IAAIC,aAEjBoD,EAAUd,SAAS9hB,KAAKuf,wDAGmC,IAAtCjW,EAAsCoB,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAA9BR,EAAsBC,OAEjDnK,KAAKkjB,oBADc,kBAAV5Z,EACkBY,EAAsBZ,EAAM6Z,eAE5B7Z,EAE7BtJ,KAAKojB,kFAGoBZ,GACzBxiB,KAAKqjB,yBACwB,IAA3Bb,EACInY,EACAA,EACNrK,KAAKojB,sFAGwB,IAAAE,EAAAtjB,KAEvBujB,EACJvjB,KAAKkjB,sBAAwBhZ,EAAsBC,OAASnK,KAAKqjB,wBAA0B,EACvFG,EAAgBxjB,KAAKkjB,oBAAsBK,EAC7CC,IAAkBxjB,KAAKqf,sBAG3Brf,KAAKqf,oBAAsBmE,EAC3BzV,OAAOlJ,OAAO7E,KAAK8iB,WAAWlY,QAAQ,SAAC6Y,GACrCA,EAASC,uBAAuBJ,EAAKjE,0DAI/B,IAAAsE,EAAA3jB,KAAA4jB,EACgC5jB,KAAKyiB,MAArC/R,EADAkT,EACAlT,QAAS0O,EADTwE,EACSxE,YAAa/J,EADtBuO,EACsBvO,MAE9B,GACY,OAAVA,QACU9W,IAAV8W,QACgB9W,IAAhB8W,EAAMX,QACY,IAAlBW,EAAMrC,QAJR,CAUAhT,KAAKuf,MAAMvM,SAAU,EACrBhT,KAAKuf,MAAMK,MAAQvK,EAAM9F,QAiBzB,IAfA,IAAMmF,EAAQW,EAAMX,MACdmP,EAAaxO,EAAM9Q,IACnBuf,OACQvlB,IAAZmS,GAAyBA,EAAQlS,OAC7BkS,EAGGxJ,OAAO,SAACoJ,GAAD,OAAkB,IAAXA,EAAEK,OAChBlU,IAAI,SAAC6T,GAAD,YAAkB/R,IAAV+R,EAAE/L,IAAoB,IAAM+L,EAAE/L,IAAIvB,aACjD,CAAC6gB,EAAW7gB,YACZ+gB,EAAoBhW,OAAOC,KAAKhO,KAAK8iB,WAGrCkB,EAAUzV,IAAKuV,EAAgBnjB,OAAOojB,IAEnCtlB,EAAI,EAAGA,EAAIulB,EAAQxlB,OAAQC,IAAK,CACvC,IAAM8F,EAAMyf,EAAQvlB,IACkB,IAAlCqlB,EAAgBlY,QAAQrH,KAMY,IAApCwf,EAAkBnY,QAAQrH,KAE5BvE,KAAK8iB,UAAUve,GAAOvE,KAAKikB,gBAAgB7E,EAAapf,KAAKqf,oBAAqB9a,IAEpFvE,KAAK8iB,UAAUve,GAAKic,qBARlBxgB,KAAKkkB,iBAAiBlkB,KAAK8iB,UAAUve,WAC9BvE,KAAK8iB,UAAUve,IAUrBuf,EAAgBtlB,SACrBkW,EAAM9J,QAAQ,SAAC6H,GACbkR,EAAKQ,gCAAgC,CACnCtgB,KAAM4O,EAAK5O,KACXugB,WAAY1T,EAAQlS,OACpBqlB,iBAIJC,EAAgBlZ,QAAQ,SAACyZ,GACvBV,EAAKb,UAAUuB,GAAaC,iBA/C5BtkB,KAAKuf,MAAMvM,SAAU,6DAmDyC,IAAhCnP,EAAgCgE,EAAhChE,KAAMugB,EAA0Bvc,EAA1Buc,WAAYP,EAAchc,EAAdgc,WAClD,GAAKhgB,EAML,IAPgE,IAAA0gB,EAKiBvkB,KAAKyiB,MAA9EzS,EALwDuU,EAKxDvU,WAAYC,EAL4CsU,EAK5CtU,SAAU/J,EALkCqe,EAKlCre,SAAUwK,EALwB6T,EAKxB7T,QAAS8T,EALeD,EAKfC,aAAcC,EALCF,EAKDE,cAEtD5V,EAAYmB,EAAYnB,EAAYoB,EAAUpB,IAAa,CAClE,IAAMa,EAAQ7L,EAAKgL,GAEnB,GAAKa,EAEL,IAAK,IAAI/G,EAAQ,EAAG+b,EAAMhV,EAAMP,OAAO3Q,OAAQmK,EAAQ+b,EAAK/b,IAAS,CACnE,IAAIpE,OAAG,OACShG,IAAZmS,GAA0BA,EAAQlS,SACpC+F,EAAMsf,GAER,IAAK,IAAIc,EAAK,EAAGA,EAAKP,EAAYO,IAAM,CACtC,IAAMzd,EAASwJ,EAAQiU,GACvB,GAAIhV,GAAuBD,EAAO/G,EAAOzB,EAAO1C,cAAe,CAC7DD,EAAM2C,EAAO3C,IACb,OAKJ,QAAYhG,IAARgG,EAAJ,CASA,IAAI4K,EAASO,EAAMP,OAAOxG,GACtB6b,EAAe,GAAKrV,EAASqV,EAE/BrV,GAAU,IACDqV,EAAe,GAAKrV,EAASsV,IACtCtV,GAAU,KAGZ,IAAMyV,EAAUzV,EAASjJ,EAASyZ,MAC5BkF,EAAUnV,EAAMN,OAAOzG,GAASzC,EAASyZ,MACzCmF,EAAM5e,EAAS6e,sBAjC8CC,EAAAC,GAoC9C,IAAnB/e,EAASgf,MACLnD,GAAoB6C,EAASC,EAASC,GACtCK,YAAc,CAACP,EAASC,GAAUC,GAtC2B,GAmC5D3Z,EAnC4D6Z,EAAA,GAmCzD5Z,EAnCyD4Z,EAAA,GAwC/D7Z,GAAK,IAAMA,EAAIjF,EAASqN,MAAQ,IAAMnI,GAAK,IAAMA,EAAIlF,EAASsN,OAAS,IACzExT,KAAK8iB,UAAUve,GAAK6gB,gBAClBja,EACAC,EACAsE,EAAMH,QAAUG,EAAMH,QAAQ5G,GAAS3I,KAAK+iB,eAAesC,eAC3D3V,EAAML,OAASK,EAAML,OAAO1G,GAAS3I,KAAK+iB,eAAeuC,wDAOnDlG,EAAaC,EAAqB9a,GAChD,IAAMkf,EAAW,IAAItE,GACnBC,EACAC,EACA9a,EACAvE,KAAKkjB,sBAAwBhZ,EAAsBE,UAGrD,OADApK,KAAKuf,MAAMuC,SAAS2B,EAASlE,OACtBkE,qCAIP1V,OAAOlJ,OAAO7E,KAAK8iB,WAAWlY,QAAQ5K,KAAKkkB,iBAAiBnjB,KAAKf,OACjEA,KAAKuf,MAAMoB,QAAQ,CAAE3D,UAAU,IACThd,KAAKyiB,MAAnBG,UACE2C,YAAYvlB,KAAKuf,gDAGZkE,GACfzjB,KAAKuf,MAAMgG,YAAY9B,EAASlE,OAChCkE,EAAS9C,2CAIT,OAAO,4CAkBIsB,4yGClOf,IAgEMuD,8QACJpgB,MAAQ,CACNqgB,WAAW,KAsEbC,aAAe,SAAC1J,GACTA,EAAM2J,QAAQnnB,QAGnB8kB,EAAKsC,YAAY5J,EAAM2J,QAAQ,GAAGE,QAAS7J,EAAM2J,QAAQ,GAAGG,YAG9DC,YAAc,SAAC/J,GACbsH,EAAKsC,YAAY5J,EAAM6J,QAAS7J,EAAM8J,YAmCxCE,QAAU,YACqB,IAAzB1C,EAAK2C,iBAA4B3C,EAAK4C,aAAatG,MAAQ,GAC7D0D,EAAK6C,gRArHkBC,2DAMzBpmB,KAAKoiB,SACLpiB,KAAKqmB,SAAS,CACZZ,WAAW,mDAKbzlB,KAAKqiB,6DAGmBE,GACxBviB,KAAKyiB,MAAM6D,qBAAqBtmB,KAAKumB,SAASrgB,UAG5Cqc,EAAUrc,SAASqN,QAAUvT,KAAKyiB,MAAMvc,SAASqN,OACjDgP,EAAUrc,SAASsN,SAAWxT,KAAKyiB,MAAMvc,SAASsN,QAElDxT,KAAKwmB,oBAAoBjE,EAAUrc,SAASqN,MAAOgP,EAAUrc,SAASsN,yCAIjE,IAAAiT,EACmBzmB,KAAKyiB,MAAMvc,SAA7BqN,EADDkT,EACClT,MAAOC,EADRiT,EACQjT,OAEfxT,KAAK0mB,KAAO,IAAIlH,eAAiB,CAC/BjM,QACAC,SACAmT,aAAa,EACbC,WAAW,IAGb5mB,KAAK6mB,SAAW7mB,KAAK0mB,KAAKG,SAC1B7mB,KAAK8mB,OAAS9mB,KAAK0mB,KAAKK,KACxB/mB,KAAK8mB,OAAOxd,MAAMuW,SAAW,WAE7B7f,KAAKgnB,UAAUC,YAAYjnB,KAAK8mB,QAEhC9mB,KAAKuf,MAAQvf,KAAK0mB,KAAKnH,MAEvB,IAAM2H,EApGe,SAAC7X,EAAQ8X,GAChC,IAAMC,EAAYC,SAASC,cAAc,UACnCC,EAASH,EAAUI,WAAW,MAC9BC,EAAoB,EAATpY,EAEjB+X,EAAU7T,MADS,EACDkU,EAAA,EAClBL,EAAU5T,OHjC+B,GGiCtBiU,EHjCsB,GGmCzC,IAAK,IAAIxI,EAAe,EAAGA,EHnCc,GGmC8BA,IAAgB,CACrF,IAAM7T,EAAIqc,EAAWxI,EAAeA,EAC9ByI,EAAUtc,EAAIiE,EAGhBlE,EAAIkE,EACFsY,EAAWJ,EAAOK,qBACtBzc,EACAuc,EACArY,EAAS8X,EACThc,EACAuc,EACArY,GAEI9K,EAAMya,GAAkBC,GACxB4I,EAAYnJ,GAAena,GACjCojB,EAASG,aAAa,EAAGD,GAEzB,IAAME,EAAWpK,GAASuB,GAAQ3a,EAAM,IAAK,GAAI,KACjDojB,EAASG,aAAa,EAAtB,QAAAnnB,OAAiConB,EAAS1J,EAA1C,MAAA1d,OAAgDonB,EAASzJ,EAAzD,MAAA3d,OAA+DonB,EAASxJ,EAAxE,SAEAgJ,EAAOS,UAAYL,EACnBJ,EAAOU,SAAS,EAAG7c,EAAGqc,EAAUA,GAGhCtc,GAAKsc,EAAW,EAChBF,EAAOW,YACPX,EAAOY,IAAIhd,EAAGuc,EAASrY,EAAQ,EAAG,EAAI4B,KAAKmX,IAAI,GAC/Cb,EAAOS,UAAYH,EACnBN,EAAOc,OAGPld,GAAKsc,EAAW,EAChBF,EAAOW,YACPX,EAAOY,IAAIhd,EAAGuc,EAAkB,GAATrY,EAAc,EAAG,EAAI4B,KAAKmX,IAAI,GACrDb,EAAOS,UAAYH,EACnBN,EAAOc,OACPd,EAAOW,YACPX,EAAOY,IAAIhd,EAAGuc,EAAkB,IAATrY,EAAe,EAAG,EAAI4B,KAAKmX,IAAI,GACtDb,EAAOe,UAAY,EACnBf,EAAOgB,YAAcV,EACrBN,EAAOiB,SAGT,OAAOpB,EAgDqBqB,CAAiB1jB,EdzHJ,Kc0HvC/E,KAAKof,YAAcI,WAAakJ,WAAWxB,GAE3ClnB,KAAKkmB,aAAe,IAAI1G,aACxBxf,KAAKuf,MAAMuC,SAAS9hB,KAAKkmB,cAEzBlmB,KAAK0mB,KAAKiC,OAAOC,IAAI5oB,KAAKgmB,4CAI1BhmB,KAAK0mB,KAAK/F,sDAGQkI,EAAeC,GACjC9oB,KAAK6mB,SAASkC,OAAOF,EAAeC,gDAGjBE,QACOzqB,IAAtByB,KAAKkmB,gBAGG,IAAR8C,IACFhpB,KAAKimB,iBAAkB,GAEzBjmB,KAAKkmB,aAAatG,OAAgB,IAARoJ,Ed7Ie,Gc6IgC,uCAc/D7d,EAAGC,GAEb,IAAIpL,KAAKyiB,MAAM3P,cAAclD,MAAM,SAAC4J,GAAD,OAAyB,IAAlBA,EAAEF,cAA5C,CAFgB,IAMRpT,EAAalG,KAAKumB,SAAlBrgB,SANQ+iB,EAAAC,GAOchjB,EAAS0N,UAAU,CAACzI,EAAGC,IAPrC,GAOT9E,EAPS2iB,EAAA,GAOE5iB,EAPF4iB,EAAA,GASZE,EAAmB7iB,EACnB6iB,EAAmB,IACrBA,GAAoB,IACXA,GAAoB,MAC7BA,GAAoB,KAbN,IAAAna,EAAAka,GAgBSha,YAAc,CAACia,EAAkB9iB,GAAW,GAhBrD,GAgBT8I,EAhBSH,EAAA,GAgBDI,EAhBCJ,EAAA,GAkBVoB,EdtK+B,GcsK2BlK,EAASyZ,MAEzE3f,KAAKyiB,MAAMzN,oBACT,CACE1O,UAAW6iB,EACX9iB,WACA8I,SACAC,SACAgB,+BAEFpQ,KAAKyiB,MAAMxN,sEAWbjV,KAAKimB,iBAAkB,EACvBjmB,KAAKopB,iCAA8B7qB,oDAIMA,IAArCyB,KAAKopB,8BACPppB,KAAKopB,4BAA8B7jB,KAAK8jB,OAE1C,IAAMC,GAAe/jB,KAAK8jB,MAAQrpB,KAAKopB,6BAA+B,IAClExJ,EAAQ5f,KAAKkmB,aAAatG,OAAS,EAAI5f,KAAKkmB,aAAatG,OAAS0J,EAClE1J,GAAS,IACXA,EAAQ,EACR5f,KAAKimB,iBAAkB,GAEzBjmB,KAAKkmB,aAAatG,MAAQA,4CAIVlK,EAAoB6T,EAA0BzW,GAC9D,IACI0W,EAAqB,CACvB/lB,GAAI,gBACJuP,SAAS,EACTzD,QAAS,EACThL,Id5NgC,Kc8N9BklB,EAAmB,GAEvB,QACyBlrB,IAAvBmX,QAC6BnX,IAA7BmX,EAAmBL,YACiB9W,IAApCmX,EAAmBD,eACY,IAA/BC,EAAmBJ,QAGnBkU,EAAkBE,GAAA,CAAKF,sBADH1W,EAAcT,KAAK,SAACmH,GAAD,OAAOA,EAAE/V,KAAOiS,EAAmBL,MAAM5R,MAEhFgmB,EAAmB/T,EAAmBD,aAAahZ,IAAI,SAACqU,GAAD,MAAa,CAClEvM,IdzO8B,Ic0O9BC,aAAc,CACZiL,OAAQ,CAACqB,EAAOrB,iBAGf,GAAiC,OAA7B8Z,EAAmC,CAE5CC,EAAkBE,GAAA,CAAKF,sBADH1W,EAAcT,KAAK,SAACmH,GAAD,OAAOA,EAAE/V,KAAO8lB,EAAyBlU,MAAM5R,MAEtFgmB,EAAmB,CACjB,CACEllB,IdnP4B,IcoP5BC,aAAc,CACZiL,OAAQ,CAAC8Z,EAAyB9lB,OAK1C,MAAO,CACL+lB,qBACAC,sDAGM,IAAA9F,EAAA3jB,KAAA2iB,EASJ3iB,KAAKyiB,MAPPtc,EAFMwc,EAENxc,KACA2M,EAHM6P,EAGN7P,cACAmC,EAJM0N,EAIN1N,sBACAS,EALMiN,EAKNjN,mBACA6T,EANM5G,EAMN4G,yBACAI,EAPMhH,EAONgH,gBACAC,EARMjH,EAQNiH,iBAEM1jB,EAAalG,KAAKumB,SAAlBrgB,SACAuf,EAAczlB,KAAKoF,MAAnBqgB,UAEFzV,EAAaiF,EAAsB,GACnChF,EAAWgF,EAAsB,GACjCuN,EApQ2B,SAACrc,GAAD,OAAUA,EdhBa,EcoRzB0jB,CAA6B1jB,GAQ5D,IANmC,IAA/BuP,EAAmBJ,SACrBtV,KAAK8pB,sBAAqB,IAEO,IAA/BpU,EAAmBJ,SACrBtV,KAAK+pB,sBAEH/pB,KAAK6mB,UAAY7mB,KAAK6mB,SAASmD,SAAoCzrB,IAA9ByB,KAAK6mB,SAASmD,GAAGC,SAAwB,CAChF,IAAMC,EAAMlqB,KAAK6mB,SAASmD,GAAGC,WACjB,IAARC,GAAWpd,QAAQqd,IAAID,GAzBrB,IAAAE,EA4ByCpqB,KAAKqqB,kBACpD3U,EACA6T,EACAzW,GAHM0W,EA5BAY,EA4BAZ,mBAAoBC,EA5BpBW,EA4BoBX,iBAM5B,OACEa,EAAA3d,EAAA2a,cAAA,OACEiD,IAAK,SAACA,GACJ5G,EAAKqD,UAAYuD,GAEnBjhB,MAAO,CAAEuW,SAAU,YACnBkG,YAAa/lB,KAAK+lB,YAClBL,aAAc1lB,KAAK0lB,eAEJ,IAAdD,GACC6E,EAAA3d,EAAA2a,cAACkD,EAAA,SAAD,KACG1X,EAAcrW,IAAI,SAAC4Y,GAAD,OACjBiV,EAAA3d,EAAA2a,cAACmD,GAAD,CACEzd,IAAKqI,EAAM5R,GACX4R,MAAOA,EACP3E,QAAS2E,EAAM3E,SAAW,GAC1BxK,SAAUA,EACV8J,WAAYA,EACZC,SAAUA,EACVmP,YAAauE,EAAKvE,YAClBwD,UAAWe,EAAKuC,aAChB1D,uBAAwBA,EACxBK,qBAAsB,GACtB2B,aAAcmF,EACdlF,cAAemF,WAGHrrB,IAAfyB,KAAKuf,OACJ+K,EAAA3d,EAAA2a,cAACmD,GAAD,CACEzd,IAAI,cACJqI,MAAOmU,EACP9Y,QAAS+Y,EACTvjB,SAAUA,EACV8J,WAAYA,EACZC,SAAUA,EACVmP,YAAapf,KAAKof,YAClBwD,UAAW5iB,KAAKkmB,aAChB1D,uBAAwBA,EACxBK,qBAAsB,CAAEwC,eAAgB,EAAGC,YAAa,GACxDd,aAAcmF,EACdlF,cAAemF,6CAU/BpE,GAAekF,UAAY,CACzBvkB,KAAMzC,IAAUS,OAChB2O,cAAepP,IAAU1G,MACzBiY,sBAAuBvR,IAAU1G,MACjC0Y,mBAAoBhS,IAAUI,OAC9BylB,yBAA0B7lB,IAAUI,OACpCkR,oBAAqBtR,IAAUinB,KAC/BrE,qBAAsB5iB,IAAUinB,KAChChB,gBAAiBjmB,IAAUS,OAC3BylB,iBAAkBlmB,IAAUS,QAG9BqhB,GAAeoF,aAAe,CAC5B1kB,SAAUxC,IAAUI,QAGP0hB,mICtWf,IAEMqF,GAA0B7jB,YAC9B,CAHuB,SAAC5B,GAAD,OAAWA,EAAM3I,IAAIoW,QAAQC,gBAIpD,SAACA,GAKC,OAJU/E,OAAOC,KAAK8E,GAAerW,IAAI,SAACgH,GAAD,2UAAAqnB,CAAA,GACpChY,EAAcrP,QAOjBsnB,GAA2B/jB,YAC/B,CAACH,GACD,SAACC,GACC,IAAMkkB,EAAiBlkB,EAAe,GAAGtB,UACnCylB,EAAeha,KAAKpO,IACxBiE,EAAe,GAAGtB,UAClBsB,EAAe,GAAGtB,Uf3BK,Oe+BzB,MAAO,CAFYgI,IAAQsB,2BAA2Bkc,GACrCxd,IAAQsB,2BAA2Bmc,MAyBzCC,eApBS,SAAC9lB,GAAD,MAAY,CAClCsQ,mBAAoBtQ,EAAM3I,IAAIoW,QAAQ6C,mBACtC6T,yBAA0BnkB,EAAM3I,IAAIoW,QAAQ0W,yBAC5CrjB,SAAUd,EAAM3I,IAAIyJ,SAASA,SAC7BC,KAAMf,EAAM3I,IAAIyJ,SAASA,SAASC,KAClC2M,cAAe+X,GAAwBzlB,GACvCukB,gBAAiBvkB,EAAM3I,IAAIyJ,SAASyjB,gBACpCC,iBAAkBxkB,EAAM3I,IAAIyJ,SAAS0jB,iBACrC3U,sBAAuB8V,GAAyB3lB,KAGvB,SAACD,EAAUgmB,GAAX,MAAyB,CAClDnW,oBAAqB,SAACF,EAAQG,GAC5B9P,EAAS6P,GAAoBF,EAAQG,KAEvCqR,qBAAsB,SAACpgB,GN2BW,IAACklB,EM1BjCjmB,GN0BiCimB,EM1BHllB,EN0BsB,SAACf,GACvD,IAAMkmB,EAAY,CAAC,EAAG,GAChBC,EAAgB,CAACF,EAAe7X,MAAO6X,EAAe5X,QAGtD+X,EAAeC,YAAcH,EAAWD,EAAeK,yBACvDC,EAAmBF,YAAcF,EAAeF,EAAeK,yBAC/D9B,EAAkB4B,EAAa,GAAKH,EAAezL,MACnDiK,EAAmB8B,EAAiB,GAAKN,EAAezL,MAGxDgM,EAAYP,EAAexX,UAAUyX,GACrCO,EAAYR,EAAexX,UAAU0X,GAQ3CnmB,EAAS,CACPzC,KAxF+B,sBAyF/B+C,QAAS,CACPkkB,kBACAC,mBACArjB,OAZW,CACbslB,MAAOF,EAAU,GACjBG,MAAOF,EAAU,GACjBG,KAAMJ,EAAU,GAChBK,KAAMJ,EAAU,aMvCLV,CAGb1F,0xCCnDF,IAAMyG,GAAe,SAACxJ,GAAU,IACtBpc,EAAwDoc,EAAxDpc,SAAUC,EAA8Cmc,EAA9Cnc,UAAW0W,EAAmCyF,EAAnCzF,SAAUkP,EAAyBzJ,EAAzByJ,YAAaC,EAAY1J,EAAZ0J,QACpD,OACE7B,EAAA3d,EAAA2a,cAAC8E,GAAA,EAAD,CACE/lB,SAAUA,EACVC,UAAWA,EACX4lB,YAAaA,EACbC,QAASA,EACTtK,OAAO,SACPwK,WAAY,GACZC,QAAS,EACTC,cAAc,GAEbvP,IAaPiP,GAAaO,aAAe,CAC1BL,QAAS,kBAGLM,eACJ,SAAAA,EAAYhK,GAAO,IAAAa,EAAA,mGAAAoJ,CAAA1sB,KAAAysB,IACjBnJ,EAAAqJ,GAAA3sB,KAAA4sB,GAAAH,GAAAI,KAAA7sB,KAAMyiB,KAkBRqK,OAAS,gBACmBvuB,IAAtB+kB,EAAKb,MAAMqK,QACbxJ,EAAKb,MAAMqK,OAAOxJ,EAAKyJ,cArBRzJ,EAyBnB0J,UAAY,WACV,IAAMzmB,EAAS+c,EAAKyJ,YACL,OAAXxmB,QAA4ChI,IAAzB+kB,EAAKb,MAAMuK,WAChC1J,EAAKb,MAAMuK,UAAUzmB,IA5BN+c,EAgCnByJ,UAAY,WACV,IAAKzJ,EAAK2J,MAAO,OAAO,KADR,IAAAC,EAGK5J,EAAK2J,MAAMF,YAAxBI,EAHQD,EAGRC,IAAKC,EAHGF,EAGHE,IACb,MAAO,CACLvB,MAAOsB,EAAIE,IACXvB,MAAOsB,EAAIC,IACXtB,KAAMqB,EAAIE,IACVtB,KAAMmB,EAAIG,MAxCKhK,EAkDnBiK,aAlDmBC,GAAAC,GAAA9gB,EAAA+gB,KAkDJ,SAAAC,IAAA,IAAApxB,EAAA,OAAAkxB,GAAA9gB,EAAAihB,KAAA,SAAArH,GAAA,cAAAA,EAAAsH,KAAAtH,EAAAuH,MAAA,UACT,mBAAoBC,UAAW,EADtB,CAAAxH,EAAAuH,KAAA,eAAAvH,EAAAuH,KAAA,EAEUE,EAAA/Z,EAAA,GAAAiE,KAAA8V,EAAAjtB,KAAA,2EAFV,OAELxE,EAFKgqB,EAAA0H,KAGXF,OAAOG,eAAiB3xB,EAAO2xB,gBAAkB3xB,EAAO4xB,QAH7C,OAKb7K,EAAK8K,yBAA2B,IAAIF,eAAe5K,EAAK+K,sBACxD/K,EAAK8K,yBAAyBE,QAAQhL,EAAKiL,kBAN9B,wBAAAhI,EAAAiI,SAAAb,MAlDIrK,EA2DnB+K,qBAAuB,SAACI,GAAY,IAAAC,EACRD,EAAQ,GAAGE,YAA7Bpb,EAD0Bmb,EAC1Bnb,MAAOC,EADmBkb,EACnBlb,OADmBmP,EAEAW,EAAKb,MAA/Bvc,EAF0Byc,EAE1Bzc,SAAU0oB,EAFgBjM,EAEhBiM,YAEdrb,IAAUrN,EAASqN,OAASC,IAAWtN,EAASsN,QAClDob,sUAAYC,CAAA,GACP3oB,EADM,CAETqN,QACAC,aAnEa8P,EAwEnBvd,iBAAmB,SAACG,EAAUF,GAC5B,IAAM8oB,EAAgBxL,EAAKb,MAAMvc,SAE/B4oB,EAAczoB,WAAaH,EAASG,UACpCyoB,EAAcxoB,YAAcJ,EAASI,WACrCwoB,EAAc3oB,OAASD,EAASC,MAChC2oB,EAAcC,UAAY7oB,EAAS6oB,SACnCD,EAAc5J,QAAUhf,EAASgf,OAEjC5B,EAAKb,MAAMmM,YAAY1oB,EAAUF,IAjFlBsd,EAqFnB0L,iBAAmB,SAAChT,EAAOtZ,GACzB4gB,EAAKb,MAAMjH,eACT9Y,EACAsZ,EAAMiT,OAAO,GACbjT,EAAMiT,OAAO,GACbjT,EAAMlU,SACNwb,EAAK3H,cA3FU2H,EA+FnB5F,QAAU,SAAC1B,GACTsH,EAAK0L,iBAAiBhT,EAAO,UAhGZsH,EAmGnB7F,QAAU,SAACzB,GACTsH,EAAK0L,iBAAiBhT,EAAO,UApGZsH,EAuGnB4L,OAAS,SAAC3E,GACI,OAARA,IACFjH,EAAK2J,MAAQ1C,EAAI4E,SACjB7L,EAAK3H,YAAc2H,EAAK2J,MAAMmC,UAAUruB,KAAKuiB,EAAK2J,SA1GnC3J,EA8GnB+L,UAAY,SAAAhX,GAAoB,IAAjBiX,EAAiBjX,EAAjBiX,WACL9R,EAAW8F,EAAKb,MAAhBjF,OACR,OAAe,OAAXA,EACK8R,EAAa,WAAa,OAE5B9R,GAnHU8F,EAsHnBiM,iBAAmB,SAACrvB,EAAKsvB,GAAiB,IAChCrvB,EAAUmjB,EAAKb,MAAftiB,MACR,GAAc,OAAVA,GAAmC,SAAjBqvB,GAA2BtvB,EAAIuvB,MAAMxqB,GACzD,MAAO,CACL/E,IAAKA,EACLwvB,QAAS,CAAEC,cAAe,UAAYxvB,KAzH1CmjB,EAAKle,MAAQ,CACXwqB,WAAW,GAEbtM,EAAKiL,iBAAmB,KALPjL,0PADHpB,IAAMC,6DAUU,OAA1BniB,KAAKuuB,kBACPvuB,KAAKutB,eAEPvtB,KAAKgtB,yDAILhtB,KAAKgtB,2DA6BDhtB,KAAKouB,0BACPpuB,KAAKouB,yBAAyByB,8CAkFzB,IAAAlM,EAAA3jB,KAAA4jB,EAaH5jB,KAAKyiB,MAXPvc,EAFK0d,EAEL1d,SACA4pB,EAHKlM,EAGLkM,QACAC,EAJKnM,EAILmM,QACApW,EALKiK,EAKLjK,cACAmC,EANK8H,EAML9H,SACAkU,EAPKpM,EAOLoM,aACAC,EARKrM,EAQLqM,WACAC,EATKtM,EASLsM,WACAC,EAVKvM,EAULuM,iBACAC,EAXKxM,EAWLwM,QACAC,EAZKzM,EAYLyM,oBAGF,OACE/F,EAAA3d,EAAA2a,cAAA,OACE7jB,GAAG,MACH6sB,UAAWC,KAAO9zB,IAClB8tB,IAAK,SAACA,GACJ5G,EAAK4K,iBAAmBhE,GAE1BiG,aAAc,WACZ7M,EAAK0C,SAAS,CAAEuJ,WAAW,KAE7Ba,aAAc,WACZ9M,EAAK0C,SAAS,CAAEuJ,WAAW,MAG7BtF,EAAA3d,EAAA2a,cAAC8E,GAAA,EAADre,OAAA2iB,OAAA,GACMxqB,EADN,CAEEqkB,IAAKvqB,KAAKkvB,OACVK,iBAAkBvvB,KAAKuvB,iBACvBoB,gBAAiBhX,EACjBmT,OAAQ9sB,KAAK8sB,OACbpP,QAAS1d,KAAK0d,QACdD,QAASzd,KAAKyd,QACd4R,UAAWrvB,KAAKqvB,UAChBvT,SAAUA,EACVgU,QAASA,EACTC,QAASA,EACThqB,iBAAkB/F,KAAK+F,iBACvBsqB,oBAAqBA,EACrBO,YAAa,KAES,IAArBT,GAA8B7F,EAAA3d,EAAA2a,cAACuJ,GAAD,WACftyB,IAAf0xB,GAA2C,OAAfA,GAC3B3F,EAAA3d,EAAA2a,cAACwJ,GAAD,CACEzqB,SAAU4pB,EAAW5pB,SACrBC,UAAW2pB,EAAW3pB,UACtB4lB,aAAW,EACXC,QAAS6D,GAERC,EAAWc,UAGU,IAAzB/wB,KAAKoF,MAAMwqB,gBAAqCrxB,IAAf2xB,GAA2C,OAAfA,GAC5D5F,EAAA3d,EAAA2a,cAACwJ,GAAD,CACEzqB,SAAU6pB,EAAW7pB,SACrBC,UAAW4pB,EAAW5pB,UACtB4lB,aAAa,GAEZgE,EAAWa,SAGH,OAAZX,GACCA,EAAQ5xB,OAAS,GACjB4xB,EAAQ3zB,IAAI,SAACu0B,EAAQvyB,GAAT,OACV6rB,EAAA3d,EAAA2a,cAAC8E,GAAA,EAAD,CAAQpf,IAAKvO,EAAG4H,SAAU2qB,EAAO3qB,SAAUC,UAAW0qB,EAAO1qB,WAC1D0qB,EAAOD,YAIhBzG,EAAA3d,EAAA2a,cAAA,OAAKgJ,UAAWC,KAAO7zB,qDAgC/B+vB,GAAID,aAAe,CACjBrsB,MAAO,KACP8vB,WAAY,KACZC,WAAY,KACZ1U,eAAgB,aAChBsR,OAAQ,aACRkD,aAAc,aACdrW,cAAe,aACf6D,OAAQ,KACR4S,QAAS,KACTC,oBAAqB,KACrBrD,eAAWzuB,GAGEkuB,6zFCpRf,IAKM0D,GAAmBnpB,YACvB,CALuB,SAAC5B,GAAD,OAAWA,EAAM3I,IAAIoW,QAAQC,gBAMpD,SAACA,GACC,OAAO/E,OAAOC,KAAK8E,GAAetU,OAAS,IAGzCyyB,GAAyBjqB,YAC7B,CAZsB,SAAC5B,GAAD,OAAWA,EAAM3I,IAAI6M,MAAM4nB,eAejD,SAACA,GACC,OAAOA,EAAalpB,OAAO,SAACmB,EAAKkM,GAC/B,OAAKA,EAAMiE,aAAgBjE,EAAMrC,cAEhBzU,IAAb8W,EAAM2U,GACR3U,EAAM2U,GAAGviB,OAAOmD,QAAQ,SAACumB,EAASxoB,GAGhC,GAC6B,IAA3B0M,EAAM2U,GAAGviB,OAAOjJ,aACMD,IAArB4yB,EAAQ5W,WAAkE,IAAxC4W,EAAQ5W,SAAS,mBACpD,CACA,IAAM6W,EAAYD,EAAQ1tB,IAAMkF,EAAQ,EAAtB,GAAAhI,OAA6B0U,EAAM5R,GAAnC,KAAA9C,OAAyCgI,GAAU0M,EAAM5R,GAC3E0F,EAAIN,KAAKuoB,MAIbjoB,EAAIN,KAAKwM,EAAM5R,IAEV0F,GAjB0CA,GAkBhD,MAKDkoB,GAAcrqB,YAClB,CAFmB,SAAC5B,GAAD,OAAWA,EAAM3I,IAAI6M,MAAMwS,UAE/BhS,GACf,SAACwnB,EAAWvnB,GACV,IAAKA,EAAa,OAAOunB,EAEzB,IAIMC,EAJqBD,EACxBvV,OACAtU,OAAOP,OAAO,SAACsS,GAAD,YAAsBjb,IAAfib,EAAEe,WACvB9d,IAAI,SAAC+c,GAAD,OAAOA,EAAEe,SAAS,kBACmBiX,YjBbF,YiBagD,EAEtFC,EAAiBH,EAAUI,QAAQ,CAAC,WAAY3nB,EAAYxC,SAC5DoqB,EAAkBL,EAAUM,IAAI,UAKpC,OAJA7nB,EAAYtC,OAAOmD,QAAQ,SAACinB,EAAYpzB,GACtCkzB,EAAkBA,EAAgBG,OAAOP,EAAmB9yB,EAAGszB,YAAOF,MAExEJ,EAAiBA,EAAetkB,IAAI,SAAUwkB,KAK5CtC,GAAYroB,YAChB,CA5DwB,SAAC5B,GAAD,OAAWA,EAAM3I,IAAIu1B,YAAYxU,QACnC,SAACpY,GAAD,OAAWA,EAAM3I,IAAIF,OAAOihB,SA4DlD,SAACyU,EAAgBC,GACf,OAAqB,OAAjBA,EACKA,EAEFD,IAiCI/G,eA9BS,SAAC9lB,GAAD,MAAY,CAClCc,SAAUd,EAAM3I,IAAIyJ,SAASA,SAC7B4pB,QAAS1qB,EAAM3I,IAAIyJ,SAAS4pB,QAC5BC,QAAS3qB,EAAM3I,IAAIyJ,SAAS6pB,QAC5BjD,OAAQ1nB,EAAM3I,IAAIF,OAAOuwB,OACzBtP,OAAQ6R,GAAUjqB,GAClBjF,MAAOiF,EAAM3I,IAAIF,OAAO4D,MACxB2b,SAAUuV,GAAYjsB,GACtB+qB,iBAAkBA,GAAiB/qB,GACnCirB,oBAAqBY,GAAuB7rB,KAGnB,SAACD,GAAD,MAAe,CACxCypB,YAAa,SAAC1oB,EAAUF,GACtBb,ER5EuB,SAACe,EAAUF,GAAX,OAAgC,SAACb,GAC1DA,EAAS,CACPzC,KAdwB,eAexB+C,QAASS,IAEXf,EAASkO,MACTlO,EAASY,EAAiBC,KQsEf4oB,CAAY1oB,EAAUF,KAEjCgnB,UAAW,SAACzmB,GACVpB,ERpFqB,SAACoB,GAAD,MAAa,CACpC7D,KATwB,aAUxB+C,QAASc,GQkFEymB,CAAUzmB,KAErBiV,eAAgB,SAAC9Y,EAAM2qB,EAAK8E,EAAMrqB,EAAUyU,EAASZ,GACnDxW,EAASqW,GAAe9Y,EAAM2qB,EAAK8E,EAAMrqB,EAAUyU,KAErD5C,cAAe,WACbxU,EAASwU,OAEXqW,aAAc,WACZ7qB,EhBrC4B,SAACA,EAAUS,GACzC,IAAMR,EAAQQ,SACwBrH,IAAlC6G,EAAM3I,IAAIF,OAAOyzB,cACnB5qB,EAAM3I,IAAIF,OAAOyzB,oBgBsCN9E,CAGbuB,u0BCtGF,IAoC0BnjB,GApCpB8oB,GAAe7jB,IACnBR,OAAOC,KAAKqkB,GAAS9qB,SAClB9K,IAAI,SAAC61B,GAAD,OAAeD,GAAS9qB,QAAQ+qB,GAAWC,cAC/CrrB,OAAO,SAACmC,GAAD,YAAuB9K,IAAX8K,KAGXmpB,GAAwB,SAACnd,GAWpC,QAVqB9W,IAAjB8W,EAAMod,SACRpd,EAAMod,OAAS,SAEGl0B,IAAhB8W,EAAM7L,QACR6L,EAAM7L,MAAQ,SAEOjL,IAAnB8W,EAAMkF,WACRlF,EAAMkF,SAAW,KAGoB,IAAnClF,EAAMkF,SAAS,gBAA0B,CAC3C,IAAMmY,OACoCn0B,IAAxC8W,EAAMkF,SAAS,qBACX,YACAlF,EAAMkF,SAAS,qBACrBlF,EAAMnO,OAAS,CAAC,MAAO,CAAC,IAAKwrB,EAAe,GAAI,CAAC,IAAKA,EAAe,eAWvE,YARuCn0B,IAAnC8W,EAAMkF,SAAS,kBACjBlF,EAAMkF,SAAS,gBAAkB,YAIH,YAA5BlF,EAAMod,OAAOE,aACftd,EAAMod,OAAOE,WAAa,QAErBtd,GAUHud,GAAe,CACnB9W,SAAUiW,aARczoB,GAQU+oB,GAPlC/oB,GAAM7B,OAAOmD,QAAQ,SAACyK,GACpBmd,GAAsBnd,KAEjB/L,KAKPupB,wBAAyB,GACzB3B,aAAc,GACd4B,cAAe,GACfV,iBCzDIW,GAAQ,CACZ,CAAE/I,GAAI,OAAQgJ,QAAS,CAAC,aAAc,oBACtC,CAAEhJ,GAAI,OAAQgJ,QAAS,CAAC,UAAW,iBACnC,CAAEhJ,GAAI,SAAUgJ,QAAS,CAAC,QAAS,syBCM9B,IAAMC,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAoC,oCACpCC,GAAoB,oBACpBC,GAAqB,qBAE5BC,GAAwB,SAACC,EAAeC,GAC5C,GAA2B,WAAvBD,EAAc7wB,KAChB,OAAO6wB,EAET,IAAM7e,EAAQ6e,EAAc7e,MACtB+e,OAA+Bl1B,IAAhBi1B,EAA4B,GAAK,CAACA,GAIvD,OAAOE,GAAA,GACFH,EADL,CAEE7e,WAHUnW,IAAVmW,GAAuBA,EAAMlW,OAAS,EAAI+P,IAAI,GAAA5N,OAAK8yB,EAALE,GAAsBjf,KAAU+e,KAc5EG,GAAc,SAACtqB,GAAD,MAAY,CAC9B5G,KAAMwwB,GACNztB,QAAS6D,IAGLuqB,GAAyB,SAAC1uB,EAAUS,EAAUkB,GAclD,IAd+F,IAA7BgtB,EAA6BppB,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,IAAAA,UAAA,GAE3FpB,EADU1D,IAAWnJ,IAAI6M,MACXwS,SAEZiY,EADezqB,EAAMyS,OACGtU,OAE1BtJ,EAAQ8S,KAAKuN,MAAM1X,EAAe,GAAGtB,UAAY,KACjDpH,EAAM6S,KAAKuN,MAAM1X,EAAe,GAAGtB,UAAY,KAI7CwK,EAAaxC,IAAQsB,2BAA2BhI,EAAe,GAAGtB,WAClEyK,EAAWzC,IAAQsB,2BAA2BhI,EAAe,GAAGtB,WAE7D/G,EAAI,EAAGA,EAAIs1B,EAASv1B,OAAQC,IAAK,CACxC,IAAM0yB,EAAU4C,EAASt1B,GACzB,QAAyBF,IAArB4yB,EAAQ5W,WAA+D,IAArC4W,EAAQ5W,SAAS,oBAK/B,IAArBuZ,IAA4E,IAA/C3C,EAAQ5W,SAAS,4BACzB,IAArBuZ,IAA6E,IAA/C3C,EAAQ5W,SAAS,2BAFlD,CASA,IAAMyZ,EAAgB1qB,EAAM2qB,MAAM,CAAC,SAAUx1B,EAAG,WAAWsd,OAC3D,GAAsB,OAAlBiY,EACF,MAAM,IAAIlc,MAAM,2DAA4DqZ,EAAQ1tB,IAKtF,IAAMywB,EAAW/C,EAAQ5W,UAAsD,cAA1C4W,EAAQ5W,SAAS,qBACtDyZ,EAAc,GAAG,GAAKE,EAAWlkB,EAAa7R,EAC9C61B,EAAc,GAAG,GAAKE,EAAWjkB,EAAW7R,EAC5CkL,EAAQA,EAAM6qB,MAAM,CAAC,SAAU11B,EAAG,UAAWszB,YAAOiC,KAEtD7uB,EAASyuB,GAAYtqB,KAGjB8qB,GAA+BC,IAAS,SAAClvB,EAAUS,EAAUkB,GACjE+sB,GAAuB1uB,EAAUS,EAAUkB,GAAgB,IAC1D,KAEUwtB,GAAsB,SAACxtB,GAAD,OAAoB,SAAC3B,EAAUS,GAChEiuB,GAAuB1uB,EAAUS,EAAUkB,GAC3CstB,GAA6BjvB,EAAUS,EAAUkB,KA4F7CytB,GAAgB,SAACjrB,EAAO8nB,EAAWoD,GACvC,IACMC,EADenrB,EAAMyS,OACatU,OACpCitB,EAAWprB,EAETqrB,EAAeF,EAAmBG,UAAU,SAACpb,GAAD,OAAOA,EAAE/V,KAAO2tB,IAC5DD,EAAUsD,EAAmBpiB,KAAK,SAACmH,GAAD,OAAOA,EAAE/V,KAAO2tB,IAKxD,GAFAsD,EAd4B,SAACprB,EAAOkrB,EAAUG,GAC9C,IAAMhC,GAAkC,IAArB6B,EAASxhB,QAAmB,UAAY,OAC3D,OAAO1J,EAAM6qB,MAAM,CAAC,SAAUQ,EAAc,SAAU,cAAehC,GAY1DkC,CAAsBH,EAAUF,EAAUG,IAE1B,IAAvBH,EAASM,UACX,OAAOJ,EAGT,IAAMK,OAAuCx2B,IAArBi2B,EAASjlB,QAAwB,EAAIilB,EAASjlB,QAGtE,OAAQ4hB,EAAQzuB,MACd,IAAK,OACHgyB,EAAWA,EACRP,MAAM,CAAC,SAAUQ,EAAc,QAAS,gBAAiBI,GACzDZ,MAAM,CAAC,SAAUQ,EAAc,QAAS,sBAAuBH,EAASzwB,OACxEowB,MAAM,CAAC,SAAUQ,EAAc,QAAS,chBjNnB,iBgBkNxB,MAEF,IAAK,OACH,IAAM5wB,EAAQywB,EAASzwB,OAAUotB,EAAQ3nB,OAAS2nB,EAAQ3nB,MAAM,cAChEkrB,EAAWA,EACRP,MAAM,CAAC,SAAUQ,EAAc,QAAS,gBAAiBI,GACzDZ,MAAM,CAAC,SAAUQ,EAAc,QAAS,cAAe5wB,GAC1D,MAEF,IAAK,SACH,GAAIotB,EAAQ5W,WAAgD,IAApC4W,EAAQ5W,SAAS,eAAyB,CAChE,IAEMya,EADiE,YAArEN,EAAST,MAAM,CAAC,SAAUU,EAAc,SAAU,iBAEF,IAAxBH,EAASS,WAAsB,UAAY,OAKrE,GAJAP,EAAWA,EAASP,MAClB,CAAC,SAAUQ,EAAc,SAAU,cACnCK,IAE0B,IAAxBR,EAASS,WACX,MAGJP,EAAWA,EAASP,MAAM,CAAC,SAAUQ,EAAc,QAAS,gBAAiBI,QAEtDx2B,IAAnBi2B,EAASzwB,QACX2wB,EAAWA,EAASP,MAAM,CAAC,SAAUQ,EAAc,QAAS,cAAeH,EAASzwB,QAEtF,MAGF,IAAK,SAKH,GAJA2wB,EAAWA,EACRP,MAAM,CAAC,SAAUQ,EAAc,QAAS,kBAAmBI,GAC3DZ,MAAM,CAAC,SAAUQ,EAAc,QAAS,yBAA0BI,QAE9Cx2B,IAAnBi2B,EAASzwB,MAAqB,CAChC,IAAMmxB,EACJ/D,GAAWA,EAAQ5W,UAAY4W,EAAQ5W,SAAS,8BAC5C4W,EAAQ5W,SAAS,8BACjB,eACNma,EAAWA,EAASP,MAClB,CAAC,SAAUQ,EAAc,QAASO,GAClCV,EAASzwB,OAGb,MAEF,IAAK,SACH2wB,EAAWA,EAASP,MAClB,CAAC,SAAUQ,EAAc,QAAS,kBAClCI,GAWN,OAFAL,EA7K4B,SAACprB,EAAOkrB,EAAUW,EAAgBR,GAC9D,IAAID,EAAWprB,EACTuS,EAAevS,EAAMyS,OACrBqZ,EAASD,EAAezyB,KACxB2yB,EAAgBxZ,EAAatB,SAAS,cACtCA,EAAW4a,EAAe5a,SA4EhC,MA3EC,CAAC,WAAY,eAAe3P,QAAQ,SAAC0qB,GAEpC,IAAMxtB,EAAW0sB,EAAQ,GAAA7zB,OAAI20B,EAAJ,aACnBC,EAAgBztB,GAAYA,EAASwB,MAAQxB,EAASwB,MAAM8rB,GAAU,GACtEI,EAA2B,OAAb1tB,QAAkCvJ,IAAbuJ,GAA0BA,EAASjD,OAAOrG,OAAS,EACtFi3B,EAA0BjB,EAASc,GAKnCI,EAAkBhC,GAAA,GAHH2B,EAAcC,GAAWF,IAAW,GAEtD7a,GAAYA,EAAS,eAAiBA,EAAS,cAAc+a,IAAe,GACfC,GAE5DxnB,OAAOC,KAAK0nB,GAAoBl3B,QAElCuP,OAAOC,KAAK0nB,GAAoB9qB,QAAQ,SAAC+qB,GACvC,IAKIC,EALEC,EAAgBH,EAAmBC,GAAiB,GACpDG,EAAgBJ,EAAmBC,GAAiB,GACpDI,EAAgB,CAAC,YAAa,cAAcC,SAASL,GACvD,SACA,QAEJ,IACkB,IAAhBH,IAC4B,IAA5BC,IAC4B,IAA5BA,EACA,CAEA,IAAMQ,EAAqB5D,GAAS5qB,OAAO4K,KAAK,SAACmH,GAAD,OAAOA,EAAE/V,KAAO0xB,EAAe1xB,KAQ3EmyB,OANuBr3B,IAAvB03B,EAGAd,EAAe5a,UACf4a,EAAe5a,SAAS,gCAAkCob,EAEtC,KAEAM,EAAmBF,GAAeJ,GAMpC,UAEjB,IAAgC,IAA5BF,IAAgE,IAA5BA,EAC7CG,GAAgD,IAA5BH,EAAmCI,EAAgBC,MAClE,CACL,IAAII,EAAsB,GAC1B,GAAuB,OAAnB1B,EAASzwB,YAAqCxF,IAAnBi2B,EAASzwB,MAAqB,CAC3D,IAAMoyB,EAAgBvX,GAAS4V,EAASzwB,OACxCmyB,EAAmB,GAAAv1B,OAAMw1B,EAAc9X,EAApB,KAAA1d,OAAyBw1B,EAAc7X,EAAvC,KAAA3d,OAA4Cw1B,EAAc5X,GAE/EqX,EAAoB,CAClB,QACA,CAAC,MAAO9tB,EAASlD,OACjBkD,EAASjD,OACgB,kBAAlBgxB,EACHA,EACAA,EAAcO,QAAQ,sBAAuBF,GACxB,kBAAlBJ,EACHA,EACAA,EAAcM,QAAQ,sBAAuBF,SAI3B33B,IAAtBq3B,GAAyD,OAAtBA,IACrClB,EAAWA,EAASP,MAClB,CAAC,SAAUQ,EAAcoB,EAAeJ,GACxCC,QAMHlB,EA4FI2B,CAAsB3B,EAAUF,EAAUrD,EAASwD,IAK1D2B,GAAmB,SAACxgB,EAASH,EAASzV,EAAK2D,GAAxB,OAAiC,SAACsB,EAAUS,GACnE,IACI0D,EADU1D,IACInJ,IAAI6M,MAAMwS,SACtBD,EAAevS,EAAMyS,OAG3B,QAAsCxd,IAAlCsd,EAAatU,QAAQoO,GAAwB,CAC/C,IAAMtM,EAAS,CAAE3G,KAAMoT,GACnBA,IAAYxL,EACdjB,EAAOxF,KAAOA,EACLiS,IAAYxL,IACrBjB,EAAOqL,MAAQ,CAACxU,GAChBmJ,EAAOktB,SAAW,KAEpBjtB,EAAQA,EAAM6qB,MAAM,CAAC,UAAWxe,GAAUoc,YAAO1oB,IAGnD,QAAsE9K,IAAlEsd,EAAapU,OAAO4K,KAAK,SAAC8e,GAAD,OAAaA,EAAQ1tB,KAAOkS,IAAwB,CAC/E,IAAMyf,EAAStf,IAAYxL,ED7RhB,SAAC0oB,GAEd,IAAMwD,EAAkBxD,EAAQlrB,SAASrL,IAAI,SAACyL,GAC5C,IAAMqM,EAAOrM,EAAQK,SACrB,YAAahK,IAATgW,EACK,KAEFA,EAAK7R,OAIR+zB,EAAc1D,GAAMt2B,IAAI,SAACiG,GAC7B,IAAIif,EAAM,EAMV,OALA6U,EAAgB5rB,QAAQ,SAAC8rB,GACnBh0B,EAAKswB,QAAQpnB,QAAQ8qB,IAAgB,GACvC/U,MAGG,CAAEqI,GAAItnB,EAAKsnB,GAAIrI,SAIpByT,EAAS,OACTuB,EAAY,EAQhB,OAPAF,EAAY7rB,QAAQ,SAACzD,GACfA,EAAEwa,IAAMgV,IACVvB,EAASjuB,EAAE6iB,GACX2M,EAAYxvB,EAAEwa,OAIXyT,EC8PuDwB,CAAgB/yB,GAAQiS,EAC9Eqb,EAAUY,YAAO,CACrBtuB,GAAIkS,EACJtM,OAAQsM,EACRjT,KAAM0yB,EACN3C,OAAQ,GACRjpB,MAAO,KAEHqtB,EACJ/gB,IAAYxL,EAERuR,EAAapU,OAAOjJ,OACpB,EACAqd,EAAapU,OACVP,OAAO,SAACsS,GAAD,MAAgB,WAATA,EAAE/V,KAChBqzB,UACAlC,UAAU,SAACpb,GAAD,MAAkB,WAAXA,EAAE9W,OACtBmZ,EAAapU,OAAOjJ,OAAS,EACnC8K,EAAQA,EAAM6D,IAAI,SAAU7D,EAAMsoB,IAAI,UAAUmF,OAAOF,EAAY,EAAG1F,IAGxEhsB,EAASyuB,GAAYtqB,MA+EjB0tB,GAAyB,SAACvvB,GAAD,OAAY,SAACtC,EAAUS,GACpDT,EAAS,CACPzC,KAAMywB,GACN1tB,QAASgC,EAAOhL,IAAI,SAAC4Y,GAAD,OAAWA,EAAM4hB,aAEvC,IAAMC,EAAsBzvB,EAAOhL,IAAI,SAAC4Y,GAAD,OAhCE4hB,GAAH5e,EAgC4ChD,GAhCzC4hB,SAAUE,EAAqB9e,EAArB8e,eAC7CC,EAAY,CAAE3vB,OAAQ,CAAC,CAAEhE,GAAIwzB,EAAUI,QAAS,CAAEC,IAAKH,MACvDI,EAAeC,mBAAmBt1B,KAAKu1B,UAAUL,IACjDM,EpBvUN,+EoBuU0DtB,QAAQ,aAAcmB,GAEzE,IAAIn3B,QAAQ,SAACC,GAClBs3B,MAAMD,GACHxf,KAAK,SAACzY,GACL,OAAIA,EAAI6B,QAAU,KAChBwL,QAAQC,KAAR,2BAAApM,OAAwCs2B,IACxC72B,QAAQE,SACD,MAEFb,EAAIm4B,SAEZ1f,KAAK,SAACrU,GACLxD,EAAQ,CACNw3B,aAAch0B,EAAKg0B,aACnBZ,eAGHa,MAAM,SAAC5N,GACNpd,QAAQC,KAAKmd,OAtBmB,IAAA7R,EAAG4e,EAAUE,EAC7CC,EACAG,EACAG,IA8B6Bt3B,QAAQ6X,IAAIif,EAAoBz6B,IAAI,SAACyhB,GAAD,OAAOA,EAAE4Z,MAAM,SAAC7jB,GAAD,OAAOA,OAE1FiE,KAAK,SAAC6f,GACL,IAAIzuB,EAAQ1D,IAAWnJ,IAAI6M,MAAMwS,SAC3BD,EAAevS,EAAMyS,OAC3Bgc,EAAwBntB,QAAQ,SAACotB,GAC/B,IAAMC,EpBzWZ,2FoByW0D7B,QAClD,gBACA4B,EAAWH,cAIPK,EAAW,GAAAv3B,OAAMq3B,EAAWf,SAAjB,iBASjB3tB,GARAA,EAAQA,EAAM6qB,MACZ,CAAC,UAAW+D,GACZnG,YAAO,CACLrvB,KAAM,SACNgS,MAAO,CAACujB,OAIEE,SAAS,CAAC,UAAWH,EAAWf,WAG9Cpb,EAAapU,OAAOmD,QAAQ,SAACumB,EAASwD,GACpC,GAAIxD,EAAQ9nB,SAAW2uB,EAAWf,SAAU,CAE1C3tB,GADAA,EAAQA,EAAM6qB,MAAM,CAAC,SAAUQ,EAAc,UAAWuD,IAC1C/D,MAAM,CAAC,SAAUQ,EAAc,WAAY,UAAWqD,EAAWf,UAC/E,IAAMzC,EAAW/sB,EAAO4K,KAAK,SAACmH,GAAD,OAAOA,EAAEgb,SAAS/wB,KAAOu0B,EAAWf,WAAUzC,SAC3ElrB,EAAQirB,GAAcjrB,EAAO6nB,EAAQ1tB,GAAI+wB,QAK/CrvB,EAASyuB,GAAYtqB,MAEtBwuB,MAAM,SAAC5N,GACNpd,QAAQC,KAAKmd,OAINkO,GAAqB,SAAClH,EAAc4B,GAAf,OAAiC,SAAC3tB,EAAUS,GAG5ET,EAAS,CACPzC,KAAM0wB,GACN3tB,QAASyrB,IAEX/rB,EAAS,CACPzC,KAAM2wB,GACN5tB,QAASqtB,IAGX,IAAMrrB,EAAM,GAAA9G,OAAAgzB,GAAOzC,GAAPyC,GAAwBb,EAAcr2B,IAAI,SAAC47B,GAAD,OAAA3E,GAAA,GAAc2E,EAAd,CAAkBvD,WAAW,QAE7EwD,EAAmB1yB,IAAWnJ,IAAI6M,MAAMwS,SAASC,OAAOxU,QAGxDgxB,EAAoB9wB,EAAOP,OAAO,SAACmO,GAAD,YAAwB9W,IAAb8W,EAAM2U,KAErDuO,EAAkB/5B,QAEpB2G,EAhJ4B,SAACozB,GAAD,OAAuB,SAACpzB,EAAUS,GAChE,IAAMR,EAAQQ,IACV0D,EAAQlE,EAAM3I,IAAI6M,MAAMwS,SAE5Byc,EAAkB3tB,QAAQ,SAAC4tB,GAAqB,IACtC/0B,EAAW+0B,EAAX/0B,GAAIumB,EAAOwO,EAAPxO,GACNyO,EAAcnF,GAAsBtJ,EAAG3gB,OAAQmvB,EAAiBt4B,KAGhEw4B,GAFNpvB,EAAQA,EAAM6qB,MAAM,CAAC,UAAW1wB,GAAKsuB,YAAO0G,KAGzC7G,IAAI,UACJ7V,OACAtf,IAAI,SAAC+c,GAAD,OAAOA,EAAE/V,KACIumB,EAAGviB,OAAOP,OAAO,SAACmO,EAAO1M,GAC3C,IAAMgN,EAAUN,EAAM5R,IAAMkF,EAAQ,EAApB,GAAAhI,OAA2B8C,EAA3B,KAAA9C,OAAiCgI,GAAUlF,EAC3D,OAAQi1B,EAAiB1C,SAASrgB,KAExB/K,QAAQ,SAAC+tB,EAAYhwB,GAE/B,IAAIiwB,EAAeD,EAAWl1B,IAAMkF,EAAQ,EAAzB,GAAAhI,OAAgC8C,EAAhC,KAAA9C,OAAsCgI,GAAUlF,EAG7D0tB,EAAOuC,GAAA,GAFUlB,GAAsBmG,GAEhC,CAEXl1B,GAAIm1B,EACJvvB,OAAQ5F,IAIV,GAAuB,WAAnBumB,EAAG3gB,OAAO3G,KAAmB,CAC/B,IAAMm2B,OAC2Bt6B,IAA/Bo6B,EAAW,gBAAgCl1B,EAAKk1B,EAAW,gBAC7DxH,EAAQ,gBAAkB0H,EAI5B,IAAMC,EAAiBxvB,EAAMsoB,IAAI,UAC3BmH,EAAgB5H,EAAQ5W,SAAS,gBACjCye,EAAgBF,EAAeG,cAAc,SAACzf,GAClD,OAAOuf,IAAkBvf,EAAEuC,OAAOxB,SAAS,kBAE7CjR,EAAQA,EAAM6D,IAAI,SAAU2rB,EAAe/B,OAAOiC,EAAe,EAAGjH,YAAOZ,SAI/EhsB,EAASyuB,GAAYtqB,IACrBnE,EAASmvB,GAAoBlvB,EAAM3I,IAAIF,OAAOuK,kBAkGnCoyB,CAAwBX,IAInC,IAAMY,EAAe1xB,EAAOP,OAC1B,SAACmO,GAAD,OAA8B,IAAnBA,EAAM+jB,eAAoD76B,IAA/B+5B,EAAiBjjB,EAAM5R,MAE3D01B,EAAa36B,QACf26B,EAAavuB,QAAQ,SAACyK,GACpBlQ,EAASmxB,GAAiBjhB,EAAMS,QAAST,EAAM5R,GAAI4R,EAAMnV,IAAKmV,EAAMxR,SAIxE,IAAMuB,EAAQQ,IAAWnJ,IAAI6M,MACzBA,EAAQlE,EAAM0W,SACZD,EAAevS,EAAMyS,OACrBgY,EAAWlY,EAAapU,OACxB4xB,EAAYxd,EAAatU,QAEzB+xB,EAA2B,GAGjCpI,EAAatmB,QAAQ,SAAC4pB,GACpB,IAAMyC,EAAWzC,EAAS/wB,GAC1B,QAAmClF,IAA/B+5B,EAAiBrB,KAAgD,IAArBzC,EAASxhB,eACjCzU,IAAlBi2B,EAAS3wB,OACXyF,EAAQA,EAAM6qB,MAAM,CAAC,UAAW8C,EAAU,QAASlF,YAAOyC,EAAS3wB,aAEhDtF,IAAjBi2B,EAASt0B,KAAmB,CAC9B,IAAMq5B,EAAYjG,GAAsBgF,EAAiBrB,GAAWzC,EAASt0B,KAC7EoJ,EAAQA,EAAM6qB,MAAM,CAAC,UAAW8C,GAAWlF,YAAOwH,OAKxD,IAxDyF,IAAA5qB,EAAA,SAwDhFlQ,GACP,IAAM0yB,EAAU4C,EAASt1B,GACnBw4B,EAAW9F,EAAQ9nB,OACnBsT,EAAW0c,EAAUpC,GACrBthB,OAAgCpX,IAArB4yB,EAAQ5W,UAA0B4W,EAAQ5W,SAAS,WAAc0c,EAE5EzC,EAAW/sB,EAAO4K,KAAK,SAACmH,GAAD,OAAOA,EAAE/V,KAAOkS,IAE7C,QAAiBpX,IAAbi2B,EAIF,OAHIrD,EAAQzuB,KAGZ,WAKF,IAAMy0B,OAAuC54B,IAAtBoe,EAASpC,UAA0BoC,EAASpC,SAAS,iBAC5E,IAAuB,IAAnB4c,QAA+C54B,IAAnB44B,EAA8B,CAE5D,IAAMqC,EAAyBp0B,EAAMytB,wBAAwBjnB,QAAQqrB,IAAa,EAQlF,OANuB,IAArBzC,EAASxhB,SACRwmB,GACAF,EAAyBjnB,KAAK,SAACmH,GAAD,OAAOA,EAAEyd,WAAaA,KAErDqC,EAAyBzwB,KAAK,CAAEouB,WAAUE,iBAAgB3C,aAE5D,WAGFlrB,EAAQirB,GAAcjrB,EAAO6nB,EAAQ1tB,GAAI+wB,IA/BlC/1B,EAAI,EAAGA,EAAIs1B,EAASv1B,OAAQC,IAAKkQ,EAAjClQ,GAkCL66B,EAAyB96B,QAC3B2G,EAAS6xB,GAAuBsC,IAGlCn0B,EAASyuB,GAAYtqB,+nBCxgBhB,IAEDmwB,GAAqB,CACzBC,mBAHiC,IAIjCC,uBAAwB,IAAIC,KAC5BC,iBAAkBC,MAGdlH,GAAe,CACnB1sB,SAAU,CACRG,SAAU,EACVC,UAAW,EACXH,KAAM,EACN4oB,QAAS,EACT7J,MAAO,EACP3R,MAAO,IACPC,OAAQ,IACRjN,OAAQ,IAEVupB,QrBN4B,GqBO5BC,QrBT4B,EqBU5Bhb,SAAU,EACVtB,kBAAmB,MC9BrB,IAAIsmB,GAAmBC,IAiBjBC,GAAQC,YAAY,aAAU,GAAIH,GAAiBI,YAAgBC,QAE5DC,GAAkB,SAAC52B,GAC9B,IAAM2F,EAAQ6wB,GAAMr0B,WAAWnJ,IAAIwK,OAAOpD,KAAKwO,KAAK,SAAClL,GAAD,OAAOA,EAAE1D,KAAOA,EAAGT,aAGvE,OAFAi3B,GAAM90B,SAASm1B,GAAkBlxB,EAAMmxB,YAEhCnxB,EAAMoxB,gBAYAP,4DCvCFQ,GAAqB,SAAC7yB,GACjC,IAAM8yB,EAAO,CAAEv8B,MAAOw8B,IAAUv8B,IAAK,GAmBrC,OAlBIwJ,GAAWA,EAAQE,UACrBF,EAAQE,SAAS8C,QAAQ,SAAC1C,GAEtBA,EAAQC,YACRD,EAAQC,WAAWC,sBACnBF,EAAQC,WAAWC,qBAAqBC,OACxCH,EAAQC,WAAWC,qBAAqBC,MAAM7J,OAAS,GAEvD0J,EAAQC,WAAWC,qBAAqBC,MAAMuC,QAAQ,SAACmE,GACjDA,EAAW2rB,EAAKv8B,MAClBu8B,EAAKv8B,MAAQ4Q,EACJA,EAAW2rB,EAAKt8B,MACzBs8B,EAAKt8B,IAAM2Q,OAMd,CAAC2rB,EAAKv8B,MAAOu8B,EAAKt8B,MAGdw8B,GAAiB,SAAChzB,GAC7B,IAAMrB,EAASs0B,KAAMjzB,GACrB,MAAO,CACLoS,OAAQzT,EAAO,GACfwT,OAAQxT,EAAO,GACf2T,OAAQ3T,EAAO,GACf0T,OAAQ1T,EAAO,KCzBNu0B,GAAY,YACZC,GAAe,eAGtBC,GAA8B,SAACC,GAuBnC,IAtBA,IAeIC,EAfEC,EAAgB,SAACC,GAAD,IAAQ14B,EAARgI,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAe,QAAf,MAAqD,CACzEhI,KAAM,UACN6F,SAAU,CACR7F,KAHkBgI,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAmC,aAIrDlC,YAAa,IAEfL,WAAY,CACVzF,OACA04B,QACAhzB,qBAAsB,CACpBC,MAAO,OAMTgzB,EAAgBJ,EAAaxrB,OAAO,GACpC6rB,EAAiBH,EAAcE,GAC7BE,EAAgBJ,EAAc,UAAW,UAAW,cACpDrzB,EAAW,GACb0zB,EAAY,EAEP7yB,EAAQ,EAAGnK,EAASy8B,EAAa50B,SAAS7H,OAAQmK,EAAQnK,EAAQmK,IAAS,CAClF,IAAM8G,EAASwrB,EAAaxrB,OAAO9G,GAC7BrC,EAAY20B,EAAa30B,UAAUqC,GACnCtC,EAAW40B,EAAa50B,SAASsC,GACjCyF,EAAS6sB,EAAa7sB,OAAOzF,GAE/BuyB,IACE50B,EAAY40B,GAAc,IAC5BM,GAAa,IACJl1B,EAAY40B,EAAa,MAClCM,GAAa,MAIjB,IAAMC,EAAK,CAACn1B,EAAYk1B,EAAWn1B,GAC/BoJ,IAAW4rB,GAA2B,IAAV1yB,IAC9Bb,EAASe,KAAKyyB,GACdA,EAAiBH,EAAc1rB,IAGjC6rB,EAAe/yB,SAASC,YAAYK,KAAK4yB,GACrCrtB,EAAS,IACXmtB,EAAchzB,SAASC,YAAYK,KAAK4yB,GACxCF,EAAcpzB,WAAWC,qBAAqBC,MAAMQ,KAAKoyB,EAAalsB,SAASpG,KAEjF2yB,EAAenzB,WAAWC,qBAAqBC,MAAMQ,KAAKoyB,EAAalsB,SAASpG,IAEhF0yB,EAAgB5rB,EAChByrB,EAAa50B,EAMf,OAHAwB,EAASe,KAAKyyB,GACdxzB,EAASe,KAAK0yB,GAEP,CACL74B,KAAM,oBACNoF,aAgGJ,IAOa4zB,GAAe,eAACC,EAADjxB,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAa,GAAb,OAAoB,SAACvF,EAAUS,GACzD,IAAMg2B,EAAah2B,IAAWnJ,IAAIwK,OAAOpD,KAErC83B,GACFA,EAAU/wB,QAAQ,SAACixB,GACjB,IAxGazyB,EAwGP0yB,EAAUD,EAASp4B,GACnBs4B,EAAYH,EAAWvpB,KAAK,SAAClL,GAAD,OAAOA,EAAE1D,KAAOq4B,SAChCv9B,IAAdw9B,EACF52B,GA3GWiE,EA2GQyyB,EA1GlB,SAAC12B,EAAUS,GAAa,IACrBnC,EAAsE2F,EAAtE3F,GAAIvD,EAAkEkJ,EAAlElJ,IAAKwC,EAA6D0G,EAA7D1G,KAAM0B,EAAuDgF,EAAvDhF,gBAAiBH,EAAsCmF,EAAtCnF,qBAAsBF,EAAgBqF,EAAhBrF,MAAOF,EAASuF,EAATvF,KAC/DuB,EAAQQ,IACd,IAAIR,EAAM3I,IAAIwK,OAAOpD,KAAKwO,KAAK,SAAClL,GAAD,OAAOA,EAAE1D,KAAOA,IAA/C,CAIA,IAAMgC,EAAU,CACdhC,KACAvD,MACAwC,OACAqB,QACAK,mBAEI43B,OAA8Bz9B,IAAf6K,EAAMvF,MAAqC,OAAfuF,EAAMvF,KACjDo4B,OAAsB19B,IAAR2B,GAA6B,OAARA,GAAwB,KAARA,EAOzD,GANI87B,IACFv2B,EAAQ5B,KAAOA,EACf4B,EAAQ80B,UAAYK,GAAe/2B,IAErCsB,EAAS,CAAEzC,KAAMo4B,GAAWr1B,aAExBu2B,GAAiBC,EAArB,CAIA,IAAMjlB,EAAW9R,EAAYC,EAAUC,GACvC,GAAa,YAAT1C,EAAoB,CAEtB,IAAMvC,EAAQiF,EAAM3I,IAAIF,OAAO4D,MAEzB4L,EAAWF,GAAgB3L,EAAKC,EAAO8D,GAE7C7D,QAAQ6X,IAAIlM,EAAStP,IAAI,SAACyhB,GAAD,OAAOA,EAAE4Z,MAAM,SAAC7jB,GAAD,OAAOA,OAAKiE,KAAK,SAAC/L,GACxD,IAAM+vB,EAAYhwB,GAAqBC,GAEvC,GAAK+vB,EAAU19B,OAAf,CAGA,IAAM29B,EAAe9vB,GAAU6vB,EAAW,CACxC,WACA,YACA,WACA,SACA,SACA,UAGIr4B,EAAOm3B,GAA4BmB,GACnC3B,EAAiBC,GAAmB52B,GACpC02B,EAAYK,GAAe/2B,GAEjCsB,EAAS,CACPzC,KAAMq4B,GACNt1B,QAAS,CACPhC,KACAI,OACA02B,YACAC,oBAGJr1B,EAASQ,EAAeqR,YAG1B2gB,MAAMz3B,GACHgY,KAAK,SAACzY,GACL,GAAIA,EAAI6B,QAAU,IAAK,MAAM,IAAIwW,MAAMrY,EAAI28B,YAC3C,OAAO38B,EAAIm4B,SAEZ1f,KAAK,SAACrU,GACL,IAAM22B,EAAiBC,GAAmB52B,GACpC02B,EAAYK,GAAe/2B,GACjCsB,EAAS,CACPzC,KAAMq4B,GACNt1B,QAAS,CACPhC,KACAI,OACA02B,YACAC,oBAGAp2B,GACFi2B,GAAgB52B,KAGnBq0B,MAAM,SAAC5N,GAAD,OAASpd,QAAQC,KAAKmd,KAC5BmS,QAAQ,kBAAMl3B,EAASQ,EAAeqR,WAqB9B+kB,EAAUh4B,QAAU83B,EAAS93B,OACtCoB,EAAS,CACPzC,KAAMq4B,GACNt1B,QAAS,CACPhC,GAAIo4B,EAASp4B,GACbM,MAAO83B,EAAS93B,WAQ1B63B,EAAWhxB,QAAQ,SAACmxB,GACbJ,GAAcA,EAAUtpB,KAAK,SAAClL,GAAD,OAAOA,EAAE1D,KAAOs4B,EAAUt4B,MAC1D0B,EA/B4B,CAChCzC,KA9J0B,eA+J1B+C,QAAS,CACPq2B,QA4BuBC,EAAUt4B,UCtLtB64B,GAZc,SAAC18B,EAAM28B,GAAP,OAA2B,SAACC,GASvD,OAAOA,0xBCAT,IAAM5J,GAAe,CACnB/sB,QAAS,KACT1F,WAAO5B,EACPuI,eAAgB,CAAC,IAAIvB,KAAK,MAAO,IAAIA,MACrCqB,wBAAyB,KACzB4W,OAAQ,KACRzX,sBAAkBxH,EAClBmf,aAASnf,EACTkf,aAASlf,EACTuuB,YAAQvuB,EACRmH,iBAAanH,EACbuH,oBAAgBvH,EAChByxB,kBAAczxB,EACdk+B,0BAAsBl+B,GA8DTm+B,MAAiB,SAdZ,CAClB72B,QAASnC,IAAUQ,QAAQR,IAAUS,QACrChE,MAAOuD,IAAUC,OACjBmD,eAAgBpD,IAAUQ,QAAQR,IAAUi5B,WAAWp3B,OACvDQ,iBAAkBrC,IAAUinB,KAC5BjN,QAASha,IAAUinB,KACnBlN,QAAS/Z,IAAUinB,KACnBmC,OAAQppB,IAAUinB,KAClBjlB,YAAahC,IAAUinB,KACvB7kB,eAAgBpC,IAAUinB,KAC1BqF,aAActsB,IAAUinB,KACxB8R,qBAAsB/4B,IAAUinB,MAGnB+R,CA3DO,WAAkC,IAAjCt3B,EAAiCsF,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAzBkoB,GAAcgK,EAAWlyB,UAAAlM,OAAA,EAAAkM,UAAA,QAAAnM,EACtD,OAAQq+B,EAAOl6B,MACb,IzB7BuB,cyB8BrB,OAAOm6B,GAAA,GACFz3B,EACAw3B,EAAOn3B,SAId,IzBnC+B,sByBoC7B,OAAOo3B,GAAA,GACFz3B,EADL,CAEE0B,eAAgB81B,EAAOn3B,UAI3B,IzBzCyC,gCyB0CvC,OAAOo3B,GAAA,GACFz3B,EADL,CAEEwB,wBAAyBg2B,EAAOn3B,UAIpC,IzB/CwB,eyBgDtB,IAAMI,EAA4B,OAAlBT,EAAMS,QAANi3B,GAA6B13B,EAAMS,SAAW,GAE9D,OADAA,EAAQgD,KAAK+zB,EAAOn3B,SACbo3B,GAAA,GAAKz3B,EAAZ,CAAmBS,YAGrB,IzBpD2B,kByBqDzB,IAAMA,EAAOi3B,GAAO13B,EAAMS,SACpBk3B,EAAcl3B,EAAQ+uB,UAAU,SAACpb,GAAD,OAAOA,IAAMojB,EAAOn3B,UAE1D,OADAI,EAAQkxB,OAAOgG,EAAa,GACrBF,GAAA,GAAKz3B,EAAZ,CAAmBS,YAGrB,IzB1D6B,oByB2D3B,OAAOg3B,GAAA,GAAKz3B,EAAZ,CAAmBoY,OAAQof,EAAOn3B,UAGpC,QACE,OAAOL,2xBC9Db,IAAMwtB,GAAe,CACnB/uB,KAAM,IAiDO64B,MAAiB,SAhBZ,CAClB74B,KAAMH,IAAUQ,QACdR,IAAUs5B,MAAVC,GAAA,GACKz5B,EADL,CAEEK,KAAMH,IAAUI,OAChB02B,eAAgB92B,IAAU1G,MAC1Bu9B,UAAW72B,IAAUs5B,MAAM,CACzBhjB,OAAQtW,IAAUS,OAClB4V,OAAQrW,IAAUS,OAClB+V,OAAQxW,IAAUS,OAClB8V,OAAQvW,IAAUS,cAMXu4B,CA9CO,WAAkC,IAAjCt3B,EAAiCsF,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAzBkoB,GAAcgK,EAAWlyB,UAAAlM,OAAA,EAAAkM,UAAA,QAAAnM,EACtD,OAAQq+B,EAAOl6B,MACb,KAAKo4B,GAEH,OAAOmC,GAAA,GAAK73B,EAAZ,CAAmBvB,KADT,GAAAlD,OAAAu8B,GAAO93B,EAAMvB,MAAb,CAAmB+4B,EAAOn3B,YAItC,KAAKs1B,GACH,IAAMoC,EAAYP,EAAOn3B,QACnB5B,EAAOuB,EAAMvB,KAAKpH,IAAI,SAAC2M,GAC3B,OAAIA,EAAM3F,KAAO05B,EAAU15B,GAAW2F,EAC/B6zB,GAAA,GACF7zB,EACA+zB,KAGP,OAAOF,GAAA,GAAK73B,EAAZ,CAAmBvB,SAGrB,IHrBwB,eGsBtB,IAAMu5B,EAAiBR,EAAOn3B,QAAQq2B,QAChCj4B,EAAOuB,EAAMvB,KAAKqD,OAAO,SAACkC,GAAD,OAAWA,EAAM3F,KAAO25B,IACvD,OAAOH,GAAA,GAAK73B,EAAZ,CAAmBvB,SAGrB,QACE,OAAOuB,2xBCpBb,IAAMwtB,GAAe,CAGnB9f,cAAe,GAGfgE,eAAgB,GAChBpB,mBAAoB,CAAEJ,SAAS,GAC/BiU,yBAA0B,scCf5B,IAAMqJ,GAAe,CACnB5gB,oBAAqB,GACrBG,mBAAoB,GACpBX,sBAAuB,GACvBE,yBAA0B,6HCV5B,IAAMkhB,GAAe,CACnBpV,OAAQ,YCgBK6f,GAVIC,YAAgB,CACjC/gC,OAAQghC,GACRt2B,OAAQu2B,GACR3qB,QHca,WAAuC,IAA9BzN,EAA8BsF,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAtBkoB,GAAcgK,EAAQlyB,UAAAlM,OAAA,EAAAkM,UAAA,QAAAnM,EACpD,OAAQq+B,EAAOl6B,MACb,IpBZ+B,sBoBa7B,OAAOqL,OAAO2iB,OAAO,GAAItrB,EAAO,CAAE0N,cAAe8pB,EAAOn3B,UAG1D,KAAK4Q,GACH,IAAMvD,EAAgB1N,EAAM0N,cAY5B,OAXAA,EAAc8pB,EAAOn3B,QAAQkQ,SAAS+B,8BACpCklB,EAAOn3B,QAAQg4B,iCAIjB3qB,EAAc8pB,EAAOn3B,QAAQkQ,SAASjB,MAAM9J,QAAQ,SAAC6H,GACnDA,EAAK+E,6BAA+BI,IAClCnF,EAAK+E,6BACLolB,EAAOn3B,QAAQi4B,kBAGZC,GAAA,GAAKv4B,EAAZ,CAAmB0N,kBAGrB,IpBpC6B,oBoBqC3B,IAAMA,EAAgB/E,OAAO2iB,OAAO,GAAItrB,EAAM0N,cAAxB8qB,GAAA,GACnBhB,EAAOn3B,QAAQhC,GADIk6B,GAAA,CAElBjpB,MAAO,IACJkoB,EAAOn3B,WAGd,OAAOsI,OAAO2iB,OAAO,GAAItrB,EAAO,CAAE0N,kBAGpC,IpB7CsC,6BoB8CpC,IAAMsG,EAAWwjB,EAAOn3B,QAClB4P,EAAKsoB,GAAA,GAAQv4B,EAAM0N,cAAcsG,EAAS3V,IAAQ2V,GAClDtG,EAAa6qB,GAAA,GAAQv4B,EAAM0N,cAAd8qB,GAAA,GAA8BxkB,EAAS3V,GAAK4R,IAC/D,OAAOsoB,GAAA,GAAKv4B,EAAZ,CAAmB0N,kBAGrB,IpBhDgC,uBoBiD9B,IAAMA,EAAgB/E,OAAO2iB,OAAO,GAAItrB,EAAM0N,eAE9C,cADOA,EAAc8pB,EAAOn3B,QAAQhC,IAC7BsK,OAAO2iB,OAAO,GAAItrB,EAAO,CAAE0N,kBAGpC,KAAKH,GACH,OAAO5E,OAAO2iB,OAAO,GAAItrB,EAAO,CAAE0R,eAAc,GAAAnW,OAAAk9B,GAAMz4B,EAAM0R,gBAAZ,CAA4B8lB,EAAOn3B,YAGrF,KAAK6Q,GACH,IAAMX,EAAUinB,EAAOn3B,QAAQkQ,QACzBmoB,EAAUlB,EAAOn3B,QAAQgN,KACzB4C,EAAKsoB,GAAA,GAAQv4B,EAAM0N,cAAc6C,IACnCooB,EAAUF,GAAOxoB,EAAMX,OACrBspB,EAAYD,EAAWnJ,UAAU,SAACztB,GAAD,OAAOA,EAAEmL,MAAQwrB,EAAQxrB,OAC7C,IAAf0rB,EACFD,EAAWl1B,KAAKi1B,GAEhBC,EAAU,GAAAp9B,OAAAk9B,GACLE,EAAWl8B,MAAM,EAAGm8B,IADf,CAERF,GAFQD,GAGLE,EAAWl8B,MAAMm8B,EAAY,KAGpC3oB,EAAMX,MAAQqpB,EACd,IAAMjrB,EAAa6qB,GAAA,GAAQv4B,EAAM0N,cAAd8qB,GAAA,GAA8BjoB,EAAUN,IAC3D,OAAOsoB,GAAA,GAAKv4B,EAAZ,CAAmB0N,kBAGrB,IpB1EiC,wBoB2E/B,IAAMoC,EAAO0nB,EAAOn3B,QAGdoR,EAAW9I,OAAOC,KAAK5I,EAAM0N,eAC7BA,EAAa6qB,GAAA,GAAQv4B,EAAM0N,eACjC+D,EAASjM,QAAQ,SAAC+K,GAChB,IAAM0D,EAASskB,GAAA,GAAQ7qB,EAAc6C,IACrCT,EAAKtK,QAAQ,SAACqzB,GACZ,IAAMC,EAAoB7kB,EAAU3E,MAAMkgB,UAAU,SAACniB,GAAD,OAAUA,EAAKH,MAAQ2rB,IACvEC,GAAqB,GAEvB7kB,EAAU3E,MAAMqiB,OAAOmH,EAAmB,OAMhD,IAAIpnB,EAAc+mB,GAAOz4B,EAAM0R,gBAW/B,OAVA5B,EAAKtK,QAAQ,SAACqzB,GACZ,IAAME,EAAuBrnB,EAAe8d,UAAU,SAACniB,GAAD,OAAUA,EAAKH,MAAQ2rB,IACzEE,GAAwB,IAC1BrnB,EAAc,GAAAnW,OAAAk9B,GACT/mB,EAAejV,MAAM,EAAGs8B,IADfN,GAET/mB,EAAejV,MAAMs8B,EAAuB,QAK9CR,GAAA,GAAKv4B,EAAZ,CAAmB0N,gBAAegE,mBAGpC,IpBzG+B,sBoB0G7B,IAAMsnB,EAAgBT,GAAA,GAAQv4B,EAAM0N,eACpC,OAAO6qB,GAAA,GAAKv4B,EAAZ,CAAmB0N,cAAesrB,IAGpC,KAAKroB,GACH,OAAOhI,OAAO2iB,OAAO,GAAItrB,EAAO,CAAEsQ,mBAAoBknB,EAAOn3B,UAG/D,IpBjHoC,2BoBkHlC,OAAOk4B,GAAA,GAAKv4B,EAAZ,CAAmBmkB,yBAA0BqT,EAAOn3B,UAGtD,IpBpH0C,iCoBqHxC,OAAOk4B,GAAA,GAAKv4B,EAAZ,CAAmBmkB,yBAA0B,OAG/C,QACE,OAAOnkB,IGpIXmM,aFEa,WAAuC,IAA9BnM,EAA8BsF,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAtBkoB,GAAcgK,EAAQlyB,UAAAlM,OAAA,EAAAkM,UAAA,QAAAnM,EACpD,OAAQq+B,EAAOl6B,MACb,ItBPuC,8BsBSrC,OAAO27B,GAAA,GAAKj5B,EAAZ,CAAmB4M,oBADS,GAAGrR,OAAOi8B,EAAOn3B,WAI/C,ItBXsC,6BsBapC,OAAO44B,GAAA,GAAKj5B,EAAZ,CAAmB+M,mBADQ,GAAGxR,OAAOi8B,EAAOn3B,WAI9C,ItBf2C,kCsBgBzC,IAAM+L,EAAwBjD,IAC5BnJ,EAAMoM,sBAAsB7Q,OAAOi8B,EAAOn3B,QAAQ+M,kBAE9Cd,EAA2BnD,IAC/BnJ,EAAMsM,yBAAyB/Q,OAAOi8B,EAAOn3B,QAAQyM,qBAMvD,OAAOmsB,GAAA,GAAKj5B,EAAZ,CAAmBoM,sBAHQA,EAAsBtK,OAC/C,SAAC+2B,GAAD,OAA4D,IAA/CvsB,EAAyB9F,QAAQqyB,KAEcvsB,6BAGhE,ItB5BqC,4BsB6BnC,IAAMF,EAAwBpM,EAAMoM,sBAC9B8sB,EAAyB1B,EAAOn3B,QAItC,OAAO44B,GAAA,GAAKj5B,EAAZ,CAAmBoM,sBAHcA,EAAsBtK,OACrD,SAAC+2B,GAAD,OAA0D,IAA7CK,EAAuB1yB,QAAQqyB,OAKhD,ItBpCqC,4BsBqCnC,OAAOI,GAAA,GAAKj5B,EAAZ,CAAmBsM,yBAA0B,KAG/C,QACE,OAAOtM,IEzCXkE,Mb+Ca,WAAuC,IAA9BlE,EAA8BsF,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAtBkoB,GAAcgK,EAAQlyB,UAAAlM,OAAA,EAAAkM,UAAA,QAAAnM,EACpD,OAAQq+B,EAAOl6B,MACb,KAAKuwB,GACH,IAAMsL,EAAcn5B,EAAM0W,SAASqY,MAAM,CAAC,UAAWyI,EAAOn3B,QAAQ+4B,YACpE,OAAOC,GAAA,GAAKr5B,EAAZ,CAAmB0W,SAAUyiB,IAE/B,KAAKrL,GACH,OAAOuL,GAAA,GAAKr5B,EAAZ,CAAmB0W,SAAU8gB,EAAOn3B,UAEtC,KAAK2tB,GACH,OAAOqL,GAAA,GAAKr5B,EAAZ,CAAmB8rB,aAAc0L,EAAOn3B,UAE1C,KAAK4tB,GACH,OAAOoL,GAAA,GAAKr5B,EAAZ,CAAmB0tB,cAAe8J,EAAOn3B,UAE3C,KAAK0tB,GAEH,OAAOsL,GAAA,GAAKr5B,EAAZ,CAAmBytB,wBADU,GAAAlyB,OAAA+9B,GAAOt5B,EAAMytB,yBAAb6L,GAAyC9B,EAAOn3B,YAG/E,QACE,OAAOL,IalEXc,SVuBa,WAAuC,IAA9Bd,EAA8BsF,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAtBkoB,GAAcgK,EAAQlyB,UAAAlM,OAAA,EAAAkM,UAAA,QAAAnM,EACpD,OAAQq+B,EAAOl6B,MACb,IZnCwB,eYoCtB,OAAOi8B,GAAA,GACFv5B,EADL,CAEEc,SAAU02B,EAAOn3B,QACjBe,UAAWo2B,EAAOn3B,QAAQU,KAAOf,EAAM0qB,QACvCrpB,WAAYm2B,EAAOn3B,QAAQU,KAAOf,EAAM2qB,QACxChb,SAAU3P,EAAMc,SAASC,OAI7B,IZ9CsB,aY+CpB,OAAOw4B,GAAA,GACFv5B,EADL,CAEEmB,OAAQq2B,EAAOn3B,UAInB,IZnD2B,kBYoDzB,IAAMS,EAAQy4B,GAAA,GAAQv5B,EAAMc,SAAa02B,EAAOn3B,SAChD,OAAOk5B,GAAA,GACFv5B,EADL,CAEEc,WACA6O,SAAU7O,EAASC,OAIvB,IZ3D8B,qBY4D5B,IAAMy4B,EAAcx5B,EAAMc,SAASC,KAC7BA,EAAO8K,KAAKrO,IAChBwC,EAAM0qB,QACN8M,EAAOn3B,QAAQU,MAAQy4B,EAAchC,EAAOn3B,QAAQiU,WAEhDxT,EAAQy4B,GAAA,GACTv5B,EAAMc,SACNuzB,GAFS,CAGZtzB,OACAE,SAC8B,OAA5Bu2B,EAAOn3B,QAAQY,SAAoBjB,EAAMc,SAASG,SAAWu2B,EAAOn3B,QAAQY,SAC9EC,UAC+B,OAA7Bs2B,EAAOn3B,QAAQa,UAAqBlB,EAAMc,SAASI,UAAYs2B,EAAOn3B,QAAQa,YAElF,OAAOq4B,GAAA,GACFv5B,EADL,CAEEc,WACAM,UAAWL,EAAOf,EAAM0qB,QACxBrpB,WAAYN,EAAOf,EAAM2qB,QACzBhb,SAAU3P,EAAMc,SAASC,KACzBsN,kBAAmBxJ,IAIvB,IZnF8B,qBYoF5B,OAAO00B,GAAA,GAAKv5B,EAAZ,CAAmBsB,aAAck2B,EAAOn3B,UAG1C,IZtF0B,iBYuFxB,OAAOk5B,GAAA,GAAKv5B,EAAZ,CAAmBqO,kBAAmB,OAGxC,IZzF+B,sBY0F7B,OAAOkrB,GAAA,GAAKv5B,EAAUw3B,EAAOn3B,SAG/B,QACE,OAAOL,IUxFX4sB,YDVa,WAAuC,IAA9B5sB,EAA8BsF,UAAAlM,OAAA,QAAAD,IAAAmM,UAAA,GAAAA,UAAA,GAAtBkoB,GAAcgK,EAAQlyB,UAAAlM,OAAA,EAAAkM,UAAA,QAAAnM,EACpD,OAAQq+B,EAAOl6B,MACb,IpBF0B,iBoBGxB,2UAAOm8B,CAAA,GAAKz5B,EAAZ,CAAmBoY,OAAQof,EAAOn3B,UAEpC,QACE,OAAOL,0zBEWb,IAAMi4B,GAAaC,YAAgB,CACjC7gC,IAAKqiC,KAGP7E,GAAM8E,eAAe1B,IAErB,IAAM2B,GAA8B3K,IAAS,SAACvtB,GAC5CmzB,GAAM90B,SAASmvB,GAAoBxtB,IACnCmzB,GAAM90B,S/B2ByB,SAAC2B,GAAD,MAAqB,CACpDpE,KA3DiC,sBA4DjC+C,QAASqB,G+B7BMm4B,CAAkBn4B,KAChC,IAEGo4B,GAAkC,SAACC,GvBRX,IAACC,EuBS7BnF,GAAM90B,UvBTuBi6B,EuBUZ,CACb/4B,SAAU84B,EAAiB/4B,OAAO,GAClCE,UAAW64B,EAAiB/4B,OAAO,GACnCD,KAAMg5B,EAAiBh5B,MvBbqB,SAAChB,GACjDA,EAAS,CACPzC,KAtB2B,kBAuB3B+C,QAAS25B,IAEXj6B,EAASkO,UuBaLgsB,8QACJj6B,MAAQ,CACNk6B,aAAa,EACbn+B,MAAO,KACPo+B,UAAW,gQAJSrd,IAAMC,2DAOVhhB,EAAOo+B,GACvBzyB,QAAQqd,IAAIhpB,EAAOo+B,GACnBv/B,KAAKqmB,SAAS,CACZllB,MAAOA,EACPo+B,UAAWA,gDZxBQ,IAAA13B,EAAG22B,EnBzBD/b,O+ByDKlkB,IAAxByB,KAAKyiB,MAAMvc,UACbg5B,GAAgCl/B,KAAKyiB,MAAMvc,UAIf,OAA1BlG,KAAKyiB,MAAM+b,YACbvE,GAAM90B,UZtCa0C,EYuCP,CACR22B,WAAYx+B,KAAKyiB,MAAM+b,YZxCLA,EAAH32B,EAAG22B,WAAkB,CAC5C97B,KAAMuwB,GACNxtB,QAAS,CACP+4B,sBY2CwCjgC,IAApCyB,KAAKyiB,MAAMga,sBACbz8B,KAAKyiB,MAAMga,qBAAqBxC,GAAMr0B,WAAWnJ,IAAI6M,MAAM8oB,cAGzD6H,SAA+C17B,IAAtC07B,GAAMr0B,WAAWnJ,IAAIF,OAAO4D,OACvC85B,GAAM90B,U/B5Eesd,E+B6ER,CACTtiB,MAAOH,KAAKyiB,MAAMtiB,MAClBid,gBAAiBpd,KAAKyiB,MAAMrF,gBAC5B7H,UAAWvV,KAAKyiB,MAAMlN,UACtBxP,iBAAkB/F,KAAKyiB,MAAM1c,iBAC7B2X,QAAS1d,KAAKyiB,MAAM/E,QACpBD,QAASzd,KAAKyiB,MAAMhF,QACpBqP,OAAQ9sB,KAAKyiB,MAAMqK,OACnBpnB,YAAa1F,KAAKyiB,MAAM/c,YACxBI,eAAgB9F,KAAKyiB,MAAM3c,eAC3BkqB,aAAchwB,KAAKyiB,MAAMuN,aACzByM,qBAAsBz8B,KAAKyiB,MAAMga,sB/BxFN,SAACt3B,GACpCA,EAAS,CACPzC,KATuB,cAUvB+C,QAASgd,O+B0FkC,OAAvCziB,KAAKyiB,MAAM7b,yBAAoC5G,KAAKyiB,MAAM7b,wBAAwBpI,QACpFy7B,GAAM90B,SAASwB,EAA2B3G,KAAKyiB,MAAM7b,2BAIvB,OAA7B5G,KAAKyiB,MAAMqQ,eAA0B9yB,KAAKyiB,MAAMqQ,cAAct0B,QAClC,OAA5BwB,KAAKyiB,MAAMyO,cAAyBlxB,KAAKyiB,MAAMyO,aAAa1yB,SAE7Dy7B,GAAM90B,SACJizB,GAAmBp4B,KAAKyiB,MAAMyO,cAAgB,GAAIlxB,KAAKyiB,MAAMqQ,eAAiB,KAIxD,OAAtB9yB,KAAKyiB,MAAMxb,QACbgzB,GAAM90B,SAASu2B,GAAa17B,KAAKyiB,MAAMxb,SAKP,OAA9BjH,KAAKyiB,MAAM3b,gBAA2B9G,KAAKyiB,MAAM3b,eAAetI,QAClEwgC,GAA4Bh/B,KAAKyiB,MAAM3b,gBAIzC9G,KAAKqmB,SAAS,CACZiZ,aAAa,IAIkB,OAA7Bt/B,KAAKyiB,MAAM3P,eACbmnB,GAAM90B,SAAS6T,GAAoBhZ,KAAKyiB,MAAM3P,cAAe9S,KAAKyiB,MAAMjM,gEAIzDgpB,GxBmJd,IAAwChpB,EwBjJvCxW,KAAKyiB,MAAMxb,SAAWu4B,EAAUv4B,QAClCgzB,GAAM90B,SAASu2B,GAAa17B,KAAKyiB,MAAMxb,SAIrCjH,KAAKyiB,MAAM3P,gBAAkB0sB,EAAU1sB,eACzCmnB,GAAM90B,SAAS6T,GAAoBhZ,KAAKyiB,MAAM3P,cAAe9S,KAAKyiB,MAAMjM,sBAK1C,OAA7BxW,KAAKyiB,MAAMqQ,eAA0B9yB,KAAKyiB,MAAMqQ,cAAct0B,QAClC,OAA5BwB,KAAKyiB,MAAMyO,cAAyBlxB,KAAKyiB,MAAMyO,aAAa1yB,UAG3DwB,KAAKyiB,MAAMqQ,gBAAkB0M,EAAU1M,eACvC9yB,KAAKyiB,MAAMyO,eAAiBsO,EAAUtO,cAEtC+I,GAAM90B,SACJizB,GAAmBp4B,KAAKyiB,MAAMyO,cAAgB,GAAIlxB,KAAKyiB,MAAMqQ,eAAiB,MAM9C,OAAlC9yB,KAAKyiB,MAAMjM,oBAA+BxW,KAAKyiB,MAAMjM,mBAAmBhY,SAEvC,OAAjCghC,EAAUhpB,oBACTgpB,EAAUhpB,mBAAmBhY,QAC9BwB,KAAKyiB,MAAMjM,mBAAmB,GAAGhR,YAAcg6B,EAAUhpB,mBAAmB,GAAGhR,WAC/ExF,KAAKyiB,MAAMjM,mBAAmB,GAAGhR,YAAcg6B,EAAUhpB,mBAAmB,GAAGhR,WAE/Ey0B,GAAM90B,UxBiHiCqR,EwBjHOxW,KAAKyiB,MAAMjM,mBxBkHxD,SAACrR,EAAUS,GAChB,IAAMR,EAAQQ,IACRkN,EAAgB1N,EAAM3I,IAAIoW,QAAQC,cAClC2sB,EAAsB,GAE5B1xB,OAAOC,KAAK8E,GAAelI,QAAQ,SAAC+K,GAClC,IAAM+pB,EAAe5sB,EAAc6C,GAC7BjR,EAAkBg7B,EAAaz9B,OAAOyC,gBACtCi7B,EAAmCD,EAAahoB,8BAChD+lB,EAAmClnB,GACvCC,EACA9R,GAGIk7B,EAAehoB,IACnB6lB,EACAkC,GAGIjC,EAAiB9lB,IACrB+nB,EACAlC,IAGEmC,EAAaphC,QAAUk/B,EAAel/B,SAExC2G,EAAS,CACPzC,KAAM2T,GACN5Q,QAAS,CACPkQ,UACA8nB,mCACAC,oBAIFkC,EAAaphC,SACfihC,EAAoB9pB,GAAWiqB,KAKnC,IAAMC,EAA2B9xB,OAAOC,KAAKyxB,GACzCI,EAAyBrhC,QAC3B2G,EACE8N,GAAS4sB,EAA0Bz6B,EAAM3I,IAAIoW,QAAQiE,eAAgB2oB,QwB1JvC,OAA9Bz/B,KAAKyiB,MAAM3b,gBAA2B9G,KAAKyiB,MAAM3b,eAAetI,SAEnC,OAA7BghC,EAAU14B,gBACT04B,EAAU14B,eAAetI,QAC1BwB,KAAKyiB,MAAM3b,eAAe,GAAGtB,YAAcg6B,EAAU14B,eAAe,GAAGtB,WACvExF,KAAKyiB,MAAM3b,eAAe,GAAGtB,YAAcg6B,EAAU14B,eAAe,GAAGtB,WAEvEw5B,GAA4Bh/B,KAAKyiB,MAAM3b,iBAKA,OAAvC9G,KAAKyiB,MAAM7b,yBAAoC5G,KAAKyiB,MAAM7b,wBAAwBpI,OAE5C,OAAtCghC,EAAU54B,yBACT44B,EAAU54B,wBAAwBpI,QACnCwB,KAAKyiB,MAAM7b,wBAAwB,GAAGpB,YACpCg6B,EAAU54B,wBAAwB,GAAGpB,WACvCxF,KAAKyiB,MAAM7b,wBAAwB,GAAGpB,YACpCg6B,EAAU54B,wBAAwB,GAAGpB,WAEvCy0B,GAAM90B,SAASwB,EAA2B3G,KAAKyiB,MAAM7b,0BAGnD5G,KAAKyiB,MAAM7b,0BAA4B44B,EAAU54B,yBACnDqzB,GAAM90B,SAASwB,EAA2B3G,KAAKyiB,MAAM7b,0BASzD,IvB3J6BV,EuB2JvB45B,EAAkB7F,GAAMr0B,WAAWnJ,IAAIyJ,SAASA,cAG5B3H,IAAxByB,KAAKyiB,MAAMvc,UACyC,OAApD+zB,GAAMr0B,WAAWnJ,IAAIyJ,SAASuN,oBAG5BqsB,EAAgBz5B,WAAarG,KAAKyiB,MAAMvc,SAASE,OAAO,IACxD05B,EAAgBx5B,YAActG,KAAKyiB,MAAMvc,SAASE,OAAO,IACzD05B,EAAgB35B,OAASnG,KAAKyiB,MAAMvc,SAASC,OAGqB,IAA9D8K,KAAK8uB,IAAID,EAAgB35B,KAAOnG,KAAKyiB,MAAMvc,SAASC,MACtD8zB,GAAM90B,UvBxKiBe,EuBwKSlG,KAAKyiB,MAAMvc,SvBxKP,SAACf,GAC7CA,EAASsU,GAAa,KAAMvT,EAASE,OAAO,GAAIF,EAASE,OAAO,GAAIF,EAASC,UuByKrE+4B,GAAgCl/B,KAAKyiB,MAAMvc,YAK7ClG,KAAKyiB,MAAMjF,SAAWgiB,EAAUhiB,QAClCyc,GAAM90B,S/BvJ0B,CACpCzC,KAxE+B,oBAyE/B+C,Q+BqJ6BzF,KAAKyiB,MAAMjF,0CAItC,OAAyB,OAArBxd,KAAKoF,MAAMjE,OACb2L,QAAQqd,IAAInqB,KAAKoF,MAAMjE,OAErBmpB,EAAA3d,EAAA2a,cAAA,WACEgD,EAAA3d,EAAA2a,cAAA,oCACAgD,EAAA3d,EAAA2a,cAAA,KAAGgJ,UAAU,OAAOtwB,KAAKoF,MAAMjE,OAASnB,KAAKoF,MAAMjE,MAAM6B,YACzDsnB,EAAA3d,EAAA2a,cAAA,6CACAgD,EAAA3d,EAAA2a,cAAA,KAAGgJ,UAAU,OAAOtwB,KAAKoF,MAAMm6B,UAAUS,mBAKb,IAA3BhgC,KAAKoF,MAAMk6B,YAAuB,KACvChV,EAAA3d,EAAA2a,cAAC2Y,EAAA,EAAD,CAAUhG,MAAOA,IACf3P,EAAA3d,EAAA2a,cAAC4Y,GAAQlgC,KAAKyiB,+CAiCtB4c,GAAU7S,aAAe,CACvBrsB,MAAO,KACPq+B,WAAY,KACZphB,iBAAiB,EACjB7H,UAAW,SAACyG,GAAD,OAA+B,IAApBA,EAAMzG,WAC5B3O,wBAAyB,KACzBK,OAAQ,KACRipB,WAAY,KACZD,WAAY,KACZnd,cAAe,KACfhM,eAAgB,KAChB0P,mBAAoB,KACpBsc,cAAe,KACf5B,aAAc,KACd1T,OAAQ,KACRzX,iBAAkB,aAClB+mB,OAAQ,aACRpnB,YAAa,aACbI,eAAgB,aAChB2X,QAAS,aACTC,QAAS,aACT+e,qBAAsB,aACtBzM,aAAc,cAGDqP,02GC7SYhN,GAAS9X,SAAS,0uCCOxB4lB,eACnB,SAAAA,EAAY1d,GAAO,IAAAa,EAAA,mGAAA8c,CAAApgC,KAAAmgC,IACjB7c,EAAA+c,GAAArgC,KAAAsgC,GAAAH,GAAAtT,KAAA7sB,KAAMyiB,KACDgQ,OAAS,KAFGnP,0PADmBpB,IAAMC,kDAKnC,IAAAQ,EAC0B3iB,KAAKyiB,MAA9B8d,EADD5d,EACC4d,WAAe9d,EADhB+d,GAAA7d,EAAA,gBAGP,OAAO2H,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CACE7gC,KAAK,UAEL2gC,WAAYA,GACzBjW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,EAAY9d,MAAO,CAAChf,GAAK,QAAvD,OACA6mB,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,EAAY9d,MAAO,CAAChf,GAAK,gBAAvD,eACA6mB,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,IAAI2gC,WAAYA,GAA7B,wHACAjW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,GAC9BjW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,EAAYG,WAAW,MAAKpW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,IAAI2gC,WAAYA,EAAYG,WAAW,KAAKje,MAAO,CAACke,KAAO,4IAAxE,eAC1DrW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,EAAYG,WAAW,MAAKpW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,IAAI2gC,WAAYA,EAAYG,WAAW,KAAKje,MAAO,CAACke,KAAO,gJAAxE,oBAC1DrW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,EAAYG,WAAW,MAAKpW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,IAAI2gC,WAAYA,EAAYG,WAAW,KAAKje,MAAO,CAACke,KAAO,8HAAxE,iBAE1DrW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,EAAY9d,MAAO,CAAChf,GAAK,yBAAvD,wBACA6mB,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,IAAI2gC,WAAYA,GAA7B,2CACAjW,EAAA3d,EAAA2a,cAACmZ,EAAA,OAAD,CAAQ7gC,KAAK,KAAK2gC,WAAYA,EAAY9d,MAAO,CAAChf,GAAK,gBAAvD,eACA6mB,EAAA3d,EAAA2a,cAACsZ,EAAA,EAAD,CAAYC,cAAa,oi8FAAui8FC,WAAY,EAAGC,OAAQ,0DAA2DC,QAAS,CAACve,MAAOziB,KAAOA,KAAKyiB,MAAQA,EAAMgK,SAC3r8FnC,EAAA3d,EAAA2a,cAAC2Z,GAAD,CAAK/6B,SAAU,CAAEE,OAAQ,CAAC,KAAO,QAASD,KAAM","file":"static/js/src-map-map.068f1238.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"map_map__1CWd_\",\"googleLogo\":\"map_googleLogo__2KshJ\"};","/* eslint-disable */\nvar byname = {\n  Uint8: {\n    size: Uint8Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint8',\n    setter: 'setUint8',\n  },\n  Int8: {\n    size: Int8Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint8',\n    setter: 'setUint8',\n  },\n  Uint16: {\n    size: Uint16Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint16',\n    setter: 'setUint16',\n  },\n  Int16: {\n    size: Int16Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getInt16',\n    setter: 'setInt16',\n  },\n  Uint32: {\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint32',\n    setter: 'setUint32',\n  },\n  Int32: {\n    size: Int32Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getInt32',\n    setter: 'setInt32',\n  },\n  Float32: {\n    size: Float32Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getFloat32',\n    setter: 'setFloat32',\n  },\n  Float64: {\n    size: Float64Array.BYTES_PER_ELEMENT,\n    array: 'Float64Array',\n    getter: 'getFloat64',\n    setter: 'setFloat64',\n  },\n}\n\nvar writeStringToArrayBuffer = function(str, start, end, buf, bufstart) {\n  if (end == undefined) {\n    end = str.length\n  }\n  if (start == undefined) {\n    start = 0\n  }\n  if (bufstart == undefined) {\n    bufstart = start\n  }\n  for (var i = start; i < end; i++) {\n    buf[i - start + bufstart] = str.charCodeAt(i) & 0xff\n  }\n}\n\nvar stringToArrayBuffer = function(str, start, end) {\n  var self = this\n\n  if (end == undefined) {\n    end = str.length\n  }\n  if (start == undefined) {\n    start = 0\n  }\n  var res = new Uint8ClampedArray(end - start)\n  writeStringToArrayBuffer(str, start, end, res, 0)\n  return res.buffer\n}\n\nvar arrayBufferToString = function(buf) {\n  return String.fromCharCode.apply(null, new Uint8Array(buf))\n}\n\nvar pack = function(typespec, value, littleendian) {\n  var array = new ArrayBuffer(typespec.size)\n  new DataView(array)[typespec.setter](0, value, littleendian)\n  return arrayBufferToString(array)\n}\n\nvar Pack = {\n  typemap: {\n    byname: byname,\n    byarray: {},\n  },\n  pack: pack,\n  arrayBufferToString: arrayBufferToString,\n  stringToArrayBuffer: stringToArrayBuffer,\n  writeStringToArrayBuffer: writeStringToArrayBuffer,\n}\nfor (var name in Pack.typemap.byname) {\n  var spec = Pack.typemap.byname[name]\n  spec.name = name\n  Pack.typemap.byarray[spec.array] = spec\n}\n\nexport default Pack\n","/* eslint-disable */\n\nimport Pack from './Pack'\n\nclass PelagosClient {\n  constructor() {\n    this.MAGIC_COOKIE = 'tmtx'\n  }\n\n  obtainTile(url, token) {\n    return new Promise(\n      function(resolve, reject) {\n        this.request = null\n        if (typeof XMLHttpRequest != 'undefined') {\n          this.request = new XMLHttpRequest()\n        } else {\n          throw 'XMLHttpRequest is disabled'\n        }\n        this.resolve = resolve\n        this.reject = reject\n        this.request.open('GET', url, true)\n        if (token) {\n          this.request.setRequestHeader('Authorization', `Bearer ${token}`)\n        }\n        this.request.responseType = 'arraybuffer'\n        this.request.onload = this.handleData.bind(this)\n        this.request.onerror = this.handleData.bind(this)\n        this.request.send(null)\n      }.bind(this)\n    )\n  }\n\n  handleData() {\n    var self = this\n    if (!this.request) {\n      return\n    }\n    if (this.error) {\n      return true\n    }\n\n    if (this.request.readyState == 4) {\n      /* HTTP reports success with a 200 status. The file protocol\n       reports success with zero. HTTP returns zero as a status\n       code for forbidden cross domain requests.\n       https://developer.mozilla.org/En/Using_XMLHttpRequest */\n      var success = this.request.status == 200 || (this.isFileUri && this.request.status == 0)\n      if (!success) {\n        this.resolve(null)\n        return\n      }\n    }\n\n    if (!this.request.response) {\n      return\n    }\n    var length = this.request.response.byteLength\n    var response = this.request.response\n    var dataView = new DataView(response)\n\n    if (length < 4 + 4) {\n      return\n    }\n    if (self.headerLen == null) {\n      var cookie = Pack.arrayBufferToString(response.slice(0, 4))\n      if (cookie != this.MAGIC_COOKIE) {\n        this.reject(\n          'Could not load ' +\n            this.url +\n            ' due to incorrect file format. Cookie: [' +\n            this.cookie +\n            ']'\n        )\n        return\n      }\n\n      self.headerLen = dataView.getInt32(4, true)\n\n      self.offset = 4 + 4\n    }\n    if (length < self.offset + self.headerLen) {\n      return\n    }\n    if (!self.headerIsLoaded) {\n      self.header = JSON.parse(\n        Pack.arrayBufferToString(response.slice(self.offset, self.offset + self.headerLen))\n      )\n      self.rowLen = 0\n      self.header.colsByName = {}\n      for (var colidx = 0; colidx < self.header.cols.length; colidx++) {\n        var col = self.header.cols[colidx]\n        col.idx = colidx\n        self.header.colsByName[col.name] = col\n        col.typespec = Pack.typemap.byname[col.type]\n\n        if (col.multiplier != undefined && col.min != undefined) {\n          col.min = col.min * col.multiplier\n        }\n        if (col.offset != undefined && col.min != undefined) {\n          col.min = col.min + col.offset\n        }\n        if (col.multiplier != undefined && col.max != undefined) {\n          col.max = col.max * col.multiplier\n        }\n        if (col.offset != undefined && col.max != undefined) {\n          col.max = col.max + col.offset\n        }\n\n        self.rowLen += col.typespec.size\n      }\n      self.offset += self.headerLen\n\n      // Add the padding to nearest 4-byte-boundary\n      self.offset += (4 - (self.headerLen % 4)) % 4\n\n      self.headerIsLoaded = true\n      if (self.header.orientation != 'rowwise' && self.header.orientation != 'columnwise') {\n        self.errorLoading({\n          orientation: self.header.orientation,\n          toString: function() {\n            return (\n              'Could not load ' +\n              this.url +\n              ' due to unsupported file orientation. Orientation: ' +\n              this.orientation +\n              '. Supported orientations: rowwise, columnwise.'\n            )\n          },\n        })\n        return true\n      }\n\n      // Empty tile, stop parsing.\n      if (!self.rowLen) {\n        self.allLoaded()\n        return true\n      }\n    }\n    if (self.header.orientation == 'rowwise') {\n      var result = {}\n      for (; self.offset + self.rowLen <= length; self.rowidx++) {\n        var row = {}\n        for (var colidx = 0; colidx < self.header.cols.length; colidx++) {\n          var col = self.header.cols[colidx]\n          var val = dataView[col.typespec.getter](self.offset, true)\n          row[col.name] = val\n          self.offset += col.typespec.size\n        }\n        // self.rowLoaded(row);\n\n        result[col.name] = row\n      }\n      if (self.rowidx == self.header.length) {\n        // self.allLoaded();\n        this.resolve(result)\n      } else {\n        // self.batchLoaded();\n      }\n    } else if (self.header.orientation == 'columnwise') {\n      var colValues = null\n      var result = {}\n      if (length >= self.offset + self.header.length * self.rowLen) {\n        for (var colidx = 0; colidx < self.header.cols.length; colidx++) {\n          var col = self.header.cols[colidx]\n\n          colValues = new (eval(col.typespec.array))(\n            response.slice(self.offset, self.offset + col.typespec.size * self.header.length)\n          )\n          self.offset += self.header.length * col.typespec.size\n\n          result[col.name] = colValues\n        }\n\n        // self.allLoaded();\n        this.resolve(result)\n        return true\n      }\n    }\n  }\n}\n\nexport default PelagosClient\n","import PropTypes from 'prop-types'\n\nexport const trackTypes = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  data: PropTypes.object,\n  color: PropTypes.string,\n  type: PropTypes.oneOf(['geojson', 'pelagos', undefined]),\n  layerTemporalExtents: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  fitBoundsOnLoad: PropTypes.bool,\n}\n","import PropTypes from 'prop-types'\n\nexport const heatmapLayerTypes = {\n  id: PropTypes.string.isRequired,\n  tilesetId: PropTypes.string,\n  subtype: PropTypes.string,\n  visible: PropTypes.bool,\n  hue: PropTypes.number,\n  opacity: PropTypes.number,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      // hue overrides layer hue if set\n      hue: PropTypes.number,\n      // filterValues is a dictionary in which each key is a filterable field,\n      // and values is an array of all possible values (OR filter)\n      // ie: filterValues: { category: [5, 6] }\n      filterValues: PropTypes.object,\n    })\n  ),\n  header: PropTypes.shape({\n    endpoints: PropTypes.object,\n    colsByName: PropTypes.object,\n    temporalExtents: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    temporalExtentsLess: PropTypes.bool,\n  }).isRequired,\n  interactive: PropTypes.bool,\n}\n\nexport const basemapLayerTypes = {\n  id: PropTypes.string,\n  visible: PropTypes.bool,\n}\n\nexport const staticLayerTypes = {\n  id: PropTypes.string.isRequired,\n  // TODO MAP MODULE Is that needed and if so why\n  visible: PropTypes.bool,\n  selected: PropTypes.bool,\n  selectedFeatures: PropTypes.shape({\n    field: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.string),\n  }),\n  highlighted: PropTypes.bool,\n  higlightedFeatures: PropTypes.shape({\n    field: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.string),\n  }),\n  opacity: PropTypes.number,\n  color: PropTypes.string,\n  showLabels: PropTypes.bool,\n  interactive: PropTypes.bool,\n  filters: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  isCustom: PropTypes.bool,\n  subtype: PropTypes.oneOf([undefined, 'geojson', 'raster']),\n  url: PropTypes.string,\n  data: PropTypes.object,\n  gl: PropTypes.object,\n}\n","import PropTypes from 'prop-types'\n\nexport const popupTypes = {\n  content: PropTypes.node,\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n}\n\nexport const viewportTypes = {\n  zoom: PropTypes.number,\n  center: PropTypes.arrayOf(PropTypes.number),\n}\n","// Application settings\nexport const TIMELINE_STEP = 24 * 60 * 60 * 1000 // 1 day\nexport const MIN_FRAME_LENGTH_MS = TIMELINE_STEP // 1 day\n\n// vessels rendering\n// from this zoom level and above, render using circle style instead of heatmap\nexport const VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD = 6\n// the base radius, it can only be scaled down by the radius factor calculated on the dataset\nexport const VESSELS_BASE_RADIUS = 8\n// in heatmap style, defines how 'blurry' a point will look. Higher = less blur\nexport const VESSELS_HEATMAP_BLUR_FACTOR = 0.15\n\nexport const ACTIVITY_HIGHLIGHT_HUE = 312\n\nexport const VESSELS_HEATMAP_DIMMING_ALPHA = 0.5\n\nexport const MAX_SPRITES_PER_LAYER = 200000\n\n// interaction\n// radius of vessels lookup in pixels,\n// ie how large the clicked region should be for including vessels\nexport const VESSEL_CLICK_TOLERANCE_PX = 10\n\nexport const CLUSTER_CLICK_ZOOM_INCREMENT = 1\n\nexport const MIN_ZOOM_LEVEL = 1\n// user can zoom up to this z level, but it doesn't guarantee availability of tiles\nexport const MAX_ZOOM_LEVEL = 14\n\n// data\n// Limit tile loading for activity layers up to this z level.\n// Beyond, layer is still displayed but with coarse data from the lower zoom level\nexport const ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING = 10\n\n// Sets what should be the discrete zoom level to load tiles, from a non-discrete\n// viewport zoom values. For instance, a values of 0.5 will load z 3 with a viewport\n// z of 2 (ceiling of 2 + 0.5)\n// this has a direct impact on the number of points displayed on the map, thus on the\n// performance of the app.\nexport const TILES_LOAD_ZOOM_OFFSET = 0.5\n\nexport const STATIC_LAYERS_CARTO_ENDPOINT =\n  'https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG'\nexport const STATIC_LAYERS_CARTO_TILES_ENDPOINT =\n  'https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt'\n\nexport const TRACKS_LAYER_IN_FRONT_OF_GROUP = 'temporal'\n\nexport const TILES_URL_NEEDING_AUTHENTICATION = 'dot-world-fishing'\n","export const INIT_MODULE = 'INIT_MODULE'\nexport const SET_TEMPORAL_EXTENT = 'SET_TEMPORAL_EXTENT'\nexport const SET_HIGHLIGHT_TEMPORAL_EXTENT = 'SET_HIGHLIGHT_TEMPORAL_EXTENT'\nexport const START_LOADER = 'START_LOADER'\nexport const COMPLETE_LOADER = 'COMPLETE_LOADER'\nexport const SET_MODULE_CURSOR = 'SET_MODULE_CURSOR'\n\nexport const initModule = (props) => (dispatch) => {\n  dispatch({\n    type: INIT_MODULE,\n    payload: props,\n  })\n}\n\nexport const startLoader = (dispatch, state, loaderId) => {\n  const timestamp = new Date().getTime()\n  const generatedLoaderId = loaderId !== undefined ? `${loaderId}_${timestamp}` : timestamp\n  dispatch({\n    type: START_LOADER,\n    payload: generatedLoaderId,\n  })\n  if (state.map.module.onLoadStart !== undefined) {\n    state.map.module.onLoadStart()\n  }\n  return loaderId\n}\n\nexport const completeLoader = (loaderId) => (dispatch, getState) => {\n  dispatch({\n    type: COMPLETE_LOADER,\n    payload: loaderId,\n  })\n  const state = getState()\n  const loaders = state.map.module.loaders\n  if (!loaders.length && state.map.module.onLoadComplete !== undefined) {\n    state.map.module.onLoadComplete()\n  }\n}\n\nexport const onViewportChange = (interactionState) => (dispatch, getState) => {\n  const state = getState()\n  const callback = state.map.module.onViewportChange\n\n  if (callback === undefined) {\n    return\n  }\n  const viewport = state.map.viewport\n\n  callback({\n    interactionState,\n    zoom: viewport.viewport.zoom,\n    center: [viewport.viewport.latitude, viewport.viewport.longitude],\n    bounds: viewport.bounds,\n    canZoomIn: viewport.canZoomIn,\n    canZoomOut: viewport.canZoomOut,\n    mouseLatLong: viewport.mouseLatLong,\n  })\n}\n\nexport const setTemporalExtent = (temporalExtent) => ({\n  type: SET_TEMPORAL_EXTENT,\n  payload: temporalExtent,\n})\n\nexport const setHighlightTemporalExtent = (highlightTemporalExtent) => ({\n  type: SET_HIGHLIGHT_TEMPORAL_EXTENT,\n  payload: highlightTemporalExtent,\n})\n\nexport const closePopup = () => (dispatch, getState) => {\n  const state = getState()\n  if (state.map.module.onClosePopup !== undefined) {\n    state.map.module.onClosePopup()\n  }\n}\n\nexport const setCursor = (cursor) => ({\n  type: SET_MODULE_CURSOR,\n  payload: cursor,\n})\n","export const getTemporalExtent = (state) => state.map.module.temporalExtent\n\nexport const getHighlightTemporalExtent = (state) => state.map.module.highlightTemporalExtent\n","import { createSelector } from 'reselect'\nimport { getTemporalExtent, getHighlightTemporalExtent } from '../module/module.selectors'\n\nexport const getTracksData = (state) => state.map.tracks.data\n\nexport const getGeojsonTracksReady = createSelector(\n  getTracksData,\n  (tracks) => tracks.filter((t) => t.data !== undefined)\n)\n\nconst mergeStyles = (style1, style2) => ({\n  sources: { ...style1.sources, ...style2.sources },\n  layers: [...style1.layers, ...style2.layers],\n})\n\nconst filterGeojsonByTimerange = (geojson, { start, end }) => {\n  if (!geojson || !geojson.features) return null\n  const featuresFiltered = geojson.features.reduce((filteredFeatures, feature) => {\n    const hasTimes =\n      feature.properties &&\n      feature.properties.coordinateProperties &&\n      feature.properties.coordinateProperties.times &&\n      feature.properties.coordinateProperties.times.length > 0\n    if (hasTimes) {\n      const filtered = feature.geometry.coordinates.reduce(\n        (filteredCoordinates, coordinate, index) => {\n          const timeCoordinate = feature.properties.coordinateProperties.times[index]\n          const isInTimeline = timeCoordinate >= start && timeCoordinate <= end\n          if (isInTimeline) {\n            filteredCoordinates.coordinates.push(coordinate)\n            filteredCoordinates.times.push(timeCoordinate)\n          }\n          return filteredCoordinates\n        },\n        { coordinates: [], times: [] }\n      )\n      if (!filtered.coordinates.length) return filteredFeatures\n\n      const filteredFeature = {\n        ...feature,\n        geometry: {\n          ...feature.geometry,\n          coordinates: filtered.coordinates,\n        },\n        properties: {\n          ...feature.properties,\n          coordinateProperties: {\n            times: filtered.times,\n          },\n        },\n      }\n      filteredFeatures.push(filteredFeature)\n    }\n    return filteredFeatures\n  }, [])\n  const geojsonFiltered = {\n    ...geojson,\n    features: featuresFiltered,\n  }\n  return geojsonFiltered\n}\n\nconst getFullTracksStyles = createSelector(\n  [getTemporalExtent, getGeojsonTracksReady],\n  (temporalExtent, tracks) => {\n    const hasTemporalExtent = temporalExtent && temporalExtent.length > 0\n    const hasTracks = tracks && tracks.length > 0\n    if (!hasTemporalExtent || !hasTracks) return null\n\n    const timerange = {\n      start: temporalExtent[0].getTime(),\n      end: temporalExtent[1].getTime(),\n    }\n    const styles = tracks.reduce(\n      (acc, track) => {\n        if (!track.data) return acc\n\n        const source = `${track.id}Track`\n        const style = {\n          sources: {\n            [source]: {\n              type: 'geojson',\n              data: filterGeojsonByTimerange(track.data, timerange),\n            },\n          },\n          layers: [\n            {\n              id: `${track.id}Lines`,\n              source,\n              type: 'line',\n              paint: {\n                'line-width': 1,\n                'line-color': track.color,\n              },\n            },\n            {\n              id: `${track.id}Points`,\n              source,\n              type: 'circle',\n              filter: ['match', ['geometry-type'], ['', 'Point'], true, false],\n              paint: {\n                'circle-radius': 4,\n                'circle-color': track.color,\n              },\n            },\n          ],\n        }\n        return mergeStyles(acc, style)\n      },\n      { sources: {}, layers: [] }\n    )\n    return styles\n  }\n)\n\nconst getHighlightedTrackStyles = createSelector(\n  [getHighlightTemporalExtent, getGeojsonTracksReady],\n  (highlightTemporalExtent, tracks) => {\n    const hasTemporalExtent = highlightTemporalExtent && highlightTemporalExtent.length > 0\n    const hasTracks = tracks && tracks.length > 0\n    if (!hasTemporalExtent || !hasTracks) return null\n\n    const timerange = {\n      start: highlightTemporalExtent[0].getTime(),\n      end: highlightTemporalExtent[1].getTime(),\n    }\n    const styles = tracks.reduce(\n      (acc, track) => {\n        if (!track.data) return acc\n\n        const source = `${track.id}HighlightedTrack`\n        const style = {\n          sources: {\n            [source]: {\n              type: 'geojson',\n              data: filterGeojsonByTimerange(track.data, timerange),\n            },\n          },\n          layers: [\n            {\n              id: `${track.id}HighlightedLines`,\n              source,\n              type: 'line',\n              paint: {\n                'line-width': 1,\n                'line-color': '#fff',\n              },\n            },\n          ],\n        }\n        return mergeStyles(acc, style)\n      },\n      { sources: {}, layers: [] }\n    )\n    return styles\n  }\n)\n\nexport const getTracksStyles = createSelector(\n  [getFullTracksStyles, getHighlightedTrackStyles],\n  (trackStyles, highlightedTrackStyles) => {\n    if (!highlightedTrackStyles) return trackStyles\n    return mergeStyles(trackStyles, highlightedTrackStyles)\n  }\n)\n","export const GL_TRANSPARENT = 'rgba(0,0,0,0)'\n\nexport const TRANSITION_TYPE = {\n  ZOOM: 'ZOOM',\n}\n\nexport const ENCOUNTERS = 'Encounters'\n\nexport const BRUSH_RENDERING_STYLE = {\n  NORMAL: 0,\n  BULLSEYE: 2,\n}\n\nexport const BRUSH_ZOOM_RENDERING_STYLE = {\n  RADIAL_GRADIENT: 0,\n  CIRCLE: 1,\n}\n\nexport const POLYGON_LAYERS_AREA = 'POLYGON_LAYERS_AREA'\n\nexport const CUSTOM_LAYERS_SUBTYPES = {\n  geojson: 'geojson',\n  raster: 'raster',\n}\n","import pull from 'lodash/pull'\nimport uniq from 'lodash/uniq'\nimport sumBy from 'lodash/sumBy'\nimport { lngLatToWorld } from 'viewport-mercator-project'\nimport convert from '@globalfishingwatch/map-convert'\nimport buildEndpoint from './buildEndpoint'\nimport PelagosClient from '../lib/pelagosClient'\n\n/**\n * Generates the URLs to load vessel track data for a tile\n *\n * @param {string} tilesetUrl       the tileset base URL\n * @param {array} temporalExtents   all tileset temporal extents\n * @param {object} params           - tileCoordinates: this tiles tile coordinates (zoom, x, y). Will default to 0,0,0\n *                                  - temporalExtentsIndices: restrict to these temporalExtents indices\n * @returns {Array}                 an array of URLs for this tile\n */\nconst getTemporalTileURLs = (urlTemplate, temporalExtents, params = {}) => {\n  const urls = []\n\n  ;(temporalExtents || [null]).forEach((extent, index) => {\n    const urlParams = {}\n    if (extent !== null && params.temporalExtentsLess !== true) {\n      urlParams.startTimeISO = new Date(extent[0]).toISOString()\n      urlParams.endTimeISO = new Date(extent[1]).toISOString()\n    }\n    if (params.tileCoordinates) {\n      urlParams.x = params.tileCoordinates.x\n      urlParams.y = params.tileCoordinates.y\n      urlParams.z = params.tileCoordinates.zoom\n    }\n\n    const url = buildEndpoint(urlTemplate, urlParams)\n\n    if (\n      params.temporalExtentsLess === true ||\n      !params.temporalExtentsIndices ||\n      params.temporalExtentsIndices.indexOf(index) > -1\n    ) {\n      urls.push(url)\n    }\n  })\n  return urls\n}\n\n/**\n * See getTemporalTileURLs.\n */\nexport const getTilePromises = (tilesetUrl, token, temporalExtents, params = {}) => {\n  const promises = []\n  const urls = getTemporalTileURLs(tilesetUrl, temporalExtents, params)\n  for (let urlIndex = 0, length = urls.length; urlIndex < length; urlIndex++) {\n    promises.push(new PelagosClient().obtainTile(urls[urlIndex], token))\n  }\n\n  return promises\n}\n\nexport const getCleanVectorArrays = (rawTileData) =>\n  rawTileData.filter((vectorArray) => vectorArray !== null)\n\n/**\n * As data will come in multiple arrays (1 per API query/year basically), they need to be merged here\n *\n * @param cleanVectorArrays an array of objects containing a Float32Array for each vessel param (lat, lon, weight...)\n * @param columns the keys to pick on the vectorArrays (lat, lon, weight, etc)\n * @returns an object containing a Float32Array for each API_RETURNED_KEY (lat, lon, weight, etc)\n */\nexport const groupData = (cleanVectorArrays, columns) => {\n  const data = {}\n\n  const totalVectorArraysLength = sumBy(cleanVectorArrays, (a) => a.longitude.length)\n\n  const filteredColumns = columns.filter((column) => {\n    if (cleanVectorArrays[0] && cleanVectorArrays[0][column] === undefined) {\n      console.warn(`column ${column} is present in layerHeader.colsByName but not in tile data`)\n      return false\n    }\n    return true\n  })\n\n  filteredColumns.forEach((key) => {\n    data[key] = new Float32Array(totalVectorArraysLength)\n  })\n\n  let currentArray\n  let cumulatedOffsets = 0\n\n  const appendValues = (key) => {\n    data[key].set(currentArray[key], cumulatedOffsets)\n  }\n\n  for (let index = 0, length = cleanVectorArrays.length; index < length; index++) {\n    currentArray = cleanVectorArrays[index]\n    filteredColumns.forEach(appendValues)\n    cumulatedOffsets += currentArray.longitude.length\n  }\n  return data\n}\n\n/**\n * Converts Vector Array data to Playback format and stores it locally.\n * The data structure is an array indexed by a time unit, ie a set of points every day\n * This preprocessing step allows playback to play smoothly as the necessary conversions and data structure set up\n * is done once (after tile has been loaded)\n *\n * @param data the source data before indexing by day, an object containing\n *  - a vector (Float32Array) for each header's column in the case of Pelagos tiles\n *  - an array of points int the case of PBF tiles\n * @param colsByName the columns present on the dataset, determined by tileset headers\n * @param tileCoordinates x, y, z\n * @param prevPlaybackData an optional previously loaded tilePlaybackData array (when adding time range)\n */\nexport const getTilePlaybackData = (data, colsByName, tileCoordinates, prevPlaybackData) => {\n  const tilePlaybackData = prevPlaybackData === undefined ? [] : prevPlaybackData\n\n  const zoom = tileCoordinates.zoom\n  const zoomFactorRadius = convert.getZoomFactorRadius(zoom)\n  const zoomFactorRadiusRenderingMode = convert.getZoomFactorRadiusRenderingMode(zoom)\n  const zoomFactorOpacity = convert.getZoomFactorOpacity(zoom)\n\n  // store all available columns as object keys\n  const columns = {}\n  const columnsArr = Object.keys(colsByName)\n  columnsArr.forEach((c) => {\n    columns[c] = true\n  })\n\n  // columns specified by layer header columns\n  let storedColumns = [].concat(columnsArr)\n  if (columns.sigma === true) storedColumns.push('radius')\n  if (columns.weight === true) storedColumns.push('opacity')\n  if (columns.longitude === true) {\n    storedColumns.push('worldX')\n    storedColumns.push('worldY')\n  }\n  if (columns.id === true) {\n    storedColumns.push('series')\n  }\n\n  // omit values that will be transformed before being stored to playback data (ie lat -> worldY)\n  // only if hidden: true flag is set on header\n  ;['latitude', 'longitude', 'datetime'].forEach((col) => {\n    if (colsByName[col] === undefined || colsByName[col].hidden === true) {\n      pull(storedColumns, col)\n    }\n  })\n  // always pull sigma and weight\n  pull(storedColumns, 'sigma', 'weight')\n  storedColumns = uniq(storedColumns)\n\n  const numPoints = data.latitude.length\n\n  const newFrames = {}\n  const timeIndexes = []\n  for (let index = 0, length = numPoints; index < length; index++) {\n    let point = {}\n    columnsArr.forEach((c) => {\n      point[c] = data[c][index]\n    })\n\n    const timeIndex = columns.timeIndex\n      ? point.timeIndex\n      : convert.getOffsetedTimeAtPrecision(point.datetime)\n\n    // FIXME: this should not be done when headers declare worldX/Y -  if (!columns.worldX) {\n    const [worldX, worldY] = lngLatToWorld([point.longitude, point.latitude], 1)\n    point.worldX = worldX\n    point.worldY = worldY\n\n    if (columns.sigma) {\n      point.radius = convert.sigmaToRadius(\n        point.sigma,\n        zoomFactorRadiusRenderingMode,\n        zoomFactorRadius\n      )\n    }\n    if (columns.weight) {\n      point.opacity = convert.weightToOpacity(point.weight, zoomFactorOpacity)\n    }\n    if (columns.id) {\n      point.series = point.id\n    }\n\n    if (!newFrames[timeIndex]) {\n      timeIndexes.push(timeIndex)\n      const frame = {}\n      storedColumns.forEach((column) => {\n        frame[column] = [point[column]]\n      })\n      newFrames[timeIndex] = frame\n      continue\n    }\n    const frame = newFrames[timeIndex]\n    storedColumns.forEach((column) => {\n      frame[column].push(point[column])\n    })\n  }\n\n  // finally, copy new frames to the overall tilePlaybackData object\n  // frames previously existing here will be overwritten\n  timeIndexes.forEach((timeIndex) => {\n    tilePlaybackData[timeIndex] = newFrames[timeIndex]\n  })\n  return tilePlaybackData\n}\n\nexport const vesselSatisfiesFilters = (frame, index, filterValues) => {\n  const satisfiesFilters = Object.keys(filterValues).every((field) => {\n    if (frame[field] === undefined) {\n      // this field is not available on this layer. This can happen in an edge case described\n      // here: https://github.com/GlobalFishingWatch/map-client/issues/661#issuecomment-334496469\n      return false\n    }\n    return filterValues[field].indexOf(frame[field][index]) > -1\n  })\n  return satisfiesFilters\n}\n\nconst vesselSatisfiesAllFilters = (frame, index, filters) => {\n  const satisfiesAllFilters = filters\n    .filter((f) => f.pass !== true)\n    .some((filter) => vesselSatisfiesFilters(frame, index, filter.filterValues))\n  return satisfiesAllFilters\n}\n\nexport const selectVesselsAt = (tileData, tileQuery, startIndex, endIndex, currentFilters) => {\n  const vessels = []\n\n  const { worldX, worldY, toleranceRadiusInWorldUnits } = tileQuery\n\n  for (let f = startIndex; f < endIndex; f++) {\n    const frame = tileData[f]\n    if (frame === undefined) continue\n    for (let i = 0; i < frame.worldX.length; i++) {\n      const wx = frame.worldX[i]\n      const wy = frame.worldY[i]\n\n      if (\n        (!currentFilters.length || vesselSatisfiesAllFilters(frame, i, currentFilters)) &&\n        wx >= worldX - toleranceRadiusInWorldUnits &&\n        wx <= worldX + toleranceRadiusInWorldUnits &&\n        wy >= worldY - toleranceRadiusInWorldUnits &&\n        wy <= worldY + toleranceRadiusInWorldUnits\n      ) {\n        const vessel = {}\n\n        Object.keys(frame).forEach((key) => {\n          vessel[key] = frame[key][i]\n        })\n        vessel.timeIndex = f\n        vessels.push(vessel)\n      }\n    }\n  }\n  return vessels\n}\n\n/*\nexport const getHistogram = (tiles, propName = 'weight') => {\n  let data = tiles\n    .filter(tile => tile.ready)\n    .map(tile => tile.data\n      .map(frame => frame[propName]));\n  data = flattenDeep(data);\n  if (data.length) {\n    const bins = d3.histogram().thresholds(d3.thresholdScott)(data);\n    const x = d3.scaleLinear().domain([0, d3.max(bins, d => d.length)]).range([0, 50]);\n    console.table(bins.filter(bin => bin.length).map((bin) => {\n      const binMin = d3.min(bin).toLocaleString({ maximumFractionDigits: 2 });\n      const binMax = d3.max(bin).toLocaleString({ maximumFractionDigits: 2 });\n      return {\n        range: [binMin, binMax].join('﹣'),\n        bars: Array(Math.round(x(bin.length))).join('█'),\n        num: bin.length\n      };\n    }));\n  }\n};\n*/\n","import template from 'lodash/template'\nimport templateSettings from 'lodash/templateSettings'\n\nexport default (urlTemplate, urlParams) => {\n  templateSettings.interpolate = /{{([\\s\\S]+?)}}/g\n  const urlTemplateCompiled = template(urlTemplate)\n  return urlTemplateCompiled(urlParams)\n}\n","import tilecover from '@mapbox/tile-cover/index'\nimport debounce from 'lodash/debounce'\nimport { PerspectiveMercatorViewport } from 'viewport-mercator-project'\nimport { ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING, TILES_LOAD_ZOOM_OFFSET } from '../config'\nimport {\n  getTile,\n  releaseTiles,\n  highlightVesselFromHeatmap,\n  updateLoadedTiles,\n} from './heatmap.actions'\n\nexport const SET_CURRENTLY_VISIBLE_TILES = 'SET_CURRENTLY_VISIBLE_TILES'\nexport const SET_CURRENTLY_LOADED_TILES = 'SET_CURRENTLY_LOADED_TILES'\nexport const SET_CURRENTLY_SWAPPED_TILE_UIDS = 'SET_CURRENTLY_SWAPPED_TILE_UIDS'\nexport const MARK_TILES_UIDS_AS_LOADED = 'MARK_TILES_UIDS_AS_LOADED'\nexport const RELEASE_MARKED_TILES_UIDS = 'RELEASE_MARKED_TILES_UIDS'\n\n// restrict tilecover to a single zoom level\n// could be customized to load less or more detailed tiles\nconst getTilecoverLimits = (viewportZoom) => {\n  let zoom = Math.ceil(viewportZoom + TILES_LOAD_ZOOM_OFFSET)\n  let tilesAvailable = true\n  if (zoom > ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING) {\n    zoom = ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING\n    tilesAvailable = false\n  }\n  return {\n    min_zoom: zoom,\n    max_zoom: zoom,\n    tilesAvailable,\n  }\n}\n\nconst flushToReleaseTiles = () => (dispatch, getState) => {\n  const state = getState()\n  const currentToLoadTileUids = state.map.heatmapTiles.currentToLoadTileUids\n  // console.log('Tiles left to load: ', currentToLoadTileUids);\n\n  // Tiles are released only when all to-load tiles have finished loading\n  // this is to ensure smooth visual transitions between zoom levels\n  if (!currentToLoadTileUids.length) {\n    const currentTilesToReleaseUids = state.map.heatmapTiles.currentToReleaseTileUids\n    // console.log('no more tiles to load, releasing ', currentTilesToReleaseUids);\n    dispatch(releaseTiles(currentTilesToReleaseUids))\n    dispatch({\n      type: RELEASE_MARKED_TILES_UIDS,\n    })\n  }\n}\n\nexport const markTileAsLoaded = (tileUids) => (dispatch) => {\n  dispatch({\n    type: MARK_TILES_UIDS_AS_LOADED,\n    payload: tileUids,\n  })\n  // console.log(tileUids, 'have finished loading');\n  dispatch(flushToReleaseTiles())\n}\n\nconst flushTileState = (forceLoadingAllVisibleTiles = false) => (dispatch, getState) => {\n  const state = getState()\n  const currentVisibleTiles = state.map.heatmapTiles.currentVisibleTiles\n  let tilesToLoad = []\n  const tilesToReleaseUids = []\n\n  if (forceLoadingAllVisibleTiles === true) {\n    tilesToLoad = currentVisibleTiles\n  } else {\n    const currentLoadedTiles = state.map.heatmapTiles.currentLoadedTiles\n\n    currentVisibleTiles.forEach((visibleTile) => {\n      if (currentLoadedTiles.find((t) => t.uid === visibleTile.uid) === undefined) {\n        tilesToLoad.push(visibleTile)\n      }\n    })\n\n    currentLoadedTiles.forEach((loadedTile) => {\n      if (currentVisibleTiles.find((t) => t.uid === loadedTile.uid) === undefined) {\n        tilesToReleaseUids.push(loadedTile.uid)\n      }\n    })\n  }\n\n  const tilesToLoadUids = tilesToLoad.map((t) => t.uid)\n  // console.log('force loading:', forceLoadingAllVisibleTiles)\n  // console.log('visible', currentVisibleTiles.map(t => t.uid))\n  // console.log('load', tilesToLoadUids)\n  // console.log('release', tilesToReleaseUids)\n  // console.log('----')\n\n  tilesToLoad.forEach((tile) => {\n    dispatch(getTile(tile))\n  })\n  dispatch({\n    type: SET_CURRENTLY_LOADED_TILES,\n    payload: currentVisibleTiles,\n  })\n\n  dispatch({\n    type: SET_CURRENTLY_SWAPPED_TILE_UIDS,\n    payload: {\n      tilesToLoadUids,\n      tilesToReleaseUids,\n    },\n  })\n\n  dispatch(updateLoadedTiles())\n  dispatch(flushToReleaseTiles())\n}\n\nconst _debouncedFlushState = (dispatch) => {\n  dispatch(flushTileState())\n}\nconst debouncedFlushState = debounce(_debouncedFlushState, 500)\n\nexport const updateHeatmapTilesFromViewport = (forceLoadingAllVisibleTiles = false) => (\n  dispatch,\n  getState\n) => {\n  // if in transition, skip loading/releasing\n  // else\n  //   collect all tiles in viewport\n  //   save them to reducer: currentVisibleTiles\n  // if not zooming: flush immediately\n  //   if forceLoadingAllVisiblelTiles\n  //     get tiles from currentVisibleTiles\n  //   else\n  //     get tiles from currentVisibleTiles\n  //     make delta with currentLoadedTiles\n  //     get tiles from delta+\n  //     release tiles from delta-\n  //   save to reducer: currentVisibleTiles -> currentLoadedTiles\n  // if zooming: debounced flush to avoid \"tile spam\"\n  const mapViewport = getState().map.viewport\n  const viewport = mapViewport.viewport\n\n  // do not allow any tile update during transitions (currently only zoom)\n  // wait for the end of the transition to look at viewport and load matching tiles\n  if (!viewport.width || !viewport.height || mapViewport.currentTransition !== null) {\n    return\n  }\n\n  // instanciate a viewport instance to get lat/lon from screen top left/ bottom right bounds\n  const boundsViewport = new PerspectiveMercatorViewport(viewport)\n  const bounds = [\n    boundsViewport.unproject([0, 0]),\n    boundsViewport.unproject([viewport.width, viewport.height]),\n  ]\n\n  const [wn, es] = bounds\n  const [w, s, e, n] = [wn[0], es[1], es[0], wn[1]]\n  const boundsPolygonsCoordinates = []\n\n  const limits = getTilecoverLimits(viewport.zoom)\n  if (limits.tilesAvailable === false && forceLoadingAllVisibleTiles !== true) {\n    return\n  }\n\n  if (e > 180 || w < -180) {\n    // deal with the antimeridian situation by splitting the bounds polygon into two polygons\n    const w1 = e > 180 ? w : w + 360\n    const e1 = 180 - 0.001\n    const w2 = -180\n    const e2 = e > 180 ? e - 360 : e\n    boundsPolygonsCoordinates.push([[[w1, n], [e1, n], [e1, s], [w1, s], [w1, n]]])\n    boundsPolygonsCoordinates.push([[[w2, n], [e2, n], [e2, s], [w2, s], [w2, n]]])\n  } else {\n    boundsPolygonsCoordinates.push([[[w, n], [e, n], [e, s], [w, s], [w, n]]])\n  }\n\n  const geom = {\n    type: 'MultiPolygon',\n    coordinates: boundsPolygonsCoordinates,\n  }\n\n  // using tilecover, get xyz tile coords as well as quadkey indexes (named uid through the app)\n  const viewportTilesCoords = tilecover.tiles(geom, limits)\n  const viewportTilesIndexes = tilecover.indexes(geom, limits)\n  const visibleTiles = []\n\n  viewportTilesCoords.forEach((coords, i) => {\n    const uid = viewportTilesIndexes[i]\n    const zoom = coords[2]\n    if (zoom >= 2) {\n      visibleTiles.push({\n        tileCoordinates: {\n          x: coords[0],\n          y: coords[1],\n          zoom: coords[2],\n        },\n        uid,\n      })\n    }\n  })\n\n  dispatch({\n    type: SET_CURRENTLY_VISIBLE_TILES,\n    payload: visibleTiles,\n  })\n\n  const isMouseWheelZooming = mapViewport.prevZoom !== viewport.zoom\n\n  if (isMouseWheelZooming === false) {\n    dispatch(flushTileState(forceLoadingAllVisibleTiles))\n  } else {\n    debouncedFlushState(dispatch)\n  }\n}\n\nexport const queryHeatmapVessels = (coords, temporalExtentIndexes) => (dispatch, getState) => {\n  // use tilecover to get what tile quadkey/uid \"belongs\" to the point\n  const geom = {\n    type: 'Point',\n    coordinates: [coords.longitude, coords.latitude],\n  }\n  const zoom = getState().map.viewport.viewport.zoom\n\n  // get quadkey for tile at current zoom level, but also neighbouring zoom levels,\n  // in case current zoom level tiles has not been loaded yet\n  const uids = [zoom, zoom - 1, zoom + 1]\n    .map((z) => getTilecoverLimits(z))\n    .map((limits) => tilecover.indexes(geom, limits))\n    .map((indexes) => indexes[0])\n\n  const query = {\n    ...coords,\n    uids,\n  }\n\n  // console.log(query);\n  dispatch(highlightVesselFromHeatmap(query, temporalExtentIndexes))\n}\n","import difference from 'lodash/difference'\nimport uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport {\n  getTilePromises,\n  getCleanVectorArrays,\n  groupData,\n  getTilePlaybackData,\n  selectVesselsAt,\n} from '../utils/heatmapTileData'\nimport { markTileAsLoaded } from './heatmapTiles.actions'\nimport { startLoader, completeLoader } from '../module/module.actions'\n\nexport const ADD_HEATMAP_LAYER = 'ADD_HEATMAP_LAYER'\nexport const UPDATE_HEATMAP_LAYER_STYLE = 'UPDATE_HEATMAP_LAYER_STYLE'\nexport const ADD_REFERENCE_TILE = 'ADD_REFERENCE_TILE'\nexport const HIGHLIGHT_VESSELS = 'HIGHLIGHT_VESSELS'\nexport const INIT_HEATMAP_LAYERS = 'INIT_HEATMAP_LAYERS'\nexport const REMOVE_HEATMAP_LAYER = 'REMOVE_HEATMAP_LAYER'\nexport const UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES =\n  'UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES'\nexport const UPDATE_HEATMAP_TILE = 'UPDATE_HEATMAP_TILE'\nexport const RELEASE_HEATMAP_TILES = 'RELEASE_HEATMAP_TILES'\nexport const UPDATE_LOADED_TILES = 'UPDATE_LOADED_TILES'\nexport const HIGHLIGHT_CLICKED_VESSEL = 'HIGHLIGHT_CLICKED_VESSEL'\nexport const CLEAR_HIGHLIGHT_CLICKED_VESSEL = 'CLEAR_HIGHLIGHT_CLICKED_VESSEL'\n\n/**\n * getTemporalExtentsVisibleIndices - Compares timebar outer extent with temporal extents present on the layer header\n * @param  {array} loadTemporalExtent Current timebar outer extent\n * @param  {array} layerTemporalExtents Temporal extent present on the layer's header (an array of extent arrays)\n * @return {array}                    Indices of the layer's temporal extents that should be visible\n */\nfunction getTemporalExtentsVisibleIndices(loadTemporalExtent, layerTemporalExtents) {\n  const currentExtentStart = loadTemporalExtent[0].getTime()\n  const currentExtentEnd = loadTemporalExtent[1].getTime()\n  const indices = []\n  layerTemporalExtents.forEach((temporalExtent, index) => {\n    const temporalExtentStart = temporalExtent[0]\n    const temporalExtentEnd = temporalExtent[1]\n    if (temporalExtentEnd >= currentExtentStart && temporalExtentStart <= currentExtentEnd) {\n      indices.push(index)\n    }\n  })\n  return indices\n}\n\n/**\n * loadLayerTile - loads an heatmap tile.\n *\n * @param  {string} layerId              layer id\n * @param  {object} tileCoordinates      tile coordinates from reference tile\n * @param  {string} token                the user's token\n * @param  {array} temporalExtentsIndices which of the temporal extents from  temporalExtents should be loaded\n * @param  {string} urls                 tile endpoints provided by header\n * @param  {array} temporalExtents       all of the layer's header temporal extents\n * @param  {bool} temporalExtentsLess    true = don't try to load different tiles based on current time extent\n * @return {Promise}                     a Promise that will be resolved when tile is loaded\n */\nfunction loadLayerTile(\n  layerId,\n  tileCoordinates,\n  token,\n  temporalExtentsIndices,\n  { url, temporalExtents, temporalExtentsLess }\n) {\n  // console.log('loadLayerTile', layerId, tileCoordinates, temporalExtentsIndices)\n  if (url === undefined) {\n    throw new Error('URL/endpoints object is not available on this tilesets header')\n  }\n  const pelagosPromises = getTilePromises(url, token, temporalExtents, {\n    tileCoordinates,\n    temporalExtentsIndices,\n    temporalExtentsLess,\n  })\n  const allLayerPromises = Promise.all(pelagosPromises)\n\n  const layerTilePromise = new Promise((resolve) => {\n    allLayerPromises.then((rawTileData) => {\n      resolve({\n        loadedLayerId: layerId,\n        rawTileData,\n      })\n    })\n  })\n\n  return layerTilePromise\n}\n\n/**\n * parseLayerTile - parses an heatmap tile to a playback-ready format.\n *\n * @param  {Object} rawTileData          the raw tile data, loaded either from the pelagos client or as a MVT/PBF vector tile\n * @param  {array} colsByName            names of the columns present in the raw tiles that need to be included in the final playback data\n * @param  {object} tileCoordinates      tile coordinates from reference tile\n * @param  {array} prevPlaybackData      (optional) in case some time extent was already loaded for this tile, append to this data\n * @return {Object}                      playback-ready merged data\n */\nfunction parseLayerTile(rawTileData, colsByName, tileCoordinates, prevPlaybackData) {\n  let data\n\n  const cleanVectorArrays = getCleanVectorArrays(rawTileData)\n  data = groupData(cleanVectorArrays, Object.keys(colsByName))\n  if (Object.keys(data).length === 0) {\n    return []\n  }\n\n  const playbackData = getTilePlaybackData(data, colsByName, tileCoordinates, prevPlaybackData)\n  return playbackData\n}\n\n/**\n * getTiles - loads a bunch of heatmap tiles\n * @param  {array} layerIds                 list of layer Ids that need to be loaded for this/these tiles\n * @param  {array} referenceTiles           list of reference tiles (tile data regardless of layer) that need to be loaded\n * @param  {object} newTemporalExtentsToLoad (optional) a dict (layerId is the key) of temporal extents\n * indices that should be appended to existing data\n */\nfunction getTiles(layerIds, referenceTiles, newTemporalExtentsToLoad = undefined) {\n  return (dispatch, getState) => {\n    const state = getState()\n    const loaderID = startLoader(dispatch, state, layerIds.join('-'))\n    const token = state.map.module.token\n    const heatmapLayers = state.map.heatmap.heatmapLayers\n    const tilesByLayer = {}\n    layerIds.forEach((id) => {\n      tilesByLayer[id] = [...heatmapLayers[id].tiles]\n    })\n    const allPromises = []\n\n    layerIds.forEach((layerId) => {\n      const heatmapLayerHeader = heatmapLayers[layerId].header\n      const { temporalExtents, temporalExtentsLess, colsByName } = { ...heatmapLayerHeader }\n      const url = heatmapLayerHeader.endpoints.tiles\n\n      referenceTiles.forEach((referenceTile) => {\n        // check if tile does not already exist first\n        let tile = tilesByLayer[layerId].find((t) => t.uid === referenceTile.uid)\n        if (!tile) {\n          // console.log('create tile ', referenceTile.uid)\n          tile = {\n            uid: referenceTile.uid,\n            temporalExtentsIndicesLoaded: [],\n          }\n          tilesByLayer[layerId].push(tile)\n        } else {\n          // console.log('found tile', referenceTile.uid)\n        }\n\n        const queriedTemporalExtentsIndices =\n          newTemporalExtentsToLoad === undefined\n            ? heatmapLayers[layerId].visibleTemporalExtentsIndices\n            : newTemporalExtentsToLoad[layerId]\n\n        const temporalExtentsIndicesToLoad = difference(\n          queriedTemporalExtentsIndices,\n          tile.temporalExtentsIndicesLoaded\n        )\n\n        const tilePromise = loadLayerTile(\n          layerId,\n          referenceTile.tileCoordinates,\n          token,\n          temporalExtentsIndicesToLoad,\n          {\n            url,\n            temporalExtents,\n            temporalExtentsLess,\n          }\n        )\n\n        allPromises.push(tilePromise)\n\n        tilePromise.then(({ loadedLayerId, rawTileData }) => {\n          tile.temporalExtentsIndicesLoaded = uniq(\n            tile.temporalExtentsIndicesLoaded.concat(temporalExtentsIndicesToLoad)\n          )\n          tile.data = parseLayerTile(\n            rawTileData,\n            colsByName,\n            referenceTile.tileCoordinates,\n            tile.data\n          )\n\n          dispatch({\n            type: UPDATE_HEATMAP_TILE,\n            payload: {\n              layerId: loadedLayerId,\n              tile,\n            },\n          })\n        })\n      })\n    })\n\n    Promise.all(allPromises).then(() => {\n      dispatch(completeLoader(loaderID))\n      dispatch(markTileAsLoaded(referenceTiles.map((tile) => tile.uid)))\n    })\n  }\n}\n\n/**\n * getTile - This action is emitted when a new tile is queried from panning or zooming the map\n * This will load a tile for all currently visible heatmap layers\n *\n * @param  {object} referenceTile a reference tile containing xyz coords and uid\n */\nexport function getTile(referenceTile) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_REFERENCE_TILE,\n      payload: referenceTile,\n    })\n    const visibleHeatmapLayers = getState().map.heatmap.heatmapLayers\n    const visibleHeatmapLayersIds = Object.keys(visibleHeatmapLayers).filter(\n      (id) => visibleHeatmapLayers[id].visible === true\n    )\n\n    if (visibleHeatmapLayersIds.length) {\n      dispatch(getTiles(visibleHeatmapLayersIds, [referenceTile]))\n    }\n  }\n}\n\n/**\n * releaseTiles - This action is emitted when an existing tile is removed from panning or zooming the map\n * @param  {array} uids tile ref uids to release\n */\nexport const releaseTiles = (uids) => ({\n  type: RELEASE_HEATMAP_TILES,\n  payload: uids,\n})\n\nexport const updateLoadedTiles = () => ({\n  type: UPDATE_LOADED_TILES,\n})\n\n// triggered when a layer is added or set to visible\nfunction loadAllTilesForLayer(layerId) {\n  return (dispatch, getState) => {\n    //                current layer, all reference tiles\n    const referenceTiles = getState().map.heatmap.referenceTiles\n    dispatch(getTiles([layerId], referenceTiles))\n  }\n}\n\nexport const addHeatmapLayer = (layer, loadTemporalExtent) => (dispatch) => {\n  const layerTemporalExtents = layer.header.temporalExtents\n  dispatch({\n    type: ADD_HEATMAP_LAYER,\n    payload: {\n      ...layer,\n      // initially attach which of the temporal extents indices are visible with initial outerExtent\n      visibleTemporalExtentsIndices: getTemporalExtentsVisibleIndices(\n        loadTemporalExtent,\n        layerTemporalExtents\n      ),\n    },\n  })\n\n  if (layer.visible === true) {\n    dispatch(loadAllTilesForLayer(layer.id))\n  }\n}\n\nexport const removeHeatmapLayer = (id) => (dispatch) => {\n  dispatch({\n    type: REMOVE_HEATMAP_LAYER,\n    payload: {\n      id,\n    },\n  })\n}\n\n/**\n * updateLayerLoadTemporalExtents - when outer time extent changes, checks if more tiles needs to be loaded\n * by comparing the outer time range with the temporalExtent already loaded on each layer.\n * @param  {array} loadTemporalExtent Current app-wide extent of tiles that need to load, expressed\n * as an array of two dates\n */\nexport function updateLayerLoadTemporalExtents(loadTemporalExtent) {\n  return (dispatch, getState) => {\n    const state = getState()\n    const heatmapLayers = state.map.heatmap.heatmapLayers\n    const indicesToAddByLayer = {}\n\n    Object.keys(heatmapLayers).forEach((layerId) => {\n      const heatmapLayer = heatmapLayers[layerId]\n      const temporalExtents = heatmapLayer.header.temporalExtents\n      const oldVisibleTemporalExtentsIndices = heatmapLayer.visibleTemporalExtentsIndices\n      const newVisibleTemporalExtentsIndices = getTemporalExtentsVisibleIndices(\n        loadTemporalExtent,\n        temporalExtents\n      )\n\n      const indicesAdded = difference(\n        newVisibleTemporalExtentsIndices,\n        oldVisibleTemporalExtentsIndices\n      )\n\n      const indicesRemoved = difference(\n        oldVisibleTemporalExtentsIndices,\n        newVisibleTemporalExtentsIndices\n      )\n\n      if (indicesAdded.length || indicesRemoved.length) {\n        // add new loaded indices to heatmap layer if applicable\n        dispatch({\n          type: UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES,\n          payload: {\n            layerId,\n            newVisibleTemporalExtentsIndices,\n            indicesRemoved,\n          },\n        })\n      }\n      if (indicesAdded.length) {\n        indicesToAddByLayer[layerId] = indicesAdded\n      }\n    })\n\n    // getTiles with indices diff\n    const layerIdsWithIndicesToAdd = Object.keys(indicesToAddByLayer)\n    if (layerIdsWithIndicesToAdd.length) {\n      dispatch(\n        getTiles(layerIdsWithIndicesToAdd, state.map.heatmap.referenceTiles, indicesToAddByLayer)\n      )\n    }\n  }\n}\n\n/**\n * Returns clusters or vessels data from a tileQuery\n * @param {object} state - the application state\n * @param {string} tileQuery - the id of a heatmap layer\n * @return {object} { isEmpty, isCluster, isMouseCluster, foundVessels, layerId, tilesetId }\n */\nconst _queryHeatmap = (state, tileQuery, temporalExtentIndexes) => {\n  const layers = state.map.heatmap.heatmapLayers\n  const startIndex = temporalExtentIndexes[0]\n  const endIndex = temporalExtentIndexes[1]\n  const layersVessels = []\n\n  Object.keys(layers).forEach((layerId) => {\n    const layer = layers[layerId]\n    if (layer.visible !== true) {\n      return\n    }\n    const allPossibleTilesByPreference = tileQuery.uids.map((uid) =>\n      layer.tiles.find((tile) => tile.uid === uid)\n    )\n    const availableTiles = allPossibleTilesByPreference.filter(\n      (tile) => tile !== undefined && tile.data !== undefined\n    )\n\n    const currentFilters = layer.filters\n    if (availableTiles.length) {\n      const bestTile = availableTiles[0]\n      layersVessels.push({\n        layer,\n        vessels: selectVesselsAt(bestTile.data, tileQuery, startIndex, endIndex, currentFilters),\n      })\n    }\n  })\n\n  const layersVesselsResults = layersVessels.filter(\n    (layerVessels) => layerVessels.vessels.length > 0\n  )\n\n  // it's a cluster because of aggregation on the server side\n  let isCluster\n  // its a cluster because or multiple vessels under mouse\n  let isMouseCluster\n  let isEmpty\n  let layerVesselsResult\n  let foundVessels\n\n  if (layersVesselsResults.length === 0) {\n    isEmpty = true\n  } else if (layersVesselsResults.length > 1) {\n    // if there are points over multiple layers, consider this a cluster (ie don't select, zoom instead, or don't highlight)\n    // there's an exception if vessel selection contains an encounter, in which case it will take priority\n    isCluster = true\n  } else {\n    // layersVesselsResults should contain a single result\n    layerVesselsResult = layersVesselsResults[0]\n\n    // we can get multiple points with similar series and id, in which case\n    // we should treat that as a successful vessel query, not a cluster\n    const vessels = layerVesselsResult.vessels\n\n    if (vessels.length === 0) {\n      isEmpty = true\n    } else {\n      // look up for any negatives ids (clusters on the server side)\n      const clusteredVessels = vessels.filter((v) => v.id < 0)\n      if (clusteredVessels.length) {\n        isCluster = true\n      } else {\n        foundVessels = uniqBy(vessels, (v) => v.series)\n        isMouseCluster = foundVessels.length > 1\n      }\n    }\n  }\n\n  const layer = layerVesselsResult === undefined ? {} : layerVesselsResult.layer\n\n  return { isEmpty, isCluster, isMouseCluster, foundVessels, layer }\n}\n\nexport function clearHighlightedVessels() {\n  return {\n    type: HIGHLIGHT_VESSELS,\n    payload: {\n      isEmpty: true,\n      clickableCluster: false,\n    },\n  }\n}\n\nexport function highlightVesselFromHeatmap(tileQuery, temporalExtentIndexes) {\n  return (dispatch, getState) => {\n    const state = getState()\n    const { layer, isEmpty, isCluster, isMouseCluster, foundVessels } = _queryHeatmap(\n      state,\n      tileQuery,\n      temporalExtentIndexes\n    )\n\n    if (\n      isCluster === true ||\n      layer.id !== undefined ||\n      state.map.heatmap.highlightedVessels.layerId !== layer.id\n    ) {\n      const layerPayload =\n        layer === undefined\n          ? null\n          : {\n              id: layer.id,\n              tilesetId: layer.tilesetId,\n              subtype: layer.subtype,\n              header: layer.header,\n            }\n      dispatch({\n        type: HIGHLIGHT_VESSELS,\n        payload: {\n          layer: layerPayload,\n          isEmpty,\n          clickableCluster: isCluster === true || isMouseCluster === true,\n          highlightableCluster: isCluster !== true,\n          foundVessels,\n        },\n      })\n    } else {\n      dispatch(clearHighlightedVessels())\n    }\n  }\n}\n\nexport const highlightClickedVessel = (id, layerId) => ({\n  type: HIGHLIGHT_CLICKED_VESSEL,\n  payload: {\n    id,\n    layerId,\n  },\n})\n\nexport const clearHighlightedClickedVessel = () => ({\n  type: CLEAR_HIGHLIGHT_CLICKED_VESSEL,\n})\n\nexport const updateHeatmapLayers = (newLayers, currentLoadTemporalExtent) => (\n  dispatch,\n  getState\n) => {\n  if (newLayers === null) {\n    console.warn(\"New layers in updateHeatmapLayers can't be null\")\n    return\n  }\n  const prevLayersDict = getState().map.heatmap.heatmapLayers\n\n  // add and update layers\n  newLayers.forEach((newLayer) => {\n    const layerId = newLayer.id\n    const prevLayer = prevLayersDict[layerId]\n    if (prevLayer === undefined) {\n      // console.log('adding', layerId)\n      dispatch(addHeatmapLayer(newLayer, currentLoadTemporalExtent))\n    } else {\n      if (prevLayer.visible !== newLayer.visible && newLayer.visible === true) {\n        dispatch(loadAllTilesForLayer(layerId))\n      }\n      if (\n        prevLayer.visible !== newLayer.visible ||\n        prevLayer.hue !== newLayer.hue ||\n        prevLayer.opacity !== newLayer.opacity ||\n        prevLayer.filters !== newLayer.filters ||\n        prevLayer.interactive !== newLayer.interactive\n      ) {\n        // console.log('updating', layerId, ' with visibilty', newLayer.visible)\n        dispatch({\n          type: UPDATE_HEATMAP_LAYER_STYLE,\n          payload: {\n            id: newLayer.id,\n            visible: newLayer.visible,\n            hue: newLayer.hue,\n            opacity: newLayer.opacity,\n            filters: newLayer.filters,\n            interactive: newLayer.interactive,\n          },\n        })\n      }\n    }\n  })\n\n  // clean up unused layers\n  Object.keys(prevLayersDict).forEach((prevLayerId) => {\n    if (!newLayers.find((l) => l.id === prevLayerId)) {\n      dispatch(removeHeatmapLayer(prevLayerId))\n    }\n  })\n}\n","import { fitBounds, pixelsToWorld } from 'viewport-mercator-project'\nimport { updateHeatmapTilesFromViewport } from '../heatmap/heatmapTiles.actions'\nimport { onViewportChange } from '../module/module.actions'\nimport { CLUSTER_CLICK_ZOOM_INCREMENT } from '../config' // TODO MAP MODULE\n\nexport const SET_BOUNDS = 'SET_BOUNDS'\nexport const SET_VIEWPORT = 'SET_VIEWPORT'\nexport const UPDATE_VIEWPORT = 'UPDATE_VIEWPORT'\nexport const SET_ZOOM_INCREMENT = 'SET_ZOOM_INCREMENT'\nexport const SET_MOUSE_LAT_LONG = 'SET_MOUSE_LAT_LONG'\nexport const TRANSITION_END = 'TRANSITION_END'\nexport const SET_NATIVE_VIEWPORT = 'SET_NATIVE_VIEWPORT'\n\nexport const setBounds = (bounds) => ({\n  type: SET_BOUNDS,\n  payload: bounds,\n})\n\nexport const setViewport = (viewport, interactionState) => (dispatch) => {\n  dispatch({\n    type: SET_VIEWPORT,\n    payload: viewport,\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  dispatch(onViewportChange(interactionState))\n}\n\nexport const updateViewport = (viewportUpdate) => (dispatch) => {\n  dispatch({\n    type: UPDATE_VIEWPORT,\n    payload: viewportUpdate,\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  // Not needed as call the callback with the same values\n  // dispatch(onViewportChange())\n}\n\nconst transitionTo = (increment, latitude = null, longitude = null, zoom = null) => (dispatch) => {\n  dispatch({\n    type: SET_ZOOM_INCREMENT,\n    payload: {\n      increment,\n      latitude,\n      longitude,\n      zoom,\n    },\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  dispatch(onViewportChange())\n}\n\nexport const transitionToZoom = (viewport) => (dispatch) => {\n  dispatch(transitionTo(null, viewport.center[0], viewport.center[1], viewport.zoom))\n}\n\nexport const transitionEnd = () => (dispatch) => {\n  dispatch({\n    type: TRANSITION_END,\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  dispatch(onViewportChange())\n}\n\nexport const zoomIntoVesselCenter = (latitude, longitude, zoom = null) => (dispatch) => {\n  dispatch(transitionTo(CLUSTER_CLICK_ZOOM_INCREMENT, latitude, longitude, zoom))\n}\n\nexport const fitToBounds = (bounds) => (dispatch, getState) => {\n  const state = getState()\n  const vp = fitBounds({\n    bounds: [[bounds.minLng, bounds.minLat], [bounds.maxLng, bounds.maxLat]],\n    width: state.map.viewport.viewport.width,\n    height: state.map.viewport.viewport.height,\n    padding: 50,\n  })\n  dispatch(transitionTo(null, vp.latitude, vp.longitude, vp.zoom))\n}\n\nexport const exportNativeViewport = (nativeViewport) => (dispatch) => {\n  const topLeftPx = [0, 0]\n  const bottomRightPx = [nativeViewport.width, nativeViewport.height]\n\n  // compute left and right offsets to deal with antimeridian issue\n  const topLeftWorld = pixelsToWorld(topLeftPx, nativeViewport.pixelUnprojectionMatrix)\n  const bottomRightWorld = pixelsToWorld(bottomRightPx, nativeViewport.pixelUnprojectionMatrix)\n  const leftWorldScaled = topLeftWorld[0] / nativeViewport.scale\n  const rightWorldScaled = bottomRightWorld[0] / nativeViewport.scale\n\n  // lat/lon corners for miniglobe\n  const northWest = nativeViewport.unproject(topLeftPx)\n  const southEast = nativeViewport.unproject(bottomRightPx)\n  const bounds = {\n    north: northWest[1],\n    south: southEast[1],\n    west: northWest[0],\n    east: southEast[0],\n  }\n\n  dispatch({\n    type: SET_NATIVE_VIEWPORT,\n    payload: {\n      leftWorldScaled,\n      rightWorldScaled,\n      bounds,\n    },\n  })\n}\n","import area from '@turf/area'\nimport { POLYGON_LAYERS_AREA } from '../constants'\nimport { clearHighlightedVessels, clearHighlightedClickedVessel } from '../heatmap/heatmap.actions'\nimport { zoomIntoVesselCenter } from './viewport.actions'\n\nexport const SET_POPUP = 'SET_POPUP'\nexport const CLEAR_POPUP = 'CLEAR_POPUP'\nexport const SET_MAP_CURSOR = 'SET_MAP_CURSOR'\n\nconst getAreaKm2 = (glFeature) => {\n  const areakm2 = 10 ** -6 * area(glFeature.geometry)\n  const formatted = areakm2.toLocaleString('en-US', { maximumFractionDigits: 0 })\n  return formatted\n}\n\nconst getFields = (glFeature, source = null) => {\n  if (source === null || source === undefined) {\n    // console.warn('Couldnt find source when looking for fields of layer', sourceId)\n  }\n\n  const fieldsDefinition =\n    !source || source.metadata === undefined || source.metadata['gfw:popups'] === undefined\n      ? []\n      : source.metadata['gfw:popups']\n\n  const properties = glFeature.properties\n\n  // whitelist if 'gfw:popups' exist, if not return all\n  const fieldsKeys = Object.keys(glFeature.properties).filter(\n    (k) => fieldsDefinition.length === 0 || fieldsDefinition.find((fd) => fd.id === k) !== undefined\n  )\n\n  const fields = fieldsKeys.map((fieldKey) => {\n    const value = fieldKey === POLYGON_LAYERS_AREA ? getAreaKm2(glFeature) : properties[fieldKey]\n    const def = fieldsDefinition.find((fd) => fd.id === fieldKey) || {}\n    const label = def.label || fieldKey\n    return {\n      id: fieldKey,\n      label,\n      value,\n      title: `${label}: ${value}`,\n      isLink: def.isLink,\n      isMain: def.isMain,\n    }\n  })\n\n  const mainField =\n    fields.find((f) => f.isMain === true) ||\n    fields.find((f) => f.id === 'name') ||\n    fields.find((f) => f.id === 'id') ||\n    fields[0]\n\n  if (mainField !== undefined) {\n    mainField.isMain = true\n  }\n  return fields\n}\n\nconst getCluster = (glFeature, glGetSource) => {\n  const clusterId = glFeature.properties.cluster_id\n  const sourceId = glFeature.source\n  const glSource = glGetSource(sourceId)\n  const promise = new Promise((resolve, reject) => {\n    glSource.getClusterExpansionZoom(clusterId, (err1, zoom) => {\n      glSource.getClusterLeaves(clusterId, 99, 0, (err2, children) => {\n        if (err1 || err2) {\n          reject()\n        }\n        const childrenFeatures = children.map((child) =>\n          getFeature(child, glFeature.layer.id, glSource)\n        )\n        resolve({\n          zoom,\n          childrenFeatures,\n        })\n      })\n    })\n  })\n  return promise\n}\n\nconst getFeature = (glFeature, layerId, source) => {\n  const feature = {\n    properties: glFeature.properties,\n  }\n  const fields = getFields(glFeature, source)\n  feature.fields = fields\n\n  // Get most likely feature title\n  const mainField = fields.find((f) => f.isMain === true)\n  feature.title = mainField === undefined ? layerId : mainField.value\n\n  return feature\n}\n\nexport const mapInteraction = (interactionType, latitude, longitude, glFeatures, glGetSource) => (\n  dispatch,\n  getState\n) => {\n  if (interactionType === 'click') {\n    dispatch(clearHighlightedClickedVessel())\n  }\n\n  const currentStyle = getState().map.style.mapStyle.toJS()\n\n  const event = {\n    latitude,\n    longitude,\n    features: [],\n  }\n\n  // Collect and normalize features on legacy heatmap\n  const currentLegacyHeatmapData = getState().map.heatmap.highlightedVessels\n  let legacyHeatmapFeature\n\n  if (currentLegacyHeatmapData.isEmpty !== true) {\n    const foundVessels =\n      currentLegacyHeatmapData.foundVessels === undefined\n        ? []\n        : currentLegacyHeatmapData.foundVessels\n    const properties = foundVessels.length === 0 ? [] : foundVessels[0]\n    const isCluster = currentLegacyHeatmapData.clickableCluster === true\n    const count =\n      isCluster === true && currentLegacyHeatmapData.highlightableCluster === false\n        ? -1\n        : foundVessels.length\n    legacyHeatmapFeature = {\n      isCluster,\n      count,\n      layer: {\n        id: currentLegacyHeatmapData.layer.id,\n        group: 'legacyHeatmap',\n      },\n      properties,\n    }\n    event.features.push(legacyHeatmapFeature)\n  }\n\n  // Try to retrieve 'gfw:id' (generated when instanciating CARTO layer to preserve original style.json id)\n  // In most cases it won't exist, so fall back to source id\n  const getStaticLayerIdFromGlFeature = (glFeature) =>\n    (glFeature.layer.metadata !== undefined && glFeature.layer.metadata['gfw:id']) ||\n    glFeature.layer.source\n\n  // Collect gl features\n  const clusterPromises = []\n  const allGlFeatures = glFeatures || []\n  allGlFeatures.forEach((glFeature) => {\n    const layerId = getStaticLayerIdFromGlFeature(glFeature)\n    const source = currentStyle.sources[layerId]\n    const feature = {\n      layer: {\n        id: layerId,\n        group: glFeature.layer.metadata && glFeature.layer.metadata['mapbox:group'],\n      },\n      ...getFeature(glFeature, layerId, source),\n    }\n\n    if (glFeature.properties.cluster === true) {\n      // lookup for cluster\n      const clusterPromise = getCluster(glFeature, glGetSource).then((cluster) => {\n        feature.cluster = cluster\n        feature.count = cluster.childrenFeatures.length\n      })\n      clusterPromises.push(clusterPromise)\n      feature.isCluster = true\n    } else {\n      feature.isCluster = false\n    }\n    event.features.push(feature)\n  })\n\n  Promise.all(clusterPromises).then(() => {\n    // The whole set of features is considered a cluster\n    // if any feature is a cluster, or there is more than one feature\n    event.isCluster =\n      event.features.length > 1 || event.features.some((feature) => feature.isCluster === true)\n\n    // legacy heatmap layers can yield clusters with an unknown number of features, handle this here:\n    if (legacyHeatmapFeature !== undefined && legacyHeatmapFeature.count === -1) {\n      event.count = -1\n    } else {\n      event.count = event.features.reduce((count, feature) => {\n        let featureCount = feature.count || 1\n        return count + featureCount\n      }, 0)\n    }\n\n    if (event.count === 1) {\n      event.feature = event.features[0]\n    }\n\n    // When autoClusterZoom is set to true, we handle zoom here\n    const autoClusterZoom = getState().map.module.autoClusterZoom === true\n\n    // Check if cluster using customizable isCluster() callback\n    // If not set resolves simply to (event) => event.isCluster === true\n    const clusterBehavior = getState().map.module.isCluster(event)\n    event.isCluster = clusterBehavior\n\n    if (autoClusterZoom) {\n      if (interactionType === 'click' && event.isCluster === true) {\n        dispatch(clearHighlightedVessels())\n        const clusterZoom = event.features[0].cluster && event.features[0].cluster.zoom\n        dispatch(zoomIntoVesselCenter(latitude, longitude, clusterZoom))\n      }\n    }\n\n    let cursor = event.features.length ? 'pointer' : null\n    if (event.isCluster === true) {\n      cursor = 'zoom-in'\n    }\n\n    dispatch({\n      type: SET_MAP_CURSOR,\n      payload: cursor,\n    })\n\n    const callback =\n      interactionType === 'click' ? getState().map.module.onClick : getState().map.module.onHover\n\n    if (callback !== undefined) {\n      callback(event)\n    }\n  })\n}\n","const RGB_MAX = 255\nconst HUE_MAX = 360\nconst SV_MAX = 100\n\nexport const VESSELS_HUES_INCREMENTS_NUM = 31 // 360 / VESSELS_HUES_INCREMENTS_NUM - 1  should give a round number\nexport const VESSELS_HUES_INCREMENT = 360 / (VESSELS_HUES_INCREMENTS_NUM - 1)\n\n// Legacy: this is only here for compatibility with pre-mapbox branch workspaces\nexport const COLOR_HUES = {\n  orange: 0,\n  peach: 22,\n  yellow: 60,\n  green: 85,\n  brightGreen: 145,\n  lightBlue: 182,\n  blue: 236,\n  purple: 284,\n  pink: 312,\n}\n\n// FIXME mark explicitely as legacy. Check all usages.\nexport const getKeyByValue = (obj, value) => {\n  let result = null\n  Object.entries(obj).forEach((entry) => {\n    if (entry[1] === value) result = entry[0]\n  })\n  return result\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport const rgbToHsv = (_r, _g, _b) => {\n  const r = _r / 255\n  const g = _g / 255\n  const b = _b / 255\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h\n  const v = max\n\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0 // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n      default:\n        h = 0\n    }\n\n    h /= 6\n  }\n\n  return [h, s, v]\n}\n\n// converts hue, saturation, luminance to an rgb object\nexport const hsvToRgb = (h_, s_, v_) => {\n  const h = ((h_ % HUE_MAX) / parseFloat(HUE_MAX)) * 6\n  const s = s_ === SV_MAX ? 1 : (s_ % SV_MAX) / parseFloat(SV_MAX)\n  const v = v_ === SV_MAX ? 1 : (v_ % SV_MAX) / parseFloat(SV_MAX)\n\n  const i = Math.floor(h)\n  const f = h - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  const mod = i % 6\n  const r = [v, q, p, p, t, v][mod]\n  const g = [t, v, v, q, p, p][mod]\n  const b = [p, p, t, v, v, q][mod]\n\n  return { r: Math.round(r * RGB_MAX), g: Math.round(g * RGB_MAX), b: Math.round(b * RGB_MAX) }\n}\n\n// returns an rgb string with default saturation and luminance values\nconst hueToRgbDefaults = (hue) => hsvToRgb(hue, 50, 100)\n\nexport const hueToRgbString = (hue) => {\n  const rgb = hueToRgbDefaults(hue)\n  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n}\n\nexport const rgbToHexString = (rgb, css) => {\n  const str = ['r', 'g', 'b']\n    .map((channelName) => {\n      const channelValue = rgb[channelName]\n      let channelStr = channelValue.toString(16)\n      if (channelValue < 16) {\n        channelStr = `0${channelStr}`\n      }\n      return channelStr\n    })\n    .join('')\n  const prefix = css === true ? '#' : '0x'\n  return `${prefix}${str}`\n}\n\nexport const hueToRgbHexString = (hue, css) => {\n  const rgb = hueToRgbDefaults(hue)\n  return rgbToHexString(rgb, css)\n}\n\nconst closestNumber = (numberArray, goal) =>\n  numberArray.reduce((prev, curr) => (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev))\n\nexport const hueToClosestColor = (hue) => {\n  if (hue === undefined || hue === null) return undefined\n  const colorHueValues = Object.keys(COLOR_HUES).map((key) => COLOR_HUES[key])\n  const closestHue = closestNumber(colorHueValues, hue)\n  return getKeyByValue(COLOR_HUES, closestHue)\n}\n\nexport const hexToRgb = (hex) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null\n}\n\nconst rgbToRgbaString = (rgb, opacity) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${opacity})`\n\nexport const hueToRgbaString = (hue, opacity) => {\n  const rgb = hueToRgbDefaults(hue)\n  return rgbToRgbaString(rgb, opacity)\n}\n\nexport const hexToRgba = (hex, opacity) => {\n  const rgb = hexToRgb(hex)\n  return rgbToRgbaString(rgb, opacity)\n}\n\nexport const hueIncrementToHue = (hueIncrement) => hueIncrement * VESSELS_HUES_INCREMENT\n\nexport const hueToHueIncrement = (hue) =>\n  Math.round((hue / 360) * (VESSELS_HUES_INCREMENTS_NUM - 1))\n\nexport const wrapHue = (hue) => hue % 360\n\nexport const hueOrColorToHexColor = (color, hue) => {\n  if (hue !== undefined) {\n    return hueToRgbHexString(hue, true)\n  }\n\n  return color\n}\n","/* global PIXI */\nimport 'pixi.js'\nimport { hueToHueIncrement, VESSELS_HUES_INCREMENTS_NUM } from '../utils/map-colors'\nimport { VESSELS_BASE_RADIUS, MAX_SPRITES_PER_LAYER } from '../config'\n\nexport default class HeatmapSubLayer {\n  constructor(baseTexture, renderingStyleIndex, hue, useNormalBlendMode = false) {\n    // this.stage = new PIXI.Container();\n    // the ParticleContainer is a faster version of the PIXI sprite container\n    this.stage = new PIXI.particles.ParticleContainer(MAX_SPRITES_PER_LAYER, {\n      scale: true,\n      alpha: true,\n      position: true,\n      uvs: true,\n    })\n    if (useNormalBlendMode === false) {\n      this.stage.blendMode = PIXI.BLEND_MODES.SCREEN\n    }\n\n    this.spritesPool = []\n\n    const initialTextureFrame = new PIXI.Rectangle(\n      0,\n      0,\n      VESSELS_BASE_RADIUS * 2,\n      VESSELS_BASE_RADIUS * 2\n    )\n    this.mainVesselTexture = new PIXI.Texture(baseTexture, initialTextureFrame)\n    this._setTextureFrame(renderingStyleIndex, hue)\n\n    this.clearSpriteProps()\n  }\n\n  clearSpriteProps() {\n    this.spritesProps = {\n      x: new Float32Array(MAX_SPRITES_PER_LAYER),\n      y: new Float32Array(MAX_SPRITES_PER_LAYER),\n      a: new Float32Array(MAX_SPRITES_PER_LAYER),\n      s: new Float32Array(MAX_SPRITES_PER_LAYER),\n    }\n    this.spritesPropsCount = 0\n  }\n\n  pushSpriteProps(x, y, a, s) {\n    this.spritesProps.x[this.spritesPropsCount] = x\n    this.spritesProps.y[this.spritesPropsCount] = y\n    this.spritesProps.a[this.spritesPropsCount] = a\n    this.spritesProps.s[this.spritesPropsCount] = s\n    this.spritesPropsCount++\n  }\n\n  setRenderingStyleIndex(renderingStyleIndex) {\n    this._setTextureFrame(renderingStyleIndex)\n  }\n\n  destroy() {\n    this.spritesPool = null\n    this.stage.destroy({ children: true })\n  }\n\n  /**\n   * Updates the main texture frame offset to show different brush styles and hues\n   * Both args are optional, if one is omitted, previous value is used\n   * @heatmapStyle bool whether to use heatmap style or solid circle style\n   * @hue number hue value between 0 and 360\n   */\n  _setTextureFrame(renderingStyleIndex = null, hue = null) {\n    const textureFrame = this.mainVesselTexture.frame.clone()\n\n    if (renderingStyleIndex !== null) {\n      // one diameter + tiny offset between 2 frames\n      textureFrame.x = VESSELS_BASE_RADIUS * 2 * renderingStyleIndex + renderingStyleIndex\n    }\n\n    if (hue !== null) {\n      let hueIncrement = hueToHueIncrement(hue)\n      if (hueIncrement === VESSELS_HUES_INCREMENTS_NUM - 1) {\n        hueIncrement = 0\n      }\n      textureFrame.y = hueIncrement * VESSELS_BASE_RADIUS * 2\n      if (hueIncrement > 0) {\n        textureFrame.y += hueIncrement\n      }\n    }\n\n    this.mainVesselTexture.frame = textureFrame\n    this.mainVesselTexture.update()\n  }\n\n  render() {\n    const numProps = this.spritesPropsCount\n    this.resizeSpritesPool()\n\n    for (let i = 0; i < numProps; i++) {\n      const sprite = this.stage.children[i]\n      const s = this.spritesProps.s[i]\n      sprite.setTransform(this.spritesProps.x[i], this.spritesProps.y[i], s, s)\n      sprite.alpha = this.spritesProps.a[i]\n    }\n\n    const numSprites = this.stage.children.length\n    for (let i = numProps; i < numSprites; i++) {\n      const sprite = this.stage.children[i]\n      sprite.x = -100\n    }\n  }\n\n  resizeSpritesPool() {\n    const numProps = this.spritesPropsCount\n    const prevNumSprites = this.stage.children.length\n    const delta = numProps - prevNumSprites\n    // console.log(prevNumSprites, '->', numProps, ' delta:', delta);\n\n    if (delta < -4999) {\n      // sprite needs to be removed. Do that progressively (max 100) to avoid UI lock\n      const toRemove = Math.min(100, -delta)\n      // console.log('removing ', toRemove);\n      for (let i = 0; i < toRemove; i++) {\n        this.stage.removeChildAt(0)\n      }\n    }\n\n    if (delta > 0) {\n      const toAdd = Math.max(5000, delta)\n      // console.log('adding ', toAdd);\n      this._addSprites(toAdd)\n    }\n  }\n\n  _addSprites(num) {\n    for (let i = 0; i < num; i++) {\n      const vessel = new PIXI.Sprite(this.mainVesselTexture)\n      vessel.anchor.x = 0.5\n      vessel.anchor.y = 0.5\n      // ParticlesContainer does not support .visible, so we just move the sprite out of the viewport\n      vessel.x = -100\n      // vessel.blendMode = PIXI.BLEND_MODES.SCREEN;\n      // vessel.filters=  [new PIXI.filters.BlurFilter(10,10)]\n      this.stage.addChild(vessel)\n    }\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport uniq from 'lodash/uniq'\nimport * as PIXI from 'pixi.js'\nimport { worldToPixels } from 'viewport-mercator-project'\nimport { BRUSH_RENDERING_STYLE, BRUSH_ZOOM_RENDERING_STYLE } from '../constants'\nimport { vesselSatisfiesFilters } from '../utils/heatmapTileData'\nimport HeatmapSubLayer from './HeatmapSubLayer'\n\n// This is a faster version of worldToPixels that omits pitch,\n// and ignores values from the matrix that are consistently = 0\nconst s = 1 / 1.5\nconst worldToPixelsSimple = (x, y, m) => {\n  const fx = s * (m[0] * x + m[4] * y + m[12])\n  const fy = s * (m[5] * y + m[13])\n  return [fx, fy]\n}\n\nclass HeatmapLayer extends React.Component {\n  componentDidMount() {\n    this._build()\n  }\n\n  componentWillUnmount() {\n    this._destroy()\n  }\n\n  componentDidUpdate() {\n    this._redraw()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.useRadialGradientStyle !== this.props.useRadialGradientStyle) {\n      this.setBrushZoomRenderingStyle(nextProps.useRadialGradientStyle)\n    }\n  }\n\n  _build() {\n    const { layer, rootStage, useRadialGradientStyle, customRenderingStyle } = this.props\n    this.subLayers = {}\n    this.renderingStyle =\n      layer.header && layer.header.rendering ? layer.header.rendering : customRenderingStyle\n\n    this.setBrushRenderingStyle(this.renderingStyle.style)\n    this.setBrushZoomRenderingStyle(useRadialGradientStyle)\n\n    this.stage = new PIXI.Container()\n\n    rootStage.addChild(this.stage)\n  }\n\n  setBrushRenderingStyle(style = BRUSH_RENDERING_STYLE.NORMAL) {\n    if (typeof style === 'string') {\n      this.brushRenderingStyle = BRUSH_RENDERING_STYLE[style.toUpperCase()]\n    } else {\n      this.brushRenderingStyle = style\n    }\n    this._setBrushRenderingStyleIndex()\n  }\n\n  setBrushZoomRenderingStyle(useRadialGradientStyle) {\n    this.brushZoomRenderingStyle =\n      useRadialGradientStyle === true\n        ? BRUSH_ZOOM_RENDERING_STYLE.RADIAL_GRADIENT\n        : BRUSH_ZOOM_RENDERING_STYLE.CIRCLE\n    this._setBrushRenderingStyleIndex()\n  }\n\n  _setBrushRenderingStyleIndex() {\n    // only NORMAL brush styles support different zoom styles\n    const cappedZoomRenderingStyle =\n      this.brushRenderingStyle === BRUSH_RENDERING_STYLE.NORMAL ? this.brushZoomRenderingStyle : 0\n    const newStyleIndex = this.brushRenderingStyle + cappedZoomRenderingStyle\n    if (newStyleIndex === this.renderingStyleIndex) {\n      return\n    }\n    this.renderingStyleIndex = newStyleIndex\n    Object.values(this.subLayers).forEach((subLayer) => {\n      subLayer.setRenderingStyleIndex(this.renderingStyleIndex)\n    })\n  }\n\n  _redraw() {\n    const { filters, baseTexture, layer } = this.props\n\n    if (\n      layer === null ||\n      layer === undefined ||\n      layer.tiles === undefined ||\n      layer.visible === false\n    ) {\n      this.stage.visible = false\n      return\n    }\n\n    this.stage.visible = true\n    this.stage.alpha = layer.opacity\n\n    const tiles = layer.tiles\n    const defaultHue = layer.hue\n    const allHuesToRender =\n      filters !== undefined && filters.length\n        ? filters\n            // pass is set to true by filterGroupActions when none of the filters fields\n            // in the filter group is supported by the layer headers\n            .filter((f) => f.pass !== true)\n            .map((f) => (f.hue === undefined ? '0' : f.hue.toString()))\n        : [defaultHue.toString()]\n    const currentlyUsedHues = Object.keys(this.subLayers)\n\n    // get all hues, old and new\n    const allHues = uniq(allHuesToRender.concat(currentlyUsedHues))\n\n    for (let i = 0; i < allHues.length; i++) {\n      const hue = allHues[i]\n      if (allHuesToRender.indexOf(hue) === -1) {\n        // not on new hues: delete sublayer\n        this._destroySubLayer(this.subLayers[hue])\n        delete this.subLayers[hue]\n        continue\n      }\n      if (currentlyUsedHues.indexOf(hue) === -1) {\n        // not on old hues: create sublayer\n        this.subLayers[hue] = this._createSublayer(baseTexture, this.renderingStyleIndex, hue)\n      }\n      this.subLayers[hue].clearSpriteProps()\n    }\n\n    if (!allHuesToRender.length) return\n    tiles.forEach((tile) => {\n      this._setSubLayersSpritePropsForTile({\n        data: tile.data,\n        numFilters: filters.length,\n        defaultHue,\n      })\n    })\n\n    allHuesToRender.forEach((hueToRender) => {\n      this.subLayers[hueToRender].render()\n    })\n  }\n\n  _setSubLayersSpritePropsForTile({ data, numFilters, defaultHue }) {\n    if (!data) {\n      return\n    }\n\n    const { startIndex, endIndex, viewport, filters, viewportLeft, viewportRight } = this.props\n\n    for (let timeIndex = startIndex; timeIndex < endIndex; timeIndex++) {\n      const frame = data[timeIndex]\n\n      if (!frame) continue\n\n      for (let index = 0, len = frame.worldX.length; index < len; index++) {\n        let hue\n        if (filters === undefined || !filters.length) {\n          hue = defaultHue\n        }\n        for (let fi = 0; fi < numFilters; fi++) {\n          const filter = filters[fi]\n          if (vesselSatisfiesFilters(frame, index, filter.filterValues)) {\n            hue = filter.hue\n            break\n          }\n        }\n\n        // no filter passes: bail\n        if (hue === undefined) {\n          continue\n        }\n\n        // wrap worldX when point crosses the antimeridian/dateline\n        // world points go from 0 to 512. There is no way to determine if worldX is on the \"wrong\" side\n        // of the antimeridian just by looking at its value (where with lat/lon we can simply look at -/+)\n        // Therefore we compare it to the viewport's left or right boundary, depending on what is currently\n        // \"the right side\" of the antimeridian\n        let worldX = frame.worldX[index]\n        if (viewportLeft > 0 && worldX < viewportLeft) {\n          // worldX is \"behind\" viewportLeft, which means it is \"on the right\" of the antimeridian\n          worldX += 512\n        } else if (viewportLeft < 0 && worldX > viewportRight) {\n          worldX -= 512\n        }\n\n        const scaledX = worldX * viewport.scale\n        const scaledY = frame.worldY[index] * viewport.scale\n        const mtx = viewport.pixelProjectionMatrix\n\n        const [x, y] =\n          viewport.pitch === 0\n            ? worldToPixelsSimple(scaledX, scaledY, mtx)\n            : worldToPixels([scaledX, scaledY], mtx)\n\n        if (x > -10 && x < viewport.width + 10 && y > -10 && y < viewport.height + 10) {\n          this.subLayers[hue].pushSpriteProps(\n            x,\n            y,\n            frame.opacity ? frame.opacity[index] : this.renderingStyle.defaultOpacity,\n            frame.radius ? frame.radius[index] : this.renderingStyle.defaultSize\n          )\n        }\n      }\n    }\n  }\n\n  _createSublayer(baseTexture, renderingStyleIndex, hue) {\n    const subLayer = new HeatmapSubLayer(\n      baseTexture,\n      renderingStyleIndex,\n      hue,\n      this.brushRenderingStyle === BRUSH_RENDERING_STYLE.BULLSEYE\n    )\n    this.stage.addChild(subLayer.stage)\n    return subLayer\n  }\n\n  _destroy() {\n    Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this))\n    this.stage.destroy({ children: true })\n    const { rootStage } = this.props\n    rootStage.removeChild(this.stage)\n  }\n\n  _destroySubLayer(subLayer) {\n    this.stage.removeChild(subLayer.stage)\n    subLayer.destroy()\n  }\n\n  render() {\n    return null\n  }\n}\n\nHeatmapLayer.propTypes = {\n  layer: PropTypes.object,\n  rootStage: PropTypes.object,\n  viewport: PropTypes.object,\n  startIndex: PropTypes.number,\n  endIndex: PropTypes.number,\n  filters: PropTypes.array,\n  baseTexture: PropTypes.object,\n  useRadialGradientStyle: PropTypes.bool,\n  customRenderingStyle: PropTypes.object,\n  viewportLeft: PropTypes.number,\n  viewportRight: PropTypes.number,\n}\n\nexport default HeatmapLayer\n","import React, { Fragment } from 'react'\nimport * as PIXI from 'pixi.js'\nimport PropTypes from 'prop-types'\nimport { BaseControl } from 'react-map-gl'\nimport { lngLatToWorld } from 'viewport-mercator-project'\nimport {\n  hsvToRgb,\n  hueToRgbString,\n  hueIncrementToHue,\n  wrapHue,\n  VESSELS_HUES_INCREMENTS_NUM,\n} from '../utils/map-colors'\nimport {\n  VESSELS_BASE_RADIUS,\n  VESSELS_HEATMAP_BLUR_FACTOR,\n  ACTIVITY_HIGHLIGHT_HUE,\n  VESSELS_HEATMAP_DIMMING_ALPHA,\n  VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD,\n  VESSEL_CLICK_TOLERANCE_PX,\n} from '../config'\nimport HeatmapLayer from '../heatmap/HeatmapLayer'\n\nconst shouldUseRadialGradientStyle = (zoom) => zoom < VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD\n\n// builds a texture spritesheet containing\n// - the heatmap style (radial gradient)\n// - the circle style that is used at higher zoom levels\n// - the 'bullseye' style used for encounters\n// as well as a number of hues for each in a 2D grid.\n// Then, only the texture frame (mesh UVs) is modified depending on the zoom level,\n// in order not to have to recreate sprites\nconst getVesselTexture = (radius, blurFactor) => {\n  const tplCanvas = document.createElement('canvas')\n  const tplCtx = tplCanvas.getContext('2d')\n  const diameter = radius * 2\n  const NUM_STYLES = 3\n  tplCanvas.width = diameter * NUM_STYLES + (NUM_STYLES - 1) // + (NUM_STYLES - 1): tiny offset between 2 frames\n  tplCanvas.height = diameter * VESSELS_HUES_INCREMENTS_NUM + VESSELS_HUES_INCREMENTS_NUM\n\n  for (let hueIncrement = 0; hueIncrement < VESSELS_HUES_INCREMENTS_NUM; hueIncrement++) {\n    const y = diameter * hueIncrement + hueIncrement\n    const yCenter = y + radius\n\n    // heatmap style\n    let x = radius\n    const gradient = tplCtx.createRadialGradient(\n      x,\n      yCenter,\n      radius * blurFactor,\n      x,\n      yCenter,\n      radius\n    )\n    const hue = hueIncrementToHue(hueIncrement)\n    const rgbString = hueToRgbString(hue)\n    gradient.addColorStop(0, rgbString)\n\n    const rgbOuter = hsvToRgb(wrapHue(hue + 30), 80, 100)\n    gradient.addColorStop(1, `rgba(${rgbOuter.r}, ${rgbOuter.g}, ${rgbOuter.b}, 0)`)\n\n    tplCtx.fillStyle = gradient\n    tplCtx.fillRect(0, y, diameter, diameter)\n\n    // circle style\n    x += diameter + 1 // tiny offset between 2 frames\n    tplCtx.beginPath()\n    tplCtx.arc(x, yCenter, radius, 0, 2 * Math.PI, false)\n    tplCtx.fillStyle = rgbString\n    tplCtx.fill()\n\n    // bullseye style\n    x += diameter + 1\n    tplCtx.beginPath()\n    tplCtx.arc(x, yCenter, radius * 0.4, 0, 2 * Math.PI, false)\n    tplCtx.fillStyle = rgbString\n    tplCtx.fill()\n    tplCtx.beginPath()\n    tplCtx.arc(x, yCenter, radius * 0.95, 0, 2 * Math.PI, false)\n    tplCtx.lineWidth = 1\n    tplCtx.strokeStyle = rgbString\n    tplCtx.stroke()\n  }\n\n  return tplCanvas\n}\n\nclass ActivityLayers extends BaseControl {\n  state = {\n    pixiReady: false,\n  }\n\n  componentDidMount() {\n    this._build()\n    this.setState({\n      pixiReady: true,\n    })\n  }\n\n  componentWillUnmount() {\n    this._destroy()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.props.exportNativeViewport(this._context.viewport)\n\n    if (\n      nextProps.viewport.width !== this.props.viewport.width ||\n      nextProps.viewport.height !== this.props.viewport.height\n    ) {\n      this._updateViewportSize(nextProps.viewport.width, nextProps.viewport.height)\n    }\n  }\n\n  _build() {\n    const { width, height } = this.props.viewport\n\n    this.pixi = new PIXI.Application({\n      width,\n      height,\n      transparent: true,\n      antialias: true,\n    })\n\n    this.renderer = this.pixi.renderer\n    this.canvas = this.pixi.view\n    this.canvas.style.position = 'absolute'\n\n    this.container.appendChild(this.canvas)\n\n    this.stage = this.pixi.stage\n\n    const baseTextureCanvas = getVesselTexture(VESSELS_BASE_RADIUS, VESSELS_HEATMAP_BLUR_FACTOR)\n    this.baseTexture = PIXI.Texture.fromCanvas(baseTextureCanvas)\n\n    this.heatmapStage = new PIXI.Container()\n    this.stage.addChild(this.heatmapStage)\n\n    this.pixi.ticker.add(this._onTick)\n  }\n\n  _destroy() {\n    this.pixi.destroy()\n  }\n\n  _updateViewportSize(viewportWidth, viewportHeight) {\n    this.renderer.resize(viewportWidth, viewportHeight)\n  }\n\n  toggleHeatmapDimming(dim) {\n    if (this.heatmapStage === undefined) {\n      return\n    }\n    if (dim === true) {\n      this.heatmapFadingIn = false\n    }\n    this.heatmapStage.alpha = dim === true ? VESSELS_HEATMAP_DIMMING_ALPHA : 1\n  }\n\n  onTouchStart = (event) => {\n    if (!event.touches.length) {\n      return\n    }\n    this.queryCoords(event.touches[0].clientX, event.touches[0].clientY)\n  }\n\n  onMouseMove = (event) => {\n    this.queryCoords(event.clientX, event.clientY)\n  }\n\n  queryCoords(x, y) {\n    // bail if all heatmap layers are set to non-interactive\n    if (this.props.heatmapLayers.every((l) => l.interactive !== true)) {\n      return\n    }\n\n    const { viewport } = this._context\n    const [longitude, latitude] = viewport.unproject([x, y])\n\n    let wrappedLongitude = longitude\n    if (wrappedLongitude > 180) {\n      wrappedLongitude -= 360\n    } else if (wrappedLongitude < -180) {\n      wrappedLongitude += 360\n    }\n\n    const [worldX, worldY] = lngLatToWorld([wrappedLongitude, latitude], 1)\n\n    const toleranceRadiusInWorldUnits = VESSEL_CLICK_TOLERANCE_PX / viewport.scale\n\n    this.props.queryHeatmapVessels(\n      {\n        longitude: wrappedLongitude,\n        latitude,\n        worldX,\n        worldY,\n        toleranceRadiusInWorldUnits,\n      },\n      this.props.temporalExtentIndexes\n    )\n  }\n\n  _onTick = () => {\n    if (this.heatmapFadingIn === true && this.heatmapStage.alpha < 1) {\n      this._heatmapFadeinStep()\n    }\n  }\n\n  _startHeatmapFadein() {\n    this.heatmapFadingIn = true\n    this.heatmapFadeinStartTimestamp = undefined\n  }\n\n  _heatmapFadeinStep() {\n    if (this.heatmapFadeinStartTimestamp === undefined) {\n      this.heatmapFadeinStartTimestamp = Date.now()\n    }\n    const timeElapsed = (Date.now() - this.heatmapFadeinStartTimestamp) / 1000\n    let alpha = this.heatmapStage.alpha + (1 - this.heatmapStage.alpha) * timeElapsed\n    if (alpha >= 1) {\n      alpha = 1\n      this.heatmapFadingIn = false\n    }\n    this.heatmapStage.alpha = alpha\n  }\n\n  // FIXME move to container?\n  _getHighlightData(highlightedVessels, highlightedClickedVessel, heatmapLayers) {\n    const hue = ACTIVITY_HIGHLIGHT_HUE\n    let highlightLayerData = {\n      id: '__HIGHLIGHT__',\n      visible: true,\n      opacity: 1,\n      hue: ACTIVITY_HIGHLIGHT_HUE,\n    }\n    let highlightFilters = []\n\n    if (\n      highlightedVessels !== undefined &&\n      highlightedVessels.layer !== undefined &&\n      highlightedVessels.foundVessels !== undefined &&\n      highlightedVessels.isEmpty !== true\n    ) {\n      const sourceLayer = heatmapLayers.find((l) => l.id === highlightedVessels.layer.id)\n      highlightLayerData = { highlightLayerData, ...sourceLayer }\n      highlightFilters = highlightedVessels.foundVessels.map((vessel) => ({\n        hue,\n        filterValues: {\n          series: [vessel.series],\n        },\n      }))\n    } else if (highlightedClickedVessel !== null) {\n      const sourceLayer = heatmapLayers.find((l) => l.id === highlightedClickedVessel.layer.id)\n      highlightLayerData = { highlightLayerData, ...sourceLayer }\n      highlightFilters = [\n        {\n          hue,\n          filterValues: {\n            series: [highlightedClickedVessel.id],\n          },\n        },\n      ]\n    }\n    return {\n      highlightLayerData,\n      highlightFilters,\n    }\n  }\n  _render() {\n    const {\n      zoom,\n      heatmapLayers,\n      temporalExtentIndexes,\n      highlightedVessels,\n      highlightedClickedVessel,\n      leftWorldScaled,\n      rightWorldScaled,\n    } = this.props\n    const { viewport } = this._context\n    const { pixiReady } = this.state\n\n    const startIndex = temporalExtentIndexes[0]\n    const endIndex = temporalExtentIndexes[1]\n    const useRadialGradientStyle = shouldUseRadialGradientStyle(zoom)\n\n    if (highlightedVessels.isEmpty !== true) {\n      this.toggleHeatmapDimming(true)\n    }\n    if (highlightedVessels.isEmpty === true) {\n      this._startHeatmapFadein()\n    }\n    if (this.renderer && this.renderer.gl && this.renderer.gl.getError !== undefined) {\n      const err = this.renderer.gl.getError()\n      if (err !== 0) console.log(err)\n    }\n\n    const { highlightLayerData, highlightFilters } = this._getHighlightData(\n      highlightedVessels,\n      highlightedClickedVessel,\n      heatmapLayers\n    )\n\n    return (\n      <div\n        ref={(ref) => {\n          this.container = ref\n        }}\n        style={{ position: 'absolute' }}\n        onMouseMove={this.onMouseMove}\n        onTouchStart={this.onTouchStart}\n      >\n        {pixiReady === true && (\n          <Fragment>\n            {heatmapLayers.map((layer) => (\n              <HeatmapLayer\n                key={layer.id}\n                layer={layer}\n                filters={layer.filters || []}\n                viewport={viewport}\n                startIndex={startIndex}\n                endIndex={endIndex}\n                baseTexture={this.baseTexture}\n                rootStage={this.heatmapStage}\n                useRadialGradientStyle={useRadialGradientStyle}\n                customRenderingStyle={{}}\n                viewportLeft={leftWorldScaled}\n                viewportRight={rightWorldScaled}\n              />\n            ))}\n            {this.stage !== undefined && (\n              <HeatmapLayer\n                key=\"highlighted\"\n                layer={highlightLayerData}\n                filters={highlightFilters}\n                viewport={viewport}\n                startIndex={startIndex}\n                endIndex={endIndex}\n                baseTexture={this.baseTexture}\n                rootStage={this.heatmapStage}\n                useRadialGradientStyle={useRadialGradientStyle}\n                customRenderingStyle={{ defaultOpacity: 1, defaultSize: 1 }}\n                viewportLeft={leftWorldScaled}\n                viewportRight={rightWorldScaled}\n              />\n            )}\n          </Fragment>\n        )}\n      </div>\n    )\n  }\n}\n\nActivityLayers.propTypes = {\n  zoom: PropTypes.number,\n  heatmapLayers: PropTypes.array,\n  temporalExtentIndexes: PropTypes.array,\n  highlightedVessels: PropTypes.object,\n  highlightedClickedVessel: PropTypes.object,\n  queryHeatmapVessels: PropTypes.func,\n  exportNativeViewport: PropTypes.func,\n  leftWorldScaled: PropTypes.number,\n  rightWorldScaled: PropTypes.number,\n}\n\nActivityLayers.contextTypes = {\n  viewport: PropTypes.object,\n}\n\nexport default ActivityLayers\n","import { connect } from 'react-redux'\nimport { createSelector } from 'reselect'\nimport convert from '@globalfishingwatch/map-convert'\nimport { exportNativeViewport } from '../glmap/viewport.actions'\nimport { getTemporalExtent } from '../module/module.selectors'\nimport ActivityLayers from './ActivityLayers'\nimport { queryHeatmapVessels } from '../heatmap/heatmapTiles.actions'\nimport { MIN_FRAME_LENGTH_MS } from '../config'\n\nconst getHeatmapLayers = (state) => state.map.heatmap.heatmapLayers\n\nconst getHeatmapLayersAsArray = createSelector(\n  [getHeatmapLayers],\n  (heatmapLayers) => {\n    const a = Object.keys(heatmapLayers).map((id) => ({\n      ...heatmapLayers[id],\n    }))\n    // console.log(a)\n    return a\n  }\n)\n\nconst getTemporalExtentIndexes = createSelector(\n  [getTemporalExtent],\n  (temporalExtent) => {\n    const startTimestamp = temporalExtent[0].getTime()\n    const endTimestamp = Math.max(\n      temporalExtent[1].getTime(),\n      temporalExtent[0].getTime() + MIN_FRAME_LENGTH_MS\n    )\n    const startIndex = convert.getOffsetedTimeAtPrecision(startTimestamp)\n    const endIndex = convert.getOffsetedTimeAtPrecision(endTimestamp)\n    return [startIndex, endIndex]\n  }\n)\n\nconst mapStateToProps = (state) => ({\n  highlightedVessels: state.map.heatmap.highlightedVessels,\n  highlightedClickedVessel: state.map.heatmap.highlightedClickedVessel,\n  viewport: state.map.viewport.viewport,\n  zoom: state.map.viewport.viewport.zoom,\n  heatmapLayers: getHeatmapLayersAsArray(state),\n  leftWorldScaled: state.map.viewport.leftWorldScaled,\n  rightWorldScaled: state.map.viewport.rightWorldScaled,\n  temporalExtentIndexes: getTemporalExtentIndexes(state),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  queryHeatmapVessels: (coords, temporalExtentIndexes) => {\n    dispatch(queryHeatmapVessels(coords, temporalExtentIndexes))\n  },\n  exportNativeViewport: (viewport) => {\n    dispatch(exportNativeViewport(viewport))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActivityLayers)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MapGL, { Popup, Marker } from 'react-map-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { TILES_URL_NEEDING_AUTHENTICATION } from '../config'\nimport ActivityLayers from '../activity/ActivityLayers.container.js'\nimport styles from './map.css'\n\nconst PopupWrapper = (props) => {\n  const { latitude, longitude, children, closeButton, onClose } = props\n  return (\n    <Popup\n      latitude={latitude}\n      longitude={longitude}\n      closeButton={closeButton}\n      onClose={onClose}\n      anchor=\"bottom\"\n      offsetTop={-10}\n      tipSize={4}\n      closeOnClick={false}\n    >\n      {children}\n    </Popup>\n  )\n}\n\nPopupWrapper.propTypes = {\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n  closeButton: PropTypes.bool.isRequired,\n  onClose: PropTypes.func,\n}\n\nPopupWrapper.defaultProps = {\n  onClose: () => {},\n}\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mouseOver: true,\n    }\n    this._mapContainerRef = null\n  }\n\n  componentDidMount() {\n    if (this._mapContainerRef !== null) {\n      this.loadObserver()\n    }\n    this.setBounds()\n  }\n\n  componentDidUpdate() {\n    this.setBounds()\n  }\n\n  onLoad = () => {\n    if (this.props.onLoad !== undefined) {\n      this.props.onLoad(this.getBounds())\n    }\n  }\n\n  setBounds = () => {\n    const bounds = this.getBounds()\n    if (bounds !== null && this.props.setBounds !== undefined) {\n      this.props.setBounds(bounds)\n    }\n  }\n\n  getBounds = () => {\n    if (!this.glMap) return null\n\n    const { _ne, _sw } = this.glMap.getBounds()\n    return {\n      north: _ne.lat,\n      south: _sw.lat,\n      west: _sw.lng,\n      east: _ne.lng,\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._containerResizeObserver) {\n      this._containerResizeObserver.disconnect()\n    }\n  }\n\n  loadObserver = async () => {\n    if ('ResizeObserver' in window === false) {\n      const module = await import('resize-observer-polyfill')\n      window.ResizeObserver = module.ResizeObserver || module.default\n    }\n    this._containerResizeObserver = new ResizeObserver(this.handleResizeObserver)\n    this._containerResizeObserver.observe(this._mapContainerRef)\n  }\n\n  handleResizeObserver = (entries) => {\n    const { width, height } = entries[0].contentRect\n    const { viewport, setViewport } = this.props\n\n    if (width !== viewport.width || height !== viewport.height) {\n      setViewport({\n        ...viewport,\n        width,\n        height,\n      })\n    }\n  }\n\n  onViewportChange = (viewport, interactionState) => {\n    const propsViewport = this.props.viewport\n    if (\n      propsViewport.latitude !== viewport.latitude ||\n      propsViewport.longitude !== viewport.longitude ||\n      propsViewport.zoom !== viewport.zoom ||\n      propsViewport.bearing !== viewport.bearing ||\n      propsViewport.pitch !== viewport.pitch\n    ) {\n      this.props.setViewport(viewport, interactionState)\n    }\n  }\n\n  onMapInteraction = (event, type) => {\n    this.props.mapInteraction(\n      type,\n      event.lngLat[1],\n      event.lngLat[0],\n      event.features,\n      this.glGetSource\n    )\n  }\n\n  onHover = (event) => {\n    this.onMapInteraction(event, 'hover')\n  }\n\n  onClick = (event) => {\n    this.onMapInteraction(event, 'click')\n  }\n\n  getRef = (ref) => {\n    if (ref !== null) {\n      this.glMap = ref.getMap()\n      this.glGetSource = this.glMap.getSource.bind(this.glMap)\n    }\n  }\n\n  getCursor = ({ isDragging }) => {\n    const { cursor } = this.props\n    if (cursor === null) {\n      return isDragging ? 'grabbing' : 'grab'\n    }\n    return cursor\n  }\n\n  transformRequest = (url, resourceType) => {\n    const { token } = this.props\n    if (token !== null && resourceType === 'Tile' && url.match(TILES_URL_NEEDING_AUTHENTICATION)) {\n      return {\n        url: url,\n        headers: { Authorization: 'Bearer ' + token },\n      }\n    }\n  }\n\n  render() {\n    const {\n      viewport,\n      maxZoom,\n      minZoom,\n      transitionEnd,\n      mapStyle,\n      onClosePopup,\n      clickPopup,\n      hoverPopup,\n      hasHeatmapLayers,\n      markers,\n      interactiveLayerIds,\n    } = this.props\n\n    return (\n      <div\n        id=\"map\"\n        className={styles.map}\n        ref={(ref) => {\n          this._mapContainerRef = ref\n        }}\n        onMouseLeave={() => {\n          this.setState({ mouseOver: false })\n        }}\n        onMouseEnter={() => {\n          this.setState({ mouseOver: true })\n        }}\n      >\n        <MapGL\n          {...viewport}\n          ref={this.getRef}\n          transformRequest={this.transformRequest}\n          onTransitionEnd={transitionEnd}\n          onLoad={this.onLoad}\n          onHover={this.onHover}\n          onClick={this.onClick}\n          getCursor={this.getCursor}\n          mapStyle={mapStyle}\n          maxZoom={maxZoom}\n          minZoom={minZoom}\n          onViewportChange={this.onViewportChange}\n          interactiveLayerIds={interactiveLayerIds}\n          clickRadius={4}\n        >\n          {hasHeatmapLayers !== false && <ActivityLayers />}\n          {clickPopup !== undefined && clickPopup !== null && (\n            <PopupWrapper\n              latitude={clickPopup.latitude}\n              longitude={clickPopup.longitude}\n              closeButton\n              onClose={onClosePopup}\n            >\n              {clickPopup.content}\n            </PopupWrapper>\n          )}\n          {this.state.mouseOver === true && hoverPopup !== undefined && hoverPopup !== null && (\n            <PopupWrapper\n              latitude={hoverPopup.latitude}\n              longitude={hoverPopup.longitude}\n              closeButton={false}\n            >\n              {hoverPopup.content}\n            </PopupWrapper>\n          )}\n          {markers !== null &&\n            markers.length > 0 &&\n            markers.map((marker, i) => (\n              <Marker key={i} latitude={marker.latitude} longitude={marker.longitude}>\n                {marker.content}\n              </Marker>\n            ))}\n        </MapGL>\n        <div className={styles.googleLogo} />\n      </div>\n    )\n  }\n}\n\nMap.propTypes = {\n  token: PropTypes.string,\n  viewport: PropTypes.object.isRequired,\n  mapStyle: PropTypes.object.isRequired,\n  clickPopup: PropTypes.object,\n  hoverPopup: PropTypes.object,\n  maxZoom: PropTypes.number.isRequired,\n  minZoom: PropTypes.number.isRequired,\n  setViewport: PropTypes.func.isRequired,\n  setBounds: PropTypes.func,\n  mapInteraction: PropTypes.func,\n  onLoad: PropTypes.func,\n  onClosePopup: PropTypes.func,\n  transitionEnd: PropTypes.func,\n  cursor: PropTypes.string,\n  hasHeatmapLayers: PropTypes.bool.isRequired,\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n      content: PropTypes.node,\n    })\n  ),\n  interactiveLayerIds: PropTypes.arrayOf(PropTypes.string),\n}\n\nMap.defaultProps = {\n  token: null,\n  clickPopup: null,\n  hoverPopup: null,\n  mapInteraction: () => {},\n  onLoad: () => {},\n  onClosePopup: () => {},\n  transitionEnd: () => {},\n  cursor: null,\n  markers: null,\n  interactiveLayerIds: null,\n  setBounds: undefined,\n}\n\nexport default Map\n","import { connect } from 'react-redux'\nimport { createSelector } from 'reselect'\nimport { fromJS } from 'immutable'\nimport { TRACKS_LAYER_IN_FRONT_OF_GROUP } from '../config'\nimport { closePopup } from '../module/module.actions.js'\nimport { getTracksStyles } from '../tracks/tracks.selectors.js'\nimport { mapInteraction } from './interaction.actions.js'\nimport { setBounds, setViewport, transitionEnd } from './viewport.actions.js'\nimport Map from './Map'\n\nconst getStaticLayers = (state) => state.map.style.staticLayers\nconst getHeatmapLayers = (state) => state.map.heatmap.heatmapLayers\nconst getInternalCursor = (state) => state.map.interaction.cursor\nconst getModuleCursor = (state) => state.map.module.cursor\n\nconst hasHeatmapLayers = createSelector(\n  [getHeatmapLayers],\n  (heatmapLayers) => {\n    return Object.keys(heatmapLayers).length > 0\n  }\n)\nconst getInteractiveLayerIds = createSelector(\n  [getStaticLayers],\n  // Note: here we assume that layer IDs provided with module match the GL layers that should\n  // be interactive or not, ie typically the fill layer if a label layer is present\n  (staticLayers) => {\n    return staticLayers.reduce((acc, layer) => {\n      if (!layer.interactive || !layer.visible) return acc\n      // We also need to check nested layers interactivity when custom gl layers are provided\n      if (layer.gl !== undefined) {\n        layer.gl.layers.forEach((glLayer, index) => {\n          // layers.length === 1 is used to ensure when parent layer is marked as interactive we have to\n          // have at least one interactive sublayer, then checked eah one individually\n          if (\n            layer.gl.layers.length === 1 ||\n            (glLayer.metadata !== undefined && glLayer.metadata['gfw:interactive'] === true)\n          ) {\n            const glLayerId = glLayer.id || index > 0 ? `${layer.id}-${index}` : layer.id\n            acc.push(glLayerId)\n          }\n        })\n      } else {\n        acc.push(layer.id)\n      }\n      return acc\n    }, [])\n  }\n)\n\nconst getMapStyles = (state) => state.map.style.mapStyle\nconst getMapStyle = createSelector(\n  [getMapStyles, getTracksStyles],\n  (mapStyles, trackStyles) => {\n    if (!trackStyles) return mapStyles\n\n    const currentLayerGroups = mapStyles\n      .toJS()\n      .layers.filter((l) => l.metadata !== undefined)\n      .map((l) => l.metadata['mapbox:group'])\n    const trackLayersIndex = currentLayerGroups.lastIndexOf(TRACKS_LAYER_IN_FRONT_OF_GROUP) + 1\n\n    let finalMapStyles = mapStyles.mergeIn(['sources'], trackStyles.sources)\n    let mapStylesLayers = mapStyles.get('layers')\n    trackStyles.layers.forEach((trackLayer, i) => {\n      mapStylesLayers = mapStylesLayers.insert(trackLayersIndex + i, fromJS(trackLayer))\n    })\n    finalMapStyles = finalMapStyles.set('layers', mapStylesLayers)\n    return finalMapStyles\n  }\n)\n\nconst getCursor = createSelector(\n  [getInternalCursor, getModuleCursor],\n  (internalCursor, moduleCursor) => {\n    if (moduleCursor !== null) {\n      return moduleCursor\n    }\n    return internalCursor\n  }\n)\nconst mapStateToProps = (state) => ({\n  viewport: state.map.viewport.viewport,\n  maxZoom: state.map.viewport.maxZoom,\n  minZoom: state.map.viewport.minZoom,\n  onLoad: state.map.module.onLoad,\n  cursor: getCursor(state),\n  token: state.map.module.token,\n  mapStyle: getMapStyle(state),\n  hasHeatmapLayers: hasHeatmapLayers(state),\n  interactiveLayerIds: getInteractiveLayerIds(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setViewport: (viewport, interactionState) => {\n    dispatch(setViewport(viewport, interactionState))\n  },\n  setBounds: (bounds) => {\n    dispatch(setBounds(bounds))\n  },\n  mapInteraction: (type, lat, long, features, cluster, glGetSource) => {\n    dispatch(mapInteraction(type, lat, long, features, cluster, glGetSource))\n  },\n  transitionEnd: () => {\n    dispatch(transitionEnd())\n  },\n  onClosePopup: () => {\n    dispatch(closePopup())\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Map)\n","import { fromJS } from 'immutable'\nimport uniq from 'lodash/uniq'\nimport GL_STYLE from './gl-styles/style.json'\nimport {\n  SET_MAP_STYLE,\n  MARK_CARTO_LAYERS_AS_INSTANCIATED,\n  INIT_MAP_STYLE,\n  SET_STATIC_LAYERS,\n  SET_BASEMAP_LAYERS,\n} from './style.actions'\n\nconst attributions = uniq(\n  Object.keys(GL_STYLE.sources)\n    .map((sourceKey) => GL_STYLE.sources[sourceKey].attribution)\n    .filter((source) => source !== undefined)\n)\n\nexport const setLayerStyleDefaults = (layer) => {\n  if (layer.layout === undefined) {\n    layer.layout = {}\n  }\n  if (layer.paint === undefined) {\n    layer.paint = {}\n  }\n  if (layer.metadata === undefined) {\n    layer.metadata = {}\n  }\n  // initialize time filter for time-filterable layers\n  if (layer.metadata['gfw:temporal'] === true) {\n    const temporalField =\n      layer.metadata['gfw:temporalField'] === undefined\n        ? 'timestamp'\n        : layer.metadata['gfw:temporalField']\n    layer.filter = ['all', ['>', temporalField, 0], ['<', temporalField, 999999999999]]\n  }\n\n  if (layer.metadata['mapbox:group'] === undefined) {\n    layer.metadata['mapbox:group'] = 'temporal'\n  }\n\n  // set all layers to not visible except layers explicitely marked as visible (default basemap)\n  if (layer.layout.visibility !== 'visible') {\n    layer.layout.visibility = 'none'\n  }\n  return layer\n}\n\nconst setStyleDefaults = (style) => {\n  style.layers.forEach((layer) => {\n    setLayerStyleDefaults(layer)\n  })\n  return style\n}\n\nconst initialState = {\n  mapStyle: fromJS(setStyleDefaults(GL_STYLE)),\n  cartoLayersInstanciated: [],\n  staticLayers: [],\n  basemapLayers: [],\n  attributions,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case INIT_MAP_STYLE: {\n      const newMapStyle = state.mapStyle.setIn(['glyphs'], action.payload.glyphsPath)\n      return { ...state, mapStyle: newMapStyle }\n    }\n    case SET_MAP_STYLE: {\n      return { ...state, mapStyle: action.payload }\n    }\n    case SET_STATIC_LAYERS: {\n      return { ...state, staticLayers: action.payload }\n    }\n    case SET_BASEMAP_LAYERS: {\n      return { ...state, basemapLayers: action.payload }\n    }\n    case MARK_CARTO_LAYERS_AS_INSTANCIATED: {\n      const cartoLayersInstanciated = [...state.cartoLayersInstanciated, ...action.payload]\n      return { ...state, cartoLayersInstanciated }\n    }\n    default:\n      return state\n  }\n}\n","// This utility looks at GeoJSON features and returns the predominant geometry type\n\nconst TYPES = [\n  { gl: 'line', geoJSON: ['LineString', 'MultiLineString'] },\n  { gl: 'fill', geoJSON: ['Polygon', 'MultiPolygon'] },\n  { gl: 'circle', geoJSON: ['Point', 'MultiPoint'] },\n]\n\nexport default (geoJSON) => {\n  // collect all geoJSON geom types\n  const allGeoJSONTypes = geoJSON.features.map((feature) => {\n    const geom = feature.geometry\n    if (geom === undefined) {\n      return null\n    }\n    return geom.type\n  })\n\n  // collect number of geometries by GL geom types\n  const numByGLType = TYPES.map((type) => {\n    let num = 0\n    allGeoJSONTypes.forEach((geoJSONType) => {\n      if (type.geoJSON.indexOf(geoJSONType) > -1) {\n        num++\n      }\n    })\n    return { gl: type.gl, num }\n  })\n\n  // get feature types with the higher count\n  let glType = 'fill'\n  let glTypeMax = 0\n  numByGLType.forEach((t) => {\n    if (t.num > glTypeMax) {\n      glType = t.gl\n      glTypeMax = t.num\n    }\n  })\n\n  return glType\n}\n","import { fromJS } from 'immutable'\nimport convert from '@globalfishingwatch/map-convert'\nimport uniq from 'lodash/uniq'\nimport throttle from 'lodash/throttle'\nimport { hexToRgb } from '../utils/map-colors'\nimport { STATIC_LAYERS_CARTO_ENDPOINT, STATIC_LAYERS_CARTO_TILES_ENDPOINT } from '../config'\nimport { CUSTOM_LAYERS_SUBTYPES, GL_TRANSPARENT } from '../constants'\nimport GL_STYLE from './gl-styles/style.json'\nimport { setLayerStyleDefaults } from './style.reducer.js'\nimport getMainGeomType from '../utils/getMainGeomType'\n\nexport const INIT_MAP_STYLE = 'INIT_MAP_STYLE'\nexport const SET_MAP_STYLE = 'SET_MAP_STYLE'\nexport const MARK_CARTO_LAYERS_AS_INSTANCIATED = 'MARK_CARTO_LAYERS_AS_INSTANCIATED'\nexport const SET_STATIC_LAYERS = 'SET_STATIC_LAYERS'\nexport const SET_BASEMAP_LAYERS = 'SET_BASEMAP_LAYERS'\n\nconst setDefaultVectorTiles = (currentSource, refLayerUrl) => {\n  if (currentSource.type !== 'vector') {\n    return currentSource\n  }\n  const tiles = currentSource.tiles\n  const refLayerUrls = refLayerUrl === undefined ? [] : [refLayerUrl]\n\n  const newTiles =\n    tiles !== undefined && tiles.length > 0 ? uniq([...refLayerUrls, ...tiles]) : refLayerUrls\n  return {\n    ...currentSource,\n    tiles: newTiles,\n  }\n}\n\nexport const initStyle = ({ glyphsPath }) => ({\n  type: INIT_MAP_STYLE,\n  payload: {\n    glyphsPath,\n  },\n})\n\nconst setMapStyle = (style) => ({\n  type: SET_MAP_STYLE,\n  payload: style,\n})\n\nconst setStyleTemporalExtent = (dispatch, getState, temporalExtent, applyToThrottled = false) => {\n  const state = getState().map.style\n  let style = state.mapStyle\n  const currentStyle = style.toJS()\n  const glLayers = currentStyle.layers\n\n  let start = Math.round(temporalExtent[0].getTime() / 1000)\n  let end = Math.round(temporalExtent[1].getTime() / 1000)\n\n  // TEMPORARY, remove later - temporal layers points should have a timestamp, this is legacy\n  // logic for legacy encounters layer that only have a 'timeIndex'\n  const startIndex = convert.getOffsetedTimeAtPrecision(temporalExtent[0].getTime())\n  const endIndex = convert.getOffsetedTimeAtPrecision(temporalExtent[1].getTime())\n\n  for (let i = 0; i < glLayers.length; i++) {\n    const glLayer = glLayers[i]\n    if (glLayer.metadata === undefined || glLayer.metadata['gfw:temporal'] !== true) {\n      continue\n    }\n\n    if (\n      (applyToThrottled === true && glLayer.metadata['gfw:temporal:throttled'] !== true) ||\n      (applyToThrottled === false && glLayer.metadata['gfw:temporal:throttled'] === true)\n    ) {\n      continue\n    }\n\n    // if layer is temporal, a filter must always be preset on the style.json object\n    // because each layer can have a different time field to be filtered\n    const currentFilter = style.getIn(['layers', i, 'filter']).toJS()\n    if (currentFilter === null) {\n      throw new Error('filter must be preset on style.json for temporal layer: ', glLayer.id)\n    }\n\n    // TEMPORARY, remove later - temporal layers points should have a timestamp, this is legacy\n    // logic for legacy encounters layer that only have a 'timeIndex'\n    const isLegacy = glLayer.metadata && glLayer.metadata['gfw:temporalField'] === 'timeIndex'\n    currentFilter[1][2] = isLegacy ? startIndex : start\n    currentFilter[2][2] = isLegacy ? endIndex : end\n    style = style.setIn(['layers', i, 'filter'], fromJS(currentFilter))\n  }\n  dispatch(setMapStyle(style))\n}\n\nconst applyTemporalExtentThrottled = throttle((dispatch, getState, temporalExtent) => {\n  setStyleTemporalExtent(dispatch, getState, temporalExtent, true)\n}, 400)\n\nexport const applyTemporalExtent = (temporalExtent) => (dispatch, getState) => {\n  setStyleTemporalExtent(dispatch, getState, temporalExtent)\n  applyTemporalExtentThrottled(dispatch, getState, temporalExtent)\n}\n\nconst applyLayerExpressions = (style, refLayer, currentGlLayer, glLayerIndex) => {\n  let newStyle = style\n  const currentStyle = style.toJS()\n  const glType = currentGlLayer.type\n  const defaultStyles = currentStyle.metadata['gfw:styles']\n  const metadata = currentGlLayer.metadata\n  ;['selected', 'highlighted'].forEach((styleType) => {\n    // get selectedFeatures or highlightedFeatures\n    const features = refLayer[`${styleType}Features`]\n    const refLayerStyle = features && features.style ? features.style[glType] : {}\n    const hasFeatures = features !== null && features !== undefined && features.values.length > 0\n    const applyStyleToAllFeatures = refLayer[styleType]\n\n    const defaultStyle = defaultStyles[styleType][glType] || {}\n    const layerStyle =\n      (metadata && metadata['gfw:styles'] && metadata['gfw:styles'][styleType]) || {}\n    const allPaintProperties = { ...defaultStyle, ...layerStyle, ...refLayerStyle }\n\n    if (Object.keys(allPaintProperties).length) {\n      // go through each applicable gl paint property\n      Object.keys(allPaintProperties).forEach((glPaintProperty) => {\n        const selectedValue = allPaintProperties[glPaintProperty][0]\n        const fallbackValue = allPaintProperties[glPaintProperty][1]\n        const paintOrLayout = ['icon-size', 'icon-image'].includes(glPaintProperty)\n          ? 'layout'\n          : 'paint'\n        let glPaintFinalValue\n        if (\n          hasFeatures === false &&\n          applyStyleToAllFeatures !== true &&\n          applyStyleToAllFeatures !== false\n        ) {\n          // style reset when no features filter is declared and neither is applyAll\n          const originalLayerStyle = GL_STYLE.layers.find((l) => l.id === currentGlLayer.id)\n\n          if (originalLayerStyle !== undefined) {\n            // for reset: do not repaint with default style when layer as a custom main color property\n            if (\n              currentGlLayer.metadata &&\n              currentGlLayer.metadata['gfw:mainColorPaintProperty'] === glPaintProperty\n            ) {\n              glPaintFinalValue = null\n            } else {\n              glPaintFinalValue = originalLayerStyle[paintOrLayout][glPaintProperty]\n            }\n          } else {\n            // this will happen when no style exist in the original definition (ie custom layers)\n            // in this case set glPaintFinalValue to null and we'll just skip applying\n            // any selected/highlighted style for this layer\n            glPaintFinalValue = null\n          }\n        } else if (applyStyleToAllFeatures === true || applyStyleToAllFeatures === false) {\n          glPaintFinalValue = applyStyleToAllFeatures === true ? selectedValue : fallbackValue\n        } else {\n          let layerColorRgbString = ''\n          if (refLayer.color !== null && refLayer.color !== undefined) {\n            const layerColorRgb = hexToRgb(refLayer.color)\n            layerColorRgbString = `${layerColorRgb.r},${layerColorRgb.g},${layerColorRgb.b}`\n          }\n          glPaintFinalValue = [\n            'match',\n            ['get', features.field],\n            features.values,\n            typeof selectedValue !== 'string'\n              ? selectedValue\n              : selectedValue.replace('$REFLAYER_COLOR_RGB', layerColorRgbString),\n            typeof fallbackValue !== 'string'\n              ? fallbackValue\n              : fallbackValue.replace('$REFLAYER_COLOR_RGB', layerColorRgbString),\n          ]\n        }\n\n        if (glPaintFinalValue !== undefined && glPaintFinalValue !== null) {\n          newStyle = newStyle.setIn(\n            ['layers', glLayerIndex, paintOrLayout, glPaintProperty],\n            glPaintFinalValue\n          )\n        }\n      })\n    }\n  })\n  return newStyle\n}\n\nconst toggleLayerVisibility = (style, refLayer, glLayerIndex) => {\n  const visibility = refLayer.visible === true ? 'visible' : 'none'\n  return style.setIn(['layers', glLayerIndex, 'layout', 'visibility'], visibility)\n}\n\nconst updateGLLayer = (style, glLayerId, refLayer) => {\n  const currentStyle = style.toJS()\n  const currentStyleLayers = currentStyle.layers\n  let newStyle = style\n\n  const glLayerIndex = currentStyleLayers.findIndex((l) => l.id === glLayerId)\n  const glLayer = currentStyleLayers.find((l) => l.id === glLayerId)\n\n  // visibility\n  newStyle = toggleLayerVisibility(newStyle, refLayer, glLayerIndex)\n\n  if (refLayer.isBasemap === true) {\n    return newStyle\n  }\n\n  const refLayerOpacity = refLayer.opacity === undefined ? 1 : refLayer.opacity\n\n  // color/opacity\n  switch (glLayer.type) {\n    case 'fill': {\n      newStyle = newStyle\n        .setIn(['layers', glLayerIndex, 'paint', 'fill-opacity'], refLayerOpacity)\n        .setIn(['layers', glLayerIndex, 'paint', 'fill-outline-color'], refLayer.color)\n        .setIn(['layers', glLayerIndex, 'paint', 'fill-color'], GL_TRANSPARENT)\n      break\n    }\n    case 'line': {\n      const color = refLayer.color || (glLayer.paint && glLayer.paint['line-color'])\n      newStyle = newStyle\n        .setIn(['layers', glLayerIndex, 'paint', 'line-opacity'], refLayerOpacity)\n        .setIn(['layers', glLayerIndex, 'paint', 'line-color'], color)\n      break\n    }\n    case 'symbol': {\n      if (glLayer.metadata && glLayer.metadata['gfw:isLabel'] === true) {\n        const parentLayerIsVisible =\n          newStyle.getIn(['layers', glLayerIndex, 'layout', 'visibility']) === 'visible'\n        const labelsVisibility =\n          parentLayerIsVisible && refLayer.showLabels === true ? 'visible' : 'none'\n        newStyle = newStyle.setIn(\n          ['layers', glLayerIndex, 'layout', 'visibility'],\n          labelsVisibility\n        )\n        if (refLayer.showLabels !== true) {\n          break\n        }\n      }\n      newStyle = newStyle.setIn(['layers', glLayerIndex, 'paint', 'text-opacity'], refLayerOpacity)\n\n      if (refLayer.color !== undefined) {\n        newStyle = newStyle.setIn(['layers', glLayerIndex, 'paint', 'text-color'], refLayer.color)\n      }\n      break\n    }\n    // Event layers and custom layers with point geom types\n    case 'circle': {\n      newStyle = newStyle\n        .setIn(['layers', glLayerIndex, 'paint', 'circle-opacity'], refLayerOpacity)\n        .setIn(['layers', glLayerIndex, 'paint', 'circle-stroke-opacity'], refLayerOpacity)\n\n      if (refLayer.color !== undefined) {\n        const colorPaintProperty =\n          glLayer && glLayer.metadata && glLayer.metadata['gfw:mainColorPaintProperty']\n            ? glLayer.metadata['gfw:mainColorPaintProperty']\n            : 'circle-color'\n        newStyle = newStyle.setIn(\n          ['layers', glLayerIndex, 'paint', colorPaintProperty],\n          refLayer.color\n        )\n      }\n      break\n    }\n    case 'raster': {\n      newStyle = newStyle.setIn(\n        ['layers', glLayerIndex, 'paint', 'raster-opacity'],\n        refLayerOpacity\n      )\n      break\n    }\n    default: {\n      break\n    }\n  }\n\n  newStyle = applyLayerExpressions(newStyle, refLayer, glLayer, glLayerIndex)\n\n  return newStyle\n}\n\nconst addCustomGLLayer = (subtype, layerId, url, data) => (dispatch, getState) => {\n  const state = getState()\n  let style = state.map.style.mapStyle\n  const currentStyle = style.toJS()\n\n  // add source if it doesn't exist yet\n  if (currentStyle.sources[layerId] === undefined) {\n    const source = { type: subtype }\n    if (subtype === CUSTOM_LAYERS_SUBTYPES.geojson) {\n      source.data = data\n    } else if (subtype === CUSTOM_LAYERS_SUBTYPES.raster) {\n      source.tiles = [url]\n      source.tileSize = 256\n    }\n    style = style.setIn(['sources', layerId], fromJS(source))\n  }\n\n  if (currentStyle.layers.find((glLayer) => glLayer.id === layerId) === undefined) {\n    const glType = subtype === CUSTOM_LAYERS_SUBTYPES.geojson ? getMainGeomType(data) : subtype\n    const glLayer = fromJS({\n      id: layerId,\n      source: layerId,\n      type: glType,\n      layout: {},\n      paint: {},\n    })\n    const layerIndex =\n      subtype === CUSTOM_LAYERS_SUBTYPES.raster\n        ? // if raster, put at index of last raster layer except labels\n          currentStyle.layers.length -\n          1 -\n          currentStyle.layers\n            .filter((l) => l.id !== 'labels')\n            .reverse()\n            .findIndex((l) => l.type === 'raster')\n        : currentStyle.layers.length - 1\n    style = style.set('layers', style.get('layers').splice(layerIndex, 0, glLayer))\n  }\n\n  dispatch(setMapStyle(style))\n}\n\nconst updateWorkspaceGLLayers = (workspaceGLLayers) => (dispatch, getState) => {\n  const state = getState()\n  let style = state.map.style.mapStyle\n\n  workspaceGLLayers.forEach((workspaceGLLayer) => {\n    const { id, gl } = workspaceGLLayer\n    const finalSource = setDefaultVectorTiles(gl.source, workspaceGLLayer.url)\n    style = style.setIn(['sources', id], fromJS(finalSource))\n\n    const existingLayerIds = style\n      .get('layers')\n      .toJS()\n      .map((l) => l.id)\n    const layersToAdd = gl.layers.filter((layer, index) => {\n      const layerId = layer.id || index > 0 ? `${id}-${index}` : id\n      return !existingLayerIds.includes(layerId)\n    })\n    layersToAdd.forEach((layerToAdd, index) => {\n      // doesn't add a sufix in the first elements but it will for the following ones\n      let layerToAddId = layerToAdd.id || index > 0 ? `${id}-${index}` : id\n      const defaultGlLayer = setLayerStyleDefaults(layerToAdd)\n\n      const glLayer = {\n        ...defaultGlLayer,\n        id: layerToAddId,\n        source: id,\n      }\n\n      // set source-layer - defaults to source id\n      if (gl.source.type === 'vector') {\n        const sourceLayer =\n          layerToAdd['source-layer'] === undefined ? id : layerToAdd['source-layer']\n        glLayer['source-layer'] = sourceLayer\n      }\n\n      // find correct z-index\n      const existingLayers = style.get('layers')\n      const newLayerGroup = glLayer.metadata['mapbox:group']\n      const newLayerIndex = existingLayers.findLastIndex((l) => {\n        return newLayerGroup === l.toJS().metadata['mapbox:group']\n      })\n      style = style.set('layers', existingLayers.splice(newLayerIndex, 0, fromJS(glLayer)))\n    })\n  })\n\n  dispatch(setMapStyle(style))\n  dispatch(applyTemporalExtent(state.map.module.temporalExtent))\n}\n\nconst getCartoLayerInstanciatePromise = ({ sourceId, sourceCartoSQL }) => {\n  const mapConfig = { layers: [{ id: sourceId, options: { sql: sourceCartoSQL } }] }\n  const mapConfigURL = encodeURIComponent(JSON.stringify(mapConfig))\n  const cartoAnonymousMapUrl = STATIC_LAYERS_CARTO_ENDPOINT.replace('$MAPCONFIG', mapConfigURL)\n\n  return new Promise((resolve) => {\n    fetch(cartoAnonymousMapUrl)\n      .then((res) => {\n        if (res.status >= 400) {\n          console.warn(`loading of layer failed ${sourceId}`)\n          Promise.reject()\n          return null\n        }\n        return res.json()\n      })\n      .then((data) => {\n        resolve({\n          layergroupid: data.layergroupid,\n          sourceId,\n        })\n      })\n      .catch((err) => {\n        console.warn(err)\n      })\n  })\n}\n\nconst instanciateCartoLayers = (layers) => (dispatch, getState) => {\n  dispatch({\n    type: MARK_CARTO_LAYERS_AS_INSTANCIATED,\n    payload: layers.map((layer) => layer.sourceId),\n  })\n  const cartoLayersPromises = layers.map((layer) => getCartoLayerInstanciatePromise(layer))\n  const cartoLayersPromisesPromise = Promise.all(cartoLayersPromises.map((p) => p.catch((e) => e)))\n  cartoLayersPromisesPromise\n    .then((instanciatedCartoLayers) => {\n      let style = getState().map.style.mapStyle\n      const currentStyle = style.toJS()\n      instanciatedCartoLayers.forEach((cartoLayer) => {\n        const tilesURL = STATIC_LAYERS_CARTO_TILES_ENDPOINT.replace(\n          '$LAYERGROUPID',\n          cartoLayer.layergroupid\n        )\n\n        // replace gl source with a new source that use tiles provided by Carto anonymous maps API\n        const newSourceId = `${cartoLayer.sourceId}-instanciated`\n        style = style.setIn(\n          ['sources', newSourceId],\n          fromJS({\n            type: 'vector',\n            tiles: [tilesURL],\n          })\n        )\n\n        style = style.deleteIn(['sources', cartoLayer.sourceId])\n\n        // change source in all layers that are using it (generally polygon + labels)\n        currentStyle.layers.forEach((glLayer, glLayerIndex) => {\n          if (glLayer.source === cartoLayer.sourceId) {\n            style = style.setIn(['layers', glLayerIndex, 'source'], newSourceId)\n            style = style.setIn(['layers', glLayerIndex, 'metadata', 'gfw:id'], cartoLayer.sourceId)\n            const refLayer = layers.find((l) => l.refLayer.id === cartoLayer.sourceId).refLayer\n            style = updateGLLayer(style, glLayer.id, refLayer)\n          }\n        })\n      })\n\n      dispatch(setMapStyle(style))\n    })\n    .catch((err) => {\n      console.warn(err)\n    })\n}\n\nexport const commitStyleUpdates = (staticLayers, basemapLayers) => (dispatch, getState) => {\n  // Store a copy of static and basemap layers. This is not used directly by\n  // the Map component which only needs a prepared style object\n  dispatch({\n    type: SET_STATIC_LAYERS,\n    payload: staticLayers,\n  })\n  dispatch({\n    type: SET_BASEMAP_LAYERS,\n    payload: basemapLayers,\n  })\n\n  const layers = [...staticLayers, ...basemapLayers.map((bl) => ({ ...bl, isBasemap: true }))]\n\n  const currentGLSources = getState().map.style.mapStyle.toJS().sources\n\n  // collect layers declared in workspace but not in original gl style\n  const workspaceGLLayers = layers.filter((layer) => layer.gl !== undefined)\n\n  if (workspaceGLLayers.length) {\n    // Adds the gl layers again in case the source is a dynamic geojson source\n    dispatch(updateWorkspaceGLLayers(workspaceGLLayers))\n  }\n\n  // instanciate custom layers if needed\n  const customLayers = layers.filter(\n    (layer) => layer.isCustom === true && currentGLSources[layer.id] === undefined\n  )\n  if (customLayers.length) {\n    customLayers.forEach((layer) => {\n      dispatch(addCustomGLLayer(layer.subtype, layer.id, layer.url, layer.data))\n    })\n  }\n\n  const state = getState().map.style\n  let style = state.mapStyle\n  const currentStyle = style.toJS()\n  const glLayers = currentStyle.layers\n  const glSources = currentStyle.sources\n\n  const cartoLayersToInstanciate = []\n\n  // update source when needed\n  staticLayers.forEach((refLayer) => {\n    const sourceId = refLayer.id\n    if (currentGLSources[sourceId] !== undefined && refLayer.visible === true) {\n      if (refLayer.data !== undefined) {\n        style = style.setIn(['sources', sourceId, 'data'], fromJS(refLayer.data))\n      }\n      if (refLayer.url !== undefined) {\n        const newSource = setDefaultVectorTiles(currentGLSources[sourceId], refLayer.url)\n        style = style.setIn(['sources', sourceId], fromJS(newSource))\n      }\n    }\n  })\n\n  for (let i = 0; i < glLayers.length; i++) {\n    const glLayer = glLayers[i]\n    const sourceId = glLayer.source\n    const glSource = glSources[sourceId]\n    const layerId = (glLayer.metadata !== undefined && glLayer.metadata['gfw:id']) || sourceId\n\n    const refLayer = layers.find((l) => l.id === layerId)\n\n    if (refLayer === undefined) {\n      if (glLayer.type !== 'background') {\n        // console.warn('gl layer does not exists in workspace', glLayer);\n      }\n      continue\n    }\n\n    // check if layer is served from Carto, which means we need to instanciate it first\n    // TODO BUG: check if layer is not instanciatING too\n    const sourceCartoSQL = glSource.metadata !== undefined && glSource.metadata['gfw:carto-sql']\n    if (sourceCartoSQL !== false && sourceCartoSQL !== undefined) {\n      // only if layer is visible and has not been instanciated yet\n      const cartoLayerInstanciated = state.cartoLayersInstanciated.indexOf(sourceId) > -1\n      if (\n        refLayer.visible === true &&\n        !cartoLayerInstanciated &&\n        !cartoLayersToInstanciate.find((l) => l.sourceId === sourceId)\n      ) {\n        cartoLayersToInstanciate.push({ sourceId, sourceCartoSQL, refLayer })\n      }\n      continue\n    }\n\n    style = updateGLLayer(style, glLayer.id, refLayer)\n  }\n\n  if (cartoLayersToInstanciate.length) {\n    dispatch(instanciateCartoLayers(cartoLayersToInstanciate))\n  }\n\n  dispatch(setMapStyle(style))\n}\n","import FlyToInterpolator from 'react-map-gl/dist/esm/utils/transition/viewport-fly-to-interpolator'\nimport { easeCubic } from 'd3-ease'\nimport { MIN_ZOOM_LEVEL, MAX_ZOOM_LEVEL } from '../config'\nimport { TRANSITION_TYPE } from '../constants'\nimport {\n  SET_BOUNDS,\n  SET_VIEWPORT,\n  UPDATE_VIEWPORT,\n  SET_ZOOM_INCREMENT,\n  SET_MOUSE_LAT_LONG,\n  TRANSITION_END,\n  SET_NATIVE_VIEWPORT,\n} from './viewport.actions'\n\nexport const TRANSITION_DURATION = 500\n\nconst DEFAULT_TRANSITION = {\n  transitionDuration: TRANSITION_DURATION,\n  transitionInterpolator: new FlyToInterpolator(),\n  transitionEasing: easeCubic,\n}\n\nconst initialState = {\n  viewport: {\n    latitude: 0,\n    longitude: 0,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0,\n    width: 1000,\n    height: 800,\n    bounds: {},\n  },\n  maxZoom: MAX_ZOOM_LEVEL,\n  minZoom: MIN_ZOOM_LEVEL,\n  prevZoom: 3,\n  currentTransition: null,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_VIEWPORT: {\n      return {\n        ...state,\n        viewport: action.payload,\n        canZoomIn: action.payload.zoom < state.maxZoom,\n        canZoomOut: action.payload.zoom > state.minZoom,\n        prevZoom: state.viewport.zoom,\n      }\n    }\n\n    case SET_BOUNDS: {\n      return {\n        ...state,\n        bounds: action.payload,\n      }\n    }\n\n    case UPDATE_VIEWPORT: {\n      const viewport = { ...state.viewport, ...action.payload }\n      return {\n        ...state,\n        viewport,\n        prevZoom: viewport.zoom,\n      }\n    }\n\n    case SET_ZOOM_INCREMENT: {\n      const currentZoom = state.viewport.zoom\n      const zoom = Math.min(\n        state.maxZoom,\n        action.payload.zoom || currentZoom + action.payload.increment\n      )\n      const viewport = {\n        ...state.viewport,\n        ...DEFAULT_TRANSITION,\n        zoom,\n        latitude:\n          action.payload.latitude === null ? state.viewport.latitude : action.payload.latitude,\n        longitude:\n          action.payload.longitude === null ? state.viewport.longitude : action.payload.longitude,\n      }\n      return {\n        ...state,\n        viewport,\n        canZoomIn: zoom < state.maxZoom,\n        canZoomOut: zoom > state.minZoom,\n        prevZoom: state.viewport.zoom,\n        currentTransition: TRANSITION_TYPE.ZOOM,\n      }\n    }\n\n    case SET_MOUSE_LAT_LONG: {\n      return { ...state, mouseLatLong: action.payload }\n    }\n\n    case TRANSITION_END: {\n      return { ...state, currentTransition: null }\n    }\n\n    case SET_NATIVE_VIEWPORT: {\n      return { ...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}\n","import { compose, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { TRANSITION_DURATION } from '../glmap/viewport.reducer'\nimport { fitToBounds as fitToBoundsAction, transitionEnd } from '../glmap/viewport.actions'\n\nlet composeEnhancers = compose\nif (\n  process.env.NODE_ENV === 'development' &&\n  (process.env.MAP_REDUX_REMOTE_DEBUG === 'true' ||\n    process.env.REACT_APP_MAP_REDUX_REMOTE_DEBUG === 'true')\n) {\n  const composeWithDevTools = require('remote-redux-devtools').composeWithDevTools\n  composeEnhancers = composeWithDevTools({\n    name: 'Map module',\n    realtime: true,\n    hostname: 'localhost',\n    port: 8000,\n    maxAge: 30,\n    stateSanitizer: (state) => ({ ...state, map: { ...state.map, heatmap: 'NOT_SERIALIZED' } }),\n  })\n}\n\nconst store = createStore(() => {}, {}, composeEnhancers(applyMiddleware(thunk)))\n\nexport const targetMapVessel = (id) => {\n  const track = store.getState().map.tracks.data.find((t) => t.id === id.toString())\n  store.dispatch(fitToBoundsAction(track.geoBounds))\n\n  return track.timelineBounds\n}\nexport const fitToBounds = (bounds) => {\n  store.dispatch(fitToBoundsAction(bounds))\n  setTimeout(() => {\n    // needed as the transition end is not being called on first fitToBounds trigger\n    if (store.getState().map.viewport.currentTransition !== null) {\n      store.dispatch(transitionEnd())\n    }\n  }, TRANSITION_DURATION + 1)\n}\n\nexport default store\n","import tbbox from '@turf/bbox'\n\nexport const getTrackTimeBounds = (geojson) => {\n  const time = { start: Infinity, end: 0 }\n  if (geojson && geojson.features) {\n    geojson.features.forEach((feature) => {\n      const hasTimes =\n        feature.properties &&\n        feature.properties.coordinateProperties &&\n        feature.properties.coordinateProperties.times &&\n        feature.properties.coordinateProperties.times.length > 0\n      if (hasTimes) {\n        feature.properties.coordinateProperties.times.forEach((datetime) => {\n          if (datetime < time.start) {\n            time.start = datetime\n          } else if (datetime > time.end) {\n            time.end = datetime\n          }\n        })\n      }\n    })\n  }\n  return [time.start, time.end]\n}\n\nexport const getTrackBounds = (geojson) => {\n  const bounds = tbbox(geojson)\n  return {\n    minLat: bounds[3],\n    minLng: bounds[0],\n    maxLat: bounds[1],\n    maxLng: bounds[2],\n  }\n}\n","import { targetMapVessel } from '../store'\n\nimport { getTilePromises, getCleanVectorArrays, groupData } from '../utils/heatmapTileData'\nimport { startLoader, completeLoader } from '../module/module.actions'\nimport { getTrackBounds, getTrackTimeBounds } from '../utils/getTrackBounds'\n\nexport const ADD_TRACK = 'ADD_TRACK'\nexport const UPDATE_TRACK = 'UPDATE_TRACK'\nexport const REMOVE_TRACK = 'REMOVE_TRACK'\n\nconst convertLegacyTrackToGeoJSON = (vectorArrays) => {\n  const createFeature = (segId, type = 'track', geomType = 'LineString') => ({\n    type: 'Feature',\n    geometry: {\n      type: geomType,\n      coordinates: [],\n    },\n    properties: {\n      type,\n      segId,\n      coordinateProperties: {\n        times: [],\n      },\n    },\n  })\n\n  let currentLng\n  let currentSeries = vectorArrays.series[0]\n  let currentFeature = createFeature(currentSeries)\n  const fishingPoints = createFeature('fishing', 'fishing', 'MultiPoint')\n  const features = []\n  let lngOffset = 0\n\n  for (let index = 0, length = vectorArrays.latitude.length; index < length; index++) {\n    const series = vectorArrays.series[index]\n    const longitude = vectorArrays.longitude[index]\n    const latitude = vectorArrays.latitude[index]\n    const weight = vectorArrays.weight[index]\n\n    if (currentLng) {\n      if (longitude - currentLng < -180) {\n        lngOffset += 360\n      } else if (longitude - currentLng > 180) {\n        lngOffset -= 360\n      }\n    }\n\n    const ll = [longitude + lngOffset, latitude]\n    if (series !== currentSeries && index !== 0) {\n      features.push(currentFeature)\n      currentFeature = createFeature(series)\n    }\n\n    currentFeature.geometry.coordinates.push(ll)\n    if (weight > 0) {\n      fishingPoints.geometry.coordinates.push(ll)\n      fishingPoints.properties.coordinateProperties.times.push(vectorArrays.datetime[index])\n    }\n    currentFeature.properties.coordinateProperties.times.push(vectorArrays.datetime[index])\n\n    currentSeries = series\n    currentLng = longitude\n  }\n\n  features.push(currentFeature)\n  features.push(fishingPoints)\n\n  return {\n    type: 'FeatureCollection',\n    features,\n  }\n}\n\nfunction loadTrack(track) {\n  return (dispatch, getState) => {\n    const { id, url, type, fitBoundsOnLoad, layerTemporalExtents, color, data } = track\n    const state = getState()\n    if (state.map.tracks.data.find((t) => t.id === id)) {\n      return\n    }\n\n    const payload = {\n      id,\n      url,\n      type,\n      color,\n      fitBoundsOnLoad,\n    }\n    const trackHasData = track.data !== undefined && track.data !== null\n    const trackHasUrl = url !== undefined && url !== null && url !== ''\n    if (trackHasData) {\n      payload.data = data\n      payload.geoBounds = getTrackBounds(data)\n    }\n    dispatch({ type: ADD_TRACK, payload })\n\n    if (trackHasData || !trackHasUrl) {\n      return\n    }\n\n    const loaderID = startLoader(dispatch, state)\n    if (type !== 'geojson') {\n      // Deprecated tracks format logic to be deleted some day\n      const token = state.map.module.token\n\n      const promises = getTilePromises(url, token, layerTemporalExtents)\n\n      Promise.all(promises.map((p) => p.catch((e) => e))).then((rawTileData) => {\n        const cleanData = getCleanVectorArrays(rawTileData)\n\n        if (!cleanData.length) {\n          return\n        }\n        const rawTrackData = groupData(cleanData, [\n          'latitude',\n          'longitude',\n          'datetime',\n          'series',\n          'weight',\n          'sigma',\n        ])\n\n        const data = convertLegacyTrackToGeoJSON(rawTrackData)\n        const timelineBounds = getTrackTimeBounds(data)\n        const geoBounds = getTrackBounds(data)\n\n        dispatch({\n          type: UPDATE_TRACK,\n          payload: {\n            id,\n            data,\n            geoBounds,\n            timelineBounds,\n          },\n        })\n        dispatch(completeLoader(loaderID))\n      })\n    } else {\n      fetch(url)\n        .then((res) => {\n          if (res.status >= 400) throw new Error(res.statusText)\n          return res.json()\n        })\n        .then((data) => {\n          const timelineBounds = getTrackTimeBounds(data)\n          const geoBounds = getTrackBounds(data)\n          dispatch({\n            type: UPDATE_TRACK,\n            payload: {\n              id,\n              data,\n              geoBounds,\n              timelineBounds,\n            },\n          })\n          if (fitBoundsOnLoad) {\n            targetMapVessel(id)\n          }\n        })\n        .catch((err) => console.warn(err))\n        .finally(() => dispatch(completeLoader(loaderID)))\n    }\n  }\n}\n\nconst removeTrack = (trackId) => ({\n  type: REMOVE_TRACK,\n  payload: {\n    trackId,\n  },\n})\n\nexport const updateTracks = (newTracks = []) => (dispatch, getState) => {\n  const prevTracks = getState().map.tracks.data\n  // add and update layers\n  if (newTracks) {\n    newTracks.forEach((newTrack) => {\n      const trackId = newTrack.id\n      const prevTrack = prevTracks.find((t) => t.id === trackId)\n      if (prevTrack === undefined) {\n        dispatch(loadTrack(newTrack))\n      } else if (prevTrack.color !== newTrack.color) {\n        dispatch({\n          type: UPDATE_TRACK,\n          payload: {\n            id: newTrack.id,\n            color: newTrack.color,\n          },\n        })\n      }\n    })\n  }\n\n  // clean up unused tracks\n  prevTracks.forEach((prevTrack) => {\n    if (!newTracks || !newTracks.find((t) => t.id === prevTrack.id)) {\n      dispatch(removeTrack(prevTrack.id))\n    }\n  })\n}\n","import PropTypes from 'prop-types'\n\nconst withReducerPropTypes = (name, propTypesSchema) => (reducer) => {\n  if (process.env.NODE_ENV === 'development') {\n    return (state, action) => {\n      const result = reducer(state, action)\n      PropTypes.checkPropTypes(propTypesSchema, result, 'reducer', name)\n\n      return result\n    }\n  }\n  return reducer\n}\n\nexport default withReducerPropTypes\n","import PropTypes from 'prop-types'\nimport withReducerTypes from '../utils/withReducerTypes'\nimport {\n  INIT_MODULE,\n  SET_TEMPORAL_EXTENT,\n  SET_HIGHLIGHT_TEMPORAL_EXTENT,\n  START_LOADER,\n  COMPLETE_LOADER,\n  SET_MODULE_CURSOR,\n} from './module.actions'\n\nconst initialState = {\n  loaders: null,\n  token: undefined,\n  temporalExtent: [new Date(1970), new Date()],\n  highlightTemporalExtent: null,\n  cursor: null,\n  onViewportChange: undefined,\n  onHover: undefined,\n  onClick: undefined,\n  onLoad: undefined,\n  onLoadStart: undefined,\n  onLoadComplete: undefined,\n  onClosePopup: undefined,\n  onAttributionsChange: undefined,\n}\n\nconst moduleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_MODULE: {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    }\n\n    case SET_TEMPORAL_EXTENT: {\n      return {\n        ...state,\n        temporalExtent: action.payload,\n      }\n    }\n\n    case SET_HIGHLIGHT_TEMPORAL_EXTENT: {\n      return {\n        ...state,\n        highlightTemporalExtent: action.payload,\n      }\n    }\n\n    case START_LOADER: {\n      const loaders = state.loaders !== null ? [...state.loaders] : []\n      loaders.push(action.payload)\n      return { ...state, loaders }\n    }\n\n    case COMPLETE_LOADER: {\n      const loaders = [...state.loaders]\n      const loaderIndex = loaders.findIndex((l) => l === action.payload)\n      loaders.splice(loaderIndex, 1)\n      return { ...state, loaders }\n    }\n\n    case SET_MODULE_CURSOR: {\n      return { ...state, cursor: action.payload }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst moduleTypes = {\n  loaders: PropTypes.arrayOf(PropTypes.number),\n  token: PropTypes.string,\n  temporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  onViewportChange: PropTypes.func,\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onLoad: PropTypes.func,\n  onLoadStart: PropTypes.func,\n  onLoadComplete: PropTypes.func,\n  onClosePopup: PropTypes.func,\n  onAttributionsChange: PropTypes.func,\n}\n\nexport default withReducerTypes('module', moduleTypes)(moduleReducer)\n","import PropTypes from 'prop-types'\nimport { trackTypes } from '../proptypes/tracks'\nimport withReducerTypes from '../utils/withReducerTypes'\n\nimport { ADD_TRACK, UPDATE_TRACK, REMOVE_TRACK } from './tracks.actions'\n\nconst initialState = {\n  data: [],\n}\n\nconst tracksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TRACK: {\n      const data = [...state.data, action.payload]\n      return { ...state, data }\n    }\n\n    case UPDATE_TRACK: {\n      const trackData = action.payload\n      const data = state.data.map((track) => {\n        if (track.id !== trackData.id) return track\n        return {\n          ...track,\n          ...trackData,\n        }\n      })\n      return { ...state, data }\n    }\n\n    case REMOVE_TRACK: {\n      const removedTrackId = action.payload.trackId\n      const data = state.data.filter((track) => track.id !== removedTrackId)\n      return { ...state, data }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst tracksTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.exact({\n      ...trackTypes,\n      data: PropTypes.object,\n      timelineBounds: PropTypes.array,\n      geoBounds: PropTypes.exact({\n        minLat: PropTypes.number,\n        minLng: PropTypes.number,\n        maxLat: PropTypes.number,\n        maxLng: PropTypes.number,\n      }),\n    })\n  ),\n}\n\nexport default withReducerTypes('tracks', tracksTypes)(tracksReducer)\n","import difference from 'lodash/difference'\nimport {\n  INIT_HEATMAP_LAYERS,\n  UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES,\n  ADD_HEATMAP_LAYER,\n  UPDATE_HEATMAP_LAYER_STYLE,\n  REMOVE_HEATMAP_LAYER,\n  ADD_REFERENCE_TILE,\n  UPDATE_HEATMAP_TILE,\n  RELEASE_HEATMAP_TILES,\n  HIGHLIGHT_VESSELS,\n  UPDATE_LOADED_TILES,\n  HIGHLIGHT_CLICKED_VESSEL,\n  CLEAR_HIGHLIGHT_CLICKED_VESSEL,\n} from './heatmap.actions'\n\nconst initialState = {\n  // a dict of heatmap layers (key is layer id)\n  // each containing data, url, tiles, visibleTemporalExtentsIndices\n  heatmapLayers: {},\n  // store a list of tiles currently visible in the map\n  // those are necessary when adding a new layer to know which tiles need to be loaded\n  referenceTiles: [],\n  highlightedVessels: { isEmpty: true },\n  highlightedClickedVessel: null,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case INIT_HEATMAP_LAYERS: {\n      return Object.assign({}, state, { heatmapLayers: action.payload })\n    }\n\n    case UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES: {\n      const heatmapLayers = state.heatmapLayers\n      heatmapLayers[action.payload.layerId].visibleTemporalExtentsIndices =\n        action.payload.newVisibleTemporalExtentsIndices\n\n      // also removing indices within each tile\n      // adding is done after tile has actually loaded\n      heatmapLayers[action.payload.layerId].tiles.forEach((tile) => {\n        tile.temporalExtentsIndicesLoaded = difference(\n          tile.temporalExtentsIndicesLoaded,\n          action.payload.indicesRemoved\n        )\n      })\n      return { ...state, heatmapLayers }\n    }\n\n    case ADD_HEATMAP_LAYER: {\n      const heatmapLayers = Object.assign({}, state.heatmapLayers, {\n        [action.payload.id]: {\n          tiles: [],\n          ...action.payload,\n        },\n      })\n      return Object.assign({}, state, { heatmapLayers })\n    }\n\n    case UPDATE_HEATMAP_LAYER_STYLE: {\n      const newLayer = action.payload\n      const layer = { ...state.heatmapLayers[newLayer.id], ...newLayer }\n      const heatmapLayers = { ...state.heatmapLayers, [newLayer.id]: layer }\n      return { ...state, heatmapLayers }\n    }\n\n    case REMOVE_HEATMAP_LAYER: {\n      const heatmapLayers = Object.assign({}, state.heatmapLayers)\n      delete heatmapLayers[action.payload.id]\n      return Object.assign({}, state, { heatmapLayers })\n    }\n\n    case ADD_REFERENCE_TILE: {\n      return Object.assign({}, state, { referenceTiles: [...state.referenceTiles, action.payload] })\n    }\n\n    case UPDATE_HEATMAP_TILE: {\n      const layerId = action.payload.layerId\n      const newTile = action.payload.tile\n      const layer = { ...state.heatmapLayers[layerId] }\n      let layerTiles = [...layer.tiles]\n      const tileIndex = layerTiles.findIndex((t) => t.uid === newTile.uid)\n      if (tileIndex === -1) {\n        layerTiles.push(newTile)\n      } else {\n        layerTiles = [\n          ...layerTiles.slice(0, tileIndex),\n          newTile,\n          ...layerTiles.slice(tileIndex + 1),\n        ]\n      }\n      layer.tiles = layerTiles\n      const heatmapLayers = { ...state.heatmapLayers, [layerId]: layer }\n      return { ...state, heatmapLayers }\n    }\n\n    case RELEASE_HEATMAP_TILES: {\n      const uids = action.payload\n\n      // remove tiles\n      const layerIds = Object.keys(state.heatmapLayers)\n      const heatmapLayers = { ...state.heatmapLayers }\n      layerIds.forEach((layerId) => {\n        const prevLayer = { ...heatmapLayers[layerId] }\n        uids.forEach((tileUid) => {\n          const releasedTileIndex = prevLayer.tiles.findIndex((tile) => tile.uid === tileUid)\n          if (releasedTileIndex > -1) {\n            // console.log('releasing', layerId, tileUid);\n            prevLayer.tiles.splice(releasedTileIndex, 1)\n          }\n        })\n      })\n\n      // remove reference tiles\n      let referenceTiles = [...state.referenceTiles]\n      uids.forEach((tileUid) => {\n        const releasedRefTileIndex = referenceTiles.findIndex((tile) => tile.uid === tileUid)\n        if (releasedRefTileIndex > -1) {\n          referenceTiles = [\n            ...referenceTiles.slice(0, releasedRefTileIndex),\n            ...referenceTiles.slice(releasedRefTileIndex + 1),\n          ]\n        }\n      })\n\n      return { ...state, heatmapLayers, referenceTiles }\n    }\n\n    case UPDATE_LOADED_TILES: {\n      const newHeatmapLayers = { ...state.heatmapLayers }\n      return { ...state, heatmapLayers: newHeatmapLayers }\n    }\n\n    case HIGHLIGHT_VESSELS: {\n      return Object.assign({}, state, { highlightedVessels: action.payload })\n    }\n\n    case HIGHLIGHT_CLICKED_VESSEL: {\n      return { ...state, highlightedClickedVessel: action.payload }\n    }\n\n    case CLEAR_HIGHLIGHT_CLICKED_VESSEL: {\n      return { ...state, highlightedClickedVessel: null }\n    }\n\n    default:\n      return state\n  }\n}\n","import uniq from 'lodash/uniq'\nimport {\n  SET_CURRENTLY_VISIBLE_TILES,\n  SET_CURRENTLY_LOADED_TILES,\n  SET_CURRENTLY_SWAPPED_TILE_UIDS,\n  MARK_TILES_UIDS_AS_LOADED,\n  RELEASE_MARKED_TILES_UIDS,\n} from './heatmapTiles.actions'\n\nconst initialState = {\n  currentVisibleTiles: [],\n  currentLoadedTiles: [],\n  currentToLoadTileUids: [],\n  currentToReleaseTileUids: [],\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENTLY_VISIBLE_TILES: {\n      const currentVisibleTiles = [].concat(action.payload)\n      return { ...state, currentVisibleTiles }\n    }\n\n    case SET_CURRENTLY_LOADED_TILES: {\n      const currentLoadedTiles = [].concat(action.payload)\n      return { ...state, currentLoadedTiles }\n    }\n\n    case SET_CURRENTLY_SWAPPED_TILE_UIDS: {\n      const currentToLoadTileUids = uniq(\n        state.currentToLoadTileUids.concat(action.payload.tilesToLoadUids)\n      )\n      const currentToReleaseTileUids = uniq(\n        state.currentToReleaseTileUids.concat(action.payload.tilesToReleaseUids)\n      )\n      // clean to load tiles of tiles that needs to be released\n      const newToLoadTilesUids = currentToLoadTileUids.filter(\n        (tileUid) => currentToReleaseTileUids.indexOf(tileUid) === -1\n      )\n      return { ...state, currentToLoadTileUids: newToLoadTilesUids, currentToReleaseTileUids }\n    }\n\n    case MARK_TILES_UIDS_AS_LOADED: {\n      const currentToLoadTileUids = state.currentToLoadTileUids\n      const tileUidsMarkedAsLoaded = action.payload\n      const newCurrentToLoadTileUids = currentToLoadTileUids.filter(\n        (tileUid) => tileUidsMarkedAsLoaded.indexOf(tileUid) === -1\n      )\n      return { ...state, currentToLoadTileUids: newCurrentToLoadTileUids }\n    }\n\n    case RELEASE_MARKED_TILES_UIDS: {\n      return { ...state, currentToReleaseTileUids: [] }\n    }\n\n    default:\n      return state\n  }\n}\n","// TODO MAP MODULE remove whole reducer\nimport { SET_MAP_CURSOR } from './interaction.actions'\n\nconst initialState = {\n  cursor: 'progress',\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MAP_CURSOR: {\n      return { ...state, cursor: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport ModuleReducer from '../module/module.reducer'\nimport TracksReducer from '../tracks/tracks.reducer'\nimport HeatmapReducer from '../heatmap/heatmap.reducer'\nimport HeatmapTilesReducer from '../heatmap/heatmapTiles.reducer'\nimport ViewportReducer from '../glmap/viewport.reducer'\nimport StyleReducer from '../glmap/style.reducer'\nimport InteractionReducer from '../glmap/interaction.reducer'\n\nconst mapReducer = combineReducers({\n  module: ModuleReducer,\n  tracks: TracksReducer,\n  heatmap: HeatmapReducer,\n  heatmapTiles: HeatmapTilesReducer,\n  style: StyleReducer,\n  viewport: ViewportReducer,\n  interaction: InteractionReducer,\n})\n\nexport default mapReducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport throttle from 'lodash/throttle'\nimport { trackTypes } from './proptypes/tracks'\nimport { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'\nimport { viewportTypes, popupTypes } from './proptypes/shared'\n\nimport Map from './glmap/Map.container'\nimport {\n  initModule,\n  setTemporalExtent,\n  setHighlightTemporalExtent,\n  setCursor,\n} from './module/module.actions'\nimport { updateViewport, transitionToZoom } from './glmap/viewport.actions'\nimport { initStyle, commitStyleUpdates, applyTemporalExtent } from './glmap/style.actions'\nimport { updateTracks } from './tracks/tracks.actions'\nimport { updateHeatmapLayers, updateLayerLoadTemporalExtents } from './heatmap/heatmap.actions'\n\nimport store from './store'\nimport mapReducers from './store/reducers'\n\nconst mapReducer = combineReducers({\n  map: mapReducers,\n})\n\nstore.replaceReducer(mapReducer)\n\nconst throttleApplyTemporalExtent = throttle((temporalExtent) => {\n  store.dispatch(applyTemporalExtent(temporalExtent))\n  store.dispatch(setTemporalExtent(temporalExtent))\n}, 16)\n\nconst updateViewportFromIncomingProps = (incomingViewport) => {\n  store.dispatch(\n    updateViewport({\n      latitude: incomingViewport.center[0],\n      longitude: incomingViewport.center[1],\n      zoom: incomingViewport.zoom,\n    })\n  )\n}\n\nclass MapModule extends React.Component {\n  state = {\n    initialized: false,\n    error: null,\n    errorInfo: null,\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo)\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    })\n  }\n\n  componentDidMount() {\n    // First trigger synchronous actions that should happen before any map render\n    // At the end of this, set a flag to allow map rendering\n\n    if (this.props.viewport !== undefined) {\n      updateViewportFromIncomingProps(this.props.viewport)\n    }\n\n    // TODO\n    if (this.props.glyphsPath !== null) {\n      store.dispatch(\n        initStyle({\n          glyphsPath: this.props.glyphsPath,\n          // TODO apply URL updates here\n        })\n      )\n    }\n\n    if (this.props.onAttributionsChange !== undefined) {\n      this.props.onAttributionsChange(store.getState().map.style.attributions)\n    }\n\n    if (store && store.getState().map.module.token === undefined) {\n      store.dispatch(\n        initModule({\n          token: this.props.token,\n          autoClusterZoom: this.props.autoClusterZoom,\n          isCluster: this.props.isCluster,\n          onViewportChange: this.props.onViewportChange,\n          onHover: this.props.onHover,\n          onClick: this.props.onClick,\n          onLoad: this.props.onLoad,\n          onLoadStart: this.props.onLoadStart,\n          onLoadComplete: this.props.onLoadComplete,\n          onClosePopup: this.props.onClosePopup,\n          onAttributionsChange: this.props.onAttributionsChange,\n        })\n      )\n    }\n\n    if (this.props.highlightTemporalExtent !== null && this.props.highlightTemporalExtent.length) {\n      store.dispatch(setHighlightTemporalExtent(this.props.highlightTemporalExtent))\n    }\n\n    if (\n      (this.props.basemapLayers !== null && this.props.basemapLayers.length) ||\n      (this.props.staticLayers !== null && this.props.staticLayers.length)\n    ) {\n      store.dispatch(\n        commitStyleUpdates(this.props.staticLayers || [], this.props.basemapLayers || [])\n      )\n    }\n\n    if (this.props.tracks !== null) {\n      store.dispatch(updateTracks(this.props.tracks))\n    }\n\n    // Now trigger async actions\n\n    if (this.props.temporalExtent !== null && this.props.temporalExtent.length) {\n      throttleApplyTemporalExtent(this.props.temporalExtent)\n    }\n\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({\n      initialized: true,\n    })\n\n    // heatmap layers\n    if (this.props.heatmapLayers !== null) {\n      store.dispatch(updateHeatmapLayers(this.props.heatmapLayers, this.props.loadTemporalExtent))\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // tracks\n    if (this.props.tracks !== prevProps.tracks) {\n      store.dispatch(updateTracks(this.props.tracks))\n    }\n\n    // heatmap layers\n    if (this.props.heatmapLayers !== prevProps.heatmapLayers) {\n      store.dispatch(updateHeatmapLayers(this.props.heatmapLayers, this.props.loadTemporalExtent))\n    }\n\n    // basemap / static layers\n    if (\n      (this.props.basemapLayers !== null && this.props.basemapLayers.length) ||\n      (this.props.staticLayers !== null && this.props.staticLayers.length)\n    ) {\n      if (\n        this.props.basemapLayers !== prevProps.basemapLayers ||\n        this.props.staticLayers !== prevProps.staticLayers\n      ) {\n        store.dispatch(\n          commitStyleUpdates(this.props.staticLayers || [], this.props.basemapLayers || [])\n        )\n      }\n    }\n\n    // loadTemporalExtent\n    if (this.props.loadTemporalExtent !== null && this.props.loadTemporalExtent.length) {\n      if (\n        prevProps.loadTemporalExtent === null ||\n        !prevProps.loadTemporalExtent.length ||\n        this.props.loadTemporalExtent[0].getTime() !== prevProps.loadTemporalExtent[0].getTime() ||\n        this.props.loadTemporalExtent[1].getTime() !== prevProps.loadTemporalExtent[1].getTime()\n      ) {\n        store.dispatch(updateLayerLoadTemporalExtents(this.props.loadTemporalExtent))\n      }\n    }\n    // temporalExtent\n    if (this.props.temporalExtent !== null && this.props.temporalExtent.length) {\n      if (\n        prevProps.temporalExtent === null ||\n        !prevProps.temporalExtent.length ||\n        this.props.temporalExtent[0].getTime() !== prevProps.temporalExtent[0].getTime() ||\n        this.props.temporalExtent[1].getTime() !== prevProps.temporalExtent[1].getTime()\n      ) {\n        throttleApplyTemporalExtent(this.props.temporalExtent)\n      }\n    }\n\n    // highlightTemporalExtent\n    if (this.props.highlightTemporalExtent !== null && this.props.highlightTemporalExtent.length) {\n      if (\n        prevProps.highlightTemporalExtent === null ||\n        !prevProps.highlightTemporalExtent.length ||\n        this.props.highlightTemporalExtent[0].getTime() !==\n          prevProps.highlightTemporalExtent[0].getTime() ||\n        this.props.highlightTemporalExtent[1].getTime() !==\n          prevProps.highlightTemporalExtent[1].getTime()\n      ) {\n        store.dispatch(setHighlightTemporalExtent(this.props.highlightTemporalExtent))\n      }\n    } else {\n      if (this.props.highlightTemporalExtent !== prevProps.highlightTemporalExtent) {\n        store.dispatch(setHighlightTemporalExtent(this.props.highlightTemporalExtent))\n      }\n    }\n\n    // viewport - since viewport will be updated internally to the module,\n    // we have to compare incoming props to existing viewport in store, ie:\n    // update viewport from incoming props ONLY if zoom or center is different\n    // from the internally stored one\n    // TODO FFS incoming lat lon should be an object, not an array\n    const currentViewport = store.getState().map.viewport.viewport\n    // stop propagating updates from outside when zooming in\n    if (\n      this.props.viewport !== undefined &&\n      store.getState().map.viewport.currentTransition === null\n    ) {\n      if (\n        currentViewport.latitude !== this.props.viewport.center[0] ||\n        currentViewport.longitude !== this.props.viewport.center[1] ||\n        currentViewport.zoom !== this.props.viewport.zoom\n      ) {\n        // if zoom delta is precisely === 1, zoom with a transition\n        if (Math.abs(currentViewport.zoom - this.props.viewport.zoom) === 1) {\n          store.dispatch(transitionToZoom(this.props.viewport))\n        } else {\n          updateViewportFromIncomingProps(this.props.viewport)\n        }\n      }\n    }\n\n    if (this.props.cursor !== prevProps.cursor) {\n      store.dispatch(setCursor(this.props.cursor))\n    }\n  }\n  render() {\n    if (this.state.error !== null) {\n      console.log(this.state.error)\n      return (\n        <div>\n          <h2>Map component crashed!</h2>\n          <p className=\"red\">{this.state.error && this.state.error.toString()}</p>\n          <div>Component Stack Error Details:</div>\n          <p className=\"red\">{this.state.errorInfo.componentStack}</p>\n        </div>\n      )\n    }\n    // won't render anything before actions in componentDidMount have been triggered\n    return this.state.initialized !== true ? null : (\n      <Provider store={store}>\n        <Map {...this.props} />\n      </Provider>\n    )\n  }\n}\n\nMapModule.propTypes = {\n  token: PropTypes.string,\n  viewport: PropTypes.shape(viewportTypes).isRequired,\n  autoClusterZoom: PropTypes.bool,\n  isCluster: PropTypes.func,\n  tracks: PropTypes.arrayOf(PropTypes.exact(trackTypes)),\n  heatmapLayers: PropTypes.arrayOf(PropTypes.shape(heatmapLayerTypes)),\n  temporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  highlightTemporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  loadTemporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  basemapLayers: PropTypes.arrayOf(PropTypes.shape(basemapLayerTypes)),\n  staticLayers: PropTypes.arrayOf(PropTypes.shape(staticLayerTypes)),\n  cursor: PropTypes.string,\n  // customLayers\n  hoverPopup: PropTypes.shape(popupTypes),\n  clickPopup: PropTypes.shape(popupTypes),\n  glyphsPath: PropTypes.string,\n  onViewportChange: PropTypes.func,\n  onLoad: PropTypes.func,\n  onLoadStart: PropTypes.func,\n  onLoadComplete: PropTypes.func,\n  onClick: PropTypes.func,\n  onHover: PropTypes.func,\n  onAttributionsChange: PropTypes.func,\n  onClosePopup: PropTypes.func,\n}\n\nMapModule.defaultProps = {\n  token: null,\n  glyphsPath: null,\n  autoClusterZoom: true,\n  isCluster: (event) => event.isCluster === true,\n  highlightTemporalExtent: null,\n  tracks: null,\n  hoverPopup: null,\n  clickPopup: null,\n  heatmapLayers: null,\n  temporalExtent: null,\n  loadTemporalExtent: null,\n  basemapLayers: null,\n  staticLayers: null,\n  cursor: null,\n  onViewportChange: () => {},\n  onLoad: () => {},\n  onLoadStart: () => {},\n  onLoadComplete: () => {},\n  onClick: () => {},\n  onHover: () => {},\n  onAttributionsChange: () => {},\n  onClosePopup: () => {},\n}\n\nexport default MapModule\n","import GL_STYLE from '../glmap/gl-styles/style.json'\n\nconst AVAILABLE_BASEMAPS = GL_STYLE.metadata['gfw:basemap-layers']\n\nexport default AVAILABLE_BASEMAPS\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, Props } from 'docz'\nimport Map from './index.js'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"map\"}}>{`Map`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"description\"}}>{`Description`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5\"}}>{`Map client`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3\"}}>{`Vessel profiles`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2\"}}>{`Data portal`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"available-properties\"}}>{`Available properties`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`TODO: fix crash on Props docz component`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />'} __scope={{props: this ? this.props : props,Map}}>\n  <Map viewport={{ center: [0.026, 123.61], zoom: 5, }} />\n</Playground>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}