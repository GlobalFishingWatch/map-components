{"version":3,"sources":["/Users/erik/Work/gfw/map-components/src/timebar/charts/events.module.css","/Users/erik/Work/gfw/map-components/src/timebar/components/bookmark.module.css","/Users/erik/Work/gfw/map-components/src/timebar/components/date-selector.module.css","/Users/erik/Work/gfw/map-components/src/timebar/components/playback.module.css","/Users/erik/Work/gfw/map-components/src/timebar/components/timeline-handler.module.css","/Users/erik/Work/gfw/map-components/src/timebar/components/timeline-units.module.css","/Users/erik/Work/gfw/map-components/src/timebar/components/timeline.module.css","/Users/erik/Work/gfw/map-components/src/timebar/components/timerange-selector.module.css","/Users/erik/Work/gfw/map-components/src/timebar/immediateContext.js","/Users/erik/Work/gfw/map-components/src/timebar/utils.js","/Users/erik/Work/gfw/map-components/src/timebar/icons/arrowUp.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/arrowDown.svg","/Users/erik/Work/gfw/map-components/src/timebar/components/date-selector.js","/Users/erik/Work/gfw/map-components/src/timebar/components/timerange-selector.js","/Users/erik/Work/gfw/map-components/src/timebar/icons/bookmarkFilled.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/delete.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/arrow.svg","/Users/erik/Work/gfw/map-components/src/timebar/components/bookmark.js","/Users/erik/Work/gfw/map-components/src/timebar/layouts/index.js","/Users/erik/Work/gfw/map-components/src/timebar/components/timeline-units.js","/Users/erik/Work/gfw/map-components/src/timebar/icons/drag.svg","/Users/erik/Work/gfw/map-components/src/timebar/components/timeline-handler.js","/Users/erik/Work/gfw/map-components/src/timebar/components/timeline.js","/Users/erik/Work/gfw/map-components/src/timebar/icons/loop.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/back.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/play.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/pause.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/forward.svg","/Users/erik/Work/gfw/map-components/src/timebar/components/playback.js","/Users/erik/Work/gfw/map-components/src/timebar/icons/timeRange.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/bookmark.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/minus.svg","/Users/erik/Work/gfw/map-components/src/timebar/icons/plus.svg","/Users/erik/Work/gfw/map-components/src/timebar/timebar.js","/Users/erik/Work/gfw/map-components/src/timebar/charts/Events.js","/Users/erik/Work/gfw/map-components/src/timebar/timebar.mdx","/Users/erik/Work/gfw/map-components/src/timebar/timebar.module.css"],"names":["module","exports","ImmediateContext","React","createContext","getTime","dateISO","Date","clampToAbsoluteBoundaries","start","end","desiredDeltaMs","absoluteStart","absoluteEnd","clamped","startMs","endMs","absoluteStartMs","absoluteEndMs","newStartClamped","newEndClamped","toISOString","getDeltaMs","getDeltaDays","isMoreThanADay","stickToClosestUnit","date","unit","mDate","dayjs","mStartOf","startOf","mEndOf","endOf","valueOf","getHumanizedDates","format","humanizedStart","humanizedEnd","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","createElement","stroke","strokeWidth","d","fill","props","width","height","viewBox","DateSelector","pressing","pressingInterval","pressingTimeout","startTimeout","window","setInterval","onInterval","onChange","onMouseUp","clear","increment","setTimeout","addEventListener","clearInterval","clearTimeout","removeEventListener","value","canIncrement","canDecrement","className","styles","type","arrowButton","disabled","onMouseDown","Component","TimeRangeSelector","last30days","onSubmit","subtract","state","startCanIncrement","startCanDecrement","endCanIncrement","endCanDecrement","setState","which","allBounds","offset","prevDate","newDate","add","bounds","newDateMs","toDate","Math","min","max","undefined","mStart","mEnd","errorMessage","veil","onClick","onDiscard","inner","selectorsContainer","selectorGroup","selectorLabel","setUnit","year","actions","classNames","cta","secondary","submit","fillRule","strokeLinejoin","Bookmark","overflowing","overflowingLeft","overflowingRight","scale","bookmarkStart","bookmarkEnd","minX","maxX","onSelect","immediate","context","x","label","join","renderedX","renderedWidth","minWidth","compact","point","_overflowingLeft","_overflowingRight","_compact","_point","_immediate","style","left","title","main","leftArrow","icon","rightArrow","delete","onDelete","contextType","getUnitLabel","mUnit","baseUnit","availableWidth","getWeekFmt","isFirst","mWeekEnd","unitFormat","formats","month","fm","week","day","hour","finalFormat","getUnitsPositions","outerScale","outerStart","outerEnd","mOuterStart","mOuterEnd","units","numUnitsOffset","numUnits","diff","ui","mUnitNext","xNext","id","hoverLabel","Infinity","push","TimelineUnits","innerDays","native","items","keys","map","from","opacity","leave","enter","update","s","div","button","zoomToUnit","Handler","onTouchStart","handler","dragging","mouseX","defaultProps","DRAG_END","Timeline","onWindowResize","graphContainer","graphStyle","getComputedStyle","outerX","parseFloat","getBoundingClientRect","outerWidth","outerHeight","innerStartPx","innerEndPx","innerWidth","onEnterFrame","timestamp","frameTimestamp","progress","outerDrag","handlerMouseX","deltaPxRatio","offsetMs","innerScale","invert","newStart","newEnd","requestAnimationFrame","event","clientX","changedTouches","lastX","toggleImmediate","throttledMouseMove","throttle","isDay","onMouseMove","onMouseLeave","node","contains","isMovingInside","currentDeltaMs","movementX","isHandlerZoomInValid","isValid","isHandlerZoomOutValid","isZoomIn","clampedX","stickUnit","cancelAnimationFrame","onBookmarkChange","scaleTime","domain","range","lastUpdatePosition","ref","graph","children","graphHeight","tooltipContainer","el","cx","veilLeft","veilRight","to","lastUpdate","lastUpdateLabel","SPEED_STEPS","Playback","lastUpdateMs","getStep","memoize","speedStep","baseStepWithSpeed","scaleLinear","deltaMultiplicatorMs","onTick","loop","deltaMs","newStartMs","newEndMs","currentStartEndDeltaMs","togglePlay","tick","elapsedMs","progressRatio","requireNextTick","force","playing","playingNext","onPlayToggleClick","toggleLoop","prevState","onForwardClick","onBackwardClick","onSpeedClick","nextStep","playbackActions","playbackActionsActive","uiStyles","uiButton","secondaryActive","back","buttonBigger","play","forward","speed","rx","transform","strokeLinecap","y","extend","relativeTime","Timebar","toggleTimeRangeSelector","showTimeRangeSelector","setBookmark","onTimeRangeSelectorSubmit","notifyChange","zoom","steps","nextDelta","delta","round","nextUnit","step","unitOffsetMs","ONE_DAY_MS","mNewStart","onPlaybackTick","interval","enablePlayback","canZoomIn","canZoomOut","hasBookmark","bookmarkDisabled","Provider","timeActions","timeRangeContainer","timeRange","bookmark","timeScale","out","in","Events","getFinalEvents","events","showFishing","series","labels","counts","fishingIndex","indexOf","slice","mCurrentStart","clone","allValues","maxValue","dateIndex","valuesAtDateSum","valuesAtDate","forEach","keyIndex","k","filter","v","console","warn","allRatios","ratiosAtDate","stack","order","stackOrderNone","stackOffsetSilhouette","stackLayout","finalEvents","finalHeight","middle","areaGenerator","area","data","y0","y1","curve","curveStepAfter","eventsForKey","layoutProps","MDXContent","components","mdxType","parentName","of","__position","__code","__scope","Playground","Props","TimebarEvents","__codesandbox","eventsMock","log","isMDXComponent"],"mappings":"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","file":"static/js/src-timebar-timebar.45019a7e.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fishing\":\"events_fishing__1Cxmo\",\"port\":\"events_port__L_u5M\",\"encounter\":\"events_encounter__3uuX7\",\"unregistered\":\"events_unregistered__yQZf5\",\"gap\":\"events_gap__21V0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bookmark\":\"bookmark_Bookmark__1456y\",\"_immediate\":\"bookmark__immediate__V1WVc\",\"main\":\"bookmark_main__tmOwo\",\"_compact\":\"bookmark__compact__2jKpl\",\"_overflowingRight\":\"bookmark__overflowingRight__3Mplz\",\"_overflowingLeft\":\"bookmark__overflowingLeft__1pWJI\",\"delete\":\"bookmark_delete__ONUuc\",\"title\":\"bookmark_title__JdMtD\",\"leftArrow\":\"bookmark_leftArrow__VEC-r\",\"rightArrow\":\"bookmark_rightArrow__27m-K\",\"icon\":\"bookmark_icon__2xCxQ\",\"_point\":\"bookmark__point__2Uwak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateSelector\":\"date-selector_DateSelector__3X0VA\",\"arrowButton\":\"date-selector_arrowButton__3MbIt\",\"value\":\"date-selector_value__2vVIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playbackActions\":\"playback_playbackActions__2gJ2c\",\"secondary\":\"playback_secondary__2hZQ2\",\"playbackActionsActive\":\"playback_playbackActionsActive__2GfAj\",\"secondaryActive\":\"playback_secondaryActive__T4ZFk\",\"buttonBigger\":\"playback_buttonBigger__3lFkC\",\"loop\":\"playback_loop__-DbPr\",\"speed\":\"playback_speed__2jlqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"timeline-handler_handler__iS7Sd\",\"_immediate\":\"timeline-handler__immediate__2vfMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"timeline-units_unit__39XLG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timeline\":\"timeline_Timeline__1VLJQ\",\"graphContainer\":\"timeline_graphContainer__1AGC9\",\"graph\":\"timeline_graph__3zpAV\",\"veil\":\"timeline_veil__3Ai4n\",\"veilLeft\":\"timeline_veilLeft__1ohx2\",\"veilRight\":\"timeline_veilRight__3lON7\",\"_immediate\":\"timeline__immediate__6Ifdi\",\"absoluteEnd\":\"timeline_absoluteEnd__3E96X\",\"lastUpdate\":\"timeline_lastUpdate__3hY-v\",\"lastUpdateLabel\":\"timeline_lastUpdateLabel__1ZbAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRangeSelector\":\"timerange-selector_TimeRangeSelector__2h2uM\",\"veil\":\"timerange-selector_veil__18EDL\",\"inner\":\"timerange-selector_inner__3Fpjc\",\"selectorsContainer\":\"timerange-selector_selectorsContainer__2kzQP\",\"selectorGroup\":\"timerange-selector_selectorGroup__D4BkU\",\"selectorLabel\":\"timerange-selector_selectorLabel__3wRf5\",\"actions\":\"timerange-selector_actions__1e8kx\",\"cta\":\"timerange-selector_cta__sgY1n\",\"secondary\":\"timerange-selector_secondary__2XQ05\",\"errorMessage\":\"timerange-selector_errorMessage__1ViUG\"};","import React from 'react'\nconst ImmediateContext = React.createContext(false)\nexport default ImmediateContext\n","import dayjs from 'dayjs'\n\nexport const getTime = (dateISO) => new Date(dateISO).getTime()\n\nexport const clampToAbsoluteBoundaries = (\n  start,\n  end,\n  desiredDeltaMs,\n  absoluteStart,\n  absoluteEnd\n) => {\n  const startMs = getTime(start)\n  const endMs = getTime(end)\n  const absoluteStartMs = getTime(absoluteStart)\n  const absoluteEndMs = getTime(absoluteEnd)\n  let newStartClamped = start\n  let newEndClamped = end\n  let clamped\n\n  // newStart is before absolute start: use abs start as new start and keep the existing duration to get to new end\n  if (startMs < absoluteStartMs) {\n    newStartClamped = absoluteStart\n    newEndClamped = new Date(absoluteStartMs + desiredDeltaMs).toISOString()\n    clamped = 'start'\n    // newEnd is after absolute end: use abs end as new end and keep the existing duration to get back to new start\n  } else if (endMs > absoluteEndMs) {\n    newEndClamped = absoluteEnd\n    newStartClamped = new Date(absoluteEndMs - desiredDeltaMs).toISOString()\n    clamped = 'end'\n  }\n  return { newStartClamped, newEndClamped, clamped }\n}\n\nexport const getDeltaMs = (start, end) => getTime(end) - getTime(start)\nexport const getDeltaDays = (start, end) => getDeltaMs(start, end) / 1000 / 60 / 60 / 24\nexport const isMoreThanADay = (start, end) => getDeltaDays(start, end) >= 1\n\nexport const stickToClosestUnit = (date, unit) => {\n  const mDate = dayjs(date)\n  const mStartOf = mDate.startOf(unit)\n  const mEndOf = mDate.endOf(unit)\n  const startDeltaMs = getTime(date) - mStartOf.valueOf()\n  const endDeltaMs = mEndOf.valueOf() - getTime(date)\n  const mClosest = startDeltaMs > endDeltaMs ? mEndOf : mStartOf\n  return mClosest.toISOString()\n}\n\nexport const getHumanizedDates = (start, end) => {\n  const format = isMoreThanADay(start, end) ? 'MMM D YYYY' : 'MMM D YYYY HH[h]'\n  const humanizedStart = dayjs(start).format(format)\n  const humanizedEnd = dayjs(end).format(format)\n  return { humanizedStart, humanizedEnd }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 6l4-4 4 4\",\n  fill: \"none\"\n});\n\nvar SvgArrowUp = function SvgArrowUp(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowUp.1cbc9b80.svg\";\nexport { SvgArrowUp as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 1l4 4 4-4\",\n  fill: \"none\"\n});\n\nvar SvgArrowDown = function SvgArrowDown(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowDown.743b8d09.svg\";\nexport { SvgArrowDown as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './date-selector.module.css'\nimport { ReactComponent as IconArrowUp } from '../icons/arrowUp.svg'\nimport { ReactComponent as IconArrowDown } from '../icons/arrowDown.svg'\n\nclass DateSelector extends Component {\n  pressing = 0\n  pressingInterval = null\n  pressingTimeout = null\n\n  onMouseDown(increment) {\n    this.clear()\n    const { onChange } = this.props\n    this.pressing = increment\n    onChange(this.pressing)\n    this.pressingTimeout = window.setTimeout(this.startTimeout, 800)\n    window.addEventListener('mouseup', this.onMouseUp)\n  }\n\n  startTimeout = () => {\n    this.pressingInterval = window.setInterval(this.onInterval, 80)\n  }\n\n  onInterval = () => {\n    const { onChange } = this.props\n    onChange(this.pressing)\n  }\n\n  onMouseUp = () => {\n    this.clear()\n    this.pressing = 0\n  }\n\n  clear() {\n    window.clearInterval(this.pressingInterval)\n    window.clearTimeout(this.pressingTimeout)\n    window.removeEventListener('mouseup', this.onMouseUp)\n  }\n\n  componentWillUnmount() {\n    this.clear()\n  }\n\n  render() {\n    const { onChange, value, canIncrement, canDecrement } = this.props\n    return (\n      <div className={styles.DateSelector}>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canIncrement}\n          onMouseDown={() => {\n            this.onMouseDown(+1)\n          }}\n        >\n          <IconArrowUp />\n        </button>\n        <span className={styles.value}>{value}</span>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canDecrement}\n          onMouseDown={() => {\n            this.onMouseDown(-1)\n          }}\n        >\n          <IconArrowDown />\n        </button>\n      </div>\n    )\n  }\n}\n\nDateSelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  canIncrement: PropTypes.bool.isRequired,\n  canDecrement: PropTypes.bool.isRequired,\n}\n\nexport default DateSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport classNames from 'classnames'\nimport { getTime } from '../utils'\nimport DateSelector from './date-selector'\nimport styles from './timerange-selector.module.css'\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24 - 1\n\nclass TimeRangeSelector extends Component {\n  constructor(props) {\n    super(props)\n    const { start, end, absoluteStart, absoluteEnd } = props\n    this.state = {\n      startCanIncrement: start < end,\n      startCanDecrement: start > absoluteStart,\n      endCanIncrement: getTime(end) + ONE_DAY_MS < getTime(absoluteEnd),\n      endCanDecrement: end > start,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n    this.setState({\n      start,\n      end,\n    })\n  }\n\n  submit(start, end) {\n    const { onSubmit } = this.props\n\n    // on release, \"stick\" to day/hour\n    const newStart = dayjs(start)\n      .startOf('day')\n      .toISOString()\n    const newEnd = dayjs(end)\n      .startOf('day')\n      .toISOString()\n    onSubmit(newStart, newEnd)\n  }\n\n  setUnit(which, allBounds, unit, offset) {\n    const prevDate = this.state[which]\n    const newDate = dayjs(prevDate).add(offset, unit)\n\n    const bounds = allBounds[which]\n    let newDateMs = newDate.toDate().getTime()\n    newDateMs = Math.min(bounds.max, Math.max(bounds.min, newDateMs))\n\n    if (which === 'start') {\n      this.setState({\n        start: new Date(newDateMs),\n        startCanIncrement: newDateMs !== bounds.max,\n        startCanDecrement: newDateMs !== bounds.min,\n        endCanDecrement: newDateMs !== bounds.max,\n      })\n    } else {\n      this.setState({\n        end: new Date(newDateMs),\n        endCanIncrement: newDateMs !== bounds.max,\n        endCanDecrement: newDateMs !== bounds.min,\n        startCanIncrement: newDateMs !== bounds.min,\n      })\n    }\n  }\n\n  last30days = () => {\n    const { absoluteEnd, onSubmit } = this.props\n    onSubmit(\n      dayjs(absoluteEnd)\n        .subtract(30, 'day')\n        .toISOString(),\n      absoluteEnd\n    )\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      startCanIncrement,\n      startCanDecrement,\n      endCanIncrement,\n      endCanDecrement,\n    } = this.state\n    const { absoluteStart, absoluteEnd } = this.props\n\n    if (start === undefined) {\n      return null\n    }\n\n    const bounds = {\n      start: {\n        min: getTime(absoluteStart),\n        max: getTime(end) - ONE_DAY_MS,\n      },\n      end: {\n        min: getTime(start) + ONE_DAY_MS,\n        max: getTime(absoluteEnd),\n      },\n    }\n    const mStart = dayjs(start)\n    const mEnd = dayjs(end)\n\n    let errorMessage = ''\n    if (!startCanDecrement)\n      errorMessage = 'Your start date is the earliest date with data available'\n    if (!endCanIncrement) errorMessage = 'Your end date is the latest date with data available'\n    if (!startCanIncrement && !endCanDecrement)\n      errorMessage = 'Your start and end date must be at least one day apart'\n    if (!startCanDecrement && !endCanIncrement)\n      errorMessage = 'Your time range is the maximum range with data available'\n\n    return (\n      <div className={styles.TimeRangeSelector}>\n        <div className={styles.veil} onClick={this.props.onDiscard} />\n        <div className={styles.inner}>\n          <h2>Select a time range</h2>\n          <div className={styles.selectorsContainer}>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>START</span>\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'day', offset)\n                }}\n                value={mStart.date()}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'month', offset)\n                }}\n                value={mStart.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'year', offset)\n                }}\n                value={mStart.year()}\n              />\n            </div>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>END</span>\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'day', offset)\n                }}\n                value={mEnd.date()}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'month', offset)\n                }}\n                value={mEnd.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'year', offset)\n                }}\n                value={mEnd.year()}\n              />\n            </div>\n          </div>\n          <span className={styles.errorMessage}>{errorMessage}</span>\n          <div className={styles.actions}>\n            <button\n              type=\"button\"\n              className={classNames(styles.cta, styles.secondary)}\n              onClick={this.last30days}\n            >\n              LAST 30 DAYS\n            </button>\n            <button\n              type=\"button\"\n              className={styles.cta}\n              onClick={() => {\n                this.submit(start, end)\n              }}\n            >\n              DONE\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nTimeRangeSelector.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onDiscard: PropTypes.func.isRequired,\n}\n\nexport default TimeRangeSelector\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"#FFF\",\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fillRule: \"evenodd\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmarkFilled = function SvgBookmarkFilled(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmarkFilled.9c323b67.svg\";\nexport { SvgBookmarkFilled as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.477.738V2.25H0V.738h2.602L3.375 0h3.727l.773.738h2.602zM.738 11.988v-9h9v9c0 .399-.152.75-.457 1.055-.304.305-.656.457-1.054.457H2.25c-.398 0-.75-.152-1.055-.457-.304-.305-.457-.656-.457-1.055z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgDelete = function SvgDelete(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/delete.c8ee873a.svg\";\nexport { SvgDelete as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 1L1 5l4 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgArrow = function SvgArrow(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 10,\n    viewBox: \"0 0 6 10\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrow.7f32b3d1.svg\";\nexport { SvgArrow as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { getHumanizedDates } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport styles from './bookmark.module.css'\nimport { ReactComponent as IconBookmarkFilled } from '../icons/bookmarkFilled.svg'\nimport { ReactComponent as IconDelete } from '../icons/delete.svg'\nimport { ReactComponent as Arrow } from '../icons/arrow.svg'\n\nconst MIN_WIDTH = 32\nconst MIN_WIDTH_WITH_OVERFLOW_ARROWS = 52\nconst COMPACT_MAX_WIDTH = 240\n\nclass Bookmark extends Component {\n  static contextType = ImmediateContext\n  render() {\n    const { scale, bookmarkStart, bookmarkEnd, minX, maxX, onSelect } = this.props\n    const { immediate } = this.context\n\n    const x = scale(new Date(bookmarkStart))\n    const width = scale(new Date(bookmarkEnd)) - x\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(bookmarkStart, bookmarkEnd)\n    const label = [humanizedStart, humanizedEnd].join(' - ')\n\n    let overflowing\n    let overflowingLeft\n    let overflowingRight\n    let renderedX = x\n    let renderedWidth = width\n\n    if (x < minX) {\n      renderedX = minX\n      renderedWidth = x + renderedWidth\n      overflowing = true\n      overflowingLeft = true\n    }\n    if (renderedX + width > maxX) {\n      renderedX = Math.min(renderedX, maxX - MIN_WIDTH_WITH_OVERFLOW_ARROWS)\n      renderedWidth = maxX - renderedX\n      overflowing = true\n      overflowingRight = true\n    }\n\n    const minWidth = overflowing === true ? MIN_WIDTH_WITH_OVERFLOW_ARROWS : MIN_WIDTH\n    renderedWidth = Math.max(minWidth, renderedWidth)\n    const compact = renderedWidth < COMPACT_MAX_WIDTH\n    const point = renderedWidth <= MIN_WIDTH\n\n    return (\n      <div\n        className={classNames(styles.Bookmark, {\n          [styles._overflowingLeft]: overflowingLeft,\n          [styles._overflowingRight]: overflowingRight,\n          [styles._compact]: compact,\n          [styles._point]: point,\n          [styles._immediate]: immediate,\n        })}\n        style={{ left: renderedX, width: renderedWidth }}\n      >\n        <button\n          type=\"button\"\n          title=\"Go to time range bookmark\"\n          className={styles.main}\n          onClick={onSelect}\n        >\n          {overflowingLeft && <Arrow className={styles.leftArrow} />}\n          <IconBookmarkFilled className={styles.icon} />\n          {compact === false && <span className={styles.title}>{label}</span>}\n          {overflowingRight && <Arrow className={styles.rightArrow} />}\n        </button>\n        {compact === false && (\n          <button\n            type=\"button\"\n            title=\"Delete time range bookmark\"\n            className={styles.delete}\n            onClick={this.props.onDelete}\n          >\n            <IconDelete />\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\nBookmark.propTypes = {\n  bookmarkStart: PropTypes.string.isRequired,\n  bookmarkEnd: PropTypes.string.isRequired,\n  scale: PropTypes.func.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  immediate: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n\nexport default Bookmark\n","import dayjs from 'dayjs'\nimport { getTime } from '../utils'\n\nconst getUnitLabel = (mUnit, baseUnit, availableWidth) => {\n  /* eslint key-spacing: 0, no-multi-spaces: 0 */\n\n  const getWeekFmt = (mUnit, isFirst = false) => {\n    const mWeekEnd = mUnit.add(6, 'day')\n    return `${mUnit.format('MMM')} ${mUnit.format('D')}-${mWeekEnd.format('D')} ${\n      isFirst ? mUnit.format('YYYY') : ''\n    }`\n  }\n\n  const FORMATS = {\n    year: { isFirst: () => false, formats: [[0, 'YYYY']] },\n    month: {\n      isFirst: (fm) => fm.month() === 0,\n      formats: [\n        [200, 'MMMM YYYY'],\n        [100, 'MMMM', 'MMM YYYY'],\n        [0, 'MMM', 'MMM YY'],\n      ],\n    },\n    week: {\n      isFirst: (fm) => {\n        return fm.date() === 1\n      },\n      formats: [\n        [\n          0,\n          (mUnit) => {\n            return getWeekFmt(mUnit)\n          },\n          (mUnit) => {\n            return getWeekFmt(mUnit, true)\n          },\n        ],\n      ],\n    },\n    day: {\n      isFirst: (fm) => fm.date() === 1,\n      formats: [\n        [999, 'ddd D MMMM YYYY'],\n        [200, 'ddd D MMMM'],\n        [70, 'ddd D', 'MMM 1'],\n        [0, 'D', 'MMM'],\n      ],\n    },\n    hour: {\n      isFirst: (fm) => fm.hour() === 0,\n      formats: [\n        [999, 'ddd D MMMM YYYY H[H]'],\n        [0, 'H[H]', 'ddd D'],\n      ],\n    },\n  }\n  const unitFormat = FORMATS[baseUnit]\n  let format\n  for (let i = 0; i < unitFormat.formats.length; i += 1) {\n    const formatMinWidth = unitFormat.formats[i][0]\n    if (availableWidth > formatMinWidth) {\n      format = unitFormat.formats[i]\n      break\n    }\n  }\n\n  const isFirst = unitFormat.isFirst(mUnit)\n  const finalFormat = isFirst && format[2] ? format[2] : format[1]\n  return typeof finalFormat === 'function' ? finalFormat(mUnit) : mUnit.format(finalFormat)\n}\n\nexport const getUnitsPositions = (\n  outerScale,\n  outerStart,\n  outerEnd,\n  absoluteStart,\n  absoluteEnd,\n  baseUnit\n) => {\n  const startMs = Math.max(getTime(outerStart), getTime(absoluteStart))\n  const endMs = Math.min(getTime(outerEnd), getTime(absoluteEnd))\n\n  // BUFFER ??\n  const mOuterStart = dayjs(startMs).startOf(baseUnit)\n  const mOuterEnd = dayjs(endMs).endOf(baseUnit)\n\n  const units = []\n  const numUnitsOffset = getTime(outerEnd) > getTime(absoluteEnd) ? 0 : 1\n  const numUnits = mOuterEnd.diff(mOuterStart, baseUnit) + numUnitsOffset\n\n  let mUnit = mOuterStart\n  let x = outerScale(mUnit)\n\n  for (let ui = 0; ui <= numUnits; ui += 1) {\n    const mUnitNext = mUnit.add(1, baseUnit)\n    const xNext = outerScale(mUnitNext)\n\n    const id = mUnit.format(\n      {\n        year: 'YYYY',\n        month: 'YYYY-MM',\n        week: 'YYYY-MM-DD',\n        day: 'YYYY-MM-DD',\n        hour: 'YYYY-MM-DD-HH',\n      }[baseUnit]\n    )\n\n    const width = xNext - x\n    const unit = {\n      id,\n      x,\n      width,\n      label: getUnitLabel(mUnit, baseUnit, width),\n      hoverLabel: `${getUnitLabel(mUnit, baseUnit, Infinity)} - Zoom to ${baseUnit}`,\n      start: mUnit.toISOString(),\n      end: mUnitNext.subtract(1, 'hour').toISOString(), // this avoids being stuck when clicking on a day unit\n    }\n    units.push(unit)\n    mUnit = mUnitNext\n    x = xNext\n  }\n\n  return units\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated, Transition } from 'react-spring/renderprops'\nimport { getDeltaDays } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport styles from './timeline-units.module.css'\nimport { getUnitsPositions } from '../layouts'\n\nclass TimelineUnits extends Component {\n  static contextType = ImmediateContext\n  zoomToUnit({ start, end }) {\n    this.props.onChange(start, end)\n  }\n\n  render() {\n    const { start, end, absoluteStart, absoluteEnd, outerScale, outerStart, outerEnd } = this.props\n    const { immediate } = this.context\n    const innerDays = getDeltaDays(start, end)\n\n    let baseUnit = 'day'\n    if (innerDays > 366) baseUnit = 'year'\n    else if (innerDays > 31) baseUnit = 'month'\n    else if (innerDays < 1) baseUnit = 'hour'\n\n    const units = getUnitsPositions(\n      outerScale,\n      outerStart,\n      outerEnd,\n      absoluteStart,\n      absoluteEnd,\n      baseUnit\n    )\n\n    return (\n      <div>\n        <Transition\n          native\n          immediate={immediate}\n          items={units}\n          keys={units.map((d) => d.id)}\n          from={{ opacity: 0 }}\n          leave={{ opacity: 0 }}\n          enter={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n          update={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n        >\n          {(d) => (s) => (\n            <animated.div style={s} className={styles.unit}>\n              {baseUnit === 'hour' ? (\n                <animated.div>{d.label}</animated.div>\n              ) : (\n                <animated.button\n                  type=\"button\"\n                  onClick={() => {\n                    this.zoomToUnit(d)\n                  }}\n                  title={d.hoverLabel}\n                >\n                  {d.label}\n                </animated.button>\n              )}\n            </animated.div>\n          )}\n        </Transition>\n      </div>\n    )\n  }\n}\n\nTimelineUnits.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  outerStart: PropTypes.string.isRequired,\n  outerEnd: PropTypes.string.isRequired,\n  outerScale: PropTypes.func.isRequired,\n}\n\nexport default TimelineUnits\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 1L1 5l3 4m3-8l3 4-3 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgDrag = function SvgDrag(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 10\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/drag.ff1ecd52.svg\";\nexport { SvgDrag as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport styles from './timeline-handler.module.css'\nimport { ReactComponent as IconDrag } from '../icons/drag.svg'\n\nconst Handler = (props) => (\n  <button\n    onMouseDown={props.onMouseDown}\n    onTouchStart={props.onMouseDown}\n    type=\"button\"\n    title=\"Drag to change the time range\"\n    className={classNames(styles.handler, {\n      [styles._immediate]: props.dragging === true,\n    })}\n    style={{ left: props.dragging === true ? props.mouseX : props.x }}\n  >\n    <IconDrag />\n  </button>\n)\n\nHandler.propTypes = {\n  onMouseDown: PropTypes.func.isRequired,\n  dragging: PropTypes.bool.isRequired,\n  x: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n}\n\nHandler.defaultProps = {\n  mouseX: 0,\n}\n\nexport default Handler\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport { scaleTime } from 'd3-scale'\nimport dayjs from 'dayjs'\nimport throttle from 'lodash/throttle'\nimport ImmediateContext from '../immediateContext'\nimport { animated, Spring } from 'react-spring/renderprops'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaMs,\n  isMoreThanADay,\n  stickToClosestUnit,\n} from '../utils'\nimport Bookmark from './bookmark'\nimport TimelineUnits from './timeline-units'\nimport Handler from './timeline-handler'\nimport styles from './timeline.module.css'\n\nconst DRAG_INNER = 'DRAG_INNER'\nconst DRAG_START = 'DRAG_START'\nconst DRAG_END = 'DRAG_END'\n\nclass Timeline extends Component {\n  static contextType = ImmediateContext\n  constructor() {\n    super()\n    this.state = {\n      innerStartPx: 0,\n      innerEndPx: 0,\n      innerWidth: 50,\n      outerWidth: 100,\n      outerHeight: 50,\n      dragging: null,\n    }\n    this.graphContainer = null\n    this.isMovingInside = false\n  }\n\n  componentDidMount() {\n    // wait for end of call stack to get rendered CSS\n    window.setTimeout(this.onWindowResize, 10)\n    window.addEventListener('resize', this.onWindowResize)\n    window.addEventListener('mousemove', this.onMouseMove)\n    window.addEventListener('touchmove', this.onMouseMove)\n    window.addEventListener('mouseup', this.onMouseUp)\n    window.addEventListener('touchend', this.onMouseUp)\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n    window.removeEventListener('mousemove', this.onMouseMove)\n    window.removeEventListener('touchmove', this.onMouseMove)\n    window.removeEventListener('mouseup', this.onMouseUp)\n    window.removeEventListener('touchend', this.onMouseUp)\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onWindowResize = () => {\n    if (this.graphContainer !== null) {\n      const graphStyle = window.getComputedStyle(this.graphContainer)\n      const outerX = parseFloat(this.graphContainer.getBoundingClientRect().left)\n      const outerWidth = parseFloat(graphStyle.width)\n      const outerHeight = parseFloat(graphStyle.height)\n      const innerStartPx = outerWidth * 0.15\n      const innerEndPx = outerWidth * 0.85\n      const innerWidth = outerWidth * 0.7\n      this.setState({\n        outerX,\n        innerStartPx,\n        innerEndPx,\n        innerWidth,\n        outerWidth,\n        outerHeight,\n      })\n    }\n  }\n\n  isHandlerZoomInValid(x) {\n    const { dragging, innerStartPx, innerEndPx } = this.state\n    const isZoomIn =\n      (dragging === DRAG_START && x > innerStartPx) || (dragging === DRAG_END && x < innerEndPx)\n\n    // check that start handler doesn't go after end handler or end handler before start handler\n    const isValid =\n      isZoomIn &&\n      ((dragging === DRAG_START && x < innerEndPx - 20) ||\n        (dragging === DRAG_END && x > innerStartPx + 20))\n    const clampedX =\n      dragging === DRAG_START ? Math.min(x, innerEndPx - 20) : Math.max(x, innerStartPx + 20)\n    return { isZoomIn, isValid, clampedX }\n  }\n\n  isHandlerZoomOutValid(x) {\n    const { dragging, innerStartPx, innerEndPx, outerWidth } = this.state\n    return (\n      (dragging === DRAG_START && x < innerStartPx && x > 0) ||\n      (dragging === DRAG_END && x > innerEndPx && x < outerWidth)\n    )\n  }\n\n  onEnterFrame = (timestamp) => {\n    if (this.frameTimestamp === undefined) {\n      this.frameTimestamp = timestamp\n    }\n    const progress = timestamp - this.frameTimestamp\n    this.frameTimestamp = timestamp\n\n    if (this.state.outerDrag === true) {\n      const { dragging, innerStartPx, innerEndPx, outerWidth, handlerMouseX } = this.state\n      const { start, end, absoluteStart, absoluteEnd, onChange } = this.props\n      // console.log(progress);\n      const deltaPxRatio =\n        dragging === DRAG_START\n          ? (innerStartPx - handlerMouseX) / innerStartPx\n          : (handlerMouseX - innerEndPx) / (outerWidth - innerEndPx)\n\n      const offsetMs =\n        (this.innerScale.invert(0.6).getTime() - this.innerScale.invert(0).getTime()) *\n        progress *\n        deltaPxRatio\n      let newStart = start\n      let newEnd = end\n\n      if (dragging === DRAG_START) {\n        newStart = new Date(getTime(start) - offsetMs).toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = new Date(getTime(end) + offsetMs).toISOString()\n      }\n\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart,\n        newEnd,\n        getDeltaMs(start, end),\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    }\n\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  onMouseDown = (event, dragging) => {\n    const { outerX } = this.state\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    this.lastX = clientX\n    const x = clientX - outerX\n    this.context.toggleImmediate(true)\n    this.setState({\n      dragging,\n      handlerMouseX: x,\n    })\n  }\n\n  throttledMouseMove = throttle((clientX, scale, isDay) => {\n    this.props.onMouseMove(clientX, scale, isDay)\n  }, 16)\n\n  onMouseMove = (event) => {\n    const { start, end, absoluteStart, absoluteEnd, onChange, onMouseLeave } = this.props\n    const { dragging, outerX, innerStartPx, innerEndPx } = this.state\n    const clientX = event.clientX || (event.changedTouches && event.changedTouches[0].clientX)\n    if (clientX === undefined) {\n      return\n    }\n    const x = clientX - outerX\n    const isMovingInside = this.node.contains(event.target) && x > innerStartPx && x < innerEndPx\n    if (isMovingInside) {\n      this.isMovingInside = true\n      const isDay = !isMoreThanADay(start, end)\n      this.throttledMouseMove(x, this.outerScale.invert, isDay)\n    } else if (this.isMovingInside === true) {\n      this.isMovingInside = false\n      onMouseLeave()\n    }\n    if (dragging === DRAG_INNER) {\n      const currentDeltaMs = getDeltaMs(start, end)\n      // Calculates x movement from last event since TouchEvent doesn't have the movementX property\n      const movementX = clientX - this.lastX\n      this.lastX = event.clientX || event.changedTouches[0].clientX\n      const newStart = this.innerScale.invert(-movementX)\n      const newEnd = new Date(newStart.getTime() + currentDeltaMs)\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart.toISOString(),\n        newEnd.toISOString(),\n        currentDeltaMs,\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    } else if (this.isHandlerZoomInValid(x).isValid === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: false,\n      })\n    } else if (this.isHandlerZoomOutValid(x) === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: true,\n      })\n    }\n  }\n\n  onMouseUp = (event) => {\n    const { start, end, onChange } = this.props\n    const { dragging, outerX, innerStartPx } = this.state\n\n    if (dragging === null) {\n      return\n    }\n\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    const x = clientX - outerX\n\n    const isHandlerZoomInValid = this.isHandlerZoomInValid(x)\n\n    this.context.toggleImmediate(false)\n    this.setState({\n      dragging: null,\n      handlerMouseX: null,\n      outerDrag: false,\n    })\n\n    let newStart = start\n    let newEnd = end\n\n    if (isHandlerZoomInValid.isZoomIn) {\n      if (dragging === DRAG_START) {\n        newStart = this.innerScale\n          .invert(isHandlerZoomInValid.clampedX - innerStartPx)\n          .toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = this.innerScale.invert(isHandlerZoomInValid.clampedX - innerStartPx).toISOString()\n      }\n    }\n    // on release, \"stick\" to day/hour\n    const stickUnit = isMoreThanADay(newStart, newEnd) ? 'day' : 'hour'\n    newStart = stickToClosestUnit(newStart, stickUnit)\n    newEnd = stickToClosestUnit(newEnd, stickUnit)\n\n    onChange(newStart, newEnd)\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      absoluteEnd,\n      bookmarkStart,\n      bookmarkEnd,\n      onChange,\n      onBookmarkChange,\n    } = this.props\n    const {\n      dragging,\n      handlerMouseX,\n      innerStartPx,\n      innerEndPx,\n      innerWidth,\n      outerX,\n      outerWidth,\n      outerHeight,\n    } = this.state\n    const { immediate } = this.context\n\n    this.innerScale = scaleTime()\n      .domain([new Date(start), new Date(end)])\n      .range([0, innerWidth])\n    const outerStart = this.innerScale.invert(-innerStartPx).toISOString()\n    const outerEnd = this.innerScale.invert(outerWidth - innerStartPx).toISOString()\n\n    this.outerScale = scaleTime()\n      .domain([new Date(outerStart), new Date(outerEnd)])\n      .range([0, this.state.outerWidth])\n\n    const lastUpdatePosition = this.outerScale(new Date(absoluteEnd))\n\n    return (\n      <div ref={(node) => (this.node = node)} className={styles.Timeline}>\n        {bookmarkStart !== undefined && bookmarkStart !== null && (\n          <Bookmark\n            scale={this.outerScale}\n            bookmarkStart={bookmarkStart}\n            bookmarkEnd={bookmarkEnd}\n            minX={-outerX}\n            maxX={outerWidth}\n            onDelete={() => {\n              onBookmarkChange(null, null)\n            }}\n            onSelect={() => {\n              onChange(bookmarkStart, bookmarkEnd)\n            }}\n          />\n        )}\n        <div\n          className={styles.graphContainer}\n          ref={(ref) => {\n            this.graphContainer = ref\n          }}\n        >\n          {/* // TODO separated drag area? */}\n          <div\n            className={styles.graph}\n            onMouseDown={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n            onTouchStart={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n          >\n            <TimelineUnits\n              {...this.props}\n              outerScale={this.outerScale}\n              outerStart={outerStart}\n              outerEnd={outerEnd}\n            />\n            {this.props.children &&\n              this.props.children({\n                outerScale: this.outerScale,\n                outerStart,\n                outerEnd,\n                outerWidth,\n                outerHeight,\n                graphHeight: outerHeight,\n                tooltipContainer: this.tooltipContainer,\n                ...this.props,\n              })}\n          </div>\n        </div>\n        <div\n          ref={(el) => {\n            this.tooltipContainer = el\n          }}\n        />\n        <div\n          className={cx(styles.veilLeft, styles.veil, {\n            [styles._immediate]: dragging === DRAG_START,\n          })}\n          style={{\n            width: dragging === DRAG_START ? handlerMouseX : innerStartPx,\n          }}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          dragging={this.state.dragging === DRAG_START}\n          x={innerStartPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          dragging={this.state.dragging === DRAG_END}\n          x={innerEndPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <div\n          className={cx(styles.veilRight, styles.veil, {\n            [styles._immediate]: dragging === DRAG_END,\n          })}\n          style={{\n            left: dragging === DRAG_END ? handlerMouseX : innerEndPx,\n            width: dragging === DRAG_END ? outerWidth - handlerMouseX : outerWidth - innerEndPx,\n          }}\n        />\n        {lastUpdatePosition <= outerWidth && (\n          <Spring native immediate={immediate} to={{ left: lastUpdatePosition }}>\n            {(style) => (\n              <animated.div className={styles.absoluteEnd} style={style}>\n                <div className={cx(styles.lastUpdate, styles.lastUpdateLabel)}>Last Update</div>\n                <div className={styles.lastUpdate}>{dayjs(absoluteEnd).format('MMMM D YYYY')}</div>\n              </animated.div>\n            )}\n          </Spring>\n        )}\n      </div>\n    )\n  }\n}\n\nTimeline.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onBookmarkChange: PropTypes.func,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n}\n\nTimeline.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  onBookmarkChange: () => {},\n  onMouseLeave: () => {},\n  onMouseMove: () => {},\n}\n\nexport default Timeline\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 12v-2l2.66 2.66L6 15.34v-2a5.14 5.14 0 0 1-3.77-1.57A5.14 5.14 0 0 1 .66 8c0-1.04.28-1.99.84-2.84l.97.96A3.8 3.8 0 0 0 2 8c0 1.1.4 2.05 1.17 2.83A3.85 3.85 0 0 0 6 12zm0-9.34c1.46 0 2.71.52 3.77 1.57A5.14 5.14 0 0 1 11.34 8c0 1.04-.28 1.99-.84 2.84l-.97-.96A3.8 3.8 0 0 0 10 8c0-1.1-.4-2.05-1.17-2.83A3.85 3.85 0 0 0 6 4v2L3.34 3.34 6 .66v2z\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgLoop = function SvgLoop(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 16\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/loop.238142cc.svg\";\nexport { SvgLoop as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 0v7L2 3.5 7 0zM1 0v7H0V0h1z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgBack = function SvgBack(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/back.92029460.svg\";\nexport { SvgBack as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M.5 1.79v12.42a.5.5 0 0 0 .762.426l10.092-6.21a.5.5 0 0 0 0-.852L1.262 1.364A.5.5 0 0 0 .5 1.79z\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgPlay = function SvgPlay(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 16,\n    viewBox: \"0 0 13 16\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/play.df4d1e51.svg\";\nexport { SvgPlay as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h3.077v11H0V0zm6.923 0H10v11H6.923V0z\",\n  fill: \"#FFF\"\n});\n\nvar SvgPause = function SvgPause(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 11\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/pause.ef441981.svg\";\nexport { SvgPause as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0l5 3.5L0 7V0zm6 0h1v7H6V0z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgForward = function SvgForward(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/forward.a29c1440.svg\";\nexport { SvgForward as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport memoize from 'memoize-one'\nimport { scaleLinear } from 'd3-scale'\nimport { clampToAbsoluteBoundaries } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport { ReactComponent as IconLoop } from '../icons/loop.svg'\nimport { ReactComponent as IconBack } from '../icons/back.svg'\nimport { ReactComponent as IconPlay } from '../icons/play.svg'\nimport { ReactComponent as IconPause } from '../icons/pause.svg'\nimport { ReactComponent as IconForward } from '../icons/forward.svg'\nimport styles from './playback.module.css'\nimport uiStyles from '../timebar.module.css'\n\nconst BASE_STEP = 0.001\nconst SPEED_STEPS = [1, 2, 3, 5, 10]\nconst FAST_FORWARD_REWIND_MULTIPLICATOR = 100\n\nclass Playback extends Component {\n  static contextType = ImmediateContext\n  lastUpdateMs = null\n  constructor() {\n    super()\n    this.state = {\n      playing: false,\n      speedStep: 0,\n      loop: false,\n    }\n  }\n\n  getStep = memoize((start, end, speedStep) => {\n    const baseStepWithSpeed = BASE_STEP * SPEED_STEPS[speedStep]\n    const startMs = new Date(start).getTime()\n    const endMs = new Date(end).getTime()\n    const scale = scaleLinear()\n      .range([0, 1])\n      .domain([startMs, endMs])\n    const step = scale.invert(baseStepWithSpeed) - startMs\n    return step\n  })\n\n  update = (deltaMultiplicatorMs) => {\n    const { onTick, start, end, absoluteStart, absoluteEnd } = this.props\n    const { speedStep, loop } = this.state\n    const deltaMs = this.getStep(start, end, speedStep) * deltaMultiplicatorMs\n\n    const newStartMs = new Date(start).getTime() + deltaMs\n    const newEndMs = new Date(end).getTime() + deltaMs\n\n    const currentStartEndDeltaMs = newEndMs - newStartMs\n\n    const newStart = new Date(newStartMs).toISOString()\n    const newEnd = new Date(newEndMs).toISOString()\n\n    const { newStartClamped, newEndClamped, clamped } = clampToAbsoluteBoundaries(\n      newStart,\n      newEnd,\n      currentStartEndDeltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    onTick(newStartClamped, newEndClamped)\n\n    if (clamped === 'end') {\n      if (loop === true) {\n        // start again from absoluteStart\n        const newEnd = new Date(\n          new Date(absoluteStart).getTime() + currentStartEndDeltaMs\n        ).toISOString()\n        onTick(absoluteStart, newEnd)\n      } else {\n        this.togglePlay(false)\n      }\n    }\n    if (clamped !== 'end' || loop === true) {\n      return true\n    }\n  }\n\n  tick = (elapsedMs) => {\n    if (this.lastUpdateMs === null) {\n      this.lastUpdateMs = elapsedMs\n    }\n    // \"compare\" elapsed with theoretical 60 fps frame\n    const progressRatio = (elapsedMs - this.lastUpdateMs) / (1000 / 60)\n\n    const requireNextTick = this.update(progressRatio)\n\n    this.lastUpdateMs = elapsedMs\n\n    if (requireNextTick === true) {\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    }\n  }\n\n  togglePlay = (force) => {\n    const { playing } = this.state\n\n    const playingNext = force === undefined ? !playing : force\n\n    if (playingNext) {\n      this.context.toggleImmediate(true)\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    } else {\n      this.context.toggleImmediate(false)\n      this.lastUpdateMs = null\n      window.cancelAnimationFrame(this.requestAnimationFrame)\n    }\n\n    this.setState({\n      playing: playingNext,\n    })\n  }\n\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onPlayToggleClick = () => {\n    this.togglePlay()\n  }\n\n  toggleLoop = () => {\n    this.setState((prevState) => ({\n      loop: !prevState.loop,\n    }))\n  }\n\n  onForwardClick = () => {\n    this.update(FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onBackwardClick = () => {\n    this.update(-FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onSpeedClick = () => {\n    const { speedStep } = this.state\n    const nextStep = speedStep === SPEED_STEPS.length - 1 ? 0 : speedStep + 1\n    this.setState({ speedStep: nextStep })\n  }\n\n  render() {\n    const { playing, loop, speedStep } = this.state\n\n    return (\n      <div\n        className={cx(styles.playbackActions, {\n          [styles.playbackActionsActive]: playing,\n        })}\n      >\n        <button\n          type=\"button\"\n          title=\"Toggle animation looping\"\n          onClick={this.toggleLoop}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.loop, {\n            [styles.secondaryActive]: loop,\n          })}\n        >\n          <IconLoop />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move back\"\n          onClick={this.onBackwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.back)}\n        >\n          <IconBack />\n        </button>\n        <button\n          type=\"button\"\n          title={`${playing === true ? 'Pause' : 'Play'} animation`}\n          onClick={this.onPlayToggleClick}\n          className={cx(uiStyles.uiButton, styles.buttonBigger, styles.play)}\n        >\n          {playing === true ? <IconPause /> : <IconPlay />}\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move forward\"\n          onClick={this.onForwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.forward)}\n        >\n          <IconForward />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Change animation speed\"\n          onClick={this.onSpeedClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.speed)}\n        >\n          {SPEED_STEPS[speedStep]}x\n        </button>\n      </div>\n    )\n  }\n}\n\nPlayback.propTypes = {\n  onTick: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n}\n\nexport default Playback\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M1.06 5v8a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1V5h-13zm14-2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2V3c0-1.1.9-2 2-2v.5a1.5 1.5 0 0 0 3 0V1h5v.5a1.5 1.5 0 0 0 3 0V1a2 2 0 0 1 2 2zm-9 4v5l-3-2.5 3-2.5zm3 0v5l3-2.5-3-2.5zm-5.5-7a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 1 0v-1a.5.5 0 0 0-.5-.5zm8 0a.5.5 0 0 0-.5.5v1a.5.5 0 1 0 1 0v-1a.5.5 0 0 0-.5-.5z\"\n});\n\nvar SvgTimeRange = function SvgTimeRange(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 15\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/timeRange.cb0de496.svg\";\nexport { SvgTimeRange as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fill: \"none\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmark = function SvgBookmark(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmark.d1725b51.svg\";\nexport { SvgBookmark as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"rect\", {\n  width: 7,\n  height: 1,\n  rx: 0.5,\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgMinus = function SvgMinus(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 3,\n    viewBox: \"0 0 9 3\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/minus.cd2a0a55.svg\";\nexport { SvgMinus as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  transform: \"rotate(90 3.5 3.5)\",\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}));\n\nvar SvgPlus = function SvgPlus(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 9,\n    viewBox: \"0 0 9 9\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/plus.16944dd2.svg\";\nexport { SvgPlus as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport dayjs from 'dayjs'\nimport ImmediateContext from './immediateContext'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaDays,\n  isMoreThanADay,\n  getHumanizedDates,\n} from './utils'\nimport './timebar-settings.module.css'\nimport styles from './timebar.module.css'\nimport TimeRangeSelector from './components/timerange-selector'\nimport Timeline from './components/timeline'\nimport Playback from './components/playback'\nimport { ReactComponent as IconTimeRange } from './icons/timeRange.svg'\nimport { ReactComponent as IconBookmark } from './icons/bookmark.svg'\nimport { ReactComponent as IconBookmarkFilled } from './icons/bookmarkFilled.svg'\nimport { ReactComponent as IconMinus } from './icons/minus.svg'\nimport { ReactComponent as IconPlus } from './icons/plus.svg'\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime)\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24\n\nclass Timebar extends Component {\n  constructor() {\n    super()\n    this.toggleImmediate = (immediate) => {\n      this.setState((state) => ({\n        immediate,\n      }))\n    }\n    this.interval = null\n    this.state = {\n      immediate: false,\n      showTimeRangeSelector: false,\n      absoluteEnd: null,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n\n    // TODO stick to day/hour here too\n    this.notifyChange(start, end)\n  }\n\n  static getDerivedStateFromProps(props) {\n    // let absolute end run through the end of the day\n    const absoluteEnd = dayjs(props.absoluteEnd)\n      .endOf('day')\n      .toISOString()\n    return {\n      absoluteEnd,\n    }\n  }\n\n  toggleTimeRangeSelector = () => {\n    this.setState((prevState) => ({\n      showTimeRangeSelector: !prevState.showTimeRangeSelector,\n    }))\n  }\n\n  setBookmark = () => {\n    const { start, end, onBookmarkChange } = this.props\n    onBookmarkChange !== null && onBookmarkChange(start, end)\n  }\n\n  onTimeRangeSelectorSubmit = (start, end) => {\n    this.notifyChange(start, end)\n    this.setState({\n      showTimeRangeSelector: false,\n    })\n  }\n\n  zoom = (zoom) => {\n    const { start, end, absoluteStart, absoluteEnd } = this.props\n    const delta = Math.round(getDeltaDays(start, end))\n\n    let steps\n    let nextDelta\n    let nextUnit = 'day'\n\n    if (zoom === 'in') {\n      steps = [365, 32, 30, 7, 1]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        if (delta > step) {\n          nextDelta = step\n          break\n        }\n      }\n      // sub-day situation\n      if (nextDelta === undefined) {\n        nextDelta = 23.9\n        nextUnit = 'hour'\n      }\n    } else if (zoom === 'out') {\n      steps = [1, 7, 30, 32, 365]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        // if (delta > step) {\n        if (delta < step) {\n          nextDelta = step\n          break\n        }\n      }\n\n      // more than 1 year situation\n      if (nextDelta === undefined) {\n        this.notifyChange(absoluteStart, absoluteEnd)\n        return\n      }\n    }\n\n    const unitOffsetMs = nextUnit === 'hour' ? ONE_DAY_MS / 24 : ONE_DAY_MS\n    const middleMs = getTime(start) + (getTime(end) - getTime(start)) / 2\n    const offsetMs = (nextDelta * unitOffsetMs) / 2\n    const newStartMs = middleMs - offsetMs\n    const mNewStart = dayjs(newStartMs).startOf(nextUnit)\n    const newEnd = mNewStart.add(nextDelta, nextUnit).toISOString()\n\n    const deltaMs = nextDelta * unitOffsetMs\n    const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n      mNewStart.toISOString(),\n      newEnd,\n      deltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    this.notifyChange(newStartClamped, newEndClamped)\n  }\n\n  notifyChange = (start, end) => {\n    const { onChange } = this.props\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(start, end)\n    onChange(start, end, humanizedStart, humanizedEnd)\n  }\n\n  onPlaybackTick = (newStart, newEnd) => {\n    this.notifyChange(newStart, newEnd)\n  }\n\n  render() {\n    const { start, end, absoluteStart, bookmarkStart, bookmarkEnd, enablePlayback } = this.props\n    const { immediate } = this.state\n\n    // state.absoluteEnd overrides the value set in props.absoluteEnd - see getDerivedStateFromProps\n    const { showTimeRangeSelector, absoluteEnd } = this.state\n\n    const canZoomIn = isMoreThanADay(start, end)\n    const deltaDays = getDeltaDays(start, end)\n    const absoluteDeltaDays = getDeltaDays(absoluteStart, absoluteEnd)\n    const canZoomOut = deltaDays <= absoluteDeltaDays - 1\n\n    const hasBookmark =\n      bookmarkStart !== undefined &&\n      bookmarkStart !== null &&\n      bookmarkEnd !== undefined &&\n      bookmarkEnd !== null\n    const bookmarkDisabled =\n      hasBookmark &&\n      getTime(bookmarkStart) === getTime(start) &&\n      getTime(bookmarkEnd) === getTime(end)\n\n    return (\n      <ImmediateContext.Provider value={{ immediate, toggleImmediate: this.toggleImmediate }}>\n        <div className={styles.Timebar}>\n          {enablePlayback && (\n            <Playback\n              start={start}\n              end={end}\n              absoluteStart={absoluteStart}\n              absoluteEnd={absoluteEnd}\n              onTick={this.onPlaybackTick}\n            />\n          )}\n\n          <div className={styles.timeActions}>\n            {showTimeRangeSelector && (\n              <TimeRangeSelector\n                {...this.props}\n                absoluteEnd={absoluteEnd}\n                onSubmit={this.onTimeRangeSelectorSubmit}\n                onDiscard={this.toggleTimeRangeSelector}\n              />\n            )}\n            <div className={styles.timeRangeContainer}>\n              <button\n                type=\"button\"\n                title=\"Select a time range\"\n                className={cx(styles.uiButton, styles.timeRange)}\n                onClick={this.toggleTimeRangeSelector}\n              >\n                <IconTimeRange />\n              </button>\n            </div>\n            <button\n              type=\"button\"\n              title=\"Bookmark current time range\"\n              className={cx(styles.uiButton, styles.bookmark)}\n              onClick={this.setBookmark}\n              disabled={bookmarkDisabled === true}\n            >\n              {hasBookmark ? <IconBookmarkFilled /> : <IconBookmark />}\n            </button>\n            <div className={styles.timeScale}>\n              <button\n                type=\"button\"\n                title=\"Zoom out\"\n                disabled={canZoomOut === false}\n                onClick={() => {\n                  this.zoom('out')\n                }}\n                className={cx(styles.uiButton, styles.out)}\n              >\n                <IconMinus />\n              </button>\n              <button\n                type=\"button\"\n                title=\"Zoom in\"\n                disabled={canZoomIn === false}\n                onClick={() => {\n                  this.zoom('in')\n                }}\n                className={cx(styles.uiButton, styles.in)}\n              >\n                <IconPlus />\n              </button>\n            </div>\n          </div>\n\n          <Timeline {...this.props} onChange={this.notifyChange} absoluteEnd={absoluteEnd} />\n        </div>\n      </ImmediateContext.Provider>\n    )\n  }\n}\n\nTimebar.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n  onBookmarkChange: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  enablePlayback: PropTypes.bool,\n}\n\nTimebar.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  enablePlayback: false,\n  onBookmarkChange: () => {},\n}\n\nexport default Timebar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { stack, stackOrderNone, stackOffsetSilhouette, area, curveStepAfter } from 'd3-shape'\nimport dayjs from 'dayjs'\nimport styles from './events.module.css'\n\nconst TOP_MARGIN = 5\nconst BOTTOM_MARGIN = 20\n\nclass Events extends Component {\n  getFinalEvents = memoize(\n    (events, showFishing) => {\n      let { labels, counts } = events.series\n\n      if (showFishing !== true) {\n        const fishingIndex = labels.indexOf('fishing')\n        labels = [...labels.slice(0, fishingIndex), ...labels.slice(fishingIndex + 1)]\n        counts = [...counts.slice(0, fishingIndex), ...counts.slice(fishingIndex + 1)]\n      }\n\n      const baseUnit = events.offset\n      const mStart = dayjs(events.start)\n      const mEnd = dayjs(events.end)\n      let mCurrentStart = mStart.clone()\n      const numUnits = mEnd.diff(mStart, baseUnit)\n\n      const allValues = []\n      let maxValue = 0\n\n      for (let dateIndex = 0; dateIndex < numUnits + 1; dateIndex += 1) {\n        let valuesAtDateSum = 0\n        const valuesAtDate = {\n          date: mCurrentStart.toDate(),\n        }\n        labels.forEach((key, keyIndex) => {\n          const value = counts[keyIndex][dateIndex]\n          valuesAtDate[key] = value\n          valuesAtDateSum += value\n        })\n\n        if (\n          labels.map((k) => valuesAtDate[k]).filter((v) => v === undefined).length === labels.length\n        ) {\n          console.warn('there are no values after this date, aborting rendering', valuesAtDate)\n          break\n        }\n\n        if (valuesAtDateSum > maxValue) {\n          maxValue = valuesAtDateSum\n        }\n\n        mCurrentStart = mCurrentStart.add(1, baseUnit)\n        allValues.push(valuesAtDate)\n      }\n\n      const allRatios = []\n      allValues.forEach((valuesAtDate) => {\n        const ratiosAtDate = { ...valuesAtDate }\n        labels.forEach((key) => {\n          ratiosAtDate[key] = valuesAtDate[key] / maxValue\n        })\n        allRatios.push(ratiosAtDate)\n      })\n      // need to pad with the last value to allow the curveStepAfter line generator to extend\n      allRatios.push({\n        ...allRatios[allRatios.length - 1],\n        date: mCurrentStart.toDate(),\n      })\n\n      const stackLayout = stack()\n        .keys(labels)\n        .order(stackOrderNone)\n        .offset(stackOffsetSilhouette)\n\n      return stackLayout(allRatios)\n    }\n    // TODO need custom equality comparator?\n    // (a: mixed, b: mixed) => boolean\n    // () => { return true; }\n  )\n\n  render() {\n    const { events, outerScale, outerWidth, graphHeight, showFishing } = this.props\n    // Calculate the latest derived data. If original events data hasn't changed\n    // since the last render, `memoize-one` will reuse the last return value.\n    // TODO this probably won't work correctly with Redux immutable state as nextProps.events !== props.events?\n    const finalEvents = this.getFinalEvents(events, showFishing)\n\n    const finalHeight = graphHeight - TOP_MARGIN - BOTTOM_MARGIN\n    const middle = TOP_MARGIN + finalHeight / 2\n\n    const areaGenerator = area()\n      .x((d) => outerScale(d.data.date))\n      .y0((d) => middle + finalHeight * d[0])\n      .y1((d) => middle + finalHeight * d[1])\n      .curve(curveStepAfter)\n    return (\n      <svg width={outerWidth} height={graphHeight} className={styles.Events}>\n        {finalEvents.map((eventsForKey, i) => (\n          <path\n            key={eventsForKey.key + i}\n            d={areaGenerator(eventsForKey)}\n            className={styles[eventsForKey.key]}\n          />\n        ))}\n      </svg>\n    )\n  }\n}\n\nEvents.propTypes = {\n  events: PropTypes.shape({\n    start: PropTypes.string,\n    end: PropTypes.string,\n    offset: PropTypes.string,\n    series: PropTypes.shape({\n      labels: PropTypes.arrayOf(PropTypes.string),\n      counts: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    }),\n  }).isRequired,\n  outerScale: PropTypes.func.isRequired,\n  outerWidth: PropTypes.number.isRequired,\n  graphHeight: PropTypes.number.isRequired,\n  showFishing: PropTypes.bool,\n}\n\nEvents.defaultProps = {\n  showFishing: false,\n}\n\nexport default Events\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport Timebar from './timebar'\nimport TimebarEvents from './charts/Events.js'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"timebar\"\n    }}>{`Timebar`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Visualize time-based data and allows users to filter it by a custom time range.`}</p>\n    <p>{`Currently used in:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GlobalFishingWatch/data-portal/blob/64aa2982d2159fbcf13ef58d25ea0ae3e01e0af9/src/timebar/TimebarWrapper.jsx#L2\"\n        }}>{`Data portal`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"available-properties\"\n    }}>{`Available properties`}</h2>\n    <Props of={Timebar} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const eventsMock = {\\n    start: \\'2014-01-01T00:00:00.000Z\\',\\n    end: \\'2018-12-27T00:00:00.000Z\\',\\n    offset: \\'day\\',\\n    series: {\\n      labels: [\\'encounter\\', \\'fishing\\', \\'gap\\', \\'port\\'],\\n      counts: [\\n        [\\n          36,\\n          36,\\n          24,\\n          16,\\n          16,\\n          8,\\n          22,\\n          28,\\n          22,\\n          26,\\n          36,\\n          32,\\n          68,\\n          40,\\n          30,\\n          32,\\n          44,\\n          52,\\n          56,\\n          18,\\n          34,\\n          30,\\n          32,\\n          32,\\n          24,\\n          26,\\n          34,\\n          24,\\n          34,\\n          30,\\n          62,\\n          36,\\n          26,\\n          38,\\n          26,\\n          26,\\n          14,\\n          26,\\n          26,\\n          20,\\n          32,\\n          36,\\n          42,\\n          36,\\n          22,\\n          32,\\n          32,\\n          34,\\n          32,\\n          38,\\n          38,\\n          22,\\n          28,\\n          22,\\n          12,\\n          14,\\n          14,\\n          14,\\n          16,\\n          20,\\n          10,\\n          18,\\n          28,\\n          14,\\n          28,\\n          40,\\n          32,\\n          52,\\n          24,\\n          34,\\n          24,\\n          34,\\n          24,\\n          34,\\n          22,\\n          26,\\n          28,\\n          12,\\n          16,\\n          26,\\n          18,\\n          12,\\n          14,\\n          28,\\n          32,\\n          26,\\n          28,\\n          14,\\n          34,\\n          14,\\n          14,\\n          20,\\n          22,\\n          16,\\n          16,\\n          16,\\n          22,\\n          28,\\n          20,\\n          26,\\n          20,\\n          26,\\n          32,\\n          54,\\n          38,\\n          20,\\n          38,\\n          22,\\n          20,\\n          8,\\n          16,\\n          16,\\n          8,\\n          4,\\n          8,\\n          12,\\n          12,\\n          16,\\n          16,\\n          24,\\n          18,\\n          12,\\n          20,\\n          22,\\n          22,\\n          36,\\n          40,\\n          20,\\n          42,\\n          18,\\n          16,\\n          26,\\n          28,\\n          38,\\n          26,\\n          28,\\n          12,\\n          8,\\n          10,\\n          8,\\n          8,\\n          16,\\n          16,\\n          16,\\n          24,\\n          20,\\n          20,\\n          26,\\n          8,\\n          24,\\n          10,\\n          16,\\n          32,\\n          22,\\n          6,\\n          20,\\n          18,\\n          16,\\n          14,\\n          24,\\n          22,\\n          24,\\n          22,\\n          16,\\n          14,\\n          14,\\n          28,\\n          20,\\n          24,\\n          16,\\n          14,\\n          20,\\n          34,\\n          26,\\n          32,\\n          16,\\n          20,\\n          16,\\n          22,\\n          14,\\n          14,\\n          22,\\n          24,\\n          20,\\n          10,\\n          12,\\n          14,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          38,\\n          16,\\n          20,\\n          24,\\n          22,\\n          26,\\n          22,\\n          10,\\n          18,\\n          22,\\n          12,\\n          24,\\n          14,\\n          14,\\n          28,\\n          26,\\n          30,\\n          28,\\n          24,\\n          24,\\n          24,\\n          10,\\n          16,\\n          16,\\n          8,\\n          16,\\n          24,\\n          20,\\n          30,\\n          12,\\n          16,\\n          36,\\n          20,\\n          22,\\n          12,\\n          20,\\n          32,\\n          28,\\n          32,\\n          18,\\n          32,\\n          8,\\n          6,\\n          26,\\n          14,\\n          28,\\n          20,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          14,\\n          6,\\n          18,\\n          22,\\n          14,\\n          10,\\n          18,\\n          18,\\n          20,\\n          14,\\n          20,\\n          26,\\n          16,\\n          22,\\n          20,\\n          10,\\n          10,\\n          20,\\n          14,\\n          20,\\n          16,\\n          10,\\n          26,\\n          18,\\n          14,\\n          20,\\n          12,\\n          22,\\n          28,\\n          16,\\n          22,\\n          26,\\n          12,\\n          22,\\n          12,\\n          14,\\n          20,\\n          14,\\n          12,\\n          16,\\n          14,\\n          16,\\n          12,\\n          12,\\n          14,\\n          32,\\n          26,\\n          36,\\n          26,\\n          20,\\n          44,\\n          22,\\n          28,\\n          22,\\n          24,\\n          18,\\n          12,\\n          10,\\n          24,\\n          20,\\n          32,\\n          12,\\n          22,\\n          18,\\n          26,\\n          34,\\n          26,\\n          18,\\n          16,\\n          26,\\n          12,\\n          16,\\n          12,\\n          10,\\n          22,\\n          18,\\n          30,\\n          22,\\n          28,\\n          18,\\n          20,\\n          16,\\n          14,\\n          10,\\n          12,\\n          8,\\n          14,\\n          12,\\n          10,\\n          10,\\n          12,\\n          8,\\n          12,\\n          14,\\n          18,\\n          20,\\n          28,\\n          24,\\n          38,\\n          18,\\n          20,\\n          6,\\n          16,\\n          14,\\n          6,\\n          20,\\n          6,\\n          8,\\n          16,\\n          8,\\n          24,\\n          32,\\n          36,\\n          20,\\n          24,\\n          22,\\n          36,\\n          36,\\n          40,\\n          40,\\n          34,\\n          32,\\n          28,\\n          34,\\n          28,\\n          34,\\n          24,\\n          50,\\n          70,\\n          54,\\n          46,\\n          20,\\n          46,\\n          40,\\n          38,\\n          44,\\n          38,\\n          38,\\n          40,\\n          20,\\n          24,\\n          16,\\n          30,\\n          52,\\n          54,\\n          34,\\n          42,\\n          36,\\n          24,\\n          24,\\n          20,\\n          56,\\n          30,\\n          50,\\n          30,\\n          22,\\n          26,\\n          30,\\n          20,\\n          4,\\n          20,\\n          16,\\n          14,\\n          20,\\n          12,\\n          22,\\n          34,\\n          34,\\n          34,\\n          30,\\n          36,\\n          42,\\n          20,\\n          20,\\n          12,\\n          14,\\n          20,\\n          8,\\n          12,\\n          16,\\n          8,\\n          26,\\n          26,\\n          20,\\n          24,\\n          20,\\n          20,\\n          24,\\n          16,\\n          38,\\n          20,\\n          12,\\n          10,\\n          14,\\n          18,\\n          8,\\n          2,\\n          14,\\n          8,\\n          0,\\n          10,\\n          6,\\n          18,\\n          18,\\n          10,\\n          12,\\n          10,\\n          6,\\n          14,\\n          4,\\n          18,\\n          20,\\n          24,\\n          24,\\n          18,\\n          22,\\n          22,\\n          12,\\n          6,\\n          6,\\n          8,\\n          2,\\n          0,\\n          4,\\n          2,\\n          4,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          6,\\n          8,\\n          6,\\n          8,\\n          6,\\n          4,\\n          4,\\n          10,\\n          10,\\n          4,\\n          8,\\n          22,\\n          22,\\n          10,\\n          12,\\n          18,\\n          14,\\n          6,\\n          0,\\n          4,\\n          6,\\n          10,\\n          6,\\n          8,\\n          12,\\n          8,\\n          2,\\n          16,\\n          12,\\n          4,\\n          2,\\n          10,\\n          6,\\n          0,\\n          12,\\n          8,\\n          14,\\n          2,\\n          14,\\n          22,\\n          16,\\n          24,\\n          18,\\n          20,\\n          36,\\n          18,\\n          12,\\n          10,\\n          8,\\n          16,\\n          0,\\n          0,\\n          0,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          8,\\n          6,\\n          6,\\n          4,\\n          6,\\n          2,\\n          4,\\n          0,\\n          6,\\n          6,\\n          4,\\n          6,\\n          8,\\n          10,\\n          6,\\n          12,\\n          16,\\n          10,\\n          4,\\n          6,\\n          2,\\n          8,\\n          0,\\n          6,\\n          4,\\n          4,\\n          10,\\n          18,\\n          16,\\n          14,\\n          6,\\n          0,\\n          8,\\n          2,\\n          8,\\n          14,\\n          12,\\n          10,\\n          6,\\n          10,\\n          10,\\n          12,\\n          20,\\n          16,\\n          28,\\n          8,\\n          12,\\n          8,\\n          4,\\n          2,\\n          2,\\n          6,\\n          8,\\n          4,\\n          8,\\n          4,\\n          2,\\n          4,\\n          0,\\n          4,\\n          2,\\n          2,\\n          2,\\n          2,\\n          0,\\n          4,\\n          4,\\n          6,\\n          14,\\n          8,\\n          12,\\n          18,\\n          26,\\n          18,\\n          10,\\n          18,\\n          10,\\n          14,\\n          14,\\n          14,\\n          4,\\n          2,\\n          2,\\n          4,\\n          2,\\n          4,\\n          6,\\n          4,\\n          6,\\n          22,\\n          8,\\n          8,\\n          24,\\n          14,\\n          6,\\n          8,\\n          8,\\n          8,\\n          8,\\n          14,\\n          6,\\n          18,\\n          18,\\n          16,\\n          32,\\n          24,\\n          52,\\n          18,\\n          18,\\n          8,\\n          4,\\n          2,\\n          0,\\n          4,\\n          2,\\n          10,\\n          14,\\n          6,\\n          16,\\n          14,\\n          6,\\n          18,\\n          4,\\n          12,\\n          10,\\n          8,\\n          8,\\n          12,\\n          8,\\n          8,\\n          6,\\n          10,\\n          18,\\n          10,\\n          6,\\n          12,\\n          6,\\n          14,\\n          4,\\n          16,\\n          10,\\n          4,\\n          12,\\n          14,\\n          12,\\n          22,\\n          20,\\n          14,\\n          18,\\n          20,\\n          8,\\n          12,\\n          18,\\n          6,\\n          4,\\n          10,\\n          10,\\n          16,\\n          14,\\n          14,\\n          6,\\n          14,\\n          14,\\n          6,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          8,\\n          6,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          28,\\n          10,\\n          12,\\n          20,\\n          30,\\n          24,\\n          24,\\n          32,\\n          30,\\n          22,\\n          16,\\n          26,\\n          18,\\n          18,\\n          24,\\n          14,\\n          20,\\n          30,\\n          22,\\n          8,\\n          0,\\n          16,\\n          22,\\n          18,\\n          10,\\n          24,\\n          16,\\n          4,\\n          8,\\n          12,\\n          10,\\n          10,\\n          10,\\n          8,\\n          8,\\n          20,\\n          14,\\n          18,\\n          24,\\n          24,\\n          28,\\n          30,\\n          20,\\n          40,\\n          36,\\n          32,\\n          56,\\n          54,\\n          60,\\n          56,\\n          28,\\n          16,\\n          28,\\n          30,\\n          22,\\n          22,\\n          14,\\n          62,\\n          40,\\n          42,\\n          68,\\n          60,\\n          56,\\n          64,\\n          32,\\n          50,\\n          34,\\n          14,\\n          24,\\n          20,\\n          24,\\n          38,\\n          42,\\n          60,\\n          46,\\n          52,\\n          42,\\n          30,\\n          28,\\n          12,\\n          16,\\n          14,\\n          22,\\n          16,\\n          12,\\n          18,\\n          38,\\n          16,\\n          30,\\n          24,\\n          16,\\n          20,\\n          10,\\n          14,\\n          14,\\n          30,\\n          30,\\n          16,\\n          30,\\n          14,\\n          50,\\n          52,\\n          64,\\n          66,\\n          64,\\n          54,\\n          44,\\n          46,\\n          52,\\n          52,\\n          34,\\n          40,\\n          30,\\n          36,\\n          28,\\n          34,\\n          22,\\n          34,\\n          20,\\n          20,\\n          20,\\n          22,\\n          18,\\n          16,\\n          30,\\n          16,\\n          24,\\n          28,\\n          22,\\n          24,\\n          34,\\n          42,\\n          50,\\n          62,\\n          44,\\n          46,\\n          44,\\n          34,\\n          20,\\n          32,\\n          32,\\n          20,\\n          28,\\n          20,\\n          20,\\n          32,\\n          20,\\n          12,\\n          16,\\n          16,\\n          24,\\n          6,\\n          18,\\n          22,\\n          26,\\n          16,\\n          12,\\n          22,\\n          10,\\n          18,\\n          38,\\n          58,\\n          44,\\n          44,\\n          44,\\n          44,\\n          24,\\n          18,\\n          14,\\n          12,\\n          12,\\n          12,\\n          10,\\n          18,\\n          10,\\n          24,\\n          14,\\n          18,\\n          22,\\n          10,\\n          20,\\n          18,\\n          18,\\n          6,\\n          22,\\n          20,\\n          26,\\n          10,\\n          24,\\n          28,\\n          24,\\n          34,\\n          68,\\n          32,\\n          28,\\n          24,\\n          18,\\n          30,\\n          32,\\n          16,\\n          12,\\n          24,\\n          22,\\n          10,\\n          12,\\n          36,\\n          28,\\n          52,\\n          28,\\n          14,\\n          6,\\n          10,\\n          8,\\n          16,\\n          10,\\n          12,\\n          38,\\n          32,\\n          34,\\n          24,\\n          28,\\n          46,\\n          36,\\n          32,\\n          38,\\n          18,\\n          22,\\n          18,\\n          14,\\n          20,\\n          24,\\n          16,\\n          20,\\n          10,\\n          28,\\n          42,\\n          36,\\n          30,\\n          20,\\n          18,\\n          26,\\n          16,\\n          24,\\n          20,\\n          38,\\n          52,\\n          40,\\n          34,\\n          46,\\n          42,\\n          24,\\n          48,\\n          62,\\n          60,\\n          76,\\n          30,\\n          36,\\n          32,\\n          42,\\n          32,\\n          48,\\n          30,\\n          32,\\n          42,\\n          32,\\n          22,\\n          20,\\n          14,\\n          38,\\n          40,\\n          32,\\n          46,\\n          32,\\n          42,\\n          22,\\n          30,\\n          24,\\n          24,\\n          30,\\n          44,\\n          26,\\n          38,\\n          28,\\n          6,\\n          40,\\n          22,\\n          32,\\n          28,\\n          32,\\n          44,\\n          48,\\n          38,\\n          50,\\n          92,\\n          50,\\n          38,\\n          44,\\n          42,\\n          22,\\n          30,\\n          32,\\n          34,\\n          34,\\n          72,\\n          46,\\n          60,\\n          28,\\n          44,\\n          76,\\n          78,\\n          72,\\n          60,\\n          68,\\n          72,\\n          32,\\n          24,\\n          28,\\n          38,\\n          32,\\n          42,\\n          34,\\n          38,\\n          44,\\n          22,\\n          30,\\n          28,\\n          20,\\n          24,\\n          24,\\n          16,\\n          26,\\n          28,\\n          16,\\n          16,\\n          26,\\n          14,\\n          28,\\n          44,\\n          48,\\n          48,\\n          36,\\n          32,\\n          46,\\n          24,\\n          20,\\n          20,\\n          20,\\n          24,\\n          38,\\n          50,\\n          24,\\n          42,\\n          46,\\n          24,\\n          44,\\n          26,\\n          20,\\n          30,\\n          16,\\n          18,\\n          28,\\n          22,\\n          20,\\n          18,\\n          36,\\n          42,\\n          42,\\n          34,\\n          60,\\n          56,\\n          54,\\n          26,\\n          52,\\n          40,\\n          44,\\n          90,\\n          66,\\n          78,\\n          70,\\n          58,\\n          66,\\n          26,\\n          42,\\n          38,\\n          58,\\n          114,\\n          122,\\n          120,\\n          90,\\n          72,\\n          38,\\n          80,\\n          60,\\n          62,\\n          58,\\n          58,\\n          30,\\n          66,\\n          58,\\n          46,\\n          34,\\n          50,\\n          26,\\n          46,\\n          32,\\n          40,\\n          26,\\n          18,\\n          22,\\n          98,\\n          82,\\n          118,\\n          162,\\n          130,\\n          94,\\n          128,\\n          80,\\n          54,\\n          90,\\n          138,\\n          140,\\n          144,\\n          98,\\n          150,\\n          140,\\n          150,\\n          166,\\n          118,\\n          128,\\n          112,\\n          96,\\n          62,\\n          26,\\n          36,\\n          18,\\n          62,\\n          36,\\n          76,\\n          44,\\n          54,\\n          32,\\n          36,\\n          28,\\n          26,\\n          28,\\n          24,\\n          20,\\n          22,\\n          12,\\n          28,\\n          24,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          30,\\n          38,\\n          30,\\n          30,\\n          24,\\n          20,\\n          20,\\n          22,\\n          28,\\n          16,\\n          28,\\n          34,\\n          26,\\n          10,\\n          8,\\n          14,\\n          16,\\n          16,\\n          22,\\n          20,\\n          8,\\n          26,\\n          18,\\n          24,\\n          18,\\n          18,\\n          12,\\n          16,\\n          18,\\n          32,\\n          50,\\n          46,\\n          54,\\n          38,\\n          38,\\n          34,\\n          26,\\n          22,\\n          26,\\n          32,\\n          26,\\n          30,\\n          22,\\n          12,\\n          18,\\n          20,\\n          12,\\n          28,\\n          10,\\n          14,\\n          16,\\n          14,\\n          16,\\n          18,\\n          24,\\n          12,\\n          26,\\n          32,\\n          24,\\n          60,\\n          90,\\n          62,\\n          52,\\n          34,\\n          32,\\n          24,\\n          12,\\n          12,\\n          10,\\n          20,\\n          10,\\n          8,\\n          22,\\n          12,\\n          22,\\n          20,\\n          8,\\n          14,\\n          10,\\n          16,\\n          14,\\n          14,\\n          10,\\n          12,\\n          14,\\n          4,\\n          14,\\n          28,\\n          48,\\n          42,\\n          42,\\n          32,\\n          24,\\n          14,\\n          14,\\n          8,\\n          10,\\n          8,\\n          18,\\n          20,\\n          30,\\n          14,\\n          10,\\n          12,\\n          16,\\n          28,\\n          26,\\n          18,\\n          10,\\n          16,\\n          20,\\n          18,\\n          12,\\n          20,\\n          16,\\n          16,\\n          32,\\n          38,\\n          50,\\n          36,\\n          48,\\n          32,\\n          32,\\n          40,\\n          34,\\n          26,\\n          16,\\n          14,\\n          46,\\n          40,\\n          48,\\n          12,\\n          20,\\n          14,\\n          22,\\n          22,\\n          26,\\n          30,\\n          24,\\n          12,\\n          44,\\n          36,\\n          32,\\n          32,\\n          52,\\n          48,\\n          40,\\n          48,\\n          80,\\n          96,\\n          60,\\n          74,\\n          62,\\n          42,\\n          26,\\n          38,\\n          18,\\n          34,\\n          44,\\n          36,\\n          36,\\n          26,\\n          34,\\n          30,\\n          14,\\n          10,\\n          18,\\n          14,\\n          18,\\n          18,\\n          4,\\n          12,\\n          18,\\n          20,\\n          24,\\n          28,\\n          32,\\n          50,\\n          62,\\n          82,\\n          78,\\n          72,\\n          58,\\n          58,\\n          68,\\n          90,\\n          68,\\n          22,\\n          32,\\n          22,\\n          42,\\n          22,\\n          26,\\n          70,\\n          42,\\n          48,\\n          40,\\n          42,\\n          36,\\n          30,\\n          32,\\n          14,\\n          38,\\n          38,\\n          44,\\n          46,\\n          44,\\n          42,\\n          76,\\n          70,\\n          62,\\n          48,\\n          84,\\n          28,\\n          42,\\n          34,\\n          42,\\n          44,\\n          38,\\n          56,\\n          62,\\n          86,\\n          56,\\n          62,\\n          90,\\n          64,\\n          78,\\n          82,\\n          50,\\n          54,\\n          50,\\n          46,\\n          42,\\n          56,\\n          46,\\n          66,\\n          100,\\n          84,\\n          106,\\n          68,\\n          56,\\n          38,\\n          36,\\n          24,\\n          40,\\n          50,\\n          34,\\n          24,\\n          68,\\n          48,\\n          40,\\n          50,\\n          38,\\n          64,\\n          52,\\n          50,\\n          36,\\n          40,\\n          52,\\n          62,\\n          86,\\n          48,\\n          58,\\n          46,\\n          48,\\n          38,\\n          58,\\n          64,\\n          38,\\n          54,\\n          48,\\n          24,\\n          28,\\n          24,\\n          36,\\n          40,\\n          16,\\n          32,\\n          32,\\n          22,\\n          36,\\n          54,\\n          56,\\n          70,\\n          62,\\n          48,\\n          30,\\n          54,\\n          44,\\n          20,\\n          42,\\n          44,\\n          40,\\n          36,\\n          50,\\n          24,\\n          42,\\n          64,\\n          54,\\n          40,\\n          22,\\n          32,\\n          26,\\n          32,\\n          42,\\n          52,\\n          80,\\n          74,\\n          52,\\n          30,\\n          58,\\n          42,\\n          34,\\n          72,\\n          66,\\n          64,\\n          68,\\n          72,\\n          72,\\n          64,\\n          138,\\n          144,\\n          146,\\n          140,\\n          166,\\n          126,\\n          134,\\n          118,\\n          130,\\n          82,\\n          54,\\n          62,\\n          64,\\n          70,\\n          68,\\n          52,\\n          32,\\n          28,\\n          54,\\n          62,\\n          70,\\n          78,\\n          84,\\n          68,\\n          54,\\n          24,\\n          40,\\n          38,\\n          40,\\n          26,\\n          42,\\n          36,\\n          36,\\n          48,\\n          26,\\n          60,\\n          64,\\n          60,\\n          48,\\n          46,\\n          58,\\n          78,\\n          88,\\n          68,\\n          54,\\n          42,\\n          66,\\n          46,\\n          38,\\n          64,\\n          40,\\n          38,\\n          36,\\n          32,\\n          44,\\n          104,\\n          144,\\n          146,\\n          100,\\n          64,\\n          30,\\n          24,\\n          44,\\n          68,\\n          42,\\n          84,\\n          62,\\n          58,\\n          40,\\n          24,\\n          16,\\n          22,\\n          24,\\n          30,\\n          28,\\n          22,\\n          38,\\n          16,\\n          14,\\n          20,\\n          24,\\n          16,\\n          18,\\n          16,\\n          6,\\n          18,\\n          16,\\n          24,\\n          20,\\n          28,\\n          22,\\n          32,\\n          54,\\n          72,\\n          96,\\n          78,\\n          66,\\n          102,\\n          52,\\n          28,\\n          26,\\n          16,\\n          36,\\n          26,\\n          24,\\n          12,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          32,\\n          10,\\n          12,\\n          16,\\n          8,\\n          14,\\n          12,\\n          18,\\n          14,\\n          34,\\n          34,\\n          54,\\n          70,\\n          64,\\n          68,\\n          52,\\n          38,\\n          36,\\n          26,\\n          32,\\n          32,\\n          18,\\n          36,\\n          34,\\n          14,\\n          14,\\n          30,\\n          20,\\n          34,\\n          78,\\n          30,\\n          16,\\n          20,\\n          12,\\n          26,\\n          12,\\n          22,\\n          20,\\n          32,\\n          20,\\n          26,\\n          86,\\n          68,\\n          68,\\n          68,\\n          56,\\n          56,\\n          26,\\n          44,\\n          54,\\n          54,\\n          40,\\n          56,\\n          28,\\n          42,\\n          42,\\n          50,\\n          36,\\n          40,\\n          58,\\n          32,\\n          42,\\n          18,\\n          40,\\n          34,\\n          38,\\n          46,\\n          34,\\n          80,\\n          82,\\n          86,\\n          58,\\n          64,\\n          78,\\n          64,\\n          46,\\n          48,\\n          52,\\n          30,\\n          40,\\n          64,\\n          88,\\n          60,\\n          50,\\n          42,\\n          38,\\n          36,\\n          20,\\n          30,\\n          42,\\n          34,\\n          36,\\n          24,\\n          34,\\n          46,\\n          54,\\n          50,\\n          30,\\n          54,\\n          44,\\n          86,\\n          84,\\n          96,\\n          78,\\n          58,\\n          58,\\n          40,\\n          48,\\n          38,\\n          60,\\n          74,\\n          84,\\n          66,\\n          52,\\n          42,\\n          44,\\n          32,\\n          52,\\n          52,\\n          48,\\n          42,\\n          60,\\n          50,\\n          48,\\n          68,\\n          46,\\n          60,\\n          66,\\n          68,\\n          92,\\n          96,\\n          104,\\n          80,\\n          104,\\n          104,\\n          80,\\n          68,\\n          50,\\n          70,\\n          56,\\n          66,\\n          56,\\n          36,\\n          26,\\n          32,\\n          30,\\n          20,\\n          40,\\n          46,\\n          36,\\n          44,\\n          32,\\n          30,\\n          28,\\n          36,\\n          44,\\n          52,\\n          76,\\n          34,\\n          40,\\n          54,\\n          58,\\n          70,\\n          60,\\n          78,\\n          64,\\n          44,\\n          48,\\n          42,\\n          26,\\n          52,\\n          62,\\n          62,\\n          60,\\n          38,\\n          46,\\n          62,\\n          46,\\n          34,\\n          28,\\n          36,\\n          28,\\n          22,\\n          56,\\n          40,\\n          58,\\n          34,\\n          44,\\n          56,\\n          54,\\n          66,\\n          72,\\n          58,\\n          54,\\n          40,\\n          56,\\n          38,\\n          32,\\n          42,\\n          28,\\n          40,\\n          50,\\n          20,\\n          20,\\n          32,\\n          38,\\n          26,\\n          34,\\n          26,\\n          36,\\n          42,\\n          54,\\n          52,\\n          56,\\n          28,\\n          20,\\n          24,\\n          36,\\n          40,\\n          54,\\n          76,\\n          54,\\n          44,\\n          38,\\n          56,\\n          50,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          1414,\\n          1343,\\n          1385,\\n          1471,\\n          1444,\\n          1477,\\n          1321,\\n          1405,\\n          1383,\\n          1388,\\n          1426,\\n          1458,\\n          1514,\\n          1504,\\n          1527,\\n          1517,\\n          1599,\\n          1513,\\n          1486,\\n          1500,\\n          1247,\\n          1435,\\n          1547,\\n          1498,\\n          1378,\\n          1407,\\n          1443,\\n          1381,\\n          1401,\\n          1357,\\n          1414,\\n          1093,\\n          1004,\\n          859,\\n          979,\\n          973,\\n          1038,\\n          985,\\n          1059,\\n          1154,\\n          1306,\\n          1483,\\n          1509,\\n          1482,\\n          1527,\\n          1591,\\n          1616,\\n          1607,\\n          1581,\\n          1543,\\n          1469,\\n          1453,\\n          1419,\\n          1392,\\n          1403,\\n          1533,\\n          1621,\\n          1625,\\n          1653,\\n          1658,\\n          1625,\\n          1607,\\n          1626,\\n          1634,\\n          1637,\\n          1573,\\n          1546,\\n          1472,\\n          1473,\\n          1501,\\n          1527,\\n          1580,\\n          1627,\\n          1791,\\n          1894,\\n          1933,\\n          2013,\\n          2272,\\n          2378,\\n          2425,\\n          2381,\\n          2328,\\n          2343,\\n          2283,\\n          2298,\\n          1989,\\n          1862,\\n          1851,\\n          1756,\\n          1811,\\n          1985,\\n          2213,\\n          2242,\\n          2316,\\n          2370,\\n          2305,\\n          2318,\\n          2243,\\n          2308,\\n          2425,\\n          2385,\\n          2534,\\n          2597,\\n          2570,\\n          2624,\\n          2587,\\n          2652,\\n          2631,\\n          2709,\\n          2631,\\n          2654,\\n          2681,\\n          2674,\\n          2571,\\n          2431,\\n          2414,\\n          2483,\\n          2444,\\n          2372,\\n          2482,\\n          2377,\\n          2227,\\n          2150,\\n          2104,\\n          2150,\\n          1999,\\n          2145,\\n          2244,\\n          2288,\\n          2382,\\n          2508,\\n          2591,\\n          2526,\\n          2587,\\n          2613,\\n          2587,\\n          2610,\\n          2615,\\n          2586,\\n          2581,\\n          2574,\\n          2618,\\n          2566,\\n          2582,\\n          2638,\\n          2699,\\n          2676,\\n          2855,\\n          2812,\\n          2719,\\n          2686,\\n          2555,\\n          2328,\\n          2253,\\n          2189,\\n          2066,\\n          2065,\\n          2156,\\n          2076,\\n          2155,\\n          2176,\\n          2130,\\n          2048,\\n          1903,\\n          1870,\\n          1842,\\n          1798,\\n          1719,\\n          1678,\\n          1629,\\n          1623,\\n          1481,\\n          1446,\\n          1601,\\n          1597,\\n          1588,\\n          1633,\\n          1588,\\n          1580,\\n          1520,\\n          1457,\\n          1475,\\n          1453,\\n          1410,\\n          1409,\\n          1355,\\n          1369,\\n          1496,\\n          1618,\\n          1688,\\n          1776,\\n          1800,\\n          1813,\\n          1894,\\n          1977,\\n          2049,\\n          2029,\\n          2060,\\n          2082,\\n          2158,\\n          2208,\\n          2255,\\n          2326,\\n          2245,\\n          2172,\\n          2150,\\n          2274,\\n          2162,\\n          2028,\\n          1986,\\n          1885,\\n          1796,\\n          1829,\\n          1842,\\n          1861,\\n          1870,\\n          1928,\\n          2018,\\n          2030,\\n          1733,\\n          1754,\\n          1802,\\n          1864,\\n          1836,\\n          1864,\\n          1885,\\n          1929,\\n          1876,\\n          1902,\\n          1929,\\n          1932,\\n          1952,\\n          1926,\\n          1901,\\n          1820,\\n          1859,\\n          1763,\\n          1777,\\n          1696,\\n          1615,\\n          1606,\\n          1562,\\n          1568,\\n          1562,\\n          1559,\\n          1611,\\n          1547,\\n          1583,\\n          1646,\\n          1553,\\n          1446,\\n          1550,\\n          1564,\\n          1591,\\n          1577,\\n          1593,\\n          1582,\\n          1537,\\n          1707,\\n          1728,\\n          1631,\\n          1736,\\n          1694,\\n          1723,\\n          1707,\\n          1680,\\n          1713,\\n          1722,\\n          1577,\\n          1581,\\n          1538,\\n          1538,\\n          1563,\\n          1599,\\n          1532,\\n          1600,\\n          1616,\\n          1443,\\n          1704,\\n          1639,\\n          1766,\\n          1797,\\n          1875,\\n          1825,\\n          1861,\\n          1904,\\n          1888,\\n          1931,\\n          1994,\\n          1997,\\n          2008,\\n          2047,\\n          2036,\\n          1931,\\n          1897,\\n          1847,\\n          1854,\\n          1881,\\n          1846,\\n          1650,\\n          1627,\\n          1562,\\n          1532,\\n          1536,\\n          1556,\\n          1522,\\n          1564,\\n          1694,\\n          1788,\\n          1957,\\n          2006,\\n          2190,\\n          2314,\\n          2308,\\n          2246,\\n          1881,\\n          1860,\\n          1804,\\n          2131,\\n          2167,\\n          2058,\\n          2120,\\n          2154,\\n          1863,\\n          1885,\\n          1891,\\n          1950,\\n          1903,\\n          1778,\\n          1757,\\n          1672,\\n          1597,\\n          1561,\\n          1612,\\n          1711,\\n          1790,\\n          1855,\\n          1942,\\n          1888,\\n          1877,\\n          1924,\\n          2030,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          22,\\n          23,\\n          22,\\n          38,\\n          34,\\n          22,\\n          19,\\n          22,\\n          22,\\n          19,\\n          30,\\n          20,\\n          12,\\n          17,\\n          22,\\n          19,\\n          18,\\n          19,\\n          22,\\n          23,\\n          29,\\n          27,\\n          22,\\n          22,\\n          28,\\n          18,\\n          17,\\n          24,\\n          19,\\n          14,\\n          25,\\n          10,\\n          17,\\n          12,\\n          26,\\n          23,\\n          17,\\n          19,\\n          24,\\n          25,\\n          27,\\n          17,\\n          27,\\n          23,\\n          20,\\n          25,\\n          30,\\n          23,\\n          27,\\n          25,\\n          28,\\n          31,\\n          34,\\n          32,\\n          27,\\n          33,\\n          28,\\n          32,\\n          23,\\n          21,\\n          28,\\n          22,\\n          33,\\n          21,\\n          21,\\n          85,\\n          190,\\n          119,\\n          31,\\n          37,\\n          58,\\n          135,\\n          41,\\n          41,\\n          46,\\n          37,\\n          35,\\n          27,\\n          39,\\n          31,\\n          111,\\n          45,\\n          27,\\n          30,\\n          57,\\n          52,\\n          66,\\n          55,\\n          32,\\n          31,\\n          43,\\n          40,\\n          38,\\n          41,\\n          39,\\n          38,\\n          65,\\n          39,\\n          46,\\n          65,\\n          49,\\n          75,\\n          61,\\n          43,\\n          40,\\n          92,\\n          55,\\n          62,\\n          41,\\n          75,\\n          62,\\n          51,\\n          73,\\n          242,\\n          46,\\n          41,\\n          51,\\n          50,\\n          54,\\n          57,\\n          51,\\n          46,\\n          52,\\n          46,\\n          51,\\n          63,\\n          43,\\n          54,\\n          38,\\n          55,\\n          77,\\n          43,\\n          53,\\n          48,\\n          90,\\n          54,\\n          61,\\n          53,\\n          30,\\n          53,\\n          79,\\n          194,\\n          58,\\n          46,\\n          64,\\n          47,\\n          54,\\n          56,\\n          42,\\n          60,\\n          42,\\n          48,\\n          37,\\n          53,\\n          41,\\n          55,\\n          52,\\n          40,\\n          43,\\n          39,\\n          35,\\n          23,\\n          35,\\n          28,\\n          24,\\n          21,\\n          31,\\n          39,\\n          22,\\n          33,\\n          28,\\n          30,\\n          24,\\n          33,\\n          20,\\n          26,\\n          28,\\n          29,\\n          21,\\n          25,\\n          20,\\n          37,\\n          33,\\n          36,\\n          21,\\n          28,\\n          38,\\n          33,\\n          35,\\n          45,\\n          33,\\n          38,\\n          41,\\n          45,\\n          43,\\n          46,\\n          36,\\n          40,\\n          29,\\n          29,\\n          43,\\n          41,\\n          37,\\n          42,\\n          39,\\n          39,\\n          42,\\n          35,\\n          37,\\n          34,\\n          35,\\n          53,\\n          38,\\n          39,\\n          35,\\n          33,\\n          38,\\n          57,\\n          80,\\n          46,\\n          50,\\n          50,\\n          40,\\n          45,\\n          44,\\n          58,\\n          61,\\n          59,\\n          44,\\n          48,\\n          40,\\n          45,\\n          39,\\n          38,\\n          34,\\n          56,\\n          44,\\n          36,\\n          32,\\n          49,\\n          38,\\n          41,\\n          50,\\n          41,\\n          45,\\n          46,\\n          41,\\n          42,\\n          44,\\n          57,\\n          47,\\n          38,\\n          105,\\n          47,\\n          57,\\n          51,\\n          43,\\n          53,\\n          36,\\n          45,\\n          59,\\n          45,\\n          68,\\n          70,\\n          57,\\n          49,\\n          56,\\n          40,\\n          52,\\n          52,\\n          37,\\n          52,\\n          51,\\n          57,\\n          35,\\n          56,\\n          59,\\n          46,\\n          63,\\n          47,\\n          46,\\n          45,\\n          46,\\n          46,\\n          44,\\n          46,\\n          43,\\n          45,\\n          42,\\n          37,\\n          50,\\n          46,\\n          35,\\n          45,\\n          43,\\n          34,\\n          42,\\n          43,\\n          45,\\n          40,\\n          60,\\n          39,\\n          56,\\n          76,\\n          41,\\n          42,\\n          56,\\n          35,\\n          43,\\n          35,\\n          49,\\n          40,\\n          286,\\n          64,\\n          46,\\n          128,\\n          65,\\n          49,\\n          42,\\n          48,\\n          60,\\n          34,\\n          31,\\n          37,\\n          35,\\n          31,\\n          40,\\n          39,\\n          29,\\n          34,\\n          78,\\n          31,\\n          39,\\n          37,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          65,\\n          102,\\n          90,\\n          100,\\n          106,\\n          100,\\n          120,\\n          136,\\n          94,\\n          95,\\n          143,\\n          112,\\n          109,\\n          108,\\n          97,\\n          99,\\n          85,\\n          87,\\n          110,\\n          82,\\n          96,\\n          95,\\n          74,\\n          129,\\n          140,\\n          124,\\n          127,\\n          85,\\n          128,\\n          122,\\n          105,\\n          121,\\n          117,\\n          107,\\n          80,\\n          100,\\n          76,\\n          121,\\n          119,\\n          87,\\n          101,\\n          92,\\n          71,\\n          90,\\n          81,\\n          73,\\n          76,\\n          82,\\n          66,\\n          91,\\n          71,\\n          81,\\n          101,\\n          100,\\n          85,\\n          88,\\n          105,\\n          123,\\n          110,\\n          100,\\n          113,\\n          91,\\n          76,\\n          118,\\n          129,\\n          123,\\n          128,\\n          112,\\n          122,\\n          108,\\n          114,\\n          120,\\n          136,\\n          123,\\n          116,\\n          106,\\n          100,\\n          135,\\n          194,\\n          163,\\n          106,\\n          152,\\n          135,\\n          164,\\n          197,\\n          173,\\n          147,\\n          158,\\n          121,\\n          110,\\n          93,\\n          123,\\n          128,\\n          125,\\n          117,\\n          141,\\n          137,\\n          113,\\n          128,\\n          142,\\n          133,\\n          109,\\n          143,\\n          130,\\n          124,\\n          119,\\n          107,\\n          150,\\n          110,\\n          123,\\n          135,\\n          147,\\n          186,\\n          181,\\n          184,\\n          154,\\n          156,\\n          159,\\n          124,\\n          121,\\n          111,\\n          129,\\n          137,\\n          126,\\n          144,\\n          153,\\n          119,\\n          124,\\n          163,\\n          130,\\n          134,\\n          126,\\n          128,\\n          114,\\n          112,\\n          97,\\n          100,\\n          113,\\n          104,\\n          109,\\n          118,\\n          157,\\n          163,\\n          201,\\n          186,\\n          240,\\n          209,\\n          203,\\n          214,\\n          170,\\n          173,\\n          150,\\n          169,\\n          152,\\n          155,\\n          179,\\n          213,\\n          187,\\n          184,\\n          158,\\n          133,\\n          96,\\n          70,\\n          70,\\n          58,\\n          30,\\n          16,\\n          19,\\n          61,\\n          47,\\n          64,\\n          70,\\n          108,\\n          126,\\n          105,\\n          109,\\n          94,\\n          97,\\n          75,\\n          99,\\n          81,\\n          61,\\n          75,\\n          93,\\n          83,\\n          70,\\n          92,\\n          79,\\n          80,\\n          100,\\n          88,\\n          83,\\n          98,\\n          88,\\n          86,\\n          90,\\n          104,\\n          96,\\n          98,\\n          113,\\n          142,\\n          137,\\n          143,\\n          125,\\n          152,\\n          114,\\n          128,\\n          111,\\n          110,\\n          77,\\n          118,\\n          106,\\n          114,\\n          140,\\n          115,\\n          126,\\n          133,\\n          126,\\n          108,\\n          173,\\n          166,\\n          136,\\n          120,\\n          109,\\n          123,\\n          127,\\n          138,\\n          112,\\n          108,\\n          108,\\n          180,\\n          162,\\n          137,\\n          107,\\n          139,\\n          123,\\n          117,\\n          106,\\n          130,\\n          113,\\n          90,\\n          108,\\n          111,\\n          130,\\n          100,\\n          129,\\n          126,\\n          123,\\n          148,\\n          127,\\n          108,\\n          127,\\n          142,\\n          99,\\n          136,\\n          131,\\n          123,\\n          138,\\n          137,\\n          137,\\n          139,\\n          138,\\n          151,\\n          164,\\n          168,\\n          179,\\n          159,\\n          145,\\n          134,\\n          147,\\n          112,\\n          116,\\n          138,\\n          115,\\n          136,\\n          117,\\n          130,\\n          150,\\n          162,\\n          103,\\n          133,\\n          123,\\n          117,\\n          105,\\n          117,\\n          128,\\n          135,\\n          132,\\n          146,\\n          166,\\n          157,\\n          187,\\n          157,\\n          143,\\n          176,\\n          151,\\n          183,\\n          154,\\n          136,\\n          130,\\n          131,\\n          150,\\n          154,\\n          146,\\n          4,\\n          3,\\n          5,\\n          0,\\n          3,\\n          3,\\n          5,\\n          4,\\n          3,\\n          3,\\n          0,\\n          5,\\n          3,\\n          4,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          0,\\n          4,\\n          0,\\n          6,\\n          6,\\n          5,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n      ],\\n    },\\n  }\\n  return (\\n    <Timebar\\n      start={\\'2017-12-01T00:00:00.000Z\\'}\\n      end={new Date().toISOString()}\\n      absoluteStart={\\'2017-12-01T00:00:00.000Z\\'}\\n      absoluteEnd={new Date().toISOString()}\\n      bookmarkStart={null}\\n      bookmarkEnd={null}\\n      onChange={d => console.log(d)}\\n      onBookmarkChange={d => console.log(d)}\\n      // enablePlayback\\n    >\\n      {props => (\\n        <TimebarEvents {...props} events={eventsMock} showFishing={false} />\\n      )}\\n    </Timebar>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Timebar,\n      TimebarEvents\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtKZLH5GAPFcI4jVldoPTgARyEkGIj3IgRGNIliCIgqx2Ios9WH0OwqPdSQ6IYpiyIo74_GFOBJD4gT_zgTiiPYQNJSw6jTUVMFUF0FFjlOXDnAIRIsXYbh2GAdYogEZ5UCudoAAZ2CTGYsHaPdqxmDsWBnByABY3PYAA2NyPPWMBgIAMW9aBEgc_hnEOBEHUwGChH4JYiGoSg4G8hFwurSKaGcCBcMudgAEZ_M8-QdL0qYAEE5nM9gIyg8gbCgdAw3YeQOXMsQ2ujGR2BRUyYG4YA8OMia4HkLca2ATroB64IADJ1vGRJ5koZoVu63ruGOuUwGQyUBlQdp2AAfg2VawwjAargOtbUDq6spBkKs3zMGF1WOGAwDCKApiewbhs-5rl2rCxgHB7ghqs2Gawa6F-JoOA9VOXYLORmsCbGggKIIByACZHOq81KepyrLEcxzEAZpnHJwBnHIALUKwmazodBycpgAOc1KrJ80yYAdnpxnmYZtmGa5zyeYsPawDgUcHPQeDueV9W4XuSyVx5uDAigA2AG12nhNo9AEDzTtsGwZ3t9oUlmF2iPaABdJXlYsKhkIIC2jeV82Q79pNgt9v2Ccj6OY4sMmavD5XKqjlOebT-OE8F7OY7Jsm879snc4zwmC6L5WyfTlGE7jsvY8Lhua2C0va5j_zHMrnmky75uLCTJv279_zk-H5WAFYh4TgmJ5rmea0qtuF4HseV5cvvx576eV8H7vy7Xlfq_32PD4XpOT5rJMz5n3vL4sYKd4X-ut_L-fd-Xo_3_P7-Z-q-_2DH37oA3-CcKYAL3sAl-69_JP1vqA_OcC65IJjpA1-p8IEoIjp_Z-OCZ4V2ASXABBD0GLywanG-Cd_7AOoaQiwWdCGb3XpVJhK8l7ELwVQyh-dOEd1Yc_chPMp7EO4RHURVdxE90kQfCB0iCYkPXkAuhgDeF-1FgAhhyilHMNUanQRhNaGKN0dvYhCDi7GIMXIq-Vj6E2KqnY8BhD9EE00cwsxqd3E8wUUfCx8j-H4M8eXfxYDAmNwARPOxSZfE1kccoqJxDnExOCTHaJ9DQmL3SRYVJ7A7HZPUTQxJaSNGZMAXY9hBTiHJOLoUwBNToEr07pUgBsCNF5JKdonxEDskdPPnkmpeSqnK2yW04pozCEOMGV4yZb8AHdLKdMlxJS0GKJqe0hZi8Rk0IcQ4mpF8nFjOUYYthDjunrMTmUkpRzz5nJcg4pZNTXFHxuY88-Dyyk7JEU0mhzy3kaO2bIzBgKoGbK0TcvZWjdntIec87pDzdnvL-Rw0xECwVzM-eMjRzzLklJBYoiZKKNEPKWWshJhKvlxN2dk5ZbCqX9IAe0y5JzyU6NJTQ3FxzEXAMubCzlhyYWtOZRyxhyKaFQsFQvFhmLxV_3xaKqVhDuW8sUT81lWj2WvJFYc3ZcKlVPN1RKol-q_6XJ1VsoFWjiWauVc0j5hCeUYrZWS756LQXmuYdqgVCqAVesdXKn1WqDnuvlRCz1cSwWUtDdav1hz5lOuUXksp0Lg1BuAX0o1VDTlIodXEvJmauWBqFcokl-bU0FoXmiqBdTi1aNtXEy1wDGkNpudfN1nSoFMvbS69eE8bkSxuRE5p1aYElMbTmm1XSJ1NulWAi5BLgHCPnZEuxLSoHtP-cK-dSz-3NvDVa3eYKbmysOYy6dMd8khs7ZeuJkTm0jt2QeuNzCj3rzTdGl9e6f6nuLs-vV2a3GTtdRU51ZrfXxuIemlJADnk3MVaB5hKrgNFogyPSNv6a1dppaqlZj6V4lJxeB4Bh6CPKIccmthdKG30tmVR0tJaSPNLIxKojtGL2sfgzhiVCaaPKOY0hxD698NAbA4Qstf8amkf47hqDHGZ5cZEyBtjbC12oeuRA2DAbJPltEwnG5uniMCf01JyjLGDN0ZgdxxRDHCMWaM_RszK8Bk2YNdps9vHTNaOo9Z-zC9l2Mb_uqmVTmZ43O6Z5mNMmqEwb85FiL-csVZuExpxL5n5Mee87JqzyWGmGZ89J4zaWCuWdS-vNz2X0tcLCymw53T1Psbg2w55CKFMpcK0fTLRW7N8c6-57DJmHMYYlXYwTWWtN9cG0FjNKnjWtvPnYhd1Wps53a21rz3WVt8uQ8rbFm2ea1bK0lurI2MtCffWNmelz-WafO7Fv2J78v_quwnRNO2DEeo3eF-rqmztUIedkkd0XXMubUU1rrT6XsE3aQDtRFG1ujdB-tnrCPbMtaMVDvRX7lZ3z_UfSJdTd1vq_ots9FaPuAbDVh_rq2HuKc42jrxs77uU4Ow1unBiQuVbQ2Dz7-D11qrnWTmBt6ZszznuEob_b2kBbAVS_HNPAtcvE4e1Zf2Jf0tx-E5tIO8UY_pwBmBqzD0lPm_r_nqOTtKfBzEw15vafAqB5jsFDOBcs-a4W9eWPycE-fo1jX4TVlDbw3N5dy6jc1ON7vZdO61MJfd7W2POugkJ_kb9-3Pd4vY96RT2b3qSNh5g-JkP46r1RopcLsBqKk9JLL3Fm7HjU8yPK8TrPAT68uLext7nddskT2yaPIvJHg8Df85b-hprmdMaJ2ox3I-qr2o78723C3G_VMr4nC7Q_pcb9QUN2lMeceT4d9XtRJqt8r8e2eqte-F7h8z67he6_vtnof-P2-u_i_77tYO6Pla9eYf2Z3s9H9bPL3fBaDK_GeFdOtU3TnP_C1VvGJIA1_P3ZpTXL_BteFZpP7A3ABCWLdb_UvdAo_ZWfyGXIgnmSA93dvEvLnMdKdH_Bte5ZpKg_dU_CRaAnzO5X_W_eHHzWXSg8A5BfvGBKlbvG5AATjzy4IgOXWYO9zIMJhbXfwXglnEzwwrwbTsVwJwOyRUPpRgx0LqQwM_zt3oNzxz3d17zjxYOMIXx51YMzgZQEKf3gLXxnyIQ0MwM8NXXkIJn8mU3e2oJgOANoOUR7XsMJgoIaX8IHw_VAPYOmwAPMWb3LwPx7jvSYPMNw1V0XViIThvwgMPTsTEJgxKQlh0P7T-0cMIJMNCLySuTEzhXEN7TqWGRg3z3CW71IK5SN17yWTmzBRHUYLoLgMSKrhqTEOGQeXKWPQeQ93XjEMTVaLFwAWKI0XiS2UayKLyTCI2I0R2OPUuWmPdTqPGLw0hXwJZQVwuJXi0I8JyNMPd0l1yJ4XCL8WSIvycO_TcKXR8KvjxykLrijwzziICKPgjRAM3yUJb3Pz9jk2PRcNqVX3YBq1SIbyX3RKq2p0uIINCMN2WJqIsMyM_X_xGJxMUTwJJMxNgMCOcxsMOxoKxLdwt1GN1xt2hLJI_yLSaPpTDzqXV2BJ-1r0zgfRhKGXeOh3FKrnZzvz_nT1JwZJdxfwq0Z3GzpIaV73E0MNeMXi1yZ3pL1OpKCNvh91FMzmtz539WxP1IlSHUNNpNsKoW2weI_l928IbTfw5N4KJPZMZNVJIxHUPVfQdMAMlK8XOKgWnzZKe0iSGM9JF3E170DNmXELUJwKG01OeOwVRIwTuKgLdNJPjwjJn0lRZMsWzI2WW3tKtKNJnU-Mx0kKuNTRqTKJwLD06PpWyVWK5Tn34MpIaVkJ9JuKVy8JI2HPzPd2bV-QJJdNzOHSEP7JwNKPaPdNmQ7TMKhKewLwBJjlF0bPjSNzOJWJg00MmNdNCP6LQPXNCMGPpQuxC3mTw27yWSpWiMFzPMLPQ27JHLfPnWbT-zmwbLzNHOQL3JfRHXbIYO_JnNqLV23L9gHRXIFJeKQojgDIROpQEVDIUKNzmyXJ5KgrkPuJiNBJ8y3OGMePfM5JNy5SDxQKwrCUtN3gzPnX6V7QAviLyI1O9ITl0O6Ngq_OAV4uUSEoEzKXWJjXeUZSxRNUuUUMOSOLYTmIczD3TP4uEv0JArjMhPPPwsEt7WGR33xM_OAunK9MYtIuuOfnAszK22PL0IIogJ6O0NmT-27xkNvMvMJJorotMvgV-IsD72-XeUksxTsqLJQuIMMuqPjVUvnUTO1KKT7OCInLrLDLgrrxlJSIiocPLMSp4OHwhPzkQO0t6y0p3M0NOOcr4u-V5NSpmUKtQpstZKVKbySoKvhMytQSTSjOcMf2ByFIMThI_OGpXgQvUrUoE27xaMssHMwudMXwoo3JDM6ojhFOvSqs9w6uDIlPMrE3oqr3mpBILIc0fI7LOs3XCSqOIp0qIp_OvLqt8OYtxJmqewqP8pyRT3Ioj3SvIL6OTNmX6Scu8sEv_M8vVM0pSq-vv1yRV0oost8rrltMIqvJGqsoStuTBuvwvPCpuuurAtXJWNKIgpgqhogJEPssEtyQDwhoXNnKYppuvwTIyK5W3QcoTlbkxvOxKPOuUQkMJsxVyWg3mUFp5u7V7WyKLQPJevzljMhu2uILxPHIaX5M2rNyApgXYsEr-tJryLm3KIpuEtBrpp8y4t2ryNWQtoNq8v9N0ptqWqSKVu4NKu7TQriu4o7lwqMoE1KLbK9oaQlutt7JRrbRMuepIqOqDsDsJ3tqrnrWDqxoZpFyePDtrMdoKL9uUJwvnNwUurhpjh9mbjDh4zy2LqpxXj0zLoXgrtLprpKxLrrsruC3rvLubqrtbqbsbp03bq7s7pjmrobtrpbt7r9n7qHsHrbuHuVlHonvHo7tnp7vnr7u7qXsnp5mnrnoHs3rHq3pnp3o3u3oPt3sPv3qPtPpPvPoXr3svuPuvrPtvovpXsXpHuXuftXsJnXvvs_sfqvu_pvt_rvv_oftfqfqnpftAbfoJg_sAa_uAZ_tgb_vgYAcQaAfAZAbXrAfQYgZrCgeQZgdQbgfwYQcIaQeIZQcwbQffowcoawYsBwdIbwfIYIcYaIeYZIdYbIeoYocgaoe4ZofYDofYYYc4aYeEZYdEbYfEY4d4a4ewZ4dkb4YEckaEekZEZUbEbUYkY0akfkZkdobkb0YUf0f4aMcUa0eUZ0dUYsfUasc0Zse0YMd0eMcMecccdMbsfMYccsc8ese8dsd8fsacdcZMeCZca8cCbCbcf8Y8fCZ8Zib8biYCciYSeiaSdSZCaCdCdibScyfieyYyfyYifScKZycSaKaybKdyYqdKZKZSaqdqZqegcadwaafoZacEbaaUY6bMa6fcZ6aib6eSYGbyeKYKfKYaeaYmdacmfaemc6dme6fmd6cWf6eWcGdWeGbGdGcqfGamd2Zmb2bmYOYWaOaWZOZWbObWYuY2e2a2eqdufqfuaGbqaeZ2f2becOfeeOc-dOe-fOd-cuf-eubuZGZBc2dBZufBeBbBehYhZhahdhYRfhaRYechZRbhbRcRYxeRZecefWeebxdeY-aJa-eJZ-dJb-fJYBcpaBaxdpZxdRfpfRcZcxeZexYJdxaufxc5cJZJd5bJb5YpYFapaFZpdZbpfZYZYlaZalZZZlbZe5Y5cBa5aVZ5f5bVcFfVeFc1dFblfFYVclf1elcNdleNflZVcVepeVctdVY1dta1btZ1dNb1fNYNZdaNbdZNY9bNetYtZFatb9ZtftaDcda9edZ9ddfDfdcjc9eje9YDd9e1f9cTcDZDdjbDfjYjYzajazZjZzbjeTYTYdaTaLZTeLeDbLdTbzfTYLczZrezbrdzYbfzZLcLfLdLfbdbcraberZbdrd7frf7cbcHebbbc7YrfHY7b7dHana7eHZ7enYHYXaHaXZHdnZXfnbXc3YnbHcncXa3d3eXf3Z3ePZne3dPYPdXbPb3avcPZvcvYvY3bvcfYfbFdfd1bfadY_dDa_bTZ_arb_e7YA7naA_XZA6PfPZPevZfffZg8_dg-_fg9_cQ__eQ8A9Q-A_Q9A8w_A6g8g9veg7g8I4Q6I6Q5I5Q7I7Q4o4w6o6w5o5w_w7w_vcY-feY7A6fbY4I-I649I-4_I948o_4-o8E9o-E_o6Y4g4k9w8k4Y-k_E6k_k5k4U7k8U5U-U7U5Y9k406U609U50_U449Y-w_Y6M84547M74_M4E8s6E-s5E9s7E708c4M80-c-09c90_c_05M8M7o-M989M4s8C6s6C5s5C7s7C4c886c-85c5i7c7i484S68_8589E787S4C-C6y9C-y_C9y8i6S-i5S9i-K_i9K8S_K-S4y9S_s_S9q8y5y8a7y6a4K8q6K-q5K467K664q566q_q5q5cX8nqKoWviTDWMFgnj-Qlkqj-UCpjQlgljWLJlm42Km5oSiXG428FgTR6RlR7z2JG7PR7TKSniW5oQnkqnO8OQnjELEMO625jUFkuR7R-X8mu6fSTHW5u_e7-QmLWJbI2I--OX8ke-YSiVW5jUpjWInmB8GyO6nzELB4a0clyVu5WIlnu-ATEIlmR6Y3EvmMm8xXR5oUqjGvB8ckZUFjx7_h7Sx6e4eTO72LEMh7cReWNUcjh9p8FlZ7YQiRp64WCnp6fQngF8AMqmF8Ur5o2LF7UVF9l48RW-KTJm-7cVF-KQO9FRV-KU5-V-xTkrcSTC56oVh4V8zgiUZREuOVx72Oh4u8lj2MFixQd5oUx9584wWI0SR7N6CUqh9-Tyt_PiN7mW18IQh-IUHm6TG4SWp4SX-5oQmMl840flaUu40Qll3Oq0qnd7_gmNV7BL94SUiKD_Z7ASN7BV7nz5L9hVB4j8chD6r_wSiUb7AVF4cVu-N_zlh4GPBUUR707-LmCnyJCSTBz7AT7ST4CVH9MXJ6_h59MQlnb5m5EWn_GQR4kVj_GXm8USN_hUFl2SN4H7GJd60TJ7BRYQcTP697u-IWqhb8QW37BJ24j_3-IR7W6Vu7H67729b8FiP68WCiF9CE_fUxCWQtRk83-z3SAV_2Liw87kClc-HPHaQ95IUBPL-DfwVS3E1UE8e_uYnPSKIZuk_EJFAOAE4CI-7hCFOr0IRLwiBcWYKGsiH639M-yqLAYojJ64Cq4V3dpH7wPQkEvejkf3hsj7StJi-f8THnkkIHFJAeMxWgcfjJiCDbE8_LZH4R14wDU4HfR3m0iTAKCqoPebYk7z2KxIRe__SxBnz-RUCY0YAp9I5FkGpwvuHAzOJHFsGZx_IYhbFAgONTP9XerAmlAzFaRADqsnvBPot0qSuDKkZMZwUEmCgHpX-1AzXhCnr4JIyBYfH_g_wcHlwruuyK_k4kX638U-jCCgcwgmLcoiervNwa0giEiDfsgA1pMIIT6FCnkHg8vEpQlS48dBV3WfpxkcjVCyk1PblMFF6GlDDkEhSIS4j_6XJiiDyEYV7wwq59h-Z6CQhMLt7VYjBNKEnoclwLtDFuJgxZOUNFQQDRUlPPYvkJu4c0LuJw5hDgNGEZJs-exX7hd037HoVBF3CwU-meE3d9ilwgYczzUHm8QhF3JHo70Z5G90-uvV3g0JtKr8Nh9SG0kEI2HyDQROwjJAYNd4BDmEKhRnv8Ju5KCbuaAiVKL22LBR2ht3a4fQlF5Eo_B-wxlLX1d6o9ikSYUkVVFwKXJMeSI-hH_3SFjDQ-1WGoQnzpFsovBwwqEUULhEii2RgCBmKcnuGgoYRufYUTShx4iDxRS8Tof5hxE6J3havZ3sqLnjAjgRL3ZgXz28T4jvhoqUUWwjKJ5IxCsPSpEcOoFdktEo_BxL3Br4lDfhg1aIa0n5Gn95R58NOOKIpjxC2Bqwv0aqIzREjWkQwnRCzy96fC2ExRLYdIPRE2jRUgfWnoqPOHujFk-Ai0bcLKEwpkhww0QRmkFE6IsRRQ3vk8haH9cIudXWsQ12a6NjWufXP2AXVIRF1OuA3TsfWMG75c6xfYhsc2K7HddhxvXUcTWIHG9iWu_Y6cYOJnFNj5xQ4nsd2MnErjZxU4hcXOK3Ebilxq4kccuP3F7ixxB448UeInHri1xm4ncYuJvHbjLxu4i8YeMfGnjnx54q8feNvHXi7xT498T-IfG_iXxAEt8f-JAmfiPx34wCaBIgnASwJf42CZBPgkwToJ7XccShJPFISvxmE8CVhLgnISou-EwrgRLa5ESWxJE1CWRPQloSzxVE18TRKAl0SoJOEhCXhMImsTiJbE0iRxPIlcTKJFE6iXxNokCT6JQkxidhLEm4SmJGE8ScxMkkMTEJckliexKUmcTlJ3E1SbxJ4n8TNJgk7ScJN0miSJJ0kqSYZJMkySjJCk2SSJPklWTFJKkuyWpPskaT1JWk5yTpNcl6T3JBksyaZOMneS_JvkgKRZPMk2TLJ-k6yWFNskOSopTkxyS5NiluT4pHkxKV5MCkhTgpEU0KZ5PClZTIpMU6KXFPykJTCpSU4qSlKCk-Typ_kyqalIynpScpmU5KdlMam5SCpeUtqa1I6lFT2pXUzqSVO6l9TepZUtKRVOGlVTRpNU-qXVOakNTSpTU2aS1J6mLSBpS0oabVJGlrSxpG0iadNKmnzSZp_U1aZNPWlHTNpJ07aXtN2kHS5pV0hactLumHSdpx0x6adOennSbp-0waddM-m3SHpF0p6X9JekAy3p30j6StK-lgyfp4M-6VDN-nvTLpIM-GRDNBnQzIZqM5GbDIRn_S4ZWMzGYDOxl4zcZwMpGYjJRnoyYZ5MtGSTIxnEycZNMgmXTKJmkyqZFMsmZTNplMz2Z1MjmfTO5mMyuZ_MlmczLZk8z_xxopvvtQHhUorCEqRkWLLARTCOKNeHqmogDEKzSyLiWWQf2ISyzVZEslRLlSZHo0JebhTkYvGeTKjwyjo9Pl73RrciCB1swhAGJ0Ehj8EpsgeBX2IQBi3Z-sqBFmOsTvUT-7uZ2R6R3638HqVuCBM7L9mJxo5yJb2RL2eTGzfZECcUUGMUrezhuzSWOZqN3jiivunsiBIyN9F_w8xJGb2YHOsKhFU5qyI3N7NmF1xs5Og0dFHR8yxyGRP1QmIwKgSMic59-DOYyLMFcpG5PlXmmHm9kXCGkscweUWjDxTznZxYjuCOljlp9fyGdEXKnOzmh5OaeRWORGIbQ6CwxqCbvN7PLENID5Tczsv2iGzLydB1YvIjoMx5e89a28mOKaJIypzPa0VATGORIxUpU5Tc5ed7PmEjxD0t8oueXNvnlyScbAiBG3M1mRzw57s9GtoKRKpCHaWiWWbHLtk1lUEec2-dwMQUuQqUkC5pHXNvm95s5GcpuXHTuqKJZZPcgBSnOZpxIi5PcupHXLzmRIgF5CwuRAjIUdzZ44olEXbTDqiLaFDSDOc_KHnhIe5y6eKg2jrlFypZudY2n5UOpPYlFWcvOk9koUvyR42csilXOaR5yBkGc1ORvOaTnzpaI8IBT3PHn61504osIRdR1o7laqUCaueEmXl5ygFRuHuXhiblOKR0Gcm8qoqewjom5GcupKnMVpxIM5VC92iPHEyRKR5383hS4uEpLzmFLtPhZYtyUNoe5qKQPHor0R_Z-52S8GizUSWY425Pi2Bakt3j0LqlPMJMbvDgVMLhZfMwWZzO6Wni2xC8DsT0s6XVSRl400ZVtPGVnTJlr06ZUDNmX4yulwysZcsomUrKplaymZRsrmVbKFl8ywmXsoZkHLeZRygWUstWXnL1lFyzZVcu2U3LdlOy_ZQ8sOVPLjlLy05azI-VCzPlQy75SLN6WLLflAKr5cCp-Ugq_lZyy5ZCuuVQrblMK-5XcseUIrnlSK15SiveVgqgVoKrFeCsBUnL_leKiFdCqJWwriV8KuFYivJXIrKVqK6leiuxWYqcVGKglbireX4rWVhKklZyrJWkqKVPKqlXyppUCq6VjK-lcyqZXsqWVaKtlVKo5XcquVvK-VfysVWCrlVwqhleqrFWiqJV4qmVZKtpXSr9VsqhVXKpNXGqzVSq01RavNUqrLVNq61Wqs1UiqnVGq7VVqt1U6rDVeqoVQau9VGqrV_qu1QGodWurnVjql1e6rdWeqPVvqr1aqp9Vxq_VgapNcGojWhqQ14aqNZGpjXRqE1sa21SmszVprU1Ga7NVmtzU5r818aytYmoLWlqi1hakteWrLXVq819qqtW2prXtqg1Xa5NT2trVNr61daxtS2orUdrW13aztZOvHW9qp1o6iddOv7Ujrm1Y6udTOoXV9qN1s65dfOtXWLqV126tdbus3Xrqt1g6gdcOv3Vnql1V6y9Rep3UHq9196m9U-rvWHrcM8c7oUeVCqYo7yhKZ5LKITjmiF41ov5O0JzFMZGRLCTsuKIwHxpvZf_DRFYOUr81seJ8xNJBubnkZE0Qi-ORCIaLE9CUsc7PsqLBHxpoMvaE1ERqTnxoSNsc6XsJTo0hY55i5AGh5Wx5TzY56ohrERspFwaXKBGgpGBvI2IadBMYrWohr6SQaERBSE4oSmhR1FE0_6k1GBouy_qNu8coDcanaF2ibusxeOW_KKHKibeWyHUX0io3iF2h0mrVH0njlXc_kRGkEaT0s27c1i2mjDe0LvkX4yk1G-DDqMTk_IPN8c6UTom5REbBYp3U7i9yk2JoqNRGyoRtwtnUi9iYG6LfSLWL_rE0JqBTYhvGIkbE52m-ZJBqaHHdlRe80FGFrXQHpZZAg2_mUjqHQjbexSSDcAvUHxzH51A9oQhrZSnc8kKC7HnhT0odFFZx-G2dIobTiiDNQ5TFH0guwfrGRmmwDeKOnnzFGRXG-_FPO9mAjU0D88Qs2VW3CbU0wyUTcMmGQlIHR8GIomdrqLtCF5aiRzTGks3xyWtmcdfmaTqLmacCyo4rVPkOLvJE5uG2SpZouwSD2h9AtYiamgxSbLNyovESXPk3TavRyvAHpihh1Q7ENJG2Svlq_XfJ3t6W79QUik3Ka_kfSEjSTr-TjFINAGs9MXJ-webetMO1HRN0O7FILkEg5rRhvjkG9reOWxDbJTqKc7DiMO55HGJtLQoPNlmsDSRts0WzetnOt5Nihe7KiutN3ZUTSI2EvcwtxIsSpjrWJEaRdtPEKiqVvjhIjGt8k3UbrrgQIjGdcysgE0iRlt7dgbOxKVniZ4ZzdJ6j3UetPUTj-l-dSuEoBDgfQeYXQAgH0HMBRhx4jAEiMxAohlwUQJMKaO0AphXcRYYsSmNLBZgsx5YnMdoEHpjh8wpozoMYFqCyBPQcAEQBoM4B1DGRpwKQJ6Hnr9iuAPAcASgFAHCAwBjICe4AEnspgSxU9tMDPbLFZjswuYDe5WE3pb1t7aAZ4DAIXpgDF7S9HIcvZQEr3V7UQBQevWXC8CUBtgNkbYJ3uFCF7QgCQMfTzG3276KI2wGfTwGACoBj9UAU_YTGoD2A_AM4SaNNAhh6RW9f4KAJQDr3oAOQj-gmNQGvDCAL9AgbYC_vcBpApoOQRGIWFQCT6f9f-iMAAaAM1hHg0IVAE3tgCwR4I5EHYCnEWh-xgA_YSgIOHgMR6F4UeniAIHkiYxLIOAJg2QbuCYQYAGMIOFNHYMCRsYOwTCHAGGAjAoojsAoFNGBhmwYAmETcGXEAMpwpA0eiSAIGIM1g3wBMeQHnqkDQwfoZgL8CAFEhsQY9rEcSCxEUiARdAIEAwGBEIgAw1IBAJYFBDXDUAXQmEISPKDNDtBbQAMNCOQcsA7R4AGkOUCwfNAmR5gSkTw_aHIA-BXD5AOCHADgDYGjwYR1ANYftBaxEgmgAIzhHgiaAPDyRriA0CIBHgWAWQRwHoCwBSg3QNESQPyCKMQASjwEbAC-HCOQR1gp4BQ77BiPegZglgSgI1Gb2t729oB5CFrH1i-xTwWoecMTBL2JA4AvsWwNjC6DWB3AjUaY2MdHAAAJUIFEGSPlR0AJe2gLMbMAuHKjHocINACSMpGpgVR4wxRHNDqwbgBQOADgGyjoBj9f4M4Bca4jjQzIrhj0DcYEDPGnAbxj4HEdyOXHuIR4EUNAY73zgtgEQSiCcYBDpgBIBhjINCbuOwnJQQoME1xAUNQA0A3QX40ifXCYxUT-J50DiZUh4HEgBB3YESc-Akmg4kgMkPgYlDbBKTAMKCLYccMZgpg_gRoLoAUNQm39fUTIx6FiDUBZI4kYU2kBwBwBWAKQDk_aC5OageTLofkw0F0CgGd9e-0U0SYlOIHJA5-vfXKYVNKnIIqkVU46CcOZgNTWpsA3vuEMJBcwxx7COKb0hGmHTl-p07AHQCmnFTzRyyJabNBqnbTdgTU9QD1BoA8gepxEwadkhEBozTx-UwGbyMqQVTIZ607yZCDhndAsEGM66eojunJTzJtvcmbNOBmugcEGIPxAUOZG0jmgUs-iDQCSAqz0QNgDAAUO5GGzTxxo3zAjBtmaznZ0iL9F0iSmpgOoAAHJngAA-lqEagABNGc3qGcCtQWEDMdgEYBCjOQtz0Qzc6UnqixG7AChliNCHKN8w7AoZlo9WAahogsTAgcGPjBrD0hYQT0FcBMFsDL6MQsAAo7UayCtQIwNR7IHUdoADR4DT5gmB-eTOjhO9tACMBGHj2gWIY7UFOEBeKO0A84_UVQzWDH1QWcAaAWgAIFYC9gLId-hIO-YJByniYtAVqBBZrBoWQLFUcQ-rDzgCHRgQp6E84ExPwmrgzFmAHnAn0DHp9GAK4GRagDxw89H0dYAyZtPaguA2MQOI-ZXBowoI8e4UEsD5iimLIeFlg3AB0gExMDlgHULqCJixBdgEQY4PBEkDDA-gvgC4EOEoAUXPzqAEQBADACJAoDb-hC8THUtYGAD6wKS9WEQuxARw2oDIB2fQCwWYAUUGUN4buARhdLA0Oi5gdgB8n-jU-7oJpbRDmAJgSEFIHiAmCZWMAewZoIVcsuJBlL45kIOlfb3X7WoPZhK-hBwCCWMr1-7CwTBwB8wdQYAR8GkdfAhxl9q-mvRvvasThRwYew2O3Bau1WUIK4SS_paHDfnhzkJzi9xaFAAWwLSMJy9BYIBRX4L_Ydg1Fc2ttQ6LFgNiyMA4tv6uLsAe81cAACEB11gFFblOCHLraQa63CaFASWOQ2FwK2ddHDanwDuMNqMdbosqWiYJMDSyhD2CoBAbe-zy2kC0v4hPzullcCAa9MQGEb3QO6ydDEvsBNoMNuG5fqxveXIbfl36wteoBvWYTN1-E84DeCJmpgFkUm75b5ig3trOAFyzEHcsk21Ldh8mxzfuN7XTrY0V66RBlM03PrZYQ0PEBYtzWKb_oasLhGECyhmbytyIOzZRjg2-bUNxYNVcn3t6D9_N6a8JZyCYRtLlF1G1raquYBQYrgVqHqGiB4BQwNsB8OMcmOuBpjcAFm_zbZujmCYqVomDADuArhA7zocoxMbtuh3Rw7AcOwQAACqyRpm3KD6sLWLAbltqOrdVsnR2gaAV8JNZ5gohg7dgCyObEjhTcXIhcDeEsCW5VQvYIcSKEcAjCB2S7_DJUGNFrBB27gOAWADOAmDt27AAAagsiVQkrKcNGEXZmCtRJ7cAc2HAHrvjwM7qBj2-wCGiT2x7r8OO5HeJjT3aAMwLfaaG2ApxH9j-zA_SA8CWh4IY0F4KEHbPUAQ4S9reyveOgWRhjQMAkwAYLvKwn7dt1qPIJwBiEU4cdxO-OAsjtAbLdsQPXNehASHOAzQCMFnfMg539g-dkWzPdajmxZu7AWu3fErtLBy7C9nmI3bagt3WojkAe53Zns926AKQfux3eHtVQN7fsCe3vd3vF257hD5WJgaXu22d7a9ve0w-Vg8OV7jALu4I79g_2d7FkSewffFBH3x4J9tOxgckDsBsoXQfEO4CqgtBxQRwfIKHrvuK2eYj9xo9vftsv3cg4YSAM6E_si2LAeFrm25Y8uv60gEYE2x3p8vG2arpt0awTBD1h6oHKMP66jCqvIQXg3VtWKOD1Ct3gHSdpB2A4gfXQ7oU52c_OaXMrn2AKjpOOwCuDJO5zi55c84EquIHmwXAdALACietQ2jpEH2wNEHttQqnR4CMGzfYDmhQrChmpwNEydFP9Iqse4xU-ZuSP7bW50JwQHCd9O4AnTwBN06mBF6jb_T1R6U_Kd2BWnvTyJ3petvFPVHk5-fUbfqvZHvbszjx1E6X183urEYGJy8FGtowi9dViyEQG2cjAjbzVzsOc5Mce2lgFzggEvor1V7hrM4N84Y-CebPeHrgeZ4M_3MjOxnaz6Z0GcOckx7AcEAUNkA-fz7r9CLroy6daidGBQPRvowbdoBDGMAFECAPACoOEx7nOzjx4Nd-fr7_nHIPODc9mvtwQXUTgS14_ceQ2Q4bj6_SuH9s1h7Hrlnm845gCvPHnHj9F0i71uMv0AEr-YP5erBBOHHQr6EwBZ1vk2IYYNqq1BGf3CukbOl9CDC6gh4Atj7gMqNkCNtLBjX2xs1-gDqvm3Qrmx617sf2Oku1XbNtG6gF5sePdblrk1zsfNfevfAfrm121YCuU3UA1J2kyRB2AAW4Xvl6V5rcguUWlXTj6E6K4tex3UXGABW-sEnCRhxHCB_SKpcDd8wlgbjjN8acv0VuMbV-6G3QBwMwBI3bJvV5bYNcbOi3WYP8zRftd4XELjIQFxYDPvUW_w3L4q5QH4gCB-g5QfEN0GItt7ug9xzgOYF0vNX2XdV1p-rG6Du3-g_ESK8O5iuRA4r6zgmNrbFsrWrra1gQGW7XfFWe3lFvt0o7RhxBUAHMFWw0HMAWR5jQoTs6_pWPwQfbutq5zbY9te3Kno4Ux17YA8C323aV_FzAAg_wRW77tu25B_LeBvR38rk91VefevvIgOocIPVZA-IfawFkNxwh5mMtOqoj7qq34DgBE2ID5kEOJW4gO7Ocbr9yxx_fxvrQmPNb1j7jfv1ceePOpy_XVbY8WPMAVj3MJtCE9A3RP_H8izB_YDMftgWoWwA27gMhxaP9H3YNJ_bgNORXyno22BZOj6eangnvT6OHafKe2rcTtp9U_dcDuxroegQOHpDiMBfzwF-o2UYIA4BvDrALgBkHYBzuGQU0KCAxayBLAIgS1jz-hYqh4WovmIGADF8Yt9QFoch0aJ0biOTnvQ7-74_ABwAnmKIaX1-MAHrceBcDcEGk824JtkuE4jAJt4QeUR82pofN9AzzAL2leMAbXwmGh6729fhQ3XgmBh6mgYfBvNYKm2Zamh4XqADX7YNG-2BjfpDr8WQ4555gxgOAmXuANl6PAteTIWIcvaREagXRJTxXheMAHOvU2Pr95rj5DHXg0Hz371y98AjhhMHy9rb8g_NGe_62hLMAa_SN5vfoAxvwB1APTY8CM2pvlFibw98lv3nQfjNoH-N9QCqe4AcQAQDfvi9_7Evl3y9wj6W8LwVv1BjL0ee2-5e9v-X6U9CdKPEwCTAgU7yvEYAeBwgEQVbzPBCOTR-AjPm4PfZABfeYgBAWAHwBABXe-T4wUiBOGhP8Avvm3kn1NEiPeW5oOAUIBAGvBM_qASwPL08Yp9v6Cf68GGwi8m_AAMfS17H7TaFAI_lD1BiM6gGpsZOLfMcKQJz-Z92-1vO4WQM3AZ-q-WffsNn4L8d_c_gEfPgX_wG089A-gYYKYOJHF9v7JfyiaXzl9l9YB5f-3pXyr65-oB1fZPp48p518Lxn9-JnYBD8_P3HtPCPlgBUHK_ZApoyn5H-p9s-ogGQY3538rGABaea3t0WsFb-08-ncwm4bJx3_tPCeGPm4Mbw7899N-CY63noMT_j_nfM_B3o8M4DiCwA6f1Bv3175jg--OfnvmP7r9F_8_2fIAXD7KH2A7_dfZf9T7L_cBH_8PTNk6HxYR8qxPX-f7YFNARhbXlESbz81ncfAoOfHM8dQ1L7T-O3stCJ-Gvor7K-nvhn4K--wDn4zw4_srDueugFGZ36dgHj70-RpmP7AIHvmn68-fhr77b-PPh_57-Qfof4q2S7qf7rw5_hX436OHm-4fud_rLaSGX3nn4G-b_l_a7-eFt_652V0H_4JwAAUQFx-wAXL5gBKfpAFEwCvmgCwBCcPAFreVvvmaoBMgTWCj-afooFfQsYGXBqBbvuv4JgeJgSaMGTBvq4femEDq7Qmhfk8YpuWNphDDewAKN62-chq752-UgMl5eetAOUa-eQgP55TgyhgraBWhXgCYsGvhqEa0W6wHzZXAcVoEH5eKILXr4WcAGKAAAjkr5dAiwOsB8wYQQOARByZrS4pAMQfEGJByLusCGeHjmkE-GfhpkG16vsNZ4iW6UCUGhGVFuUFMgsNjW5Y2xQd0alBOAGdC6QvsCYFv6LQRkHtB50DkEwACQRABJBvsP16kw1Qa0G1BUQQUCDBwwaMHrAGHr0FtBMwTOBzBeQckHVgZXhV6smOwMsG1B2-uJZHGOkH4E4AEniDAEAR7sEHVghQSTCiW9-hUE1u1-vcEJAvsNsGNulXrSa8WjAV0GNBg_pAbCuVwGwHAAAeu9A6Q_0KkZAwFwRCaKGOhkoB6G9EKiYsQUkCTCyQ9BkHCmG2gOYb6ADAOCa2G9hg6DImmYIWYmgmoOaaTBGQZkZBGbPp8YqQR4NlBmumRvSGUAZruaBOG5IcW5smGfmyY6gaPhkCTmThtyE7AULrtbQANlqOAYWIQKaBLAvQERbuOwdo1BgAhFrGbYQ6AEmB3GfgPMDkhPZvWb7O5IRr5imnoBwZPGLxsCYfGuRmYBowRltBDLmjUCKAAA4g0CTmrUBPCWhVVteA6glgEZZ6gtoQ6FOhf9o5CHm_gHYDohdgH2YYAl5lmYugT5qeDCG2BlAChhrUMyFmutXm1DcGmMOr6CGwhgIYFAiboTCB2UECbDzgsxoWCBwGEK1DphGIXrAku6zg_bwO51tmFOws4GJ71-MAAW5YemzpAA5hM4O-5qArUEWFmw-FuGBYAZzu0BdhTYf1bjwA4a3bmwr3tOFym-fiK5dwhoCIY9hw4fS7sAc4U3rFhC4bEAiu44QUC9h2AOwB1Oo9pw48wAcAwal2r3peFVhi4RGDLhB4WuFqAG4TeE2wd4XuERgT4SkBHhPgKeEcg54ThZKO_sFVbkQ6sCA7J2lYU8arOogO3BowRALs4WQDVlBFUWJMH_7wRtzuVaaATTsaGdW2biHCB2RAPYBh--gIhGqOTzjEZOGALheFVWd-kQAQRrdkQDX6ZwW5Y9WCEYG5gRMABBF8uHYfpDxAUAAABq8QAyAzhgERYCERrgFgBCR87mQ7ARhoOtbN2MdlrC0Av4WQ7t2ykUl7DhndnREMRJ4VVDqRWQKpEMOo9uwH5hMdsF7wAjUNqBZA9Nqrb8M49lVYWRcAFZEuu1wQnAaRVwEREkRJUFS4RALrk9D-6KcPOGN2Z4BKB4A8FtsAwAiQEsCRRd4OuEauZcGjAWRWLu-Gz2sUb-Few5sBpEZRZcE5EuRWQObCxRXsK1AWRuUcJGWR1kbQC2RJ4RZClRCjjxGEwS9mXDzhUQDMARRx1nlGVRMAIVFewS-pACgwkYBGCsAHUbZ5v2kngAbUOfdniDmO84b3a0OeACnDthhMF_qwAOACMAUQqAI-CFW6jhRDdALlkF7lRdgK4BKhgXlBaWWkoU3rqgBQGNbhgtevbCdRLrrwE1gHgIfbH2ckenbwOD0TZFbGq9qo6SR0kQyBLRBMFEBSR5USVGHR-UVVFbGb0ev5eRk7qREeOSYcRHwxPkSTDPOD4Fg6cR3ESnD8RAMfl4zAeQOFFfRoFgE4hwaMPxFQm3YKJFcuCQHjFPGIUWFHwWxMW2EJR48GjCZAVMZDHdAeMJuFMGzMX1BBR24YOEMxnUBFFRReYX7AcxAwM5FdRhUVFHFRtURDGyxRURk5_RoMfO7H2T0RTF32TxgTECGA5jrFcxf_v1AhwmBm2A5AFlt5A5A-YAVabA7ALEZTAyURZb8RowDO6h-cocZAKhJ0UcDkmW7ukAcx61hZbhh6ADTFQAlMdLE4AeseFG2OvMc1YJA4cblDmw2sVTGTR80ZR6VQvujzAeRqjsjHh-Tzn5GL6mFg1EgRmzvHo7AAADLwQ-wLvZsm1EcrA4AsUd7bThT0TgBCgU4KTbChfIQIAChzoC3EwRHcdsAihpUFADihNwG2FyRfji54Q2FcVXHhArjvHE6xo1mPqGWxljqCZuuYL0AogxoEMG32-JiZCFgAoBRDRAQoDdArgmBq46eREADUB62HgJfHXxx1ocHigjnufGg2TnhNath7dnnp8uebg-YFu4NlBFLA-wBkCL-8QPxZ7A7egIAAA6lwATASwIhCzAeAOsYwAEAPlb82DYauGzgd7ijZtuBlio72A8QL0DVm3QGVZEJ-kFOARW50a4D1AEIEKAoJaAL2BQRlCdMDxG7QFMCdQ0JiHEowZ9mgApQJCf4BTAP8UsDFAyYeVBshzoMUB5g0AFABjWeQMQl2xDsW_FTxFkTgBnxKjkZYmWZ0WQbkQ5XskAjA1AKwl5gQoLsBUA8MZKBJAkiQWBigrxj4A1G4QA24Q2NFvyZx2R7p1bGh7AGJ4ruUEafGKeVjvECJhFtp-axh9CQmHGhOEQJCZhowI2G5h1Hp2HBJSCSgmEAlTpkAzAiCcgmoJlHtaG-hjoc6GtOHoV6H6gWSU6EwuiZp2CwArUJkl6gdodkl6RviVADxJ6SV06Oe5MaaD2h_scfFHApHqaB1xHVon6oGx1kAkCAICbACoGZwdEBUJGkT9YDWiQI5DwWn9vAYlJZTt0B1OtSfUmJJW5ugDmwjkL1FTJlULMnHWCyWUnLJcSWklrJxwJg7bJ7cB8B9A_EBGCyh_EJ7EzAioYRajWk8a57twjACmaSJ6ABMBTQAydAnfJeAJhCbACSQQBTQ8CSkmrJBAJhCCBpPgr6hhK_oTDAAtSaGHPGswPBZQRUUEKAAA0lFFLAEAMdapha3t5ATAzcLFFcGxoZikCAOKYkANxUUXpEQAY3jfq7RrgK0nOgAcQ-YYp2KeLFjeMKbt5zQ5sJylUpUUbSmJAXsN15oBPMD9aP6UgCmbeBYbmCGK2KKQEGlBbkejACQ-wZEGahIrnRahBFISsFZB8cKkF6p0wQalo2YABE4TB4Qfqn1BKMNWHwAGqcmZapKFu3DThDqc1aTu8EGc5WpJqbXr0uZMalFupFEJkCJAXqekFtBQaZ6k9W3qfl50RgQAIA_W31r7D9Q6wSMH5B1YAMlDJFUNGn0xAwbYC5BqaZsEqwECf8kTAbqbGkZAKaQsHVg4KakkgpZaVsZxplaWmlnWWYRgluphwbVA6QKKecHH6lwehCqp6Cd2EpA3wRIadpithCFTAPaaDDsAoYXCHKA-hv8bVGhRp560AVPo0aYhFAA0agQ4ECpC2GmRlpBNGY5ps7OBq6Q0blGrULYYfApoKeneeX4YwFvgE6YDDAwvaY0DLpsXmunlGc6QiFiQtBpIBnGg4QBBYhW6ZYY7pAMDqGuGPZhaHh2KkGjD6eAFtlFV6x1kXrsA_kQhk6gS-qZ6jmj6U-6Iu3Rr0bsuhLiMY1hAFiEHeuKQUy4WA5QAWmmOrLosHsuFrnRlwePLu-CsxJcfpB828zqZ5822FmjB8wnGZZ72e-ETeZVW4wfxkEA7TuME8ZImQD5iZEmQD7YWYdpS7wuuGbmDSOHjusCKZIwGi4qZcBn5YaZMdti5yuC1mbFKZ9oLYBKeQMN-7feGVhDbCgVwLIn62tmXyZ2AyGXzYhAxVpFHB2bsdgC2AMQDODHAfQAY5DgoVsFnIZfMOsBL2HGXYCiOomRM6mRcbgQCyuqmdZmG26mSjDSuSWbpnIZ_kbFl6RVGUkE0ZEztS5r6tet0lT-GLrpntAfNrka4JmblpnFW5mcdHKhbjn5b2Z6sI5maWTifPp-W7mTkCeZU9mVY-ZKINdGvGUscyAWWp4Ep7NuFlq5lpZFgGwawOS9nxl2AQ0Bh7HO8WVm4yuOma1AYeK4AlmZZrUNlml6a2cs6Aw-QAVke2xzsVl_Odelc7bZYDnzA1ZAsdWCvJsLqZmJZOmSi71ZW2RVkyh22R9CBW2GVVbIexMPM5QezTvAamezTq05cZHjg-lYAMGcDngeRHhR7M2brtm4QwIOaC7e26OZ_YqO65s5AqOe5kTmE5B5tBkAwaMF-6LGv7tMaquJbhjmQ5yOSh6Ie4ORjliAI9uCEI5FOVVbDZOwD0YIuuUPAAJ2sTszYaRSwCM55h8Ea5FIR-zqgZZAUmZs7sRJMN1ZJhLrqhHCgZzhLnSWVVkxEYAKuXc5q5XVj1Za5wmaXEeOhWWB7iZ1ThMmUeSuRrlgAOABZFnOCufpB8wFuXc7X63Vo7nlRzuZR6meEydrmK5AuerD6QamSTAW5Q0G7mXZdgHdC656ACrmeRRtt1a5u41lPFERv-iHk-ePziVkjWxweOlc5ERkjkEAjrqa7OuWQK3as5cye_5sZUoEKBRAydlTk_uyxtMaV5A0HdDtAeoJ3koZ7AAua95C5tdAOQneQaBagPeX3nsA6xusbmweAF7BPZaMFa6l5AbiTB7O6Rjjlw57QXXnRAX4RvlfOgefpDz5_rra7FWMuSvlNO2buvkCA9eVvkX50QNhavZRrsG67GGbvvkhut7nnm6GC6b-n_GGJg8YzgJoUCarRHxmYbAZDAIgBCAIgF_bGADgDqDlxOoCKCrmPIOsDmgwRrQbmgUQGgDmgtJohCu25oFQC_60tgADE3QqLCRwKoNWBIFX-WgWoAGBW3EZAOBa3pCgVwPgWVQMAOXauApBRYDkFKBerC6AIxokAYFbJlgXDGdBXgWMFjkB4AlwE8GADsFLTsgWGG5oEr4YFBAFQW4FDBewBMFRImACCwYhNIWcFchQoUeAShcIVCg5oMDCYA_MBOApA5EBGAVwIUONxVQIIvww4AE8B-CIFshYobyFEAIoXKF9BQIDmgwwBO6MFZMOgBTw1ojoVuFLEKgWuA6BZgVIQGAEYW-FIwDYC0AVwLZBWFj8lVD_cgCBAKOFo9mEUUFURVQUxF2BSoUJFSRTABshE7pV6MFlUOgBkwrgP5AeAeRSgWUF_BTsCCFcRSUXmgiRS8DlF_hRkApFlha4ARg6RRLy5wWRRXasw_kC4VkF4RbcaSgrgF4XxFjBX4T1FHgNoWuFX-fMWLFfRQQU94EoB4BSFGxSgX4mqCRgXzuyxWADkAwUOgASwTRXIXdFyRWoXmphxYC6QFlgAubQQZ4Jua8gMxV_nFQFoMDCJmSQA5AiglAF4ARA9sESBwAGJv0AvFHBbMW-FjRpkDmgcELZDlF_xXcZmuVwGTBdARAHcXuFGJfkDlQVwJVA4ASYLiX4lERRiUjAJyRMGvclJbcZwAUQAkAmFwEJiXElVUDgA4lMAHiXGZW5p6HrGZ4CKDfFRxXIU7FwRpkCIGLwJdBXA_EboKOQRAHYC-xFEAyW-FRJRVASwXJRSVv58IR_mGGSIRRCAmrxgAVxGQBXoDbpBXrQZf2OIACkklDMAACk0hcCmoJVwMRYPmuhe4Xql0xZRm2ALJvFCGgsAFgDSFRRcMaulFEBGAelERS0UhlHRT4XelSnjQW-FEQDMAklQUJPpcAB0e6UIlkRdEWJl8RfGUlFYZVmVf5DxW2HSFGJYCVxQRZRGXZlFZbFBJA8ZYSVYlmZTWV_FbJV6XllbJTSV1pLZZGW3G1JbSXxl1QOyUFAL0MBnUFQZXnlmA4Aan7M-X9l4Bdxolk4bSFVsb5DDpbdgUF5lmQCwB5AVwOQ7SWfQC3rS2goARYZA0hTaWlpLkDgDBQ2pdWDOlhAFcBJg15beUWAMZegBLFvZdmX6FhhSUUFlPhdWV9lpRT0XxlZfn6W8WgZdIXxAKCVQU9FipS9D6AZ5esDqAeQNzZ8F2ITQDwVtsNIWog7gHo4yln5V_nilOFVKXdg74KQWBWM5Z76IAVAb6Zf2soUeVLlFoC7E0l6AORU6QlFWn7UVantQFjQCpl_bkGEoC8D-lrMBPBsVithxXM-iADsWeQEldQCIAkUJvHzlAhbEXvlhZQRUoF35d4V4FfheO4ZA8ZfsC-xS5c6BiVZgG8UNAeoF8WNQ9gJYANAU5vAU_F05eJBHepFXYBPmgoHhVyVY1tWYdm55TAl4AAFdmUdl6wKBVVFAZdgDllgZV0XJJVwCMDJJ0hbhDmgqgNgAklJlagDz-MABLbzlW5T2WswlULiVjQrehmVulrZc0UFFrRdsDtFqlXGWpV6VZmlf2IVfBDgV4VVOVpV4kHVWyV5gE-YLlU4MEbkGe5TgB5VPJQVX4mOQMVWAVOZYUXKVxRdVXrA95RMFPlE8LeUUVWvmkBU-BRYF5uVuUNKWeVg5j5UtVAAAJ_mMNuYko-XQMECVAbUCDFdFflVcAqEuJYI6gFz4KZHjV6pVcA3lPJdIVBOkcZ8FsmzlZdCHG1YDgDKevsLVVL-3QHRYNV_pS5bGV8qesDpVmVXRYXl_lepVyFQVSjBzVAVV_lo182TqXzpiIYukyWvJlKakQkpWkAYmpvgCaAZm6eaUgZeIZqAEhV5iqGaQZIYGbZpVIQODBGpQdqH7OuoSvnkhMKYJCVGm3gkbwAHIXZ5HgTNe6CnGMQGbDkhLrsL7rWRJhpHk1UtvqGZ-hoeJCk15RerAU1RpWaGgm9UFVa5OqTgU5rm7MPuZ7mu5jualI6cUGFxGMIRLYK1RwMHGRhRIdeY15d5vCaNWH3gW4vmkYIlaGuTmT64pZVUeh4A-SNlbaf-mQf-Z4wIcHzb4JqAO-7kAuJfoBXAbmaI6lucdeK7uAExsnU8lqdU5m_R4wXnB8wCdUnUp1GFeLUiuzTnU7G1-Tuk6iOpnhh5-p7cKXU51WwBXUTBmlvw6cugTrDXCZbtap7oACljQBKWinpyGs2t7q1CGBIdijC9uMFsO7OphdmRmt1FGThY5uQVgzYvAreaZHg21AHD7jgWCbrFtuqiTDZeV4oCxbsA_ALzlH2IAMFlpG1locAwuCWcvnYR3GQNanOPVlkaJAk4TzDXZWQWVnXOm2a_Xe2Dnn_Wf1vVtrB_-_9aVmjW-9VvUEA6boG4Ju_df9bC529d0WdQZbgkCEZJYSM6AJ5qfcZ_xVVo9bS5yNtHW0A5sJg3T5z9fPpkNDVqQ3y56MRGAwR4uUnYNRaMF4DDGrdvxG4NVDTYCdQgEZpkuuYLnQ1ZAy-v5EYZAmY06jWReiI2t2jthMDPGaABGBcNEYaikkg7AIo3O2IMao2u2JoWgBfZ8jZMmOeS9tQ22eVWR46oOIcPPW7Wi9THG6pR2XBZyNWQMc6Vw8de4Dl1-dZXUuNtABU5ieajegAmhkke43Z1SPh3XeNEwb40wA_jSdCBNBjen4pwbdeE151V4FE1iNfjXYABN-jRo1Fx0DsWHg1Njfe4L1pejHFGpTjSK7RNbjUk0YAZdbpCd1olhk0xNWTXE05NIMZXDJNudQ011Z8je4mtN3Dco2JN48B42J19TZE2NNIwL03ZNAzYmZDNPMCbF91CrgtYOxvcGkYV5EsYW4WmGHoAkg-CDS27YJH3h64H1iDSHANWzdSnBymbwDhWSgEYLg7f1v9fXHZ5N2QFFcuAPry6oNN0e3HENmzmg4r17XmvUEwIzV41pNrFmE1dNkTSXW1NnjWM0gtIcJ00RNsLYE7T197sO6B1xdSHW_eU9QEnH1hzaY31hiMeY5jRH9ktGvZYlnNYxJ-kPE2qpgLUUGmRwMWgBXATdfRlw5lcCDGMt0jdXUY5rTnXVpOzgJhaQt5hTHGzN7LVbmNO3GXpE8tBTqy2SRIrXJlMZ2bvy3ktinnbnJ2DVu_XKtmEchFCZ0dlMAZAQgAIB6g8ABUCI2YDk9kfRbUHdYjN4LWk1_-erUKCGtcRq4AmtcoAuaHAhdRpGcAdgINkUQ-JkLnnR3QDbFMJrgMRbQADbma1wOFrck3At-gANB2tBrUa1Ot3MS61utmlh63mZfCQcaTp_5oG3KR9tsG1RFJsL6ArgS9pa1hN0bZmAE2d1vC2pNMbXC2Tu9rQm3Ot7QK622WbmRdWpt_5kQAoVFmSEBTA5ID07Og5ViEDeQwoOG0ltVrQi0uglbVG0wttba3X1t8bY61NtLbUcCR-WtZ61uxIMfyA_R67Tm1jJIQCG2FtMAFBm-OqeW8lreRPsGEy-s_gr4m-UtgikT-l7Vl4z-YAfxDQAxgU_4G-M9dBFI-tgKj6A-dgZHpPtW3i-1z-aAGykPthMImBkwYgML4hAovhLVa1FYDB0aBwHde1gBOtVLZwAa1TT6QdF7WwDlZz7cAEYdl7vaFIQMwHh0IBeUJo68pN7ft6Yd95pXGmwC0M4CWAdoZYAyp3kKgCKBCYPLVPeAgdC01tNALt7wugnZ3UP-qwCk2d1IncKAJ11rfoASd3QTAbwwMERs3rwtjRBGPg1WUsDxNSwPc0ENFqU9F-w_Abv4WRU0Cq2jJcFlIExwEqTPCMAfHRTVS-YnZE0ydiWc51pNEnc-7ydwnbP6idUnZE2KdnrsK6v-qnaxm7-5DXKajgmnZY0kw9sLp1yg2UDQB4A9sKp1feJnbr5mdwABZ2N2l-R3md5r4Lj48dtYA51S2TnaM1CdoKb52yd7nQp1ld3nZV0TtFXYF1Y2IXYQ2jganSvAadSdlp1WNOnfo16diQDo4pdbXTvlEB6XevCZdFnYN3hl1nX7C2dfsJoGqBaHaB0K-DHfCZkdbQBR1FdHyVx2EdIHcR1z-a3UKBMd84AtBngk5lqCcd7gNt0ld95mV3ltlXTO1NddXZO0-d1beJ3MBQXaYEqdI3R10LwXXdvVWwGAHF39dKdtrAGdRDWl0Sdk3cxEaRm-sojzd9vrd3wm93bO1vdULeV0fdAnf51pNXBhj31dzXcF0_dhnWF0cBxTeg2INQPegAg93DXp2JdEwMN2GdUPV94w9GAOfm5dQ-QV3AIiPQt3I9QoKj0VdePTK41dNAJ53t1gvZ17C9OPbV1EBSne_osNv3aT26-APZT2PZfXbT1yg03XbAQ97Xcz1EBrPX6Za98PevA89UHQ4EaB5va_A7dNHUAGwp-3nG0OtxrZIZiApXgu2O9ibfIBXd3Hah0EdtHWAFmg_1ZR0T-a_gH54BW_jgGEB68LR0C1Sfvl7zFUAfR1bA1ALwWzdysCwEF-hvpRYrNjkGs2N-wCOXGNQrHRvAoZi5oU6kIygU77u-Ifcoib-IACH2R9K8H71z-8xQj7p9L_vDB_dG_ve4INrecAjjdMcEV26g05u74YBKgRb3fQ9gRP3vJlvQTA-BJweLarWutcqlBBsdemm7NYPi8BupHQeQBNphaU5lupqwdkF5pO8QWlvBVQdml1Bswcf3zBzaRi1G2B_VkG79YwQD4P90Qdf0bBvwcj7_tW_bmmxBJ_VWmA5BeZOlQhL6Xe13dqAO_n41v6YTUom4kL7EbpQEDTW4hXEPiFBmjNSSFuG2kGmZeGYaUEGuG1IVzWBmkRpkbC1OXrSGcmY0GDV1mGA2qF3GYNdzUr5vNTkaBmuViID7-mRr_pawAhoxB4AQgDcBFt2A_aAnpMAB-kVGbpuKZvpjFqINi1prvXnIu7AM4D9g10RgMHpdxkoMzgrZnzAZAulhyGtGHLR0a4ZuLgRmu2xLvABrGYVnba0Z1YI3lLGqAH-7RRpGWZb85GeULkQRtUGKbS15xuSEh-RJsp7khugc6C6RRJnAMEm8hUnbkD9oOsaVAsAAiZumZJqEOv6iyZA6CDUwAaHBDpEPAOmhJpUkZuhmzlqAigjUPaEzmTodObClYDvkOFDxQ5OalDuRmjAVDRQ6x3sdrUO0D1DM5o0MiglgLUNVWrQ-d0j55QwUNFDvQ1BmbeMIb7FnmIEEE2EhjJl_bBW5AAgauB4mX4atQwg6IO759fveZj1gLaECvmo1r27Du1LfRaoAbKUbbQQWAHuV5w4HRkDX6pw-cMP2RwxkAlpyNfrpFphFo8N2lySAMmQpVwM8PHAmQBiCjlsdg8FKtUdSeDJJeADh1sph2ffoc2X7v55rh-QGlAWQfFh80wDNAEPUj1iDQW6YG60eODEOmlntCrACQNPHmWw4JNk_xuYPYDOAZfQTA4gGAKMCRdorTAD7AEYNN6oA0CXSMjAYoOqVLALCKNa0jJwCMDox6IeXG-Z_sY-BdA6pfbCsj7IwKNcjZrnyOqA9Iz5DCjoo2ymPg2ULInZQ_EFKOQ-qAApbqw2MPxAKjHI0KMcGIo0XZqjrCW0CdQWo8e2Reuo_qMxNulcaMCjpo_oDmjIEJGDtAGo-rDbDOo5-aRmgwFxEzALo0qOdgKoxaNejEQKECdQavRF2BjsifHYhjHNl0AJBQuY1B5GBjjFY5erUPyP0jqYyJEEAGY_yBZjmQI06sjM-oRbZjR4BvUgRbtdAkJAidhqOj1BbnmOCjuJbpURjnow-bygko_aMBjbI4qOcj8APKMrgbY6GA8lnY2aOqjXoz6OTj2o_2M_tjo4aPjxKMOOMdj_EF2NijVozGN4Ato_6NLjQYyuOhj7Y_OO_e045GM9jc436OLjrcXqNBjSYyeMTjto1uOWj0Y7GPA9t4wmPgRyY2uNDjHwO4AIgUAMWP15l0NWMiueFgWPpjmY6RXgTtYzDYyjowHKPlQG1kr1L2eFjWkQjgXmJ5iWS0bBlgjs0GUkWQ446eBrg7enu4TQLI5RaYTwEOtXxp_qZs4DJAABqtQI7erBRQv-pvkYTYI1hMAmp4IRkFA-vvoBigNzUvqwASoehFVWfyX5WsTFEOxOcTiDTWmETf4EjWSTjExAmQpskwIDyTlAJvlKTZPvgCDlDE_pCXDgyR46nDrUNJMAp-5rlWuhcEVVamT1wz4AWQVkwWBbmrMJNzGTY4PcNQJMky5PFpMk-5M4AEsEU1F-JTXBYxxzE5XCmTJwySCoWPk05PRTPk48OVwrk3gCpTGk7SV5NizTjWAutgFEMYAMQ0f7vu0kVwARgWAN80duPUE612QKQHik-TsU_VNspTk_s0UN_brxFjgcAMVMfuIcKgZ_DtU7Z6tD7Q5YA3ePgENAxT5kxVPsAAAD7TTbUNVP_D_meY49DF3aNOd2jkxgCnDDUZgaxjMbhMDRAhdYkMxDBkPABXQUwCkDDgTWYF6aWR04F7rWN09EOBegQI3YLuiMbdMCAMLrYClTGnu3C2A3U-Z48wsyf1PXRy0wMNtDbHR0NrTojhtPoAFk604UwA0LNMpwfUzVMgzJ0CtMj5BNmNNLuxw5NN6RCM0B6bOhmdkAsTfAMy7AzS0-jNgzw0-37aNgzeVNNTVw5tM-A8M45DPQWjU7YaNDMzjPAJeM3U4IzK4Hfmet3U3ilwA3039kVZLE_NZ5TcAAVNJD1_uEDfT5U5VMWmC07VOMzZkyTCnDGs4lPgJrwzJNH1qEbQCCzZ7bd6EwKM4tOzgoM5UM0zWM-tMNTeM3bNDQbMzNPTTvU2rNozFkBjNrT40wlPMzUM3rMPDflaNbwT1AJWMZA4EwBbiQ8egKAbN6E5RbSgOXgoYxzU9oS0ce1jktF4Wic0eDJzxMAKDT1pECnPAjQLvpBkGiEEa0FziRnnNT2rTlnNljy1kLldGHNtnMNzKc5XONzAoEo7xzRfsO6txECVqB_DdfmiAsxItuDYezM4BrONTPM3QbMzgCQFMAplro9MGtQY1LPItPc1kBeTQZrjnXucHhm7bNevrq6GzkdYTA7Tkpt_o92KBmXMSjEztIUdTgMHbanDCcYx7jw481bNUzNsxDOWAZcHdCAWDs1rMsz0wIVMZAjo0xOTOE0__NlwQIe9MgLlHjDNbTqsSw3zzBYK05wLFU3JFowMEf07IzeFjFNg1Q4RO6INrMMFBSNjI-DC1zlFrgugJ-CxkCELJC-04_Wm5inBXzFc6YAvzHto_N32BETHYv1YecKBcLMzsA0WQ4WSz48OFM2_Nez1M5_NAxdWWREVNEYLDloRlHpgtFZTzQA3GxMDu1miLqM5TMSLlQ70PSL0rodndZ_kVDkY5dTsovfOK-jS6wNpMfZM_NMi-K6fZdWdpkVZSNoZlGDcHoRmmD3tkA7vZlcNK6VwWOVE6t5lcMXU4xbze3B_-cvUg3KZv2c4u1NOmUvFKOkEzvHQTJY7BP1zuY_-NQTKICBOljOXlRMDj4cwIBwTHzd-PweowB-5phHBksCvzGzXvUQJq89i1Gz7UyXNsJvrTQCkzaqTQAfAHSwQAsTs090s-e7CW_roAPRruPwAmyV7C9LJLp0sc2DsV0sxGsy_0swuzk1P7LLLEys6NLHNtiFuBCXj-aSDpeq2G7D5PcLanNYi3nDQLK81cBxTgTvBOsD_A9kDLjulci18D-_vBZLL-gExPq-YNaLPTGGzd-13jzyzcmfLnSz8ugJfy_BC_WPI8QvhuwK0m1hJNAPUtauQdX5Y7zP3nvMA-OzVjY7Njo-XHig_EK1ORxOCW0tBmr83POEW3y9PNTzqC0SsPuinqCv9LFYRwYzLXy67PVLx4CMtpAYy9aObAdgATaVhHwMK48rEy7PZbJrK50ujWS9oyukzJ0ES0ZzdLYomOeY-mjBrLMq0ovbLinrCOHhUpYiMRdLlpgAfAtE2gCgNLKz5angA0E7PUrjs1tA-A0M37OwzWAMW3wO2q_CMBemcxQtYw47jqsIjSba2GbztgLTkWQd1jYM05_7rjl_-8XrwNsDvpvCvcz03hAmZp1C75aBrUK_k2LZ8DjgtercIz-G6r3MSdDHLiq1muGjPqwF6tQyI-3DlL-K8G0iuSSyjBaLls4NNgzJQ0KV4T2Ht5EWDoOUh5M5Xa733twmBvglQAhCeXnsAPgLaNpNARgomVh19rpDdA4y51DohJ0ywlTAfgIStlW462yssGNCxVZ2L-kBuudLWLn0ubLEXQsuhTTxgsvMrnK0evsrgq1yvZA863ytTLEqysu7rAi2K5L5zS5QurRaAAQsRl-6_0tqT-kIYukWxi6XoJZJ4By3gwdTrKHh-hWYBsWm-2U4sZZ_2YetdGHiz95eL-sISk1g4G6ouwN_i5tkwNI1pXAwb-gIVmhLzLb3WN6ES5Kkhw0S4htxLyGxVlLxGi90DdzTxvlNLz3U0rMVTMQd9NDzgMUWunL9jSnBXLsiUxM3LGU4RYDzTrSOly27cAs1qGrGxG2FLHG7LNcbKtjf48bxntpbDzHq2FN2NpTaJtLzIC5JspwAyTJvrlrYdlNqGZS_eOJjqcxytIrSvdrb05etnL1Erx8zXlkrFy4HMCAVK-AvCgFk4bP0rzq_NNiLtnrhOKrryUq0wu6q0Issr6q4Mu3rwqw-uTL4qzKurLh6xssarlKxS2dTcs0VN0B_G5-vqbQCwIDcbUFQ-BoLjnnha7LWeZj4HLXbvuH3pgtuFPap5y9ovrlYlpcsmb1y4COvBdG_3N_Dcm_xby2SjpplkRfNjq3xLumcIthbgFmVvyzxW1VsxB3U0tENrA09bMNDUi4qsWAPCxF1frrS37DJriDZxvlblWyNW9Lks7At_zQWzVsJwRG3S6B6ym5tuezKGWDP6Le27NtrzHGw1N4LP6zQuLbhWxkCXbXANduSux64FuXBvG3hu55Cm8XODuKjsyBVmF9WAnX1MQIQZ31Flg_UQOMLjfUQRrUKGvN5_7gllfZNnu3l9WffuA6HA4bQds31zg4LkogmnWTumWOwNjHpZgi2ztzelAMHmuD3XQEvc7HOx64k2rOyg1LNgLj_GbDpK781UbhMJnVTWWKzJ576DGe3CVBe_cD44rdG38FA2Wu0i3NLXm5s2Kr5K5p59b4mxcN3bMOxbvNTs83cNspKU0NuUrecGlPO7mUyCkSWv2y0uB14Xt26e79W8ksUL_26AnT2VA9U7QNVoAUURg5sHIvcZX2Shml6bNhcl_1WtVHvLhpk48NJ7pKxmkEth20HvfrqAL-uJVlu1tNPbt2TC4DJmETgt57f4IDvCgiC_rPWTKC8Xuw7ViznnPbtW5D6JrYNSHugJ9CwNYR7KjdHugbcFtntoRce_5EV72bpnsdWKe5sm3jfbn3MN7EwBckwuDsUmMaR0EFtWkVnuxmlg1orvHtwWzdQ1GvZ2G5P5dAYAK_4GrLMZQYCueq1fuAGe3eh1z-AQ870pwwALcH2gYnvKtSeW0B_tTAOEwJ41eGgdp7NwKPqAlmBi-8Alg1Y3n_tV-vHh44wHTwbPrv7SB4D7NwszUxNTQbIY0tjeIMZgfAAaU2N7UAkdqODy9nfTzDo2_waLsPBA21ABGdOFkQcg-3Fq_7kHT-l91eWf-313_BobqQj99PMKb2p963olG29fKft40TNAHRPde5-6_7n7rB3Y7UTPE8auQjFkOftlwfBzWDwBwAJAUrxJlurAjtWQDkALTUoeKB3QPIN15CHpCE30K-NaYweOjWoJUuv-lYXIf8uDo0GP2HIwJtGVhSwK0MtrIoPQfzZjBw-tG2jhxwbOH8hwON2HlS4iv82Ph9UOtrzcOocEwqgS_sMRwCMACve37a31d74B5n0Bj2R8v7AIo-4foEHiawgeFHECX94lHhFtfqLeigbkc4t3dq9C9Qunup3vejR11BvQS9br677oCVcAJrhFpmkAILw7zNy768JPsa7K8C7vMBbu6glDHqQGCNfDfm5ClzHEQK3oxAMwLxN9HlFqsegwEABsdKHGQHMcZHbRwDXrw_UOYcz9CAZcf4drAGXDSH8MPODOHGPmsd7HvExWFQAah-gam9FhwnDR9oAXP5vtUAPitKhCffl6An9hoXRgBM5j7swAXsFcCvzTax_Psd-8Ocdx6ZPqF7NwSNfCcRb22-DNNDd0GJvqwLE1cDQ72s58cpw3xyDsfTr8OUvuHqACEcxtSvd76uHsiXSfRH3h5Ivsd9B4keI-QRx44Mnzm-BbNwrI5EceH7Jx9tInHQ9yfder8xAcL7CJ7ifDT3XlgBTQpJ1gDdec4_gd7D4jYScwATE18dN-jAFSdlwtJw4cPHoR0yfKwIp24dRHXhxKeDDF3dKcmn1vryvBH5p4ydCnpCNaesntpzUv2nM5vovknr8LKf1HLS2cE4n78w6dagyp6qcOrpwxqcrzcp73O6n-pxSeGnMgMIdXtM_sIEAnyCWHHu74gft7gn32wTBz2c_tCeHLtAHCe_DXW4idRnKJ6n1nW6J8AAxxAdkDATBCp5GcBnq0wSdm7RJ336oLl8Fic1nja7ie9D7fmlOUeKZ336TnTezbuOrKJwadv7a-zMAb7W-5dAkefm48M3e2GxP6KDterHbtmhKzCeqnlZ5IZDgoXvbHtnVwCudrnHleYDqGdR7H0EpWAbIMGHLERt4iHdHfl62BeXqIev7RAZP5_Hsfeev8J6-xF6Fn-XredZAJ3XQcLQlcfpDgXtAIt1feQF1-dgB0F7QALQ00LLnN17PZvl5dXeSPl95_eYAYoXyiFIBvntAH6ZT9-Phcf7nBQE37Wd5F7P3ypvgRkMEmxKzUH-Gq_Y_7NBxqfl7b9T_Q0F4rBK1mm4Dgl-dC_B8Kz_2dB0lh0dhgslzv3v9p_aRl3BAl2UFX9f_Tf179RqRf2H9wl9WDjBr_Vpf5pVaRYBLBGl5f1rBKl-ZeE2TQYCFWX2_Y8H_B9_VZeH9Ll7J7n9El5pcTzLVS_tnBIA6DBXBvFwmWuXtLT1ubl3B1UGRXa_dp78XwIaCGP-olzWtAhoNklcw2MlyDYauoIYAMqQU6cRAcXzoF-l6lihsSayWskH6W0mCA-hW01KA_TVoDUYcSH7pLNSkMaX7NeQac1oRvzVRGQtUeYi1EQ82CTjjIa4YiJ5ReyGBmqlmDUijzoBRCS1OEOqFgHAg-CYdQhg_hmeLJg_rDzXTBn-ky1g16-nNbogx4NLph12emHpK18GaSgjNXabUA5ccIBT2GAztfxmkgL_rkG_pmLXcmTV85kCmIBs26PXxZoabVXKZh9dWmbtTmY_XEbpV7bXAN5VeVe715NeXXiWV9fg3cgWEDtZ_19UYem3kLInw3bVxmZXXyNzdeoAlKetFo-0N5jclmjdqTd-mwN4GZpDiJlVdsmetdkPkhSvspOC14gwaUAmWQ-8YG1itmjDXghfbOasdZ4NBBkO8sJVC5D-kM4CfFZ4FqDgzot6ual2WDlXZ2FFdiwgL2aMFFCF9lgDOZRQsBZAl2h8tyKBngkCU6Hy3eoPHblxNldBDlxDQPYCNQRlmUNVQDMHbV2As3uMMXmUw7JYzD1FiFb1bEQcsNnnqw9WCYXzTVCMKeHtTGNe1vtdsP5ugtvsOhXBMH6UAjfFqxbzAAbsHa3DLqfdejbElh82ngDyUmHDX5UPBbbzY0Bnd7uwdsiubOnEQ8nQJEwIoNBAumYLfOAwt5YCi3-5jLdngctwrfQQzgHPaV3DyYBEsOJMKI0L6cFtxkQbpC4TOu5GAOPcH7nLRNGYZ-O93vSO01wSYzdA1rPvLhGceHuRAke2Wdj3JYctnT7Ru5PY97-e7-t13e9g3d4ATd9kADQG7kc7HuNYK9kyOCrny7bDHraLmXZvaXsf5-7Setmend89q7W-ZltyGT1etui0YenmySvebqlkPd72SwK9cPXnu_St3zLLq3YYTC9cHaV56vkg_V3-5iy7_3ZILEBAPtYYp4JZC9_5FT3mGXlnR5tDd9k0PCe2fn0PdTlg_5b7sXnEeO1-u7mzbFTq07UPlD3fMHbci8I-WLQ1motMPmEeI-bZV2XDvt7gdQxuSu5OwktxLxM2baobOLutcYbm1zWHYbZOyHABLZMR2tG2fD9Hlsuu83809eNGyoZKOE3jsAxLsnUhubZmWQ1HSr92TnaPZG2_A6oPAmyPMUnKjm21uwaAAEbjBDkZs7AbdWYve7nOG8PsiukmdPf0LekaRuoxwoBY-WDr95Kml7ZWcD7zerjpRvxum2eosFN320b6Je1JnekSGxsYjsqbmj300PZwPeyv-P5joWsi2r2f6s5Tz2esCY7wNk05wQdwE8txZID_RaZrWfWBernrjSXbyedB0JufmYd_M7zgswOrDD12T89m1Z_AAya7R_ADA4rPuYIG2FW37pju9ge5mACDgLczC7MLcRk_PM2yz0M9rPlHnhaLPcWSo4RgBOarHRCHDVVYFjqads7lG83p7vf3petc-xBd9g1HPPkzxpFLPgz6s9ROXc_A6_PXQP89W5Mbm096b8z08Y5LRYzBNgTmS8RPZLqS7ku4v1AOBOqbB3jsB1ruU70-NbHwVfbM2jdgiA13Hbinf-ZIW6i1NJJDZV4FAKL-WtCgKUGnMSenHndAPW3L_5m8W_L_24LbrLykAov-m08b1bX5ol7CDLI3ptnrE42mPEv6S3i85jBLyaPYveSxksFL8XmZYsbZTyLZ1bZ10q9NbK6S1s1P6ry88R3Hx-3Djjz7kBOGvOr-WOUWBryS_E39c3WttbhmxFMhwMr1cAyvKL99YojX1w2NQATY--HS7FgK6-AT84B6-kv9c-S8-v2r2m85eoc5DfwQPRktb6-aL9lejP4R5r60vVT_cu0vd1-QaoTpbxF1C2i9Y1aHWw7gSki2qD_daPWz1qg_fWubyTcUQW2WZZ1v1eS4efmwL3Bba3rHXrcG3RtzOYm3Ztxd3LmVtzbd23Dt07e5v14GybU3Rb_08ArlFuO8iu5oJO-63-tyKCG3IoMbem35t0u_W3DQLbf23jt7AW5vD94O_FvwIYHV5Qzd0XfsvG81Q-NGRd9I6EPqcydDd3vdyLf93qccgtaOd0M5Bp1QH3pGS3c9cJulNFd1-972jTeUbfv8E1LsqzQZjK8oP91wQ9ofXmT-_GzjniftueGZ2zFfnOZwr6M3OwH9WSmEJ6_BlndHz9UMfx3ogZ_V_ENWf4fmsY_qGn1fQnC199fWXCB-B_gW-Je7mVm_mAqDwUAUBafZ-0Z9FT7AA1vFHZmdEd7-nL5s3c_qIFp-oJ9BY8FFENFGQX564R8lnNYKx-J9RnwICJA3H7Cc3nhH2oep98AYgG3X914B0Ldo_ZX2R6Qnxv5h9dfQQFifLwCQErjU2VjvOnO7xAe_XOwNu_P-3XsBc6fCvnp_M-Bn5F02fJn2AG0mLnxoGd-zbt8fef1AIJ_b-r8CJ9BfpXyF_v6xQAAAkpBmK_iL4wMPPt-7QNBBo3x7dTvUmuetJ-gT1AMUDdebfdF95viQJJ-wAO7wl80fifkl_J-EAfp-mfQNZ77XgKCWkBXuc336U5fJXjK8BP7fm58RubX7b59-O39Sa2-6BhX1Ffchn5_e-AX6J8Vf-_oL5hfVNwO8KfFB0p_t9rI_29o-Y3xp_7dWn5N8QA7Nx1Vpf3Bcn3GfaXw99o-633V5W-73zkAFfa_sV84BpX1d_lfwn5V-C-WNt19BZn79kBPfbB1F-hn-9ZXeffr8Il9_funzN-pfc30D9Eutn4D-V3EPzHDAAoH_LfgfA91j9V3MwGKlOrkeoV_e90_bRf2PEu4FazeXF1ME8X_FeA97BTl7_1mXt_bqn6Xj_bZe39elz5fWXR_dpcf9jGRiu0t8v2_3q_ql0Zcv97lwr96_AA5zn5XQV1MCzeJV1AP6lz1ytV_gKZmaUWGDAB8l8VSNYL5pwuz3NUe_roSAASAxKXiD9RUAIL74FUUGH-7PPAPwB6gpJZTzsAE8KwCCwrgJVBaOzkKn9aOlUHgDZ8Sfyn_8Muf5VAiwAkRPB4AIsEmC4QRAFTBkwrACwiuAZMIAi5_zkPn-1_ZMMX9Z_Tf_X9VQ4sOLACRSYOQCOQIsANUAO4sIAjiwrAE4VJ_ThZyUTw7f85BJg_DAJEZ_8f2P-klU_8v_T_LkHP-VQNf3X9p_yf039l_5oGIQ5IrABPBQA5oOqFkwE_-f9OFZf7P-OQx_1ABX_E8Gf_iw1_0QDmgE8E4XmgEsFQkf_U_2n99_ThScKVfx_-E_3_-Kf1YAIsBABf_3r-5oE_-r_0Fg_DCgB0_1gBv_2ABgAOgByfwb-_DAgBm_3QByALgBE8Fwg_AE3AMqQVMcgF1KNvzKuz12U8_pid-OITAgrv1nA7v34A2fC9-tJQ9-_kF2e_nnn0oBhVO_AB3-yf2qguzywAJAEQMgvkIAtwAeAkgBGAMgLWiT5SFAKQEkAFMAZgIkAVM4gDrATtiJgQgEiiIfzD-UUF2eUQR305RWYBIAGX-Efzu-ggLwAYhCr-ZMFP-_kE_-SYHLiggNL-uzyD-gvmhqjIDvqhgMiiKJQJM6gBZC9J34AKlWIBEgFUBKQHIBeNR_Stvw9Mynm78NNwVMdAO3SjAK-SPyRYBktzvq3vxYBnALvq3AJGAvAMF8AgPsQwgNEBcAHEBNwBTKjwBkBgoxGA8gNsgSgPZgYQPUBAfy0BRgN0B4fy8BqICMB11QBSHvycKrgKkSbQP0Bd9Uj-IAGj-VUCsBNgLsBDgKcB9hSIBd9SD-5oDRAJAXTCTgBDiHQO0B5RV9i_gLQAgvmCBIABIBYQIiB36S5uFN0NMszTyAtAKAySAwYBnyRMBgDgyB7AP4ASYC4BJLjyB3gAKBuf0P-zwLvqIgKgAYgP4AEgIqB0gNkBNQNbidQOUBjkEaBfv0YAXQHUgJgJCmDwJBSHv12eAgD4BIAD6B2O0lKcABy6gvmIqcACIS7z0Yc_QISAgwIMBnQJ0B_AFD-7QJaBPgJMBGIJpBmwIJMcQBmAuwNdsZII2BvgOdA2wMCBggDZB-wNCBsqUgGUQKoBWNzLMlwOpqzvxuBbvz8qgvnuBdliRB_ADlBuQPyB_AM-B7ADlBvwP-BIAEBBUgKqBcgLBBigIhBUIIkAs4DxBOIP4AeIIJBggK5A8wIGBlIL0B7INaB9oOpB3gOMBMoP4A9INdBnIK2AswFZBwxkdBPgK2BAQL9BGAHUBsIKmAiQEF83wJSBeAEF8CIPlBqCWRBd9VRBgvgxBJAPDBjX1wq5oN5Bi9WKIV5Sn-C1RtBLQCjBuz3hBbAIVBpgJRBaILTBoQPCBpAPCBQoJOB7CRkgRoQUgPNxBMWgAlB9AP2BW5nUSa8Xjs7WTdKdRgr8dgAQKaVW_CX9iD-jBTAAMAB54ZEBqq6ZgigUiWWK_kCT-axRqq1sEDgG1SXBCQEYKMADng73FYqLVUV8qAC6AzwCLsSQUnBy4LUKYhFcA4WmyANVTdgU9ifMU4KeKM4O_--5QVSjYIJqX11kgytSO6lNU7BiA0lBoGXtAqAwcMyNxUGrV3BMbNXwGHNRpCatTmghoX_Bl7mZuvN32u-NyRuYNyJujUHraIwCTG5N2euQaVGASY1xuF10-u2ENzM1AFwhQgEmalS0IhHpmIhdEI8OuN0tCR5kXuTtU9uEYW9u2Zjcq18xBm9kS8g_ELXChFjncTr3WAB1jiMBQAUM1cVIs0I0BcppzFOPCU7qBbjq25IF_igdQ82R83geEXUkh-QCWmS7gq6Iu2Fc5Lz0h0SSQ-2CSNa0kNIgskMkSJo3uMMkLni2p2FAjkP5sTvDZmY43_GyowvG3Y3VGQYxvG8Y3s2P43gmfNlchw71Mi-rishIkIyAYkL1ero3uM77lEh8QHJe1AEShMUPiASwCd4ubzShRFhIsJbxHeCDwPmKrm0huLU12JkMihUkJnAub0dGBEOZse70_MMRh0cZWQqh-kKtmgkOpeN5nUhCbzshro0ahFEByhc7lMhwkNzWSULoOnkJNGfUIEArkKGhUUJSArkKfGG43PG7oxnGV438hMwAPGQKwfGv4w6hdY0ZMMbzjeillUhlFkmhdcSCcOH13qKKzl6SwAsiMoRF6_Ni86r3SmAJUNnqp7Wc857Sg6y3QO6Cvj56tPnh-zPjE-SPwj6X3yf2CviYhs5WoAMp24qvpimgd1mfcD3X6-QUIqWHhxYOlpx5g3p3VgbJ0Hso9iDOfsFc-VvhohJEKnssP0wCkemo65gCsORZ3Ki2FwsinvREgXHT-h99kR-8wHwCQMOJ-6Fzn8YMM98kMPL80MOAAsMPF6WPQTgikPpOHfVRhhMHRhSMM2iIsCdO48DxhugAJhzEPMAxMLH6fP3UCKMDn6ith-hIv0pCoVzl6Sl0MuFgAsibqScM3VgiCUex1-BQFQgKv3LSAgF6iBsMk6D3XbSwgCgA9sIehFXSdhrekMueVzAyFvw4h_HW_B0A1_BqJi1qKtXvMaEI7BiQJAylpWh8nEM2q951lK7LmDKbA0iAmNS4K8o2kK4kwmCn4MTeN1RyQ71V5KNwSmqoZRRq7hWjKRcNjKeBSHKiZVTKPgHTKOQFSKQxRV4FdibhSwBbhjhSTAVcKwAI5T8gCZS7iE5XiqRezUAe5SThXcIEMHYFGAe5Vz-JcCCgE8CCgDcIfCSwGXCS8JwAgsGmKFFUBOdFWAyDkD9AFgHcq21XsgK4WvivlVtKLtzv-IwCdKtJXeGrADwA2FT6qG5VDu153vhr5XLh5hTGq2ZTLhbRRUq-ZWkKAlXIAQlX6qtxXWACVSSqZwxaclUBqqpky_sq5QBGC1Xyq5JSGq8CILhgVjwAtfxfB7ZWbKb8K_ySJQWKqJTJqTZXKg8ZV9ifhUvhJcIiK2CJRKFEDwR6CIIR0hRsgdkEnhzkG5KBcPEiEoVoK1HT_hPcNyqS1XYqAEOw6BxyOAT5khqTVUnK1YDoRuZS58RAH6q-cJqqAEI262w3qqvpVCqYAAgqEUEDKKVVUR2ACiqswBiqcVWPBAENgu1pVzh65kdKx4ID6kpgUReUCURKiOrAyFWGy7ljoKNNTg-EoHKKgQAIANJToANVXmKFiLAqSnl_0OwCThi5Vjsy5QkhPkABG2cN7hPVW3KEAF3KT8PdiDFT7AAQMIsx8MvKZPBfKCYIfKV5WkRBQRfhqcLkKWxQMKWlSFAf5REKpCNuMpZUbK1CIqgmCJQK-CLLKvTyxB-8NyR7hSIqDSNIqa8PYq8xSkqulSvc05U6RClRjMXVRyRpSN8K-SMMKOxX0q4QEMqQSJhqCqWnKVP14KSlU_hrtj6OWIJHa-gACRU4H6qg1VlAdcOGROBWJgixV_KMiKT61P3ig0lTmRJyN4K8lVOAAyOyRSyOLh88LbhTyLIEjhUcgzhR_hkyIJMRlRgAG4Ld6jbUKa1YCERviJxgP8Pyg_8McKolWsglCPEREQEkRnJSYRtCPQKGNUAQaSKIRyKIRRB1SOq1ABOqedXOqxVgjAV1WHOESEcgbkEEc0cIyqi_SlspkWHO65lYA58JXAe8NIqvFiviD4JXA4JVhRTSIiK2NWeygVkOqnnmOqyIFxR5gAuqBKMki3QMvKUSBJRU0yfMkXQpqfCIkONPlMiyiM0RLAHDB-FVwKWxlQAn1QWssqKlsciOfBK4CgqKQBgqtADgqPQAQqAgG1RgLl1R95n1R8lRGCKIBwKHR1MiYiMKKycLhRGKIl2cNX0RQsWpRucKyRXqMBq8yOM-pkSBRHgKtRH0ADh-pVRGTJhoBVNWAh3YLpqZoAZqkEJau7hlZqPlw6uMwC6uotSIGtvQ5u1EFIGiRjFqp4BLyB-Rdc5YV-Mng1lqgZhWGZ12OuMJ2kGdN3Vqvgxrc4cPNCCNwoh0wyJuXfikSmLirRpwNkgsQL7R8QNTM5ENBu3aKoh4TVSs3QAxuz11tspBzIhXEEwh11zsACsIYhJZiYhrEKPS-kD1AToRnMZty1AlgHWMrUEHgUtymAe6MnMB6IaAR6PWM16OPRM5h1AAkSFKUUBgKkCRnMdoRFAOoEgSStzj-ZMHPRUBT1A0ECsqut0qSTE2vRt6L_sncDdu7ABD8LtR4h0YTUumO3mGjRkDuFkDrR3nhTyt0W6h2tl-WYVyBs1bmiuetgwOWUEkiVK33q3FjgepUJl2nblteRK392nL02cayyWulTQSeejXCuaEVnuUwCRql91YxE9wM8qBwYWrTi5-oDyDcTrkXyvlmfyuxjtcluTLRNrgrR7GIIxHEUExq-19RpdikxEmP5sGmMPy6AGmW3IMfAlHknCM226RyiNGA8nxRggdhMxv-lpGKQGBOsETbOBwAncpmJsxIoBBSM23JG6AC6WImJrAgdg8x25wJeAKQRebUDtWCzlQAoC2i2WgySCXSwwOIcD8xfk1HWekTixgWMrWTmOsxAkK6eFB1SxZmJnAdmOnqw8zqeS9g8xLEzqcPGKGgeBxJakWJJmDtk5mszQHMlWM8xpGKwAx60vREGIfRZtwfRT6JfRb6I_RIoC_RP6L_8SWILAdzjIxlHiKxdGyyxNmLyxDIHGxGQGcxBQFcx6SV0202MWaxSTQA_mL2AE2Pe2rYVpm-6MPRbWIaAHWOfRIoFfR36J6xfWNXMVwBaxe2PWMJs1ui2QHWxdM10aszRSmnzQuA6AEeGXGIPi-UGTsg2LxAojnsA-oGAx1lVtC4GOuxVz0SRrUF-xm5yuxN6OPRSjgo-7ySo-zDho--aJAuOAG08zHwTgVn3y8M5isx2WNsx7Z2rOeOJsxdmP3g2OKeMuOM2xM4AWxhACJxVOJSANOLsMZcHJxOABnM2z0lA1Z3ZxTOJY-UJxPKNAF4-iSLJxUJxhO1ZxhO_ulT6f5xbOV5yVCKRXqxVK2HOUOPUODMO0C20GZh4fX-hDfW98qP34A9oWHAFljXaKrmU8OPxPc7MIV8lBQRhePwoxtNnQMmh2JxBQFyxBNkYA66IphUF3bOCsKkMYgHMOnfhrccQMf2K3X28Bpg9xZcGWgjoDNAtnj4sN3mt65MNNx-3nE-2FwHCtMLJhnuODxduOpxIKUjxzuJjx-Xn6AqCXdxx33sCcPzf2XOPDxjAR3OGgQu-_nzVxgX1Zh_3W1xIABIONFgNxIpiNxmuJjgLuKeMC6KwuzcAG-oZxXcxB1hMXeNfgqgSt8DeO6ApvW3AhePHgzF2uO7AA1hZgG082sJVSoVz_2JlxsuJv1v66u1Xxavxl-e_RYx-sMV-e_QwO9aSIAjaQPxvsDwOx-NPx6-L36MJw9hLsLPxDQWF8--Ovxn_QHx4l24uOaV0gXsLN-PsOfS06RAOEAwoBwoORCMaOJqR4CIRIzieM8aNquyA13SDVwghYNygh6aLausEMqMBA26uCNyou8g0sArSI3OSBMlAag1r0mg1uiOgwRuWOVA8GN3_S-1wwxCwwbRwdzOuiEJ-MiJhCGzoDCGLwD_yxpXQhJaKi64Q032950rRJxg9AlXn2AOQ10g7EJSO4Qy4hkw0ZqT5lmGKGIBeSw3Qx9BMwxSthVsPRk06E9V9st7iOhBzW7s0SwjWHzXOhmrnsW5dxgeWKz82gxwsJgbnGOVGJehNGJhO9GLOun0x8moHgsg5BJZyBhMc8gdixiIuTB6P9QW2pk1A8Q0EjgxCymy4EV8J7QC164bTKeS9kCJxHmCJJkR8JoDgS6wEGS6K4BiJLqxcJxHlEciRIpAhO3ictOy4ekBMtyDET4J-8J8Wla3yOY20qJAxxsewBgqOALRrAYS0V28rQmOz8PCJLwHea5H1Nmp-35-a3hwJuFX3hZcGwMQ5jLgJ52AAMJ268sFVKBwAEgJ3XkbiU0EgJqKTaifSQhgfpi4AjZw0gl51_h4KOcgPJxYRNa22JYKJMgk8P2JWBkIsr_iryJ1mlxHZxwAmjWHOfpiRqgCWOJ_pWT-qJ1fgB70uJbbxuJ8JzuJSwAeJa0T8qzxMEqJxK0c7xNxhweNWJlBhGeQ0DieE_iwJNFwI6kuPmgfuK-hyfiTsQfURSSRNv8BRL6AiTjNmd3gRJH5xd6fpgTxlFxgm2QGJJwCHZmcJIQCRJIrx6nUBhGuK-8fF2f8KMPreZPS_8ahMoAmnUw84XTOJWuNu-00HwA3SNguEnSK6BMGFJCeNQukgHpJJMPXgmxO3ARJL6JysEEOkgAGJJFUugjgRnxc-PAe4BIJMDEUXxK_XF-_Fwv6QlwfxQVm1-KvwMuFpIsAyvw_xqv3thxlyN-uvx3xz_VaJW-PthRR0tS1pON-bpKZADRPMKFsLXx_pPTSVROfxoZO9hkIT_xhV31JgQ3CG1v2AJkkFAJ8Q1YJ70xquwBSsM9VzDxrhgPS5IVQJ2EHQJuaLauAtRIG_VzIGjBP8M6QzjJvRSXm7aL5u46MzMlEIhulmw3RhpgWm26LRgVJwAsiVmQs0YArxwsKmgfeMRhdJzH0VNldO_J1IMTVmFhuFiZJ_vjnqdeNbJFljvWbsSbxaQAU-0fVRxYAXemmOMJgLOIrOzW14-TVk7OS2OqJahlgCkuMLCj8JXcJ5Ma-DIHb8K7k1OffhXcPgHS6yhh2-rZLQCp315-o5ipORpLF-T5mFhEZP_6t_Vfmd-PthoCIv6NsPthmp0vxhxxaqf5IKuIVy_ssFMCYUZOAGMZPHyS80TJTYKDhLBL_A7YMAKVwJAh5KLGGT5hpRDpWDKL8PNAjKMug5oFeJaSNopO1WWeQ5gHhICOHhx4PEO1PkhG5FKMRlFNmqJCOMRbFOHCHFPTSE2KuANgE7AHiM4pYIygR652Yp3lX4gF8J7KQlOCqiiMaqYVRER_sEPKqhVtG7dkgK4higAtJgja8CQ8AcSPWs5mWQgL5iIguYDHB2lO0mqhVMp0hXoqqhVQKlAASqTlIPKDlOlsXRTIg2wBeA5oE8psyLSqG8LjhjSIxaylJdKp8JMR1YGTKolLscuBM8q1SLFK3SIlKgxLaRwlKHh-kQkhiSNoKUEVlKCQBqqgJ1yxvFJPhZPBipz8PuRcRRLGaQEQAodk3uvhXgSLAH0A2G2KImADqmIcGSppcLKqb5XzK_DHtKecHnhu9yjgcf1rsrMA7h0VN5cRVLzOjOK_sOeIyR4SJpRH_0pgFVPC-FVS_hNVMuA9VNmujVKiRLVJDgbVJgAHVPbgQ1JhWSwBtE7cIGgjkAGpnVPDK41Q_h61OmqlcMmp6sOmp0AFZxDhKfMeIPCp4aNMR4dTCpTKIipalMsRGlOVRWlM0ploFTSnHzHKbeiIAWqKQqKFUccDiIsMmFSSRAlJUp_FNipd8PCR0CJnAKJUfhnqIsAsiTVK3Fm-RnZRoAvlJ7KncEWpZRTUGziKXKsVVmAmVOSq2VOCpPdihe_5jQRFNNeqnJX8g3CPEqYdwMRX1MaMaVMQMOXXsycwAyAcQHVgoKJBJwlRwA_kHJpFoB5ppJU9RkaKAJJwOeuqD3FBCaKSBtwPdBpgP_RiIMTBLAOCgxQL-BpQIBB5QN1BIINqBhoIaBKZiaBmgJGBeoGCgVUEr-4sCgAF_3oEgCGvKwUHLibtLJ4ZJX8gEALqKH_2qgcfwGq_kHb--fyfKi3H7-sPEag4dOjpydJjpm4R9pgsF7-_f1R4XJWFgpJTu4K8P8gL_3C0LsJx4ADmCgjUCfKCAKrpa_1r-mdIb-A_2jpF_zeRnJSu4vtOp4ldJXhBYK7pa_0DpZMDL-ffzEIwdPIApJT8IU8OCmy_1r-cdIlgk_wlgSdKjpkdIjpO_yqgpJWvgyJF7-nJVR4sAJLgnJTu4sAPC07dP8gp_wAcfenLpndOrpK8LX-LCHXpff1JK-fwVpL_zeR_fxT0F_w7pVdO7pk3F7pR_zJg5cSfKa9L_p0dLdpftNYA_dOJBp_yWBB_hWBnYBCB9YKOBpV2RC1AKZujv2Ip3YOSBZYONphADjBLwJ4B7wNVBzkBnp8YM1BltO1B1tMqBttINB9QJUBjtOhBzQJdpM9Lv-EsHLiU9In-9DNwgYwIYZ6xkcgAkUcgmfzmBK4RJBzoKGB_DPAZbxkF8UDLWBBwMFBGtMXSz1z9KOtJgJUoKYBBtL945YJNppgLNpOQNeBKoJAAO_1n-nvx-BJQLKBkgLIZ1QLtplDMhB1DP9-ztLu-E_1JKmPBsBCtLqKeALABwU0fgjjOCgUABYQbMAkI5oGCgXJVwBv_zX-AAMm4P9NVpj8E5KkcH8gjUGcZ7f1sZwUzEIfDLcBgjIDBB_ipBQjIWBEDLEZGMFWBMDMOBUaJFBJZmxu6sHkZmZKYA-tJ6BLAMDCGDNBSaQPNpWoJ1BJjP1BCgPMZxoI0BBYBdpqf2TAbMEW4Vf0qgnDO4ZZfz8ZEhFv-6xhYQvTPWMQzPkEAzLAZpIP5BsDPyZCDI9MYP1HRkcJd-5TNSBIAHjBmQM2Z2DLeBaILT-BDLqZxDIaZwINMZFDKNBljLaZeIA6Z_DCgA3dIng5cXwZAzKIAbtJ4ZlUFYAEsAmZ0zNtBAjJAAaTLAZiwNEZ_AHEZuTKkZkQNwpbtVhuuwW2A9ZKAhCjPRB9H22AjH0QMvFVnAL4OvBXVIiK5SNSqkBVtui5kFu9gCxS7ABAxtlUnM9lXYqiLORZrlTuRj1KEKalUxZtxk0q38PWAw5wZZapXTh6NKipqlNER0KKoK81KzhA1TSRQKLBpEVU0RjNJTKeYF0RbNODRtn34qLxNEpFFUpZnH2ciF0EJW6X2B-NP2nKSrJcqXSIncm4RlZyQEAp8rIhRC4PY-SLOVZ-rMuRxn3s-MlW1Z_1V1ZgXnVZpyIdZAiKZAxrPARx4LtZ5iLX8hiJPhF_z5pH1U5ZGSP9ZaSO6qtBSiRMSJ7QMVMVZZrKpZm4TX8i3wxA_RXORaVS9ZKLPm-afkTZy32uRilS6q3gA1C48JGADCNz-gUB8AjyJeRzyImKA1XjKwCJEprNJjZ0LLjZF83IMtrNjZFrLlMldxQpvLMnhIbMDZwVL5RxRgFRlAzOqwqPxRhKNzhd1R5KZKLTZ1LJRgYaOCRgvxwpP4MhZ0gCyAocPhMsLNWZYEBwAP0IgKW5jrKQJX9KbLNZKFNMrKDZXbsdlOOA6lP9KIrI0RXcNVRcJnVRAxjhpySORq9gMJpf0Vsg6BX5ZJJX5p05U5hafiyqgSN-pXkFCRnCI2R4bI7A0SINg4SJcpx5VyplqKDZEwV7ZzCLWplVRWRuFTWRNAGcp_5T2R2LOBpPiNvZRlxOKJqJ5KBsARAWFQRpdiLQqW8PNRlHNipiVIPhx7JaR6VMug7SPEqAHMkqNFVzARrLlp_VUhRXkAQ55oHyp0yJ-RpiLwh4MPsgKbPdStEMk5ObNuRhcKqp5hXLZzcIrZLyOH07yIDJ_Pi-RonKKpYMUER17OERkVIyRT5QDZqHKNRpHLNRFHLRpNiMRp9iNquqNMQqinNpZVQWPZBrPKqlVWZZwmRKRx7JOKhADOKgMWwqItLNBdeQlpsIGlpYnK_B0jN_SRELwhpEOQZXYL1p0oIqZpgKqZ6SJqZOzM0ZODP2Zef3wZRzKMZQIL1BoIOaZFzLUBNDM0BroNmZDIPFRsYP4ARtOOAFgJCgUACLp0dNa5MzP4AHgNBZZAIWZkkFi5tELpOJTOuBZTOS5GzJYQqjMwZ_AHjByoNwZOjNy52Dny5VtOMZpzKaZ4IIdpZXKsZBYEq5yTPWBXQJMB9XJdpggOa5OSByQ5oGyBwjPcBThi65DYOi50aKDhNAMIpppRQZFpRD8ebNHhZUABGYbN8K1QBXK8lIPhbjiThEiM5RjJQ5ZgKMM5mlNoRvLOoKgPIhRaSO-pgNOY5qVLh5bHOkKxNPXZZNL5K7AFrZWVPFgF7J-KFFQXxB5LoxX1MY56PLZpIfh9ZgyKU5QPN8KTLM6KphUfuEHOlsIHN3hYHPXK4SORRiCOcpOlPg5p5UQ5ZPLb8a_nk5s7JeGUyJA5-PIF5VFR2KiyJc5r8LupX5U8KBSK85gVjX8qKTCeBnJBpN7OsRFgDBpspXCAlAEgqJHMSqpqPI5FqKC55RnNAFnJvO7ZxXKrPMnh2yMZ5vVWzRmcMWBUHJiRkxVDZeZXZRkQHxpSoRd5O5Rg5CtL_ZaVQJ5xeNV5nVU3KfcOTKiwJBSfvOg5_VTM5DvK95b_35ZsfLd5gfL7ZFgFsRqFWRpBdXYRLiNHA7iPhp_PP-CrONTxDOPTxYfKA5PVSj5KfIjZMHMT57qOj5pxTr5CrPYqBPLL5uWMr5ebMj5nV2d5LfNiRn3Kh5sKJ95FoH75n4OV5nvkCuM6M3hPnLl5JZTKKIFTB5RHIsuhvOmJjnL55mfLs5NHMcRdHJs5OcJPhnPIj5PVUzhWyPyquyOPZ-HJ5ZX7KoKJ_JCAevId5NfJj5Y_PT5qHMH5SfKb5_nOf5CfOPB7fPpxs1Kn5pByr5kHP95rfPEq4n0nBaiLv5EQAh51_JH5_VUFgaSIPZVZT2RSAvPZEUEqR1PJPZytJB52vK7KJCOPZA5RBSxSNUKF_IX5ZvItAIXIvyYXKlpFIBqqv_NmxaWJyx7Z03CmcPXRT5ldRH_IFZCAr7Z4vJL5lOIYF-OP_5_LLYFUKNgFP7McK3AtQ5lArhRfAyyAHMHeeTvHap7HOnKIfNDx6kHwsugAgFLNOcgYQGgFP_LbRM5j5xpMEQAV01dZpuRRpcoB3hCSPjhQNIfhMuJXpbkAB5HKJacs8PBpw53Z5JCPCRg_Ly8adUKqR4JuCeZSJRM8KCgzkFcFDvPpZc_I0qCvJ_KPhRMKHYEfumYMQMWHIj8qyN2imYDxByQrEqPXNYg86Lfxg3JAhaDOUZ6QPS5HAN2Z2jMKBQgIMZFtIK5NtLOZJXLW5hQHK57TIsBkxUW4wUyiQAkQv-KvH6Z7QsFgKCOvK3Ql_pZJQz4_DC6ZKhAlgLsMW4cdKiQ_QuiE_dJDAuPAQB2fAAcO3AgBYhAmBYhA3pZJT3pA1SngwUyf-CtNh4m9JwEsAN7g9gMr4sAKH4fjP8gsPGzpESEOFnzK6FE8HIApwomI_DFgBGfFgBZPDFgMfxOFDwtOFW9LJKT9P-F15TngsAJuFfel-FhAPa5fzIdBPzJEZywOyZ0DLmZeTJu5BTMNMW6IS5utJAyhQpS5GjJKFlTLKFM3LT-gdLS5RDJqFjTOK5q3KoZ63KuZDXKj-K_xmBJ_za5O3IpBsIpdB5ILdBKXLMB8Iou5xVxRFYLOOBy7MZMYBPnAoQyWJD3LhZpTJPB44ABp-FX-5SHPeGq1J15rNJ9KGvKM5iwVX5xvOERwnIwADvPEFXCKGquyJU5rcLU5VbLJgygrSqIzntR2kwtAr0CAFvhVv5hop2RfgosKVhUrZpovNFloplFUwDX8MlRGcV7I4ApVJSRmNJZ5nYDCR5Aot5JHPX5GcISGglJf5kYukF1AvogtAvWAqPLW6pPJAis_OLKxxRj55XkC56Au5pGCMiFqNWZKp_1qRFSIpp3ZSip1NKVpcQsPZmAtQFiQG9FAYop5NLPQ5unKP5_RU7FN5m55VwCzsRe2ZpoCI9ZbNNbFVFX6RwvL1mUyPH57FTHFnFSl5gFM-RzoHiphYGzFJVXuKZAvbFG1KiAtVO2pOjkCpe1NHqIcBz6R1MGpgxWsKZos9Fi8N2FV1JupJ1PPFHosAQ6nIGgxiKmpmKP5R2KMFRI7N6yl1TFRw5z8IUqLJRAYrosFnKN5ZHJjFHzR9FFd00cdFmRRbnJwFPmLjFPZXglNCLYuS7N_SwhPCAskBARGZKG54JnAylRkgyZBI5a5NyoJwwyLyEEQMRzNnoiSdh06eRNolB7QLaDbg-xYXUgK8AHJMUwFiidNI4RbPI-clAFQK_924l9qVz-Y4LWGoVkgSQQG2AUUCIAydgJRbg09awhltF5a3vSLmx1yEkpgAtbl0yNEpeAzDRGp9zReSpsxq-WXQgi-F0p6nPQf2tX20lPnhy6BFy1ABXXNAlkvUlmktMlj4DslFkpFstgEUl-kFjyJkpsllPRIu-dm3hc1mKAUb02cp70qSlgF_RdFi16VwDC8cAC8lEwTYCad3ki1-SDgVwHNgc-xdafeW9gxUQyuFgHp6yNQ8l8UodRiUrAARAGOsZUsBMSXQRgJ0GSQfkuDg48HNgygL06Q-QNAAUszie5PXMLUs563Ural2Uo6lpZ2XChFxdgQ-VHy3sDzgHUrylc4A0lsUofsxUttFQITKlnfVeylUrh6Omyo8Cmzzg9UvSlKcEGUszDkl7DTFhr0Imsp4Ccl0ksQaVku5O-8AOllziOlb91Nmp0skl50pul_NmOWah0rgA0vYAk0vjgaRlmlv03mlKIEWl5Uohgq0sX0tni_420vYAe0r3Jd3Hu4Kdk7A3eValo-V7y40t2lzUvhlOQBHyrUtRljUuEEGMpQyI0q7ylUBxlfsEylLQ0JleoBJlhMG-lK4Agcf0qMcAMtKlwMvgMlUogcNUosgdUu3yDUtJlsMr06nYExlWjVGlJF3Hy5sHWMM-U-lFgDJlk-TFlLsH5lBMs-lNMol23mxGclKXryrUHCljtwHu2JM4cgdj8l6AqbsgdggAakU4AndhVl2-VMl56xocdDiNlxkVw-fkuQC62LNlqUotl5sAgAmUS2SC23zaobQr825yGg9srWxwc0VWfktagTsvryLsrdlTHlei3TyCclOUZlIcqTsqsuiAMQQSlL0pdyUoGCSicobyccoJsfkqalxUTugucrJgxUQleqUvOSKeTehquKZGzQFqSmcosa2_VIq-JJrl2-VTlffislLkqblqUrfA6FKN2p4FKJv3IryWnKgOEK0Hlms3UsI8uv07pK1-cu22a2SI6JsEUlyPORfu1WKUaujVM83pI3CTLWsenGLEly2WXlOjRUaa8sDJG8sg2R-2MyKjmvA8djD-QpVug3iW82RABv8Ix3tAx-TfqL9xOcHjjOc2JLTlqjgflM810yWrTWeS-iNyqjXollzgWsaMGKJpdk4c1zi2MDERFCluXac4xwGgQ0E3lP3gp2ufxJKYkp0ikhLucP8th6rEQJRP8orcICq-cekSwV7BJFCyzRjsVkqTChCrmyV5ymAayx6OwyUulC1mIcikSmASvmNlnCsYAckKslcAHbsnCttlF0MVyEEV5edzhMlPkHeedErnln2KwAYiosJe-yslcry4eGZXEVSdhclIcBjiMUqylKMtZaqRIcgJF3NA-XUrg7iO2ABir7yRir1A5oC1Adksrgv0p0VC5ksV1itsVom0OA5it7yTipsV5oAnyOsDUM5sG1lXRJhcPGIsgcisaMlHm8xyst8JHkraJo6zzgTxIIiQsRFalEqFiL0ukVXEQYlqk0uWopMSV7ACMlvcqTssF1SVYRPSVLwCWA77iscQlQf2rTiP8wWVq-2JPkAxQFBa6lzblij1uyArU8ioivXS59muaiDSwcNOzxJkj2sWxGwycKjjOiwbRZCkw0CA10RRAMY12AiRWCASyx2A10WZA9tjSMFjk6J3TyJp4Q0jihMQjAJuWBi-RNUcnSs_SKMDWWoSpOVO0KVW6yqDguNSFFgcJXZ-FL8KdZMlFW7PRB70wdFmYr7AtvIH5QyOPZtPJmq3nJIFJYvcKl_LVFhHK15IQC1F4Et35TnM351HJz5ldWs5sKusF4VIVFWNIlZIlQ950PMxVGfJ-JuglWpSYsSF-IKyATEwjKUbKrhfcK_5aSJpRwUw95o8L8AAo2LZEsBCFboqGKw1POpY1OCmBZT7Fqjl0q-lP3Z_EWMpGdlMp5lKOAllMQM2wxspOQEvZcHMZamQEaKXlPiRblI8p8qq553lKuAvlI8A_lItAQVIsAWPJZpZMGwqJPL2RLHM1J1AEtFxgGnK700QAJgu9i0vI7FSQRw5O_OugVgppRjgsVFyJClRP3JsFaKswgokrSq6ZMJ5sXi_sSPM8qYvPYq1quk51qonF9qpUqmAv-V2lXGRHyO05y4p7FvKKxRqABxR34pFR47JPhAEtJRX9nwAS8z9RfrITFaEsAJ4LJkZHpg7JWIvhZuItG5xQu2ZY3KqF9TNIZy3KpF9tJpFjQo251zLu-0dMqgTIof-OSCIA6oUFgQ6qLps_zO5W3PZFQjK9BJgJ5F53I65l3IFF3XPhC-UG2AibUUg1AFeVT5g65OXn4AVwC2eRYD-ApYGE5WAC6MsAEyg6wH4AE7nyA3PkPVOjLZgbMCvV1YH4A5QGTqex1IqB6qvqIAEag19l_AZ5gvV3QEwAZIEoAg3RyAeQGuiqgx-AxYGqAoIBAAvsH4AlBW_V_ABwlmgBfVFgDfVwdi0GukBrC36rosb6sMgKGpAAAAD1V6QNUMNTWAggZqBiNWRq_GcsKqmfHB-AEWS9LEgAf1WRqP_n4yjaUxqdAOWTEjLRquhdeVKNZhqQAD2ZaNXYzgpsJqf1WNcxEp4CH1SRrlqc-qENSuA31YtctUsRryNdkCeNbQMWMcRrBNdxqVNSABOBv4AFomxr-ACRr7AVdwBqt8CeNaoM8oLXpaNYLAn1RLwpNdRqzQJaBIgOJr6NTH9T_ADl38iercALoBIANkFNANuqnuSBkrICABTUSyZjZkgAtntelyiqoNZgPvYFAAoB1DEAA`} mdxType=\"Playground\">\n  {() => {\n        const eventsMock = {\n          start: '2014-01-01T00:00:00.000Z',\n          end: '2018-12-27T00:00:00.000Z',\n          offset: 'day',\n          series: {\n            labels: ['encounter', 'fishing', 'gap', 'port'],\n            counts: [[36, 36, 24, 16, 16, 8, 22, 28, 22, 26, 36, 32, 68, 40, 30, 32, 44, 52, 56, 18, 34, 30, 32, 32, 24, 26, 34, 24, 34, 30, 62, 36, 26, 38, 26, 26, 14, 26, 26, 20, 32, 36, 42, 36, 22, 32, 32, 34, 32, 38, 38, 22, 28, 22, 12, 14, 14, 14, 16, 20, 10, 18, 28, 14, 28, 40, 32, 52, 24, 34, 24, 34, 24, 34, 22, 26, 28, 12, 16, 26, 18, 12, 14, 28, 32, 26, 28, 14, 34, 14, 14, 20, 22, 16, 16, 16, 22, 28, 20, 26, 20, 26, 32, 54, 38, 20, 38, 22, 20, 8, 16, 16, 8, 4, 8, 12, 12, 16, 16, 24, 18, 12, 20, 22, 22, 36, 40, 20, 42, 18, 16, 26, 28, 38, 26, 28, 12, 8, 10, 8, 8, 16, 16, 16, 24, 20, 20, 26, 8, 24, 10, 16, 32, 22, 6, 20, 18, 16, 14, 24, 22, 24, 22, 16, 14, 14, 28, 20, 24, 16, 14, 20, 34, 26, 32, 16, 20, 16, 22, 14, 14, 22, 24, 20, 10, 12, 14, 14, 24, 34, 32, 32, 38, 16, 20, 24, 22, 26, 22, 10, 18, 22, 12, 24, 14, 14, 28, 26, 30, 28, 24, 24, 24, 10, 16, 16, 8, 16, 24, 20, 30, 12, 16, 36, 20, 22, 12, 20, 32, 28, 32, 18, 32, 8, 6, 26, 14, 28, 20, 18, 22, 18, 16, 14, 14, 6, 18, 22, 14, 10, 18, 18, 20, 14, 20, 26, 16, 22, 20, 10, 10, 20, 14, 20, 16, 10, 26, 18, 14, 20, 12, 22, 28, 16, 22, 26, 12, 22, 12, 14, 20, 14, 12, 16, 14, 16, 12, 12, 14, 32, 26, 36, 26, 20, 44, 22, 28, 22, 24, 18, 12, 10, 24, 20, 32, 12, 22, 18, 26, 34, 26, 18, 16, 26, 12, 16, 12, 10, 22, 18, 30, 22, 28, 18, 20, 16, 14, 10, 12, 8, 14, 12, 10, 10, 12, 8, 12, 14, 18, 20, 28, 24, 38, 18, 20, 6, 16, 14, 6, 20, 6, 8, 16, 8, 24, 32, 36, 20, 24, 22, 36, 36, 40, 40, 34, 32, 28, 34, 28, 34, 24, 50, 70, 54, 46, 20, 46, 40, 38, 44, 38, 38, 40, 20, 24, 16, 30, 52, 54, 34, 42, 36, 24, 24, 20, 56, 30, 50, 30, 22, 26, 30, 20, 4, 20, 16, 14, 20, 12, 22, 34, 34, 34, 30, 36, 42, 20, 20, 12, 14, 20, 8, 12, 16, 8, 26, 26, 20, 24, 20, 20, 24, 16, 38, 20, 12, 10, 14, 18, 8, 2, 14, 8, 0, 10, 6, 18, 18, 10, 12, 10, 6, 14, 4, 18, 20, 24, 24, 18, 22, 22, 12, 6, 6, 8, 2, 0, 4, 2, 4, 2, 10, 12, 8, 4, 6, 8, 6, 8, 6, 4, 4, 10, 10, 4, 8, 22, 22, 10, 12, 18, 14, 6, 0, 4, 6, 10, 6, 8, 12, 8, 2, 16, 12, 4, 2, 10, 6, 0, 12, 8, 14, 2, 14, 22, 16, 24, 18, 20, 36, 18, 12, 10, 8, 16, 0, 0, 0, 2, 6, 2, 6, 4, 8, 6, 6, 4, 6, 2, 4, 0, 6, 6, 4, 6, 8, 10, 6, 12, 16, 10, 4, 6, 2, 8, 0, 6, 4, 4, 10, 18, 16, 14, 6, 0, 8, 2, 8, 14, 12, 10, 6, 10, 10, 12, 20, 16, 28, 8, 12, 8, 4, 2, 2, 6, 8, 4, 8, 4, 2, 4, 0, 4, 2, 2, 2, 2, 0, 4, 4, 6, 14, 8, 12, 18, 26, 18, 10, 18, 10, 14, 14, 14, 4, 2, 2, 4, 2, 4, 6, 4, 6, 22, 8, 8, 24, 14, 6, 8, 8, 8, 8, 14, 6, 18, 18, 16, 32, 24, 52, 18, 18, 8, 4, 2, 0, 4, 2, 10, 14, 6, 16, 14, 6, 18, 4, 12, 10, 8, 8, 12, 8, 8, 6, 10, 18, 10, 6, 12, 6, 14, 4, 16, 10, 4, 12, 14, 12, 22, 20, 14, 18, 20, 8, 12, 18, 6, 4, 10, 10, 16, 14, 14, 6, 14, 14, 6, 2, 10, 12, 8, 4, 8, 6, 2, 6, 2, 6, 4, 28, 10, 12, 20, 30, 24, 24, 32, 30, 22, 16, 26, 18, 18, 24, 14, 20, 30, 22, 8, 0, 16, 22, 18, 10, 24, 16, 4, 8, 12, 10, 10, 10, 8, 8, 20, 14, 18, 24, 24, 28, 30, 20, 40, 36, 32, 56, 54, 60, 56, 28, 16, 28, 30, 22, 22, 14, 62, 40, 42, 68, 60, 56, 64, 32, 50, 34, 14, 24, 20, 24, 38, 42, 60, 46, 52, 42, 30, 28, 12, 16, 14, 22, 16, 12, 18, 38, 16, 30, 24, 16, 20, 10, 14, 14, 30, 30, 16, 30, 14, 50, 52, 64, 66, 64, 54, 44, 46, 52, 52, 34, 40, 30, 36, 28, 34, 22, 34, 20, 20, 20, 22, 18, 16, 30, 16, 24, 28, 22, 24, 34, 42, 50, 62, 44, 46, 44, 34, 20, 32, 32, 20, 28, 20, 20, 32, 20, 12, 16, 16, 24, 6, 18, 22, 26, 16, 12, 22, 10, 18, 38, 58, 44, 44, 44, 44, 24, 18, 14, 12, 12, 12, 10, 18, 10, 24, 14, 18, 22, 10, 20, 18, 18, 6, 22, 20, 26, 10, 24, 28, 24, 34, 68, 32, 28, 24, 18, 30, 32, 16, 12, 24, 22, 10, 12, 36, 28, 52, 28, 14, 6, 10, 8, 16, 10, 12, 38, 32, 34, 24, 28, 46, 36, 32, 38, 18, 22, 18, 14, 20, 24, 16, 20, 10, 28, 42, 36, 30, 20, 18, 26, 16, 24, 20, 38, 52, 40, 34, 46, 42, 24, 48, 62, 60, 76, 30, 36, 32, 42, 32, 48, 30, 32, 42, 32, 22, 20, 14, 38, 40, 32, 46, 32, 42, 22, 30, 24, 24, 30, 44, 26, 38, 28, 6, 40, 22, 32, 28, 32, 44, 48, 38, 50, 92, 50, 38, 44, 42, 22, 30, 32, 34, 34, 72, 46, 60, 28, 44, 76, 78, 72, 60, 68, 72, 32, 24, 28, 38, 32, 42, 34, 38, 44, 22, 30, 28, 20, 24, 24, 16, 26, 28, 16, 16, 26, 14, 28, 44, 48, 48, 36, 32, 46, 24, 20, 20, 20, 24, 38, 50, 24, 42, 46, 24, 44, 26, 20, 30, 16, 18, 28, 22, 20, 18, 36, 42, 42, 34, 60, 56, 54, 26, 52, 40, 44, 90, 66, 78, 70, 58, 66, 26, 42, 38, 58, 114, 122, 120, 90, 72, 38, 80, 60, 62, 58, 58, 30, 66, 58, 46, 34, 50, 26, 46, 32, 40, 26, 18, 22, 98, 82, 118, 162, 130, 94, 128, 80, 54, 90, 138, 140, 144, 98, 150, 140, 150, 166, 118, 128, 112, 96, 62, 26, 36, 18, 62, 36, 76, 44, 54, 32, 36, 28, 26, 28, 24, 20, 22, 12, 28, 24, 14, 24, 34, 32, 32, 30, 38, 30, 30, 24, 20, 20, 22, 28, 16, 28, 34, 26, 10, 8, 14, 16, 16, 22, 20, 8, 26, 18, 24, 18, 18, 12, 16, 18, 32, 50, 46, 54, 38, 38, 34, 26, 22, 26, 32, 26, 30, 22, 12, 18, 20, 12, 28, 10, 14, 16, 14, 16, 18, 24, 12, 26, 32, 24, 60, 90, 62, 52, 34, 32, 24, 12, 12, 10, 20, 10, 8, 22, 12, 22, 20, 8, 14, 10, 16, 14, 14, 10, 12, 14, 4, 14, 28, 48, 42, 42, 32, 24, 14, 14, 8, 10, 8, 18, 20, 30, 14, 10, 12, 16, 28, 26, 18, 10, 16, 20, 18, 12, 20, 16, 16, 32, 38, 50, 36, 48, 32, 32, 40, 34, 26, 16, 14, 46, 40, 48, 12, 20, 14, 22, 22, 26, 30, 24, 12, 44, 36, 32, 32, 52, 48, 40, 48, 80, 96, 60, 74, 62, 42, 26, 38, 18, 34, 44, 36, 36, 26, 34, 30, 14, 10, 18, 14, 18, 18, 4, 12, 18, 20, 24, 28, 32, 50, 62, 82, 78, 72, 58, 58, 68, 90, 68, 22, 32, 22, 42, 22, 26, 70, 42, 48, 40, 42, 36, 30, 32, 14, 38, 38, 44, 46, 44, 42, 76, 70, 62, 48, 84, 28, 42, 34, 42, 44, 38, 56, 62, 86, 56, 62, 90, 64, 78, 82, 50, 54, 50, 46, 42, 56, 46, 66, 100, 84, 106, 68, 56, 38, 36, 24, 40, 50, 34, 24, 68, 48, 40, 50, 38, 64, 52, 50, 36, 40, 52, 62, 86, 48, 58, 46, 48, 38, 58, 64, 38, 54, 48, 24, 28, 24, 36, 40, 16, 32, 32, 22, 36, 54, 56, 70, 62, 48, 30, 54, 44, 20, 42, 44, 40, 36, 50, 24, 42, 64, 54, 40, 22, 32, 26, 32, 42, 52, 80, 74, 52, 30, 58, 42, 34, 72, 66, 64, 68, 72, 72, 64, 138, 144, 146, 140, 166, 126, 134, 118, 130, 82, 54, 62, 64, 70, 68, 52, 32, 28, 54, 62, 70, 78, 84, 68, 54, 24, 40, 38, 40, 26, 42, 36, 36, 48, 26, 60, 64, 60, 48, 46, 58, 78, 88, 68, 54, 42, 66, 46, 38, 64, 40, 38, 36, 32, 44, 104, 144, 146, 100, 64, 30, 24, 44, 68, 42, 84, 62, 58, 40, 24, 16, 22, 24, 30, 28, 22, 38, 16, 14, 20, 24, 16, 18, 16, 6, 18, 16, 24, 20, 28, 22, 32, 54, 72, 96, 78, 66, 102, 52, 28, 26, 16, 36, 26, 24, 12, 18, 22, 18, 16, 14, 32, 10, 12, 16, 8, 14, 12, 18, 14, 34, 34, 54, 70, 64, 68, 52, 38, 36, 26, 32, 32, 18, 36, 34, 14, 14, 30, 20, 34, 78, 30, 16, 20, 12, 26, 12, 22, 20, 32, 20, 26, 86, 68, 68, 68, 56, 56, 26, 44, 54, 54, 40, 56, 28, 42, 42, 50, 36, 40, 58, 32, 42, 18, 40, 34, 38, 46, 34, 80, 82, 86, 58, 64, 78, 64, 46, 48, 52, 30, 40, 64, 88, 60, 50, 42, 38, 36, 20, 30, 42, 34, 36, 24, 34, 46, 54, 50, 30, 54, 44, 86, 84, 96, 78, 58, 58, 40, 48, 38, 60, 74, 84, 66, 52, 42, 44, 32, 52, 52, 48, 42, 60, 50, 48, 68, 46, 60, 66, 68, 92, 96, 104, 80, 104, 104, 80, 68, 50, 70, 56, 66, 56, 36, 26, 32, 30, 20, 40, 46, 36, 44, 32, 30, 28, 36, 44, 52, 76, 34, 40, 54, 58, 70, 60, 78, 64, 44, 48, 42, 26, 52, 62, 62, 60, 38, 46, 62, 46, 34, 28, 36, 28, 22, 56, 40, 58, 34, 44, 56, 54, 66, 72, 58, 54, 40, 56, 38, 32, 42, 28, 40, 50, 20, 20, 32, 38, 26, 34, 26, 36, 42, 54, 52, 56, 28, 20, 24, 36, 40, 54, 76, 54, 44, 38, 56, 50], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1414, 1343, 1385, 1471, 1444, 1477, 1321, 1405, 1383, 1388, 1426, 1458, 1514, 1504, 1527, 1517, 1599, 1513, 1486, 1500, 1247, 1435, 1547, 1498, 1378, 1407, 1443, 1381, 1401, 1357, 1414, 1093, 1004, 859, 979, 973, 1038, 985, 1059, 1154, 1306, 1483, 1509, 1482, 1527, 1591, 1616, 1607, 1581, 1543, 1469, 1453, 1419, 1392, 1403, 1533, 1621, 1625, 1653, 1658, 1625, 1607, 1626, 1634, 1637, 1573, 1546, 1472, 1473, 1501, 1527, 1580, 1627, 1791, 1894, 1933, 2013, 2272, 2378, 2425, 2381, 2328, 2343, 2283, 2298, 1989, 1862, 1851, 1756, 1811, 1985, 2213, 2242, 2316, 2370, 2305, 2318, 2243, 2308, 2425, 2385, 2534, 2597, 2570, 2624, 2587, 2652, 2631, 2709, 2631, 2654, 2681, 2674, 2571, 2431, 2414, 2483, 2444, 2372, 2482, 2377, 2227, 2150, 2104, 2150, 1999, 2145, 2244, 2288, 2382, 2508, 2591, 2526, 2587, 2613, 2587, 2610, 2615, 2586, 2581, 2574, 2618, 2566, 2582, 2638, 2699, 2676, 2855, 2812, 2719, 2686, 2555, 2328, 2253, 2189, 2066, 2065, 2156, 2076, 2155, 2176, 2130, 2048, 1903, 1870, 1842, 1798, 1719, 1678, 1629, 1623, 1481, 1446, 1601, 1597, 1588, 1633, 1588, 1580, 1520, 1457, 1475, 1453, 1410, 1409, 1355, 1369, 1496, 1618, 1688, 1776, 1800, 1813, 1894, 1977, 2049, 2029, 2060, 2082, 2158, 2208, 2255, 2326, 2245, 2172, 2150, 2274, 2162, 2028, 1986, 1885, 1796, 1829, 1842, 1861, 1870, 1928, 2018, 2030, 1733, 1754, 1802, 1864, 1836, 1864, 1885, 1929, 1876, 1902, 1929, 1932, 1952, 1926, 1901, 1820, 1859, 1763, 1777, 1696, 1615, 1606, 1562, 1568, 1562, 1559, 1611, 1547, 1583, 1646, 1553, 1446, 1550, 1564, 1591, 1577, 1593, 1582, 1537, 1707, 1728, 1631, 1736, 1694, 1723, 1707, 1680, 1713, 1722, 1577, 1581, 1538, 1538, 1563, 1599, 1532, 1600, 1616, 1443, 1704, 1639, 1766, 1797, 1875, 1825, 1861, 1904, 1888, 1931, 1994, 1997, 2008, 2047, 2036, 1931, 1897, 1847, 1854, 1881, 1846, 1650, 1627, 1562, 1532, 1536, 1556, 1522, 1564, 1694, 1788, 1957, 2006, 2190, 2314, 2308, 2246, 1881, 1860, 1804, 2131, 2167, 2058, 2120, 2154, 1863, 1885, 1891, 1950, 1903, 1778, 1757, 1672, 1597, 1561, 1612, 1711, 1790, 1855, 1942, 1888, 1877, 1924, 2030, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 23, 22, 38, 34, 22, 19, 22, 22, 19, 30, 20, 12, 17, 22, 19, 18, 19, 22, 23, 29, 27, 22, 22, 28, 18, 17, 24, 19, 14, 25, 10, 17, 12, 26, 23, 17, 19, 24, 25, 27, 17, 27, 23, 20, 25, 30, 23, 27, 25, 28, 31, 34, 32, 27, 33, 28, 32, 23, 21, 28, 22, 33, 21, 21, 85, 190, 119, 31, 37, 58, 135, 41, 41, 46, 37, 35, 27, 39, 31, 111, 45, 27, 30, 57, 52, 66, 55, 32, 31, 43, 40, 38, 41, 39, 38, 65, 39, 46, 65, 49, 75, 61, 43, 40, 92, 55, 62, 41, 75, 62, 51, 73, 242, 46, 41, 51, 50, 54, 57, 51, 46, 52, 46, 51, 63, 43, 54, 38, 55, 77, 43, 53, 48, 90, 54, 61, 53, 30, 53, 79, 194, 58, 46, 64, 47, 54, 56, 42, 60, 42, 48, 37, 53, 41, 55, 52, 40, 43, 39, 35, 23, 35, 28, 24, 21, 31, 39, 22, 33, 28, 30, 24, 33, 20, 26, 28, 29, 21, 25, 20, 37, 33, 36, 21, 28, 38, 33, 35, 45, 33, 38, 41, 45, 43, 46, 36, 40, 29, 29, 43, 41, 37, 42, 39, 39, 42, 35, 37, 34, 35, 53, 38, 39, 35, 33, 38, 57, 80, 46, 50, 50, 40, 45, 44, 58, 61, 59, 44, 48, 40, 45, 39, 38, 34, 56, 44, 36, 32, 49, 38, 41, 50, 41, 45, 46, 41, 42, 44, 57, 47, 38, 105, 47, 57, 51, 43, 53, 36, 45, 59, 45, 68, 70, 57, 49, 56, 40, 52, 52, 37, 52, 51, 57, 35, 56, 59, 46, 63, 47, 46, 45, 46, 46, 44, 46, 43, 45, 42, 37, 50, 46, 35, 45, 43, 34, 42, 43, 45, 40, 60, 39, 56, 76, 41, 42, 56, 35, 43, 35, 49, 40, 286, 64, 46, 128, 65, 49, 42, 48, 60, 34, 31, 37, 35, 31, 40, 39, 29, 34, 78, 31, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 102, 90, 100, 106, 100, 120, 136, 94, 95, 143, 112, 109, 108, 97, 99, 85, 87, 110, 82, 96, 95, 74, 129, 140, 124, 127, 85, 128, 122, 105, 121, 117, 107, 80, 100, 76, 121, 119, 87, 101, 92, 71, 90, 81, 73, 76, 82, 66, 91, 71, 81, 101, 100, 85, 88, 105, 123, 110, 100, 113, 91, 76, 118, 129, 123, 128, 112, 122, 108, 114, 120, 136, 123, 116, 106, 100, 135, 194, 163, 106, 152, 135, 164, 197, 173, 147, 158, 121, 110, 93, 123, 128, 125, 117, 141, 137, 113, 128, 142, 133, 109, 143, 130, 124, 119, 107, 150, 110, 123, 135, 147, 186, 181, 184, 154, 156, 159, 124, 121, 111, 129, 137, 126, 144, 153, 119, 124, 163, 130, 134, 126, 128, 114, 112, 97, 100, 113, 104, 109, 118, 157, 163, 201, 186, 240, 209, 203, 214, 170, 173, 150, 169, 152, 155, 179, 213, 187, 184, 158, 133, 96, 70, 70, 58, 30, 16, 19, 61, 47, 64, 70, 108, 126, 105, 109, 94, 97, 75, 99, 81, 61, 75, 93, 83, 70, 92, 79, 80, 100, 88, 83, 98, 88, 86, 90, 104, 96, 98, 113, 142, 137, 143, 125, 152, 114, 128, 111, 110, 77, 118, 106, 114, 140, 115, 126, 133, 126, 108, 173, 166, 136, 120, 109, 123, 127, 138, 112, 108, 108, 180, 162, 137, 107, 139, 123, 117, 106, 130, 113, 90, 108, 111, 130, 100, 129, 126, 123, 148, 127, 108, 127, 142, 99, 136, 131, 123, 138, 137, 137, 139, 138, 151, 164, 168, 179, 159, 145, 134, 147, 112, 116, 138, 115, 136, 117, 130, 150, 162, 103, 133, 123, 117, 105, 117, 128, 135, 132, 146, 166, 157, 187, 157, 143, 176, 151, 183, 154, 136, 130, 131, 150, 154, 146, 4, 3, 5, 0, 3, 3, 5, 4, 3, 3, 0, 5, 3, 4, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 4, 0, 6, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n          }\n        };\n        return <Timebar start={'2017-12-01T00:00:00.000Z'} end={new Date().toISOString()} absoluteStart={'2017-12-01T00:00:00.000Z'} absoluteEnd={new Date().toISOString()} bookmarkStart={null} bookmarkEnd={null} onChange={d => console.log(d)} onBookmarkChange={d => console.log(d)} // enablePlayback\n        mdxType=\"Timebar\">\n      {props => <TimebarEvents {...props} events={eventsMock} showFishing={false} mdxType=\"TimebarEvents\" />}\n    </Timebar>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timebar\":\"timebar_Timebar__wi_j1\",\"uiButton\":\"timebar_uiButton__37ZCU\",\"timeActions\":\"timebar_timeActions__em_PS\",\"timeRange\":\"timebar_timeRange__3VDsn\",\"timeScale\":\"timebar_timeScale__1vCWK\",\"timeRangeContainer\":\"timebar_timeRangeContainer__3ucO1\",\"playbackActions\":\"timebar_playbackActions__29P8F\",\"bookmark\":\"timebar_bookmark__3SaYV\"};"],"sourceRoot":""}