{"version":3,"sources":["webpack:///./src/miniglobe/miniglobe.js","webpack:///./src/miniglobe/miniglobe.mdx","webpack:///./src/miniglobe/miniglobe.module.css"],"names":["DEFAULT_SETTINGS","minZoom","center","zoom","bounds","north","south","east","west","size","viewportThickness","MiniGlobe","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","projection","worldData","feature","jsonData","objects","land","features","Component","setProjection","nextProps","props","recenter","_this$props","_center","_slicedToArray","latitude","longitude","geoOrthographic","translate","scale","clipAngle","rotate","setState","_center2","updatedProjection","_this2","_this$props2","undefined","console","error","viewportBoundsGeoJSON","type","geometry","coordinates","react_default","a","createElement","width","height","className","styles","globeSvg","globeBackground","cx","cy","r","map","d","i","key","concat","geoPath","viewport","style","strokeWidth","defaultProps","MDXContent","miniglobe_classCallCheck","miniglobe_possibleConstructorReturn","miniglobe_getPrototypeOf","layout","React","components","_objectWithoutProperties","dist","name","id","parentName","href","index_m","of","__codesandbox","__position","__code","__scope","miniglobe","module","exports"],"mappings":"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","file":"static/js/src-miniglobe-miniglobe.6e26dcc5.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { geoOrthographic, geoPath } from 'd3-geo' // eslint-disable-line\nimport { feature } from 'topojson-client'\nimport styles from './miniglobe.module.css'\nimport jsonData from './ne_110m_land.json'\n\nconst DEFAULT_SETTINGS = {\n  minZoom: 2.5,\n  center: [0, 0],\n  zoom: 3,\n  bounds: {\n    north: 25,\n    south: -25,\n    east: 40,\n    west: -40,\n  },\n  size: 40,\n  viewportThickness: 6,\n}\n\nclass MiniGlobe extends Component {\n  constructor() {\n    super()\n    this.state = {\n      projection: null,\n    }\n\n    this.worldData = feature(jsonData, jsonData.objects.land).features\n  }\n\n  componentDidMount() {\n    this.setProjection()\n  }\n\n  componentDidUpdate(nextProps) {\n    if (\n      this.props.center[0] !== nextProps.center[0] ||\n      this.props.center[1] !== nextProps.center[1]\n    ) {\n      this.recenter()\n    }\n  }\n\n  setProjection() {\n    const { center, size } = this.props\n    const [latitude, longitude] = center\n    const projection = geoOrthographic()\n      .translate([size / 2, size / 2])\n      .scale(size / 2)\n      .clipAngle(90)\n    projection.rotate([-longitude, -latitude])\n    this.setState({ projection })\n  }\n\n  recenter() {\n    if (this.state.projection) {\n      const { center } = this.props\n      const [latitude, longitude] = center\n      const updatedProjection = this.state.projection\n      this.state.projection.rotate([-longitude, -latitude])\n      this.setState({ projection: updatedProjection })\n    }\n  }\n\n  render() {\n    const { zoom, bounds, size, viewportThickness } = this.props\n    if (bounds === undefined) {\n      console.error('MiniGlobe: bounds not specified')\n      return null\n    }\n\n    const { north, south, west, east } = bounds\n    const viewportBoundsGeoJSON = {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[west, north], [east, north], [east, south], [west, south], [west, north]]],\n      },\n    }\n\n    return (\n      <svg width={size} height={size} className={styles.globeSvg}>\n        <circle className={styles.globeBackground} cx={size / 2} cy={size / 2} r={size / 2} />\n        <g>\n          {this.worldData.map((d, i) => (\n            <path key={`path-${i}`} d={geoPath().projection(this.state.projection)(d)} />\n          ))}\n          {zoom > DEFAULT_SETTINGS.minZoom && (\n            <path\n              key=\"viewport\"\n              d={geoPath().projection(this.state.projection)(viewportBoundsGeoJSON)}\n              className={styles.viewport}\n              style={{ strokeWidth: viewportThickness }}\n            />\n          )}\n        </g>\n      </svg>\n    )\n  }\n}\n\nMiniGlobe.propTypes = {\n  center: PropTypes.arrayOf(PropTypes.number).isRequired,\n  zoom: PropTypes.number.isRequired,\n  bounds: PropTypes.shape({\n    north: PropTypes.number,\n    south: PropTypes.number,\n    west: PropTypes.number,\n    east: PropTypes.number,\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  viewportThickness: PropTypes.number.isRequired,\n}\n\nMiniGlobe.defaultProps = {\n  center: DEFAULT_SETTINGS.center,\n  zoom: DEFAULT_SETTINGS.zoom,\n  bounds: DEFAULT_SETTINGS.bounds,\n  size: DEFAULT_SETTINGS.size,\n  viewportThickness: DEFAULT_SETTINGS.viewportThickness,\n}\n\nexport default MiniGlobe\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport MiniGlobe from './miniglobe'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"mini-globe\"}}>{`Mini globe`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"description\"}}>{`Description`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Shows viewport bounds or location on an orthogonal map to provide geographical context.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Currently used in:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/vessel-profiles/blob/b267dc5a94452228b71a18a77b0d597323abe0f0/src/profile/components/Info.js#L4\"}}>{`Vessel profiles`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/data-portal/blob/64aa2982d2159fbcf13ef58d25ea0ae3e01e0af9/src/map/MapDashboard.jsx#L2\"}}>{`Data portal`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"available-properties\"}}>{`Available properties`}</MDXTag>\n<PropsTable of={MiniGlobe} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={``} __position={1} __code={'<MiniGlobe />'} __scope={{props: this ? this.props : props,MiniGlobe}}>\n  <MiniGlobe />\n</Playground>\n           </MDXTag>\n  }\n}\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globeBackground\":\"miniglobe_globeBackground__3GhDq\",\"globeSvg\":\"miniglobe_globeSvg__S_xOd\",\"viewport\":\"miniglobe_viewport__2HKyl\"};"],"sourceRoot":""}