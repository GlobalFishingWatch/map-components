{"version":3,"sources":["webpack:///./src/timebar/charts/events.module.css","webpack:///./src/timebar/components/bookmark.module.css","webpack:///./src/timebar/components/date-selector.module.css","webpack:///./src/timebar/components/timeline-handler.module.css","webpack:///./src/timebar/components/timeline-units.module.css","webpack:///./src/timebar/components/timeline.module.css","webpack:///./src/timebar/components/timerange-selector.module.css","webpack:///./src/timebar/utils.js","webpack:///./src/timebar/icons/arrowUp.svg","webpack:///./src/timebar/icons/arrowDown.svg","webpack:///./src/timebar/components/date-selector.js","webpack:///./src/timebar/components/timerange-selector.js","webpack:///./src/timebar/icons/bookmarkFilled.svg","webpack:///./src/timebar/icons/delete.svg","webpack:///./src/timebar/icons/arrow.svg","webpack:///./src/timebar/components/bookmark.js","webpack:///./src/timebar/components/timeline-units.js","webpack:///./src/timebar/icons/drag.svg","webpack:///./src/timebar/components/timeline-handler.js","webpack:///./src/timebar/components/timeline.js","webpack:///./src/timebar/icons/loop.svg","webpack:///./src/timebar/icons/back.svg","webpack:///./src/timebar/icons/play.svg","webpack:///./src/timebar/icons/forward.svg","webpack:///./src/timebar/icons/timeRange.svg","webpack:///./src/timebar/icons/bookmark.svg","webpack:///./src/timebar/icons/minus.svg","webpack:///./src/timebar/icons/plus.svg","webpack:///./src/timebar/timebar.js","webpack:///./src/timebar/charts/Events.js","webpack:///./src/timebar/timebar.mdx","webpack:///./src/timebar/timebar.module.css"],"names":["module","exports","fishing","port","encounter","unregistered","gap","Bookmark","_immediate","main","_compact","_overflowingRight","_overflowingLeft","delete","title","leftArrow","rightArrow","icon","_point","DateSelector","arrowButton","value","handler","unit","Timeline","graphContainer","graph","veil","veilLeft","veilRight","absoluteEnd","lastUpdateLabel","TimeRangeSelector","selectorsContainer","selectorGroup","selectorLabel","actions","cta","secondary","getTime","dateISO","Date","clampToAbsoluteBoundaries","start","end","desiredDeltaMs","absoluteStart","startMs","endMs","absoluteStartMs","absoluteEndMs","newStartClamped","newEndClamped","toISOString","getDeltaMs","getDeltaDays","isMoreThanADay","stickToClosestUnit","date","mDate","dayjs","mStartOf","startOf","mEndOf","endOf","valueOf","getHumanizedDates","format","humanizedStart","humanizedEnd","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","react_default","a","createElement","stroke","strokeWidth","d","fill","arrowUp_SvgArrowUp","props","width","height","viewBox","__webpack_require__","p","arrowDown_extends","arrowDown_ref","arrowDown_SvgArrowDown","Component","_this$props","onChange","canIncrement","canDecrement","className","styles","type","disabled","onClick","_this","timerange_selector_classCallCheck","timerange_selector_getPrototypeOf","_defineProperty","timerange_selector_assertThisInitialized","onSubmit","subtract","state","startCanIncrement","startCanDecrement","endCanIncrement","endCanDecrement","_this$props2","setState","which","allBounds","offset","_this$setState","prevDate","newDate","add","bounds","newDateMs","toDate","Math","min","max","concat","_this2","_this$state","_this$props3","undefined","mStart","mEnd","onDiscard","date_selector","setUnit","year","classNames","last30days","submit","bookmarkFilled_extends","bookmarkFilled_ref","fillRule","strokeLinejoin","bookmarkFilled_SvgBookmarkFilled","delete_extends","delete_ref","delete_SvgDelete","arrow_extends","arrow_ref","arrow_SvgArrow","_classNames","overflowing","overflowingLeft","overflowingRight","scale","bookmarkStart","bookmarkEnd","minX","maxX","immediate","onSelect","x","_getHumanizedDates","label","join","renderedX","renderedWidth","minWidth","compact","point","bookmark_defineProperty","style","left","onDelete","getUnitLabel","mUnit","baseUnit","availableWidth","unitFormat","isFirst","formats","month","fm","day","hour","formatString","TimelineUnits","outerScale","outerStart","outerEnd","innerDays","units","mOuterStart","mOuterEnd","numUnitsOffset","numUnits","diff","ui","mUnitNext","xNext","id","hoverLabel","Infinity","push","getUnitsPositions","renderprops","native","items","keys","map","from","opacity","leave","enter","update","s","div","button","zoomToUnit","drag_extends","drag_ref","drag_SvgDrag","Handler","onMouseDown","onTouchStart","dragging","mouseX","defaultProps","DRAG_INNER","DRAG_START","DRAG_END","timeline_classCallCheck","timeline_getPrototypeOf","timeline_defineProperty","timeline_assertThisInitialized","graphStyle","window","getComputedStyle","outerX","parseFloat","getBoundingClientRect","outerWidth","outerHeight","innerStartPx","innerEndPx","innerWidth","timestamp","frameTimestamp","progress","outerDrag","handlerMouseX","deltaPxRatio","offsetMs","innerScale","invert","newStart","newEnd","_clampToAbsoluteBound","requestAnimationFrame","onEnterFrame","event","clientX","changedTouches","lastX","throttle","isDay","onMouseMove","onMouseLeave","_this$state2","node","contains","isMovingInside","throttledMouseMove","currentDeltaMs","movementX","_clampToAbsoluteBound2","isHandlerZoomInValid","isValid","isHandlerZoomOutValid","_this$state3","isZoomIn","clampedX","stickUnit","setTimeout","onWindowResize","addEventListener","onMouseUp","removeEventListener","cancelAnimationFrame","_this$state4","_this$state5","_this$props4","onBookmarkChange","_this$state6","scaleTime","domain","range","ref","bookmark","timeline_units","children","_objectSpread","graphHeight","tooltipContainer","el","timeline_handler","to","lastUpdate","loop_extends","loop_ref","loop_SvgLoop","back_extends","back_ref","back_SvgBack","play_extends","play_ref","play_SvgPlay","forward_extends","forward_ref","forward_SvgForward","timeRange_extends","timeRange_ref","timeRange_SvgTimeRange","bookmark_extends","bookmark_ref","bookmark_SvgBookmark","minus_extends","minus_ref","rx","transform","strokeLinecap","minus_SvgMinus","plus_extends","plus_ref","y","plus_SvgPlus","extend","relativeTime","ONE_DAY_MS","Timebar","timebar_classCallCheck","timebar_getPrototypeOf","timebar_defineProperty","timebar_assertThisInitialized","prevState","showTimeRangeSelector","notifyChange","zoom","steps","nextDelta","delta","round","nextUnit","step","unitOffsetMs","newStartMs","mNewStart","deltaMs","enablePlayback","canZoomIn","canZoomOut","hasBookmark","bookmarkDisabled","playbackActions","uiButton","loop","back","play","forward","speed","timeActions","timerange_selector","onTimeRangeSelectorSubmit","toggleTimeRangeSelector","timeRangeContainer","timeRange","setBookmark","timeScale","out","in","timeline","Events","memoize","events","showFishing","_events$series","series","labels","counts","fishingIndex","indexOf","_toConsumableArray","slice","mCurrentStart","clone","allValues","maxValue","_loop","dateIndex","valuesAtDateSum","valuesAtDate","forEach","keyIndex","k","filter","v","console","warn","allRatios","ratiosAtDate","Events_objectSpread","stack","order","stackOrderNone","stackOffsetSilhouette","stackLayout","finalEvents","getFinalEvents","finalHeight","TOP_MARGIN","middle","areaGenerator","area","data","y0","y1","curve","curveStepAfter","eventsForKey","MDXContent","timebar_timebar_classCallCheck","timebar_timebar_possibleConstructorReturn","timebar_timebar_getPrototypeOf","layout","React","components","_objectWithoutProperties","dist","name","parentName","href","index_m","of","__codesandbox","__position","__code","__scope","TimebarEvents","eventsMock","timebar","log","charts_Events"],"mappings":"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","file":"static/js/src-timebar-timebar.788c41f2.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fishing\":\"events_fishing__2rScz\",\"port\":\"events_port__3Rq7E\",\"encounter\":\"events_encounter__1iDlJ\",\"unregistered\":\"events_unregistered__ldz0B\",\"gap\":\"events_gap__1s5sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bookmark\":\"bookmark_Bookmark__2e_Fm\",\"_immediate\":\"bookmark__immediate__3UwDX\",\"main\":\"bookmark_main__zAN8v\",\"_compact\":\"bookmark__compact__17r0_\",\"_overflowingRight\":\"bookmark__overflowingRight__V6d18\",\"_overflowingLeft\":\"bookmark__overflowingLeft__N_yd0\",\"delete\":\"bookmark_delete__omE6s\",\"title\":\"bookmark_title__fgJiS\",\"leftArrow\":\"bookmark_leftArrow__1srpm\",\"rightArrow\":\"bookmark_rightArrow__3FUyh\",\"icon\":\"bookmark_icon__23RCn\",\"_point\":\"bookmark__point__38Se1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateSelector\":\"date-selector_DateSelector__21IPK\",\"arrowButton\":\"date-selector_arrowButton__gD06u\",\"value\":\"date-selector_value__1JK9u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"timeline-handler_handler__21dks\",\"_immediate\":\"timeline-handler__immediate__2e6ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"timeline-units_unit__11WRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timeline\":\"timeline_Timeline__wZxDm\",\"graphContainer\":\"timeline_graphContainer__6Np1L\",\"graph\":\"timeline_graph__mYQfr\",\"veil\":\"timeline_veil__1P6IK\",\"veilLeft\":\"timeline_veilLeft__3hdXF\",\"veilRight\":\"timeline_veilRight__1eSAB\",\"_immediate\":\"timeline__immediate__1igre\",\"absoluteEnd\":\"timeline_absoluteEnd__2oI9J\",\"lastUpdateLabel\":\"timeline_lastUpdateLabel__1dwiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRangeSelector\":\"timerange-selector_TimeRangeSelector__1BK5p\",\"veil\":\"timerange-selector_veil__2nCw3\",\"selectorsContainer\":\"timerange-selector_selectorsContainer__fpVeo\",\"selectorGroup\":\"timerange-selector_selectorGroup__1wIwR\",\"selectorLabel\":\"timerange-selector_selectorLabel__vcLPV\",\"actions\":\"timerange-selector_actions__3KYCM\",\"cta\":\"timerange-selector_cta__1qLr_\",\"secondary\":\"timerange-selector_secondary__2xxi5\"};","import dayjs from 'dayjs'\n\nexport const getTime = (dateISO) => new Date(dateISO).getTime()\n\nexport const clampToAbsoluteBoundaries = (\n  start,\n  end,\n  desiredDeltaMs,\n  absoluteStart,\n  absoluteEnd\n) => {\n  const startMs = getTime(start)\n  const endMs = getTime(end)\n  const absoluteStartMs = getTime(absoluteStart)\n  const absoluteEndMs = getTime(absoluteEnd)\n  let newStartClamped = start\n  let newEndClamped = end\n\n  // newStart is before absolute start: use abs start as new start and keep the existing duration to get to new end\n  if (startMs < absoluteStartMs) {\n    newStartClamped = absoluteStart\n    newEndClamped = new Date(absoluteStartMs + desiredDeltaMs).toISOString()\n    // newEnd is after absolute end: use abs end as new end and keep the existing duration to get back to new start\n  } else if (endMs > absoluteEndMs) {\n    newEndClamped = absoluteEnd\n    newStartClamped = new Date(absoluteEndMs - desiredDeltaMs).toISOString()\n  }\n  return { newStartClamped, newEndClamped }\n}\n\nexport const getDeltaMs = (start, end) => getTime(end) - getTime(start)\nexport const getDeltaDays = (start, end) => getDeltaMs(start, end) / 1000 / 60 / 60 / 24\nexport const isMoreThanADay = (start, end) => getDeltaDays(start, end) >= 1\n\nexport const stickToClosestUnit = (date, unit) => {\n  const mDate = dayjs(date)\n  const mStartOf = mDate.startOf(unit)\n  const mEndOf = mDate.endOf(unit)\n  const startDeltaMs = getTime(date) - mStartOf.valueOf()\n  const endDeltaMs = mEndOf.valueOf() - getTime(date)\n  const mClosest = startDeltaMs > endDeltaMs ? mEndOf : mStartOf\n  return mClosest.toISOString()\n}\n\nexport const getHumanizedDates = (start, end) => {\n  const format = isMoreThanADay(start, end) ? 'MMM D YYYY' : 'MMM D YYYY HH[h]'\n  const humanizedStart = dayjs(start).format(format)\n  const humanizedEnd = dayjs(end).format(format)\n  return { humanizedStart, humanizedEnd }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 6l4-4 4 4\",\n  fill: \"none\"\n});\n\nvar SvgArrowUp = function SvgArrowUp(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowUp.1cbc9b80.svg\";\nexport { SvgArrowUp as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 1l4 4 4-4\",\n  fill: \"none\"\n});\n\nvar SvgArrowDown = function SvgArrowDown(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowDown.743b8d09.svg\";\nexport { SvgArrowDown as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './date-selector.module.css'\nimport { ReactComponent as IconArrowUp } from '../icons/arrowUp.svg'\nimport { ReactComponent as IconArrowDown } from '../icons/arrowDown.svg'\n\nclass DateSelector extends Component {\n  render() {\n    const { onChange, value, canIncrement, canDecrement } = this.props\n    return (\n      <div className={styles.DateSelector}>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canIncrement}\n          onClick={() => {\n            onChange(+1)\n          }}\n        >\n          <IconArrowUp />\n        </button>\n        <span className={styles.value}>{value}</span>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canDecrement}\n          onClick={() => {\n            onChange(-1)\n          }}\n        >\n          <IconArrowDown />\n        </button>\n      </div>\n    )\n  }\n}\n\nDateSelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  canIncrement: PropTypes.bool.isRequired,\n  canDecrement: PropTypes.bool.isRequired,\n}\n\nexport default DateSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport classNames from 'classnames'\nimport { getTime } from '../utils'\nimport DateSelector from './date-selector'\nimport styles from './timerange-selector.module.css'\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24 - 1\n\nclass TimeRangeSelector extends Component {\n  constructor() {\n    super()\n    this.state = {\n      startCanIncrement: true,\n      startCanDecrement: true,\n      endCanIncrement: true,\n      endCanDecrement: true,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n    this.setState({\n      start,\n      end,\n    })\n  }\n\n  submit(start, end) {\n    const { onSubmit } = this.props\n\n    // on release, \"stick\" to day/hour\n    const newStart = dayjs(start)\n      .startOf('day')\n      .toISOString()\n    const newEnd = dayjs(end)\n      .startOf('day')\n      .toISOString()\n    onSubmit(newStart, newEnd)\n  }\n\n  setUnit(which, allBounds, unit, offset) {\n    const prevDate = this.state[which]\n    const newDate = dayjs(prevDate).add(offset, unit)\n\n    const bounds = allBounds[which]\n    let newDateMs = newDate.toDate().getTime()\n    newDateMs = Math.min(bounds.max, Math.max(bounds.min, newDateMs))\n\n    this.setState({\n      [which]: new Date(newDateMs),\n      [`${which}CanIncrement`]: newDateMs !== bounds.max,\n      [`${which}CanDecrement`]: newDateMs !== bounds.min,\n    })\n  }\n\n  last30days = () => {\n    const { absoluteEnd, onSubmit } = this.props\n    onSubmit(\n      dayjs(absoluteEnd)\n        .subtract(30, 'day')\n        .toISOString(),\n      absoluteEnd\n    )\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      startCanIncrement,\n      startCanDecrement,\n      endCanIncrement,\n      endCanDecrement,\n    } = this.state\n    const { absoluteStart, absoluteEnd } = this.props\n\n    if (start === undefined) {\n      return null\n    }\n\n    const bounds = {\n      start: {\n        min: getTime(absoluteStart),\n        max: getTime(end) - ONE_DAY_MS,\n      },\n      end: {\n        min: getTime(start) + ONE_DAY_MS,\n        max: getTime(absoluteEnd),\n      },\n    }\n    const mStart = dayjs(start)\n    const mEnd = dayjs(end)\n\n    return (\n      <div className={styles.TimeRangeSelector}>\n        <div className={styles.veil} onClick={this.props.onDiscard} />\n        <h2>Select a time range</h2>\n        <div className={styles.selectorsContainer}>\n          <div className={styles.selectorGroup}>\n            <span className={styles.selectorLabel}>START</span>\n            <DateSelector\n              canIncrement={startCanIncrement}\n              canDecrement={startCanDecrement}\n              onChange={(offset) => {\n                this.setUnit('start', bounds, 'day', offset)\n              }}\n              value={mStart.date()}\n            />\n            <DateSelector\n              canIncrement={startCanIncrement}\n              canDecrement={startCanDecrement}\n              onChange={(offset) => {\n                this.setUnit('start', bounds, 'month', offset)\n              }}\n              value={mStart.format('MMM')}\n            />\n            <DateSelector\n              canIncrement={startCanIncrement}\n              canDecrement={startCanDecrement}\n              onChange={(offset) => {\n                this.setUnit('start', bounds, 'year', offset)\n              }}\n              value={mStart.year()}\n            />\n          </div>\n          <div className={styles.selectorGroup}>\n            <span className={styles.selectorLabel}>END</span>\n            <DateSelector\n              canIncrement={endCanIncrement}\n              canDecrement={endCanDecrement}\n              onChange={(offset) => {\n                this.setUnit('end', bounds, 'day', offset)\n              }}\n              value={mEnd.date()}\n            />\n            <DateSelector\n              canIncrement={endCanIncrement}\n              canDecrement={endCanDecrement}\n              onChange={(offset) => {\n                this.setUnit('end', bounds, 'month', offset)\n              }}\n              value={mEnd.format('MMM')}\n            />\n            <DateSelector\n              canIncrement={endCanIncrement}\n              canDecrement={endCanDecrement}\n              onChange={(offset) => {\n                this.setUnit('end', bounds, 'year', offset)\n              }}\n              value={mEnd.year()}\n            />\n          </div>\n        </div>\n        <div className={styles.actions}>\n          <button\n            type=\"button\"\n            className={classNames(styles.cta, styles.secondary)}\n            onClick={this.last30days}\n          >\n            LAST 30 DAYS\n          </button>\n          <button\n            type=\"button\"\n            className={styles.cta}\n            onClick={() => {\n              this.submit(start, end)\n            }}\n          >\n            DONE\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nTimeRangeSelector.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n}\n\nexport default TimeRangeSelector\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"#FFF\",\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fillRule: \"evenodd\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmarkFilled = function SvgBookmarkFilled(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmarkFilled.9c323b67.svg\";\nexport { SvgBookmarkFilled as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M10.477.738V2.25H0V.738h2.602L3.375 0h3.727l.773.738h2.602zM.738 11.988v-9h9v9c0 .399-.152.75-.457 1.055-.304.305-.656.457-1.054.457H2.25c-.398 0-.75-.152-1.055-.457-.304-.305-.457-.656-.457-1.055z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgDelete = function SvgDelete(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/delete.c8ee873a.svg\";\nexport { SvgDelete as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M5 1L1 5l4 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgArrow = function SvgArrow(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 10,\n    viewBox: \"0 0 6 10\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrow.7f32b3d1.svg\";\nexport { SvgArrow as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { getHumanizedDates } from '../utils'\nimport styles from './bookmark.module.css'\nimport { ReactComponent as IconBookmarkFilled } from '../icons/bookmarkFilled.svg'\nimport { ReactComponent as IconDelete } from '../icons/delete.svg'\nimport { ReactComponent as Arrow } from '../icons/arrow.svg'\n\nconst MIN_WIDTH = 32\nconst MIN_WIDTH_WITH_OVERFLOW_ARROWS = 52\nconst COMPACT_MAX_WIDTH = 240\n\nclass Bookmark extends Component {\n  render() {\n    const { scale, bookmarkStart, bookmarkEnd, minX, maxX, immediate, onSelect } = this.props\n\n    const x = scale(new Date(bookmarkStart))\n    const width = scale(new Date(bookmarkEnd)) - x\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(bookmarkStart, bookmarkEnd)\n    const label = [humanizedStart, humanizedEnd].join(' - ')\n\n    let overflowing\n    let overflowingLeft\n    let overflowingRight\n    let renderedX = x\n    let renderedWidth = width\n\n    if (x < minX) {\n      renderedX = minX\n      renderedWidth = x + renderedWidth\n      overflowing = true\n      overflowingLeft = true\n    }\n    if (renderedX + width > maxX) {\n      renderedX = Math.min(renderedX, maxX - MIN_WIDTH_WITH_OVERFLOW_ARROWS)\n      renderedWidth = maxX - renderedX\n      overflowing = true\n      overflowingRight = true\n    }\n\n    const minWidth = overflowing === true ? MIN_WIDTH_WITH_OVERFLOW_ARROWS : MIN_WIDTH\n    renderedWidth = Math.max(minWidth, renderedWidth)\n    const compact = renderedWidth < COMPACT_MAX_WIDTH\n    const point = renderedWidth <= MIN_WIDTH\n\n    return (\n      <div\n        className={classNames(styles.Bookmark, {\n          [styles._overflowingLeft]: overflowingLeft,\n          [styles._overflowingRight]: overflowingRight,\n          [styles._compact]: compact,\n          [styles._point]: point,\n          [styles._immediate]: immediate,\n        })}\n        style={{ left: renderedX, width: renderedWidth }}\n      >\n        <button\n          type=\"button\"\n          title=\"Go to time range bookmark\"\n          className={styles.main}\n          onClick={onSelect}\n        >\n          {overflowingLeft && <Arrow className={styles.leftArrow} />}\n          <IconBookmarkFilled className={styles.icon} />\n          {compact === false && <span className={styles.title}>{label}</span>}\n          {overflowingRight && <Arrow className={styles.rightArrow} />}\n        </button>\n        {compact === false && (\n          <button\n            type=\"button\"\n            title=\"Delete time range bookmark\"\n            className={styles.delete}\n            onClick={this.props.onDelete}\n          >\n            <IconDelete />\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\nBookmark.propTypes = {\n  bookmarkStart: PropTypes.string.isRequired,\n  bookmarkEnd: PropTypes.string.isRequired,\n  scale: PropTypes.func.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  immediate: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n\nexport default Bookmark\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport { animated, Transition } from 'react-spring/renderprops'\nimport { getTime, getDeltaDays } from '../utils'\nimport styles from './timeline-units.module.css'\n\nconst getUnitLabel = (mUnit, baseUnit, availableWidth) => {\n  /* eslint key-spacing: 0, no-multi-spaces: 0 */\n  const FORMATS = {\n    year: { isFirst: () => false, formats: [[0, 'YYYY']] },\n    month: {\n      isFirst: (fm) => fm.month() === 0,\n      formats: [[200, 'MMMM YYYY'], [100, 'MMMM', 'MMM YYYY'], [0, 'MMM', 'MMM YY']],\n    },\n    day: {\n      isFirst: (fm) => fm.date() === 1,\n      formats: [\n        [999, 'ddd D MMMM YYYY'],\n        [200, 'ddd D MMMM'],\n        [70, 'ddd D', 'MMM 1'],\n        [0, 'D', 'MMM'],\n      ],\n    },\n    hour: {\n      isFirst: (fm) => fm.hour() === 0,\n      formats: [[999, 'ddd D MMMM YYYY H[H]'], [0, 'H[H]', 'ddd D']],\n    },\n  }\n  const unitFormat = FORMATS[baseUnit]\n  let format\n  for (let i = 0; i < unitFormat.formats.length; i += 1) {\n    const formatMinWidth = unitFormat.formats[i][0]\n    if (availableWidth > formatMinWidth) {\n      format = unitFormat.formats[i]\n      break\n    }\n  }\n\n  const isFirst = unitFormat.isFirst(mUnit)\n  const formatString = isFirst && format[2] ? format[2] : format[1]\n  return mUnit.format(formatString)\n}\n\nconst getUnitsPositions = (\n  outerScale,\n  outerStart,\n  outerEnd,\n  absoluteStart,\n  absoluteEnd,\n  baseUnit\n) => {\n  const startMs = Math.max(getTime(outerStart), getTime(absoluteStart))\n  const endMs = Math.min(getTime(outerEnd), getTime(absoluteEnd))\n\n  // BUFFER ??\n  const mOuterStart = dayjs(startMs).startOf(baseUnit)\n  const mOuterEnd = dayjs(endMs).endOf(baseUnit)\n\n  const units = []\n  const numUnitsOffset = getTime(outerEnd) > getTime(absoluteEnd) ? 0 : 1\n  const numUnits = mOuterEnd.diff(mOuterStart, baseUnit) + numUnitsOffset\n\n  let mUnit = mOuterStart\n  let x = outerScale(mUnit)\n\n  for (let ui = 0; ui <= numUnits; ui += 1) {\n    const mUnitNext = mUnit.add(1, baseUnit)\n    const xNext = outerScale(mUnitNext)\n\n    const id = mUnit.format(\n      {\n        year: 'YYYY',\n        month: 'YYYY-MM',\n        day: 'YYYY-MM-DD',\n        hour: 'YYYY-MM-DD-HH',\n      }[baseUnit]\n    )\n\n    const width = xNext - x\n    const unit = {\n      id,\n      x,\n      width,\n      label: getUnitLabel(mUnit, baseUnit, width),\n      hoverLabel: `${getUnitLabel(mUnit, baseUnit, Infinity)} - Zoom to ${baseUnit}`,\n      start: mUnit.toISOString(),\n      end: mUnitNext.subtract(1, 'hour').toISOString(), // this avoids being stuck when clicking on a day unit\n    }\n    units.push(unit)\n    mUnit = mUnitNext\n    x = xNext\n  }\n\n  return units\n}\n\nclass TimelineUnits extends Component {\n  zoomToUnit({ start, end }) {\n    this.props.onChange(start, end)\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      absoluteStart,\n      absoluteEnd,\n      outerScale,\n      outerStart,\n      outerEnd,\n      immediate,\n    } = this.props\n    const innerDays = getDeltaDays(start, end)\n\n    let baseUnit = 'day'\n    if (innerDays > 366) baseUnit = 'year'\n    else if (innerDays > 31) baseUnit = 'month'\n    else if (innerDays < 1) baseUnit = 'hour'\n\n    const units = getUnitsPositions(\n      outerScale,\n      outerStart,\n      outerEnd,\n      absoluteStart,\n      absoluteEnd,\n      baseUnit\n    )\n\n    return (\n      <div>\n        <Transition\n          native\n          immediate={immediate}\n          items={units}\n          keys={units.map((d) => d.id)}\n          from={{ opacity: 0 }}\n          leave={{ opacity: 0 }}\n          enter={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n          update={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n        >\n          {(d) => (s) => (\n            <animated.div style={s} className={styles.unit}>\n              {baseUnit === 'hour' ? (\n                <animated.div>{d.label}</animated.div>\n              ) : (\n                <animated.button\n                  type=\"button\"\n                  onClick={() => {\n                    this.zoomToUnit(d)\n                  }}\n                  title={d.hoverLabel}\n                >\n                  {d.label}\n                </animated.button>\n              )}\n            </animated.div>\n          )}\n        </Transition>\n      </div>\n    )\n  }\n}\n\nTimelineUnits.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  outerStart: PropTypes.string.isRequired,\n  outerEnd: PropTypes.string.isRequired,\n  outerScale: PropTypes.func.isRequired,\n  immediate: PropTypes.bool.isRequired,\n}\n\nexport default TimelineUnits\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M4 1L1 5l3 4m3-8l3 4-3 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgDrag = function SvgDrag(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 10\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/drag.ff1ecd52.svg\";\nexport { SvgDrag as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport styles from './timeline-handler.module.css'\nimport { ReactComponent as IconDrag } from '../icons/drag.svg'\n\nconst Handler = (props) => (\n  <button\n    onMouseDown={props.onMouseDown}\n    onTouchStart={props.onMouseDown}\n    type=\"button\"\n    title=\"Drag to change the time range\"\n    className={classNames(styles.handler, {\n      [styles._immediate]: props.dragging === true,\n    })}\n    style={{ left: props.dragging === true ? props.mouseX : props.x }}\n  >\n    <IconDrag />\n  </button>\n)\n\nHandler.propTypes = {\n  onMouseDown: PropTypes.func.isRequired,\n  dragging: PropTypes.bool.isRequired,\n  x: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n}\n\nHandler.defaultProps = {\n  mouseX: 0,\n}\n\nexport default Handler\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { scaleTime } from 'd3-scale'\nimport dayjs from 'dayjs'\nimport throttle from 'lodash/throttle'\nimport { animated, Spring } from 'react-spring/renderprops'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaMs,\n  isMoreThanADay,\n  stickToClosestUnit,\n} from '../utils'\nimport Bookmark from './bookmark'\nimport TimelineUnits from './timeline-units'\nimport Handler from './timeline-handler'\nimport styles from './timeline.module.css'\n\nconst DRAG_INNER = 'DRAG_INNER'\nconst DRAG_START = 'DRAG_START'\nconst DRAG_END = 'DRAG_END'\n\nclass Timeline extends Component {\n  constructor() {\n    super()\n    this.state = {\n      innerStartPx: 0,\n      innerEndPx: 0,\n      innerWidth: 50,\n      outerWidth: 100,\n      outerHeight: 50,\n      dragging: null,\n    }\n    this.isMovingInside = false\n  }\n\n  componentDidMount() {\n    // wait for end of call stack to get rendered CSS\n    window.setTimeout(this.onWindowResize, 1)\n    window.addEventListener('resize', this.onWindowResize)\n    window.addEventListener('mousemove', this.onMouseMove)\n    window.addEventListener('touchmove', this.onMouseMove)\n    window.addEventListener('mouseup', this.onMouseUp)\n    window.addEventListener('touchend', this.onMouseUp)\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n    window.removeEventListener('mousemove', this.onMouseMove)\n    window.removeEventListener('touchmove', this.onMouseMove)\n    window.removeEventListener('mouseup', this.onMouseUp)\n    window.removeEventListener('touchend', this.onMouseUp)\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onWindowResize = () => {\n    const graphStyle = window.getComputedStyle(this.graphContainer)\n    const outerX = parseFloat(this.graphContainer.getBoundingClientRect().left)\n    const outerWidth = parseFloat(graphStyle.width)\n    const outerHeight = parseFloat(graphStyle.height)\n    const innerStartPx = outerWidth * 0.15\n    const innerEndPx = outerWidth * 0.85\n    const innerWidth = outerWidth * 0.7\n    this.setState({\n      outerX,\n      innerStartPx,\n      innerEndPx,\n      innerWidth,\n      outerWidth,\n      outerHeight,\n    })\n  }\n\n  isHandlerZoomInValid(x) {\n    const { dragging, innerStartPx, innerEndPx } = this.state\n    const isZoomIn =\n      (dragging === DRAG_START && x > innerStartPx) || (dragging === DRAG_END && x < innerEndPx)\n\n    // check that start handler doesn't go after end handler or end handler before start handler\n    const isValid =\n      isZoomIn &&\n      ((dragging === DRAG_START && x < innerEndPx - 20) ||\n        (dragging === DRAG_END && x > innerStartPx + 20))\n    const clampedX =\n      dragging === DRAG_START ? Math.min(x, innerEndPx - 20) : Math.max(x, innerStartPx + 20)\n    return { isZoomIn, isValid, clampedX }\n  }\n\n  isHandlerZoomOutValid(x) {\n    const { dragging, innerStartPx, innerEndPx, outerWidth } = this.state\n    return (\n      (dragging === DRAG_START && x < innerStartPx && x > 0) ||\n      (dragging === DRAG_END && x > innerEndPx && x < outerWidth)\n    )\n  }\n\n  onEnterFrame = (timestamp) => {\n    if (this.frameTimestamp === undefined) {\n      this.frameTimestamp = timestamp\n    }\n    const progress = timestamp - this.frameTimestamp\n    this.frameTimestamp = timestamp\n\n    if (this.state.outerDrag === true) {\n      const { dragging, innerStartPx, innerEndPx, outerWidth, handlerMouseX } = this.state\n      const { start, end, absoluteStart, absoluteEnd, onChange } = this.props\n      // console.log(progress);\n      const deltaPxRatio =\n        dragging === DRAG_START\n          ? (innerStartPx - handlerMouseX) / innerStartPx\n          : (handlerMouseX - innerEndPx) / (outerWidth - innerEndPx)\n\n      const offsetMs =\n        (this.innerScale.invert(0.6).getTime() - this.innerScale.invert(0).getTime()) *\n        progress *\n        deltaPxRatio\n      let newStart = start\n      let newEnd = end\n\n      if (dragging === DRAG_START) {\n        newStart = new Date(getTime(start) - offsetMs).toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = new Date(getTime(end) + offsetMs).toISOString()\n      }\n\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart,\n        newEnd,\n        getDeltaMs(start, end),\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    }\n\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  onMouseDown = (event, dragging) => {\n    const { outerX } = this.state\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    this.lastX = clientX\n    const x = clientX - outerX\n    this.setState({\n      dragging,\n      handlerMouseX: x,\n    })\n  }\n\n  throttledMouseMove = throttle((clientX, scale, isDay) => {\n    this.props.onMouseMove(clientX, scale, isDay)\n  }, 16)\n\n  onMouseMove = (event) => {\n    const { start, end, absoluteStart, absoluteEnd, onChange, onMouseLeave } = this.props\n    const { dragging, outerX, innerStartPx, innerEndPx } = this.state\n    const clientX = event.clientX || (event.changedTouches && event.changedTouches[0].clientX)\n    if (clientX === undefined) {\n      return\n    }\n    const x = clientX - outerX\n    const isMovingInside = this.node.contains(event.target) && x > innerStartPx && x < innerEndPx\n    if (isMovingInside) {\n      this.isMovingInside = true\n      const isDay = !isMoreThanADay(start, end)\n      this.throttledMouseMove(x, this.outerScale.invert, isDay)\n    } else if (this.isMovingInside === true) {\n      this.isMovingInside = false\n      onMouseLeave()\n    }\n    if (dragging === DRAG_INNER) {\n      const currentDeltaMs = getDeltaMs(start, end)\n      // Calculates x movement from last event since TouchEvent doesn't have the movementX property\n      const movementX = clientX - this.lastX\n      this.lastX = event.clientX || event.changedTouches[0].clientX\n      const newStart = this.innerScale.invert(-movementX)\n      const newEnd = new Date(newStart.getTime() + currentDeltaMs)\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart.toISOString(),\n        newEnd.toISOString(),\n        currentDeltaMs,\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    } else if (this.isHandlerZoomInValid(x).isValid === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: false,\n      })\n    } else if (this.isHandlerZoomOutValid(x) === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: true,\n      })\n    }\n  }\n\n  onMouseUp = (event) => {\n    const { start, end, onChange } = this.props\n    const { dragging, outerX, innerStartPx } = this.state\n\n    if (dragging === null) {\n      return\n    }\n\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    const x = clientX - outerX\n\n    const isHandlerZoomInValid = this.isHandlerZoomInValid(x)\n\n    this.setState({\n      dragging: null,\n      handlerMouseX: null,\n      outerDrag: false,\n    })\n\n    let newStart = start\n    let newEnd = end\n\n    if (isHandlerZoomInValid.isZoomIn) {\n      if (dragging === DRAG_START) {\n        newStart = this.innerScale\n          .invert(isHandlerZoomInValid.clampedX - innerStartPx)\n          .toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = this.innerScale.invert(isHandlerZoomInValid.clampedX - innerStartPx).toISOString()\n      }\n    }\n    // on release, \"stick\" to day/hour\n    const stickUnit = isMoreThanADay(newStart, newEnd) ? 'day' : 'hour'\n    newStart = stickToClosestUnit(newStart, stickUnit)\n    newEnd = stickToClosestUnit(newEnd, stickUnit)\n\n    onChange(newStart, newEnd)\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      absoluteEnd,\n      bookmarkStart,\n      bookmarkEnd,\n      onChange,\n      onBookmarkChange,\n    } = this.props\n    const {\n      dragging,\n      handlerMouseX,\n      innerStartPx,\n      innerEndPx,\n      innerWidth,\n      outerX,\n      outerWidth,\n      outerHeight,\n    } = this.state\n\n    this.innerScale = scaleTime()\n      .domain([new Date(start), new Date(end)])\n      .range([0, innerWidth])\n    const outerStart = this.innerScale.invert(-innerStartPx).toISOString()\n    const outerEnd = this.innerScale.invert(outerWidth - innerStartPx).toISOString()\n\n    this.outerScale = scaleTime()\n      .domain([new Date(outerStart), new Date(outerEnd)])\n      .range([0, this.state.outerWidth])\n\n    const immediate = this.state.dragging !== null\n\n    return (\n      <div ref={(node) => (this.node = node)} className={styles.Timeline}>\n        {bookmarkStart !== undefined && bookmarkStart !== null && (\n          <Bookmark\n            scale={this.outerScale}\n            bookmarkStart={bookmarkStart}\n            bookmarkEnd={bookmarkEnd}\n            minX={-outerX}\n            maxX={outerWidth}\n            immediate={immediate}\n            onDelete={() => {\n              onBookmarkChange(null, null)\n            }}\n            onSelect={() => {\n              onChange(bookmarkStart, bookmarkEnd)\n            }}\n          />\n        )}\n        <div\n          className={styles.graphContainer}\n          ref={(ref) => {\n            this.graphContainer = ref\n          }}\n        >\n          {/* // TODO separated drag area? */}\n          <div\n            className={styles.graph}\n            onMouseDown={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n            onTouchStart={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n          >\n            <TimelineUnits\n              {...this.props}\n              outerScale={this.outerScale}\n              outerStart={outerStart}\n              outerEnd={outerEnd}\n              immediate={immediate}\n            />\n            {this.props.children &&\n              this.props.children({\n                outerScale: this.outerScale,\n                outerStart,\n                outerEnd,\n                outerWidth,\n                outerHeight,\n                immediate,\n                graphHeight: outerHeight - 20,\n                tooltipContainer: this.tooltipContainer,\n                ...this.props,\n              })}\n          </div>\n        </div>\n        <div\n          ref={(el) => {\n            this.tooltipContainer = el\n          }}\n        />\n        <div\n          className={classNames(styles.veilLeft, styles.veil, {\n            [styles._immediate]: dragging === DRAG_START,\n          })}\n          style={{\n            width: dragging === DRAG_START ? handlerMouseX : innerStartPx,\n          }}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          dragging={this.state.dragging === DRAG_START}\n          x={innerStartPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          dragging={this.state.dragging === DRAG_END}\n          x={innerEndPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <div\n          className={classNames(styles.veilRight, styles.veil, {\n            [styles._immediate]: dragging === DRAG_END,\n          })}\n          style={{\n            left: dragging === DRAG_END ? handlerMouseX : innerEndPx,\n            width: dragging === DRAG_END ? outerWidth - handlerMouseX : outerWidth - innerEndPx,\n          }}\n        />\n        <Spring native immediate={immediate} to={{ left: this.outerScale(new Date(absoluteEnd)) }}>\n          {(style) => (\n            <animated.div className={styles.absoluteEnd} style={style}>\n              <div className={styles.lastUpdateLabel}>Last Update</div>\n              <div className={styles.lastUpdate}>{dayjs(absoluteEnd).format('MMMM D YYYY')}</div>\n            </animated.div>\n          )}\n        </Spring>\n      </div>\n    )\n  }\n}\n\nTimeline.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n}\n\nTimeline.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  onMouseLeave: () => {},\n  onMouseMove: () => {},\n}\n\nexport default Timeline\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M6 12v-2l2.66 2.66L6 15.34v-2a5.14 5.14 0 0 1-3.77-1.57A5.14 5.14 0 0 1 .66 8c0-1.04.28-1.99.84-2.84l.97.96A3.8 3.8 0 0 0 2 8c0 1.1.4 2.05 1.17 2.83A3.85 3.85 0 0 0 6 12zm0-9.34c1.46 0 2.71.52 3.77 1.57A5.14 5.14 0 0 1 11.34 8c0 1.04-.28 1.99-.84 2.84l-.97-.96A3.8 3.8 0 0 0 10 8c0-1.1-.4-2.05-1.17-2.83A3.85 3.85 0 0 0 6 4v2L3.34 3.34 6 .66v2z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgLoop = function SvgLoop(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 16\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/loop.5ff9db8c.svg\";\nexport { SvgLoop as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M7 0v7L2 3.5 7 0zM1 0v7H0V0h1z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgBack = function SvgBack(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/back.92029460.svg\";\nexport { SvgBack as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M.5 1.79v12.42a.5.5 0 0 0 .762.426l10.092-6.21a.5.5 0 0 0 0-.852L1.262 1.364A.5.5 0 0 0 .5 1.79z\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgPlay = function SvgPlay(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 16,\n    viewBox: \"0 0 13 16\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/play.df4d1e51.svg\";\nexport { SvgPlay as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0l5 3.5L0 7V0zm6 0h1v7H6V0z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgForward = function SvgForward(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/forward.a29c1440.svg\";\nexport { SvgForward as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M1.06 5v8a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1V5h-13zm14-2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2V3c0-1.1.9-2 2-2v.5a1.5 1.5 0 0 0 3 0V1h5v.5a1.5 1.5 0 0 0 3 0V1a2 2 0 0 1 2 2zm-9 4v5l-3-2.5 3-2.5zm3 0v5l3-2.5-3-2.5zm-5.5-7a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 1 0v-1a.5.5 0 0 0-.5-.5zm8 0a.5.5 0 0 0-.5.5v1a.5.5 0 1 0 1 0v-1a.5.5 0 0 0-.5-.5z\"\n});\n\nvar SvgTimeRange = function SvgTimeRange(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 15\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/timeRange.cb0de496.svg\";\nexport { SvgTimeRange as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fill: \"none\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmark = function SvgBookmark(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmark.d1725b51.svg\";\nexport { SvgBookmark as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  width: 7,\n  height: 1,\n  rx: 0.5,\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgMinus = function SvgMinus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 3,\n    viewBox: \"0 0 9 3\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/minus.cd2a0a55.svg\";\nexport { SvgMinus as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, React.createElement(\"rect\", {\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}), React.createElement(\"rect\", {\n  transform: \"rotate(90 3.5 3.5)\",\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}));\n\nvar SvgPlus = function SvgPlus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 9,\n    viewBox: \"0 0 9 9\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/plus.16944dd2.svg\";\nexport { SvgPlus as ReactComponent };","import React, { Component } from 'react'\nimport dayjs from 'dayjs'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaDays,\n  isMoreThanADay,\n  getHumanizedDates,\n} from './utils'\nimport styles from './timebar.module.css'\nimport TimeRangeSelector from './components/timerange-selector'\nimport Timeline from './components/timeline'\nimport { ReactComponent as IconLoop } from './icons/loop.svg'\nimport { ReactComponent as IconBack } from './icons/back.svg'\nimport { ReactComponent as IconPlay } from './icons/play.svg'\nimport { ReactComponent as IconForward } from './icons/forward.svg'\nimport { ReactComponent as IconTimeRange } from './icons/timeRange.svg'\nimport { ReactComponent as IconBookmark } from './icons/bookmark.svg'\nimport { ReactComponent as IconBookmarkFilled } from './icons/bookmarkFilled.svg'\nimport { ReactComponent as IconMinus } from './icons/minus.svg'\nimport { ReactComponent as IconPlus } from './icons/plus.svg'\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime)\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24\n\nclass Timebar extends Component {\n  constructor() {\n    super()\n    this.state = {\n      showTimeRangeSelector: false,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n\n    // TODO stick to day/hour here too\n    this.notifyChange(start, end)\n  }\n\n  static getDerivedStateFromProps(props) {\n    // let absolute end run through the end of the day\n    const absoluteEnd = dayjs(props.absoluteEnd)\n      .endOf('day')\n      .toISOString()\n    return {\n      absoluteEnd,\n    }\n  }\n\n  toggleTimeRangeSelector = () => {\n    this.setState((prevState) => ({\n      showTimeRangeSelector: !prevState.showTimeRangeSelector,\n    }))\n  }\n\n  setBookmark = () => {\n    const { start, end, onBookmarkChange } = this.props\n    onBookmarkChange(start, end)\n  }\n\n  onTimeRangeSelectorSubmit = (start, end) => {\n    this.notifyChange(start, end)\n    this.setState({\n      showTimeRangeSelector: false,\n    })\n  }\n\n  zoom = (zoom) => {\n    const { start, end, absoluteStart, absoluteEnd } = this.props\n    const delta = Math.round(getDeltaDays(start, end))\n\n    let steps\n    let nextDelta\n    let nextUnit = 'day'\n\n    if (zoom === 'in') {\n      steps = [365, 32, 30, 7, 1]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        if (delta > step) {\n          nextDelta = step\n          break\n        }\n      }\n      // sub-day situation\n      if (nextDelta === undefined) {\n        nextDelta = 23.9\n        nextUnit = 'hour'\n      }\n    } else if (zoom === 'out') {\n      steps = [1, 7, 30, 32, 365]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        // if (delta > step) {\n        if (delta < step) {\n          nextDelta = step\n          break\n        }\n      }\n\n      // more than 1 year situation\n      if (nextDelta === undefined) {\n        this.notifyChange(absoluteStart, absoluteEnd)\n        return\n      }\n    }\n\n    const unitOffsetMs = nextUnit === 'hour' ? ONE_DAY_MS / 24 : ONE_DAY_MS\n    const middleMs = getTime(start) + (getTime(end) - getTime(start)) / 2\n    const offsetMs = (nextDelta * unitOffsetMs) / 2\n    const newStartMs = middleMs - offsetMs\n    const mNewStart = dayjs(newStartMs).startOf(nextUnit)\n    const newEnd = mNewStart.add(nextDelta, nextUnit).toISOString()\n\n    const deltaMs = nextDelta * unitOffsetMs\n    const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n      mNewStart.toISOString(),\n      newEnd,\n      deltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    this.notifyChange(newStartClamped, newEndClamped)\n  }\n\n  notifyChange = (start, end) => {\n    const { onChange } = this.props\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(start, end)\n    onChange(start, end, humanizedStart, humanizedEnd)\n  }\n\n  render() {\n    const { start, end, absoluteStart, bookmarkStart, bookmarkEnd, enablePlayback } = this.props\n\n    // state.absoluteEnd overrides the value set in props.absoluteEnd - see getDerivedStateFromProps\n    const { showTimeRangeSelector, absoluteEnd } = this.state\n\n    const canZoomIn = isMoreThanADay(start, end)\n    const deltaDays = getDeltaDays(start, end)\n    const absoluteDeltaDays = getDeltaDays(absoluteStart, absoluteEnd)\n    const canZoomOut = deltaDays <= absoluteDeltaDays - 1\n\n    const hasBookmark =\n      bookmarkStart !== undefined &&\n      bookmarkStart !== null &&\n      bookmarkEnd !== undefined &&\n      bookmarkEnd !== null\n    const bookmarkDisabled =\n      hasBookmark &&\n      getTime(bookmarkStart) === getTime(start) &&\n      getTime(bookmarkEnd) === getTime(end)\n\n    return (\n      <div className={styles.Timebar}>\n        {enablePlayback && (\n          <div className={styles.playbackActions}>\n            <button\n              type=\"button\"\n              title=\"Toggle animation looping\"\n              className={classNames(styles.uiButton, styles.secondary, styles.loop)}\n            >\n              <IconLoop />\n            </button>\n            <button\n              type=\"button\"\n              title=\"Move back\"\n              className={classNames(styles.uiButton, styles.secondary, styles.back)}\n            >\n              <IconBack />\n            </button>\n            <button\n              type=\"button\"\n              title=\"Play animation\"\n              className={classNames(styles.uiButton, styles.play)}\n            >\n              <IconPlay />\n            </button>\n            <button\n              type=\"button\"\n              title=\"Move forward\"\n              className={classNames(styles.uiButton, styles.secondary, styles.forward)}\n            >\n              <IconForward />\n            </button>\n            <button\n              type=\"button\"\n              title=\"Change animation speed\"\n              className={classNames(styles.uiButton, styles.secondary, styles.speed)}\n            >\n              1x\n            </button>\n          </div>\n        )}\n\n        <div className={styles.timeActions}>\n          {showTimeRangeSelector && (\n            <TimeRangeSelector\n              {...this.props}\n              absoluteEnd={absoluteEnd}\n              onSubmit={this.onTimeRangeSelectorSubmit}\n              onDiscard={this.toggleTimeRangeSelector}\n            />\n          )}\n          <div className={styles.timeRangeContainer}>\n            <button\n              type=\"button\"\n              title=\"Select a time range\"\n              className={classNames(styles.uiButton, styles.timeRange)}\n              onClick={this.toggleTimeRangeSelector}\n            >\n              <IconTimeRange />\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            title=\"Bookmark current time range\"\n            className={classNames(styles.uiButton, styles.bookmark)}\n            onClick={this.setBookmark}\n            disabled={bookmarkDisabled === true}\n          >\n            {hasBookmark ? <IconBookmarkFilled /> : <IconBookmark />}\n          </button>\n          <div className={styles.timeScale}>\n            <button\n              type=\"button\"\n              title=\"Zoom out\"\n              disabled={canZoomOut === false}\n              onClick={() => {\n                this.zoom('out')\n              }}\n              className={classNames(styles.uiButton, styles.out)}\n            >\n              <IconMinus />\n            </button>\n            <button\n              type=\"button\"\n              title=\"Zoom in\"\n              disabled={canZoomIn === false}\n              onClick={() => {\n                this.zoom('in')\n              }}\n              className={classNames(styles.uiButton, styles.in)}\n            >\n              <IconPlus />\n            </button>\n          </div>\n        </div>\n\n        <Timeline {...this.props} onChange={this.notifyChange} absoluteEnd={absoluteEnd} />\n      </div>\n    )\n  }\n}\n\nTimebar.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  enablePlayback: PropTypes.bool,\n}\n\nTimebar.defaultProps = {\n  enablePlayback: false,\n}\n\nexport default Timebar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { stack, stackOrderNone, stackOffsetSilhouette, area, curveStepAfter } from 'd3-shape'\nimport dayjs from 'dayjs'\nimport styles from './events.module.css'\n\nconst TOP_MARGIN = 5\n\nclass Events extends Component {\n  getFinalEvents = memoize(\n    (events, showFishing) => {\n      let { labels, counts } = events.series\n\n      if (showFishing !== true) {\n        const fishingIndex = labels.indexOf('fishing')\n        labels = [...labels.slice(0, fishingIndex), ...labels.slice(fishingIndex + 1)]\n        counts = [...counts.slice(0, fishingIndex), ...counts.slice(fishingIndex + 1)]\n      }\n\n      const baseUnit = events.offset\n      const mStart = dayjs(events.start)\n      const mEnd = dayjs(events.end)\n      let mCurrentStart = mStart.clone()\n      const numUnits = mEnd.diff(mStart, baseUnit)\n\n      const allValues = []\n      let maxValue = 0\n\n      for (let dateIndex = 0; dateIndex < numUnits + 1; dateIndex += 1) {\n        let valuesAtDateSum = 0\n        const valuesAtDate = {\n          date: mCurrentStart.toDate(),\n        }\n        labels.forEach((key, keyIndex) => {\n          const value = counts[keyIndex][dateIndex]\n          valuesAtDate[key] = value\n          valuesAtDateSum += value\n        })\n\n        if (\n          labels.map((k) => valuesAtDate[k]).filter((v) => v === undefined).length === labels.length\n        ) {\n          console.warn('there are no values after this date, aborting rendering', valuesAtDate)\n          break\n        }\n\n        if (valuesAtDateSum > maxValue) {\n          maxValue = valuesAtDateSum\n        }\n\n        mCurrentStart = mCurrentStart.add(1, baseUnit)\n        allValues.push(valuesAtDate)\n      }\n\n      const allRatios = []\n      allValues.forEach((valuesAtDate) => {\n        const ratiosAtDate = { ...valuesAtDate }\n        labels.forEach((key) => {\n          ratiosAtDate[key] = valuesAtDate[key] / maxValue\n        })\n        allRatios.push(ratiosAtDate)\n      })\n      // need to pad with the last value to allow the curveStepAfter line generator to extend\n      allRatios.push({\n        ...allRatios[allRatios.length - 1],\n        date: mCurrentStart.toDate(),\n      })\n\n      const stackLayout = stack()\n        .keys(labels)\n        .order(stackOrderNone)\n        .offset(stackOffsetSilhouette)\n\n      return stackLayout(allRatios)\n    }\n    // TODO need custom equality comparator?\n    // (a: mixed, b: mixed) => boolean\n    // () => { return true; }\n  )\n\n  render() {\n    const { events, outerScale, outerWidth, graphHeight, showFishing } = this.props\n    // Calculate the latest derived data. If original events data hasn't changed\n    // since the last render, `memoize-one` will reuse the last return value.\n    // TODO this probably won't work correctly with Redux immutable state as nextProps.events !== props.events?\n    const finalEvents = this.getFinalEvents(events, showFishing)\n\n    const finalHeight = graphHeight - TOP_MARGIN * 2\n    const middle = graphHeight / 2\n\n    const areaGenerator = area()\n      .x((d) => outerScale(d.data.date))\n      .y0((d) => middle + finalHeight * d[0])\n      .y1((d) => middle + finalHeight * d[1])\n      .curve(curveStepAfter)\n    return (\n      <svg width={outerWidth} height={graphHeight} className={styles.Events}>\n        {finalEvents.map((eventsForKey) => (\n          <path\n            key={eventsForKey.key}\n            d={areaGenerator(eventsForKey)}\n            className={styles[eventsForKey.key]}\n          />\n        ))}\n      </svg>\n    )\n  }\n}\n\nEvents.propTypes = {\n  events: PropTypes.shape({\n    start: PropTypes.string,\n    end: PropTypes.string,\n    offset: PropTypes.string,\n    series: PropTypes.shape({\n      labels: PropTypes.arrayOf(PropTypes.string),\n      counts: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    }),\n  }).isRequired,\n  outerScale: PropTypes.func.isRequired,\n  outerWidth: PropTypes.number.isRequired,\n  graphHeight: PropTypes.number.isRequired,\n  showFishing: PropTypes.bool,\n}\n\nEvents.defaultProps = {\n  showFishing: false,\n}\n\nexport default Events\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport Timebar from './timebar'\nimport TimebarEvents from './charts/Events.js'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"timebar\"}}>{`Timebar`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"description\"}}>{`Description`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Visualize time-based data and allows users to filter it by a custom time range.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Currently used in:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/data-portal/blob/64aa2982d2159fbcf13ef58d25ea0ae3e01e0af9/src/timebar/TimebarWrapper.jsx#L2\"}}>{`Data portal`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"available-properties\"}}>{`Available properties`}</MDXTag>\n<PropsTable of={Timebar} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={``} __position={1} __code={'() => {\\n  const eventsMock = {\\n    start: \\'2014-01-01T00:00:00.000Z\\',\\n    end: \\'2018-12-27T00:00:00.000Z\\',\\n    offset: \\'day\\',\\n    series: {\\n      labels: [\\'encounter\\', \\'fishing\\', \\'gap\\', \\'port\\'],\\n      counts: [\\n        [\\n          36,\\n          36,\\n          24,\\n          16,\\n          16,\\n          8,\\n          22,\\n          28,\\n          22,\\n          26,\\n          36,\\n          32,\\n          68,\\n          40,\\n          30,\\n          32,\\n          44,\\n          52,\\n          56,\\n          18,\\n          34,\\n          30,\\n          32,\\n          32,\\n          24,\\n          26,\\n          34,\\n          24,\\n          34,\\n          30,\\n          62,\\n          36,\\n          26,\\n          38,\\n          26,\\n          26,\\n          14,\\n          26,\\n          26,\\n          20,\\n          32,\\n          36,\\n          42,\\n          36,\\n          22,\\n          32,\\n          32,\\n          34,\\n          32,\\n          38,\\n          38,\\n          22,\\n          28,\\n          22,\\n          12,\\n          14,\\n          14,\\n          14,\\n          16,\\n          20,\\n          10,\\n          18,\\n          28,\\n          14,\\n          28,\\n          40,\\n          32,\\n          52,\\n          24,\\n          34,\\n          24,\\n          34,\\n          24,\\n          34,\\n          22,\\n          26,\\n          28,\\n          12,\\n          16,\\n          26,\\n          18,\\n          12,\\n          14,\\n          28,\\n          32,\\n          26,\\n          28,\\n          14,\\n          34,\\n          14,\\n          14,\\n          20,\\n          22,\\n          16,\\n          16,\\n          16,\\n          22,\\n          28,\\n          20,\\n          26,\\n          20,\\n          26,\\n          32,\\n          54,\\n          38,\\n          20,\\n          38,\\n          22,\\n          20,\\n          8,\\n          16,\\n          16,\\n          8,\\n          4,\\n          8,\\n          12,\\n          12,\\n          16,\\n          16,\\n          24,\\n          18,\\n          12,\\n          20,\\n          22,\\n          22,\\n          36,\\n          40,\\n          20,\\n          42,\\n          18,\\n          16,\\n          26,\\n          28,\\n          38,\\n          26,\\n          28,\\n          12,\\n          8,\\n          10,\\n          8,\\n          8,\\n          16,\\n          16,\\n          16,\\n          24,\\n          20,\\n          20,\\n          26,\\n          8,\\n          24,\\n          10,\\n          16,\\n          32,\\n          22,\\n          6,\\n          20,\\n          18,\\n          16,\\n          14,\\n          24,\\n          22,\\n          24,\\n          22,\\n          16,\\n          14,\\n          14,\\n          28,\\n          20,\\n          24,\\n          16,\\n          14,\\n          20,\\n          34,\\n          26,\\n          32,\\n          16,\\n          20,\\n          16,\\n          22,\\n          14,\\n          14,\\n          22,\\n          24,\\n          20,\\n          10,\\n          12,\\n          14,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          38,\\n          16,\\n          20,\\n          24,\\n          22,\\n          26,\\n          22,\\n          10,\\n          18,\\n          22,\\n          12,\\n          24,\\n          14,\\n          14,\\n          28,\\n          26,\\n          30,\\n          28,\\n          24,\\n          24,\\n          24,\\n          10,\\n          16,\\n          16,\\n          8,\\n          16,\\n          24,\\n          20,\\n          30,\\n          12,\\n          16,\\n          36,\\n          20,\\n          22,\\n          12,\\n          20,\\n          32,\\n          28,\\n          32,\\n          18,\\n          32,\\n          8,\\n          6,\\n          26,\\n          14,\\n          28,\\n          20,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          14,\\n          6,\\n          18,\\n          22,\\n          14,\\n          10,\\n          18,\\n          18,\\n          20,\\n          14,\\n          20,\\n          26,\\n          16,\\n          22,\\n          20,\\n          10,\\n          10,\\n          20,\\n          14,\\n          20,\\n          16,\\n          10,\\n          26,\\n          18,\\n          14,\\n          20,\\n          12,\\n          22,\\n          28,\\n          16,\\n          22,\\n          26,\\n          12,\\n          22,\\n          12,\\n          14,\\n          20,\\n          14,\\n          12,\\n          16,\\n          14,\\n          16,\\n          12,\\n          12,\\n          14,\\n          32,\\n          26,\\n          36,\\n          26,\\n          20,\\n          44,\\n          22,\\n          28,\\n          22,\\n          24,\\n          18,\\n          12,\\n          10,\\n          24,\\n          20,\\n          32,\\n          12,\\n          22,\\n          18,\\n          26,\\n          34,\\n          26,\\n          18,\\n          16,\\n          26,\\n          12,\\n          16,\\n          12,\\n          10,\\n          22,\\n          18,\\n          30,\\n          22,\\n          28,\\n          18,\\n          20,\\n          16,\\n          14,\\n          10,\\n          12,\\n          8,\\n          14,\\n          12,\\n          10,\\n          10,\\n          12,\\n          8,\\n          12,\\n          14,\\n          18,\\n          20,\\n          28,\\n          24,\\n          38,\\n          18,\\n          20,\\n          6,\\n          16,\\n          14,\\n          6,\\n          20,\\n          6,\\n          8,\\n          16,\\n          8,\\n          24,\\n          32,\\n          36,\\n          20,\\n          24,\\n          22,\\n          36,\\n          36,\\n          40,\\n          40,\\n          34,\\n          32,\\n          28,\\n          34,\\n          28,\\n          34,\\n          24,\\n          50,\\n          70,\\n          54,\\n          46,\\n          20,\\n          46,\\n          40,\\n          38,\\n          44,\\n          38,\\n          38,\\n          40,\\n          20,\\n          24,\\n          16,\\n          30,\\n          52,\\n          54,\\n          34,\\n          42,\\n          36,\\n          24,\\n          24,\\n          20,\\n          56,\\n          30,\\n          50,\\n          30,\\n          22,\\n          26,\\n          30,\\n          20,\\n          4,\\n          20,\\n          16,\\n          14,\\n          20,\\n          12,\\n          22,\\n          34,\\n          34,\\n          34,\\n          30,\\n          36,\\n          42,\\n          20,\\n          20,\\n          12,\\n          14,\\n          20,\\n          8,\\n          12,\\n          16,\\n          8,\\n          26,\\n          26,\\n          20,\\n          24,\\n          20,\\n          20,\\n          24,\\n          16,\\n          38,\\n          20,\\n          12,\\n          10,\\n          14,\\n          18,\\n          8,\\n          2,\\n          14,\\n          8,\\n          0,\\n          10,\\n          6,\\n          18,\\n          18,\\n          10,\\n          12,\\n          10,\\n          6,\\n          14,\\n          4,\\n          18,\\n          20,\\n          24,\\n          24,\\n          18,\\n          22,\\n          22,\\n          12,\\n          6,\\n          6,\\n          8,\\n          2,\\n          0,\\n          4,\\n          2,\\n          4,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          6,\\n          8,\\n          6,\\n          8,\\n          6,\\n          4,\\n          4,\\n          10,\\n          10,\\n          4,\\n          8,\\n          22,\\n          22,\\n          10,\\n          12,\\n          18,\\n          14,\\n          6,\\n          0,\\n          4,\\n          6,\\n          10,\\n          6,\\n          8,\\n          12,\\n          8,\\n          2,\\n          16,\\n          12,\\n          4,\\n          2,\\n          10,\\n          6,\\n          0,\\n          12,\\n          8,\\n          14,\\n          2,\\n          14,\\n          22,\\n          16,\\n          24,\\n          18,\\n          20,\\n          36,\\n          18,\\n          12,\\n          10,\\n          8,\\n          16,\\n          0,\\n          0,\\n          0,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          8,\\n          6,\\n          6,\\n          4,\\n          6,\\n          2,\\n          4,\\n          0,\\n          6,\\n          6,\\n          4,\\n          6,\\n          8,\\n          10,\\n          6,\\n          12,\\n          16,\\n          10,\\n          4,\\n          6,\\n          2,\\n          8,\\n          0,\\n          6,\\n          4,\\n          4,\\n          10,\\n          18,\\n          16,\\n          14,\\n          6,\\n          0,\\n          8,\\n          2,\\n          8,\\n          14,\\n          12,\\n          10,\\n          6,\\n          10,\\n          10,\\n          12,\\n          20,\\n          16,\\n          28,\\n          8,\\n          12,\\n          8,\\n          4,\\n          2,\\n          2,\\n          6,\\n          8,\\n          4,\\n          8,\\n          4,\\n          2,\\n          4,\\n          0,\\n          4,\\n          2,\\n          2,\\n          2,\\n          2,\\n          0,\\n          4,\\n          4,\\n          6,\\n          14,\\n          8,\\n          12,\\n          18,\\n          26,\\n          18,\\n          10,\\n          18,\\n          10,\\n          14,\\n          14,\\n          14,\\n          4,\\n          2,\\n          2,\\n          4,\\n          2,\\n          4,\\n          6,\\n          4,\\n          6,\\n          22,\\n          8,\\n          8,\\n          24,\\n          14,\\n          6,\\n          8,\\n          8,\\n          8,\\n          8,\\n          14,\\n          6,\\n          18,\\n          18,\\n          16,\\n          32,\\n          24,\\n          52,\\n          18,\\n          18,\\n          8,\\n          4,\\n          2,\\n          0,\\n          4,\\n          2,\\n          10,\\n          14,\\n          6,\\n          16,\\n          14,\\n          6,\\n          18,\\n          4,\\n          12,\\n          10,\\n          8,\\n          8,\\n          12,\\n          8,\\n          8,\\n          6,\\n          10,\\n          18,\\n          10,\\n          6,\\n          12,\\n          6,\\n          14,\\n          4,\\n          16,\\n          10,\\n          4,\\n          12,\\n          14,\\n          12,\\n          22,\\n          20,\\n          14,\\n          18,\\n          20,\\n          8,\\n          12,\\n          18,\\n          6,\\n          4,\\n          10,\\n          10,\\n          16,\\n          14,\\n          14,\\n          6,\\n          14,\\n          14,\\n          6,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          8,\\n          6,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          28,\\n          10,\\n          12,\\n          20,\\n          30,\\n          24,\\n          24,\\n          32,\\n          30,\\n          22,\\n          16,\\n          26,\\n          18,\\n          18,\\n          24,\\n          14,\\n          20,\\n          30,\\n          22,\\n          8,\\n          0,\\n          16,\\n          22,\\n          18,\\n          10,\\n          24,\\n          16,\\n          4,\\n          8,\\n          12,\\n          10,\\n          10,\\n          10,\\n          8,\\n          8,\\n          20,\\n          14,\\n          18,\\n          24,\\n          24,\\n          28,\\n          30,\\n          20,\\n          40,\\n          36,\\n          32,\\n          56,\\n          54,\\n          60,\\n          56,\\n          28,\\n          16,\\n          28,\\n          30,\\n          22,\\n          22,\\n          14,\\n          62,\\n          40,\\n          42,\\n          68,\\n          60,\\n          56,\\n          64,\\n          32,\\n          50,\\n          34,\\n          14,\\n          24,\\n          20,\\n          24,\\n          38,\\n          42,\\n          60,\\n          46,\\n          52,\\n          42,\\n          30,\\n          28,\\n          12,\\n          16,\\n          14,\\n          22,\\n          16,\\n          12,\\n          18,\\n          38,\\n          16,\\n          30,\\n          24,\\n          16,\\n          20,\\n          10,\\n          14,\\n          14,\\n          30,\\n          30,\\n          16,\\n          30,\\n          14,\\n          50,\\n          52,\\n          64,\\n          66,\\n          64,\\n          54,\\n          44,\\n          46,\\n          52,\\n          52,\\n          34,\\n          40,\\n          30,\\n          36,\\n          28,\\n          34,\\n          22,\\n          34,\\n          20,\\n          20,\\n          20,\\n          22,\\n          18,\\n          16,\\n          30,\\n          16,\\n          24,\\n          28,\\n          22,\\n          24,\\n          34,\\n          42,\\n          50,\\n          62,\\n          44,\\n          46,\\n          44,\\n          34,\\n          20,\\n          32,\\n          32,\\n          20,\\n          28,\\n          20,\\n          20,\\n          32,\\n          20,\\n          12,\\n          16,\\n          16,\\n          24,\\n          6,\\n          18,\\n          22,\\n          26,\\n          16,\\n          12,\\n          22,\\n          10,\\n          18,\\n          38,\\n          58,\\n          44,\\n          44,\\n          44,\\n          44,\\n          24,\\n          18,\\n          14,\\n          12,\\n          12,\\n          12,\\n          10,\\n          18,\\n          10,\\n          24,\\n          14,\\n          18,\\n          22,\\n          10,\\n          20,\\n          18,\\n          18,\\n          6,\\n          22,\\n          20,\\n          26,\\n          10,\\n          24,\\n          28,\\n          24,\\n          34,\\n          68,\\n          32,\\n          28,\\n          24,\\n          18,\\n          30,\\n          32,\\n          16,\\n          12,\\n          24,\\n          22,\\n          10,\\n          12,\\n          36,\\n          28,\\n          52,\\n          28,\\n          14,\\n          6,\\n          10,\\n          8,\\n          16,\\n          10,\\n          12,\\n          38,\\n          32,\\n          34,\\n          24,\\n          28,\\n          46,\\n          36,\\n          32,\\n          38,\\n          18,\\n          22,\\n          18,\\n          14,\\n          20,\\n          24,\\n          16,\\n          20,\\n          10,\\n          28,\\n          42,\\n          36,\\n          30,\\n          20,\\n          18,\\n          26,\\n          16,\\n          24,\\n          20,\\n          38,\\n          52,\\n          40,\\n          34,\\n          46,\\n          42,\\n          24,\\n          48,\\n          62,\\n          60,\\n          76,\\n          30,\\n          36,\\n          32,\\n          42,\\n          32,\\n          48,\\n          30,\\n          32,\\n          42,\\n          32,\\n          22,\\n          20,\\n          14,\\n          38,\\n          40,\\n          32,\\n          46,\\n          32,\\n          42,\\n          22,\\n          30,\\n          24,\\n          24,\\n          30,\\n          44,\\n          26,\\n          38,\\n          28,\\n          6,\\n          40,\\n          22,\\n          32,\\n          28,\\n          32,\\n          44,\\n          48,\\n          38,\\n          50,\\n          92,\\n          50,\\n          38,\\n          44,\\n          42,\\n          22,\\n          30,\\n          32,\\n          34,\\n          34,\\n          72,\\n          46,\\n          60,\\n          28,\\n          44,\\n          76,\\n          78,\\n          72,\\n          60,\\n          68,\\n          72,\\n          32,\\n          24,\\n          28,\\n          38,\\n          32,\\n          42,\\n          34,\\n          38,\\n          44,\\n          22,\\n          30,\\n          28,\\n          20,\\n          24,\\n          24,\\n          16,\\n          26,\\n          28,\\n          16,\\n          16,\\n          26,\\n          14,\\n          28,\\n          44,\\n          48,\\n          48,\\n          36,\\n          32,\\n          46,\\n          24,\\n          20,\\n          20,\\n          20,\\n          24,\\n          38,\\n          50,\\n          24,\\n          42,\\n          46,\\n          24,\\n          44,\\n          26,\\n          20,\\n          30,\\n          16,\\n          18,\\n          28,\\n          22,\\n          20,\\n          18,\\n          36,\\n          42,\\n          42,\\n          34,\\n          60,\\n          56,\\n          54,\\n          26,\\n          52,\\n          40,\\n          44,\\n          90,\\n          66,\\n          78,\\n          70,\\n          58,\\n          66,\\n          26,\\n          42,\\n          38,\\n          58,\\n          114,\\n          122,\\n          120,\\n          90,\\n          72,\\n          38,\\n          80,\\n          60,\\n          62,\\n          58,\\n          58,\\n          30,\\n          66,\\n          58,\\n          46,\\n          34,\\n          50,\\n          26,\\n          46,\\n          32,\\n          40,\\n          26,\\n          18,\\n          22,\\n          98,\\n          82,\\n          118,\\n          162,\\n          130,\\n          94,\\n          128,\\n          80,\\n          54,\\n          90,\\n          138,\\n          140,\\n          144,\\n          98,\\n          150,\\n          140,\\n          150,\\n          166,\\n          118,\\n          128,\\n          112,\\n          96,\\n          62,\\n          26,\\n          36,\\n          18,\\n          62,\\n          36,\\n          76,\\n          44,\\n          54,\\n          32,\\n          36,\\n          28,\\n          26,\\n          28,\\n          24,\\n          20,\\n          22,\\n          12,\\n          28,\\n          24,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          30,\\n          38,\\n          30,\\n          30,\\n          24,\\n          20,\\n          20,\\n          22,\\n          28,\\n          16,\\n          28,\\n          34,\\n          26,\\n          10,\\n          8,\\n          14,\\n          16,\\n          16,\\n          22,\\n          20,\\n          8,\\n          26,\\n          18,\\n          24,\\n          18,\\n          18,\\n          12,\\n          16,\\n          18,\\n          32,\\n          50,\\n          46,\\n          54,\\n          38,\\n          38,\\n          34,\\n          26,\\n          22,\\n          26,\\n          32,\\n          26,\\n          30,\\n          22,\\n          12,\\n          18,\\n          20,\\n          12,\\n          28,\\n          10,\\n          14,\\n          16,\\n          14,\\n          16,\\n          18,\\n          24,\\n          12,\\n          26,\\n          32,\\n          24,\\n          60,\\n          90,\\n          62,\\n          52,\\n          34,\\n          32,\\n          24,\\n          12,\\n          12,\\n          10,\\n          20,\\n          10,\\n          8,\\n          22,\\n          12,\\n          22,\\n          20,\\n          8,\\n          14,\\n          10,\\n          16,\\n          14,\\n          14,\\n          10,\\n          12,\\n          14,\\n          4,\\n          14,\\n          28,\\n          48,\\n          42,\\n          42,\\n          32,\\n          24,\\n          14,\\n          14,\\n          8,\\n          10,\\n          8,\\n          18,\\n          20,\\n          30,\\n          14,\\n          10,\\n          12,\\n          16,\\n          28,\\n          26,\\n          18,\\n          10,\\n          16,\\n          20,\\n          18,\\n          12,\\n          20,\\n          16,\\n          16,\\n          32,\\n          38,\\n          50,\\n          36,\\n          48,\\n          32,\\n          32,\\n          40,\\n          34,\\n          26,\\n          16,\\n          14,\\n          46,\\n          40,\\n          48,\\n          12,\\n          20,\\n          14,\\n          22,\\n          22,\\n          26,\\n          30,\\n          24,\\n          12,\\n          44,\\n          36,\\n          32,\\n          32,\\n          52,\\n          48,\\n          40,\\n          48,\\n          80,\\n          96,\\n          60,\\n          74,\\n          62,\\n          42,\\n          26,\\n          38,\\n          18,\\n          34,\\n          44,\\n          36,\\n          36,\\n          26,\\n          34,\\n          30,\\n          14,\\n          10,\\n          18,\\n          14,\\n          18,\\n          18,\\n          4,\\n          12,\\n          18,\\n          20,\\n          24,\\n          28,\\n          32,\\n          50,\\n          62,\\n          82,\\n          78,\\n          72,\\n          58,\\n          58,\\n          68,\\n          90,\\n          68,\\n          22,\\n          32,\\n          22,\\n          42,\\n          22,\\n          26,\\n          70,\\n          42,\\n          48,\\n          40,\\n          42,\\n          36,\\n          30,\\n          32,\\n          14,\\n          38,\\n          38,\\n          44,\\n          46,\\n          44,\\n          42,\\n          76,\\n          70,\\n          62,\\n          48,\\n          84,\\n          28,\\n          42,\\n          34,\\n          42,\\n          44,\\n          38,\\n          56,\\n          62,\\n          86,\\n          56,\\n          62,\\n          90,\\n          64,\\n          78,\\n          82,\\n          50,\\n          54,\\n          50,\\n          46,\\n          42,\\n          56,\\n          46,\\n          66,\\n          100,\\n          84,\\n          106,\\n          68,\\n          56,\\n          38,\\n          36,\\n          24,\\n          40,\\n          50,\\n          34,\\n          24,\\n          68,\\n          48,\\n          40,\\n          50,\\n          38,\\n          64,\\n          52,\\n          50,\\n          36,\\n          40,\\n          52,\\n          62,\\n          86,\\n          48,\\n          58,\\n          46,\\n          48,\\n          38,\\n          58,\\n          64,\\n          38,\\n          54,\\n          48,\\n          24,\\n          28,\\n          24,\\n          36,\\n          40,\\n          16,\\n          32,\\n          32,\\n          22,\\n          36,\\n          54,\\n          56,\\n          70,\\n          62,\\n          48,\\n          30,\\n          54,\\n          44,\\n          20,\\n          42,\\n          44,\\n          40,\\n          36,\\n          50,\\n          24,\\n          42,\\n          64,\\n          54,\\n          40,\\n          22,\\n          32,\\n          26,\\n          32,\\n          42,\\n          52,\\n          80,\\n          74,\\n          52,\\n          30,\\n          58,\\n          42,\\n          34,\\n          72,\\n          66,\\n          64,\\n          68,\\n          72,\\n          72,\\n          64,\\n          138,\\n          144,\\n          146,\\n          140,\\n          166,\\n          126,\\n          134,\\n          118,\\n          130,\\n          82,\\n          54,\\n          62,\\n          64,\\n          70,\\n          68,\\n          52,\\n          32,\\n          28,\\n          54,\\n          62,\\n          70,\\n          78,\\n          84,\\n          68,\\n          54,\\n          24,\\n          40,\\n          38,\\n          40,\\n          26,\\n          42,\\n          36,\\n          36,\\n          48,\\n          26,\\n          60,\\n          64,\\n          60,\\n          48,\\n          46,\\n          58,\\n          78,\\n          88,\\n          68,\\n          54,\\n          42,\\n          66,\\n          46,\\n          38,\\n          64,\\n          40,\\n          38,\\n          36,\\n          32,\\n          44,\\n          104,\\n          144,\\n          146,\\n          100,\\n          64,\\n          30,\\n          24,\\n          44,\\n          68,\\n          42,\\n          84,\\n          62,\\n          58,\\n          40,\\n          24,\\n          16,\\n          22,\\n          24,\\n          30,\\n          28,\\n          22,\\n          38,\\n          16,\\n          14,\\n          20,\\n          24,\\n          16,\\n          18,\\n          16,\\n          6,\\n          18,\\n          16,\\n          24,\\n          20,\\n          28,\\n          22,\\n          32,\\n          54,\\n          72,\\n          96,\\n          78,\\n          66,\\n          102,\\n          52,\\n          28,\\n          26,\\n          16,\\n          36,\\n          26,\\n          24,\\n          12,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          32,\\n          10,\\n          12,\\n          16,\\n          8,\\n          14,\\n          12,\\n          18,\\n          14,\\n          34,\\n          34,\\n          54,\\n          70,\\n          64,\\n          68,\\n          52,\\n          38,\\n          36,\\n          26,\\n          32,\\n          32,\\n          18,\\n          36,\\n          34,\\n          14,\\n          14,\\n          30,\\n          20,\\n          34,\\n          78,\\n          30,\\n          16,\\n          20,\\n          12,\\n          26,\\n          12,\\n          22,\\n          20,\\n          32,\\n          20,\\n          26,\\n          86,\\n          68,\\n          68,\\n          68,\\n          56,\\n          56,\\n          26,\\n          44,\\n          54,\\n          54,\\n          40,\\n          56,\\n          28,\\n          42,\\n          42,\\n          50,\\n          36,\\n          40,\\n          58,\\n          32,\\n          42,\\n          18,\\n          40,\\n          34,\\n          38,\\n          46,\\n          34,\\n          80,\\n          82,\\n          86,\\n          58,\\n          64,\\n          78,\\n          64,\\n          46,\\n          48,\\n          52,\\n          30,\\n          40,\\n          64,\\n          88,\\n          60,\\n          50,\\n          42,\\n          38,\\n          36,\\n          20,\\n          30,\\n          42,\\n          34,\\n          36,\\n          24,\\n          34,\\n          46,\\n          54,\\n          50,\\n          30,\\n          54,\\n          44,\\n          86,\\n          84,\\n          96,\\n          78,\\n          58,\\n          58,\\n          40,\\n          48,\\n          38,\\n          60,\\n          74,\\n          84,\\n          66,\\n          52,\\n          42,\\n          44,\\n          32,\\n          52,\\n          52,\\n          48,\\n          42,\\n          60,\\n          50,\\n          48,\\n          68,\\n          46,\\n          60,\\n          66,\\n          68,\\n          92,\\n          96,\\n          104,\\n          80,\\n          104,\\n          104,\\n          80,\\n          68,\\n          50,\\n          70,\\n          56,\\n          66,\\n          56,\\n          36,\\n          26,\\n          32,\\n          30,\\n          20,\\n          40,\\n          46,\\n          36,\\n          44,\\n          32,\\n          30,\\n          28,\\n          36,\\n          44,\\n          52,\\n          76,\\n          34,\\n          40,\\n          54,\\n          58,\\n          70,\\n          60,\\n          78,\\n          64,\\n          44,\\n          48,\\n          42,\\n          26,\\n          52,\\n          62,\\n          62,\\n          60,\\n          38,\\n          46,\\n          62,\\n          46,\\n          34,\\n          28,\\n          36,\\n          28,\\n          22,\\n          56,\\n          40,\\n          58,\\n          34,\\n          44,\\n          56,\\n          54,\\n          66,\\n          72,\\n          58,\\n          54,\\n          40,\\n          56,\\n          38,\\n          32,\\n          42,\\n          28,\\n          40,\\n          50,\\n          20,\\n          20,\\n          32,\\n          38,\\n          26,\\n          34,\\n          26,\\n          36,\\n          42,\\n          54,\\n          52,\\n          56,\\n          28,\\n          20,\\n          24,\\n          36,\\n          40,\\n          54,\\n          76,\\n          54,\\n          44,\\n          38,\\n          56,\\n          50,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          1414,\\n          1343,\\n          1385,\\n          1471,\\n          1444,\\n          1477,\\n          1321,\\n          1405,\\n          1383,\\n          1388,\\n          1426,\\n          1458,\\n          1514,\\n          1504,\\n          1527,\\n          1517,\\n          1599,\\n          1513,\\n          1486,\\n          1500,\\n          1247,\\n          1435,\\n          1547,\\n          1498,\\n          1378,\\n          1407,\\n          1443,\\n          1381,\\n          1401,\\n          1357,\\n          1414,\\n          1093,\\n          1004,\\n          859,\\n          979,\\n          973,\\n          1038,\\n          985,\\n          1059,\\n          1154,\\n          1306,\\n          1483,\\n          1509,\\n          1482,\\n          1527,\\n          1591,\\n          1616,\\n          1607,\\n          1581,\\n          1543,\\n          1469,\\n          1453,\\n          1419,\\n          1392,\\n          1403,\\n          1533,\\n          1621,\\n          1625,\\n          1653,\\n          1658,\\n          1625,\\n          1607,\\n          1626,\\n          1634,\\n          1637,\\n          1573,\\n          1546,\\n          1472,\\n          1473,\\n          1501,\\n          1527,\\n          1580,\\n          1627,\\n          1791,\\n          1894,\\n          1933,\\n          2013,\\n          2272,\\n          2378,\\n          2425,\\n          2381,\\n          2328,\\n          2343,\\n          2283,\\n          2298,\\n          1989,\\n          1862,\\n          1851,\\n          1756,\\n          1811,\\n          1985,\\n          2213,\\n          2242,\\n          2316,\\n          2370,\\n          2305,\\n          2318,\\n          2243,\\n          2308,\\n          2425,\\n          2385,\\n          2534,\\n          2597,\\n          2570,\\n          2624,\\n          2587,\\n          2652,\\n          2631,\\n          2709,\\n          2631,\\n          2654,\\n          2681,\\n          2674,\\n          2571,\\n          2431,\\n          2414,\\n          2483,\\n          2444,\\n          2372,\\n          2482,\\n          2377,\\n          2227,\\n          2150,\\n          2104,\\n          2150,\\n          1999,\\n          2145,\\n          2244,\\n          2288,\\n          2382,\\n          2508,\\n          2591,\\n          2526,\\n          2587,\\n          2613,\\n          2587,\\n          2610,\\n          2615,\\n          2586,\\n          2581,\\n          2574,\\n          2618,\\n          2566,\\n          2582,\\n          2638,\\n          2699,\\n          2676,\\n          2855,\\n          2812,\\n          2719,\\n          2686,\\n          2555,\\n          2328,\\n          2253,\\n          2189,\\n          2066,\\n          2065,\\n          2156,\\n          2076,\\n          2155,\\n          2176,\\n          2130,\\n          2048,\\n          1903,\\n          1870,\\n          1842,\\n          1798,\\n          1719,\\n          1678,\\n          1629,\\n          1623,\\n          1481,\\n          1446,\\n          1601,\\n          1597,\\n          1588,\\n          1633,\\n          1588,\\n          1580,\\n          1520,\\n          1457,\\n          1475,\\n          1453,\\n          1410,\\n          1409,\\n          1355,\\n          1369,\\n          1496,\\n          1618,\\n          1688,\\n          1776,\\n          1800,\\n          1813,\\n          1894,\\n          1977,\\n          2049,\\n          2029,\\n          2060,\\n          2082,\\n          2158,\\n          2208,\\n          2255,\\n          2326,\\n          2245,\\n          2172,\\n          2150,\\n          2274,\\n          2162,\\n          2028,\\n          1986,\\n          1885,\\n          1796,\\n          1829,\\n          1842,\\n          1861,\\n          1870,\\n          1928,\\n          2018,\\n          2030,\\n          1733,\\n          1754,\\n          1802,\\n          1864,\\n          1836,\\n          1864,\\n          1885,\\n          1929,\\n          1876,\\n          1902,\\n          1929,\\n          1932,\\n          1952,\\n          1926,\\n          1901,\\n          1820,\\n          1859,\\n          1763,\\n          1777,\\n          1696,\\n          1615,\\n          1606,\\n          1562,\\n          1568,\\n          1562,\\n          1559,\\n          1611,\\n          1547,\\n          1583,\\n          1646,\\n          1553,\\n          1446,\\n          1550,\\n          1564,\\n          1591,\\n          1577,\\n          1593,\\n          1582,\\n          1537,\\n          1707,\\n          1728,\\n          1631,\\n          1736,\\n          1694,\\n          1723,\\n          1707,\\n          1680,\\n          1713,\\n          1722,\\n          1577,\\n          1581,\\n          1538,\\n          1538,\\n          1563,\\n          1599,\\n          1532,\\n          1600,\\n          1616,\\n          1443,\\n          1704,\\n          1639,\\n          1766,\\n          1797,\\n          1875,\\n          1825,\\n          1861,\\n          1904,\\n          1888,\\n          1931,\\n          1994,\\n          1997,\\n          2008,\\n          2047,\\n          2036,\\n          1931,\\n          1897,\\n          1847,\\n          1854,\\n          1881,\\n          1846,\\n          1650,\\n          1627,\\n          1562,\\n          1532,\\n          1536,\\n          1556,\\n          1522,\\n          1564,\\n          1694,\\n          1788,\\n          1957,\\n          2006,\\n          2190,\\n          2314,\\n          2308,\\n          2246,\\n          1881,\\n          1860,\\n          1804,\\n          2131,\\n          2167,\\n          2058,\\n          2120,\\n          2154,\\n          1863,\\n          1885,\\n          1891,\\n          1950,\\n          1903,\\n          1778,\\n          1757,\\n          1672,\\n          1597,\\n          1561,\\n          1612,\\n          1711,\\n          1790,\\n          1855,\\n          1942,\\n          1888,\\n          1877,\\n          1924,\\n          2030,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          22,\\n          23,\\n          22,\\n          38,\\n          34,\\n          22,\\n          19,\\n          22,\\n          22,\\n          19,\\n          30,\\n          20,\\n          12,\\n          17,\\n          22,\\n          19,\\n          18,\\n          19,\\n          22,\\n          23,\\n          29,\\n          27,\\n          22,\\n          22,\\n          28,\\n          18,\\n          17,\\n          24,\\n          19,\\n          14,\\n          25,\\n          10,\\n          17,\\n          12,\\n          26,\\n          23,\\n          17,\\n          19,\\n          24,\\n          25,\\n          27,\\n          17,\\n          27,\\n          23,\\n          20,\\n          25,\\n          30,\\n          23,\\n          27,\\n          25,\\n          28,\\n          31,\\n          34,\\n          32,\\n          27,\\n          33,\\n          28,\\n          32,\\n          23,\\n          21,\\n          28,\\n          22,\\n          33,\\n          21,\\n          21,\\n          85,\\n          190,\\n          119,\\n          31,\\n          37,\\n          58,\\n          135,\\n          41,\\n          41,\\n          46,\\n          37,\\n          35,\\n          27,\\n          39,\\n          31,\\n          111,\\n          45,\\n          27,\\n          30,\\n          57,\\n          52,\\n          66,\\n          55,\\n          32,\\n          31,\\n          43,\\n          40,\\n          38,\\n          41,\\n          39,\\n          38,\\n          65,\\n          39,\\n          46,\\n          65,\\n          49,\\n          75,\\n          61,\\n          43,\\n          40,\\n          92,\\n          55,\\n          62,\\n          41,\\n          75,\\n          62,\\n          51,\\n          73,\\n          242,\\n          46,\\n          41,\\n          51,\\n          50,\\n          54,\\n          57,\\n          51,\\n          46,\\n          52,\\n          46,\\n          51,\\n          63,\\n          43,\\n          54,\\n          38,\\n          55,\\n          77,\\n          43,\\n          53,\\n          48,\\n          90,\\n          54,\\n          61,\\n          53,\\n          30,\\n          53,\\n          79,\\n          194,\\n          58,\\n          46,\\n          64,\\n          47,\\n          54,\\n          56,\\n          42,\\n          60,\\n          42,\\n          48,\\n          37,\\n          53,\\n          41,\\n          55,\\n          52,\\n          40,\\n          43,\\n          39,\\n          35,\\n          23,\\n          35,\\n          28,\\n          24,\\n          21,\\n          31,\\n          39,\\n          22,\\n          33,\\n          28,\\n          30,\\n          24,\\n          33,\\n          20,\\n          26,\\n          28,\\n          29,\\n          21,\\n          25,\\n          20,\\n          37,\\n          33,\\n          36,\\n          21,\\n          28,\\n          38,\\n          33,\\n          35,\\n          45,\\n          33,\\n          38,\\n          41,\\n          45,\\n          43,\\n          46,\\n          36,\\n          40,\\n          29,\\n          29,\\n          43,\\n          41,\\n          37,\\n          42,\\n          39,\\n          39,\\n          42,\\n          35,\\n          37,\\n          34,\\n          35,\\n          53,\\n          38,\\n          39,\\n          35,\\n          33,\\n          38,\\n          57,\\n          80,\\n          46,\\n          50,\\n          50,\\n          40,\\n          45,\\n          44,\\n          58,\\n          61,\\n          59,\\n          44,\\n          48,\\n          40,\\n          45,\\n          39,\\n          38,\\n          34,\\n          56,\\n          44,\\n          36,\\n          32,\\n          49,\\n          38,\\n          41,\\n          50,\\n          41,\\n          45,\\n          46,\\n          41,\\n          42,\\n          44,\\n          57,\\n          47,\\n          38,\\n          105,\\n          47,\\n          57,\\n          51,\\n          43,\\n          53,\\n          36,\\n          45,\\n          59,\\n          45,\\n          68,\\n          70,\\n          57,\\n          49,\\n          56,\\n          40,\\n          52,\\n          52,\\n          37,\\n          52,\\n          51,\\n          57,\\n          35,\\n          56,\\n          59,\\n          46,\\n          63,\\n          47,\\n          46,\\n          45,\\n          46,\\n          46,\\n          44,\\n          46,\\n          43,\\n          45,\\n          42,\\n          37,\\n          50,\\n          46,\\n          35,\\n          45,\\n          43,\\n          34,\\n          42,\\n          43,\\n          45,\\n          40,\\n          60,\\n          39,\\n          56,\\n          76,\\n          41,\\n          42,\\n          56,\\n          35,\\n          43,\\n          35,\\n          49,\\n          40,\\n          286,\\n          64,\\n          46,\\n          128,\\n          65,\\n          49,\\n          42,\\n          48,\\n          60,\\n          34,\\n          31,\\n          37,\\n          35,\\n          31,\\n          40,\\n          39,\\n          29,\\n          34,\\n          78,\\n          31,\\n          39,\\n          37,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          65,\\n          102,\\n          90,\\n          100,\\n          106,\\n          100,\\n          120,\\n          136,\\n          94,\\n          95,\\n          143,\\n          112,\\n          109,\\n          108,\\n          97,\\n          99,\\n          85,\\n          87,\\n          110,\\n          82,\\n          96,\\n          95,\\n          74,\\n          129,\\n          140,\\n          124,\\n          127,\\n          85,\\n          128,\\n          122,\\n          105,\\n          121,\\n          117,\\n          107,\\n          80,\\n          100,\\n          76,\\n          121,\\n          119,\\n          87,\\n          101,\\n          92,\\n          71,\\n          90,\\n          81,\\n          73,\\n          76,\\n          82,\\n          66,\\n          91,\\n          71,\\n          81,\\n          101,\\n          100,\\n          85,\\n          88,\\n          105,\\n          123,\\n          110,\\n          100,\\n          113,\\n          91,\\n          76,\\n          118,\\n          129,\\n          123,\\n          128,\\n          112,\\n          122,\\n          108,\\n          114,\\n          120,\\n          136,\\n          123,\\n          116,\\n          106,\\n          100,\\n          135,\\n          194,\\n          163,\\n          106,\\n          152,\\n          135,\\n          164,\\n          197,\\n          173,\\n          147,\\n          158,\\n          121,\\n          110,\\n          93,\\n          123,\\n          128,\\n          125,\\n          117,\\n          141,\\n          137,\\n          113,\\n          128,\\n          142,\\n          133,\\n          109,\\n          143,\\n          130,\\n          124,\\n          119,\\n          107,\\n          150,\\n          110,\\n          123,\\n          135,\\n          147,\\n          186,\\n          181,\\n          184,\\n          154,\\n          156,\\n          159,\\n          124,\\n          121,\\n          111,\\n          129,\\n          137,\\n          126,\\n          144,\\n          153,\\n          119,\\n          124,\\n          163,\\n          130,\\n          134,\\n          126,\\n          128,\\n          114,\\n          112,\\n          97,\\n          100,\\n          113,\\n          104,\\n          109,\\n          118,\\n          157,\\n          163,\\n          201,\\n          186,\\n          240,\\n          209,\\n          203,\\n          214,\\n          170,\\n          173,\\n          150,\\n          169,\\n          152,\\n          155,\\n          179,\\n          213,\\n          187,\\n          184,\\n          158,\\n          133,\\n          96,\\n          70,\\n          70,\\n          58,\\n          30,\\n          16,\\n          19,\\n          61,\\n          47,\\n          64,\\n          70,\\n          108,\\n          126,\\n          105,\\n          109,\\n          94,\\n          97,\\n          75,\\n          99,\\n          81,\\n          61,\\n          75,\\n          93,\\n          83,\\n          70,\\n          92,\\n          79,\\n          80,\\n          100,\\n          88,\\n          83,\\n          98,\\n          88,\\n          86,\\n          90,\\n          104,\\n          96,\\n          98,\\n          113,\\n          142,\\n          137,\\n          143,\\n          125,\\n          152,\\n          114,\\n          128,\\n          111,\\n          110,\\n          77,\\n          118,\\n          106,\\n          114,\\n          140,\\n          115,\\n          126,\\n          133,\\n          126,\\n          108,\\n          173,\\n          166,\\n          136,\\n          120,\\n          109,\\n          123,\\n          127,\\n          138,\\n          112,\\n          108,\\n          108,\\n          180,\\n          162,\\n          137,\\n          107,\\n          139,\\n          123,\\n          117,\\n          106,\\n          130,\\n          113,\\n          90,\\n          108,\\n          111,\\n          130,\\n          100,\\n          129,\\n          126,\\n          123,\\n          148,\\n          127,\\n          108,\\n          127,\\n          142,\\n          99,\\n          136,\\n          131,\\n          123,\\n          138,\\n          137,\\n          137,\\n          139,\\n          138,\\n          151,\\n          164,\\n          168,\\n          179,\\n          159,\\n          145,\\n          134,\\n          147,\\n          112,\\n          116,\\n          138,\\n          115,\\n          136,\\n          117,\\n          130,\\n          150,\\n          162,\\n          103,\\n          133,\\n          123,\\n          117,\\n          105,\\n          117,\\n          128,\\n          135,\\n          132,\\n          146,\\n          166,\\n          157,\\n          187,\\n          157,\\n          143,\\n          176,\\n          151,\\n          183,\\n          154,\\n          136,\\n          130,\\n          131,\\n          150,\\n          154,\\n          146,\\n          4,\\n          3,\\n          5,\\n          0,\\n          3,\\n          3,\\n          5,\\n          4,\\n          3,\\n          3,\\n          0,\\n          5,\\n          3,\\n          4,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          0,\\n          4,\\n          0,\\n          6,\\n          6,\\n          5,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n      ],\\n    },\\n  }\\n  return (\\n    <Timebar\\n      start={\\'2017-12-01T00:00:00.000Z\\'}\\n      end={new Date().toISOString()}\\n      absoluteStart={\\'2017-12-01T00:00:00.000Z\\'}\\n      absoluteEnd={new Date().toISOString()}\\n      bookmarkStart={null}\\n      bookmarkEnd={null}\\n      onChange={d => console.log(d)}\\n      onBookmarkChange={d => console.log(d)}\\n      // enablePlayback\\n    >\\n      {props => (\\n        <TimebarEvents {...props} events={eventsMock} showFishing={false} />\\n      )}\\n    </Timebar>\\n  )\\n}'} __scope={{props: this ? this.props : props,Timebar,TimebarEvents}}>\n  {() => {\n    const eventsMock = {\n      start: '2014-01-01T00:00:00.000Z',\n      end: '2018-12-27T00:00:00.000Z',\n      offset: 'day',\n      series: {\n        labels: ['encounter', 'fishing', 'gap', 'port'],\n        counts: [\n          [ 36, 36, 24, 16, 16, 8, 22, 28, 22, 26, 36, 32, 68, 40, 30, 32, 44, 52, 56, 18, 34, 30, 32, 32, 24, 26, 34, 24, 34, 30, 62, 36, 26, 38, 26, 26, 14, 26, 26, 20, 32, 36, 42, 36, 22, 32, 32, 34, 32, 38, 38, 22, 28, 22, 12, 14, 14, 14, 16, 20, 10, 18, 28, 14, 28, 40, 32, 52, 24, 34, 24, 34, 24, 34, 22, 26, 28, 12, 16, 26, 18, 12, 14, 28, 32, 26, 28, 14, 34, 14, 14, 20, 22, 16, 16, 16, 22, 28, 20, 26, 20, 26, 32, 54, 38, 20, 38, 22, 20, 8, 16, 16, 8, 4, 8, 12, 12, 16, 16, 24, 18, 12, 20, 22, 22, 36, 40, 20, 42, 18, 16, 26, 28, 38, 26, 28, 12, 8, 10, 8, 8, 16, 16, 16, 24, 20, 20, 26, 8, 24, 10, 16, 32, 22, 6, 20, 18, 16, 14, 24, 22, 24, 22, 16, 14, 14, 28, 20, 24, 16, 14, 20, 34, 26, 32, 16, 20, 16, 22, 14, 14, 22, 24, 20, 10, 12, 14, 14, 24, 34, 32, 32, 38, 16, 20, 24, 22, 26, 22, 10, 18, 22, 12, 24, 14, 14, 28, 26, 30, 28, 24, 24, 24, 10, 16, 16, 8, 16, 24, 20, 30, 12, 16, 36, 20, 22, 12, 20, 32, 28, 32, 18, 32, 8, 6, 26, 14, 28, 20, 18, 22, 18, 16, 14, 14, 6, 18, 22, 14, 10, 18, 18, 20, 14, 20, 26, 16, 22, 20, 10, 10, 20, 14, 20, 16, 10, 26, 18, 14, 20, 12, 22, 28, 16, 22, 26, 12, 22, 12, 14, 20, 14, 12, 16, 14, 16, 12, 12, 14, 32, 26, 36, 26, 20, 44, 22, 28, 22, 24, 18, 12, 10, 24, 20, 32, 12, 22, 18, 26, 34, 26, 18, 16, 26, 12, 16, 12, 10, 22, 18, 30, 22, 28, 18, 20, 16, 14, 10, 12, 8, 14, 12, 10, 10, 12, 8, 12, 14, 18, 20, 28, 24, 38, 18, 20, 6, 16, 14, 6, 20, 6, 8, 16, 8, 24, 32, 36, 20, 24, 22, 36, 36, 40, 40, 34, 32, 28, 34, 28, 34, 24, 50, 70, 54, 46, 20, 46, 40, 38, 44, 38, 38, 40, 20, 24, 16, 30, 52, 54, 34, 42, 36, 24, 24, 20, 56, 30, 50, 30, 22, 26, 30, 20, 4, 20, 16, 14, 20, 12, 22, 34, 34, 34, 30, 36, 42, 20, 20, 12, 14, 20, 8, 12, 16, 8, 26, 26, 20, 24, 20, 20, 24, 16, 38, 20, 12, 10, 14, 18, 8, 2, 14, 8, 0, 10, 6, 18, 18, 10, 12, 10, 6, 14, 4, 18, 20, 24, 24, 18, 22, 22, 12, 6, 6, 8, 2, 0, 4, 2, 4, 2, 10, 12, 8, 4, 6, 8, 6, 8, 6, 4, 4, 10, 10, 4, 8, 22, 22, 10, 12, 18, 14, 6, 0, 4, 6, 10, 6, 8, 12, 8, 2, 16, 12, 4, 2, 10, 6, 0, 12, 8, 14, 2, 14, 22, 16, 24, 18, 20, 36, 18, 12, 10, 8, 16, 0, 0, 0, 2, 6, 2, 6, 4, 8, 6, 6, 4, 6, 2, 4, 0, 6, 6, 4, 6, 8, 10, 6, 12, 16, 10, 4, 6, 2, 8, 0, 6, 4, 4, 10, 18, 16, 14, 6, 0, 8, 2, 8, 14, 12, 10, 6, 10, 10, 12, 20, 16, 28, 8, 12, 8, 4, 2, 2, 6, 8, 4, 8, 4, 2, 4, 0, 4, 2, 2, 2, 2, 0, 4, 4, 6, 14, 8, 12, 18, 26, 18, 10, 18, 10, 14, 14, 14, 4, 2, 2, 4, 2, 4, 6, 4, 6, 22, 8, 8, 24, 14, 6, 8, 8, 8, 8, 14, 6, 18, 18, 16, 32, 24, 52, 18, 18, 8, 4, 2, 0, 4, 2, 10, 14, 6, 16, 14, 6, 18, 4, 12, 10, 8, 8, 12, 8, 8, 6, 10, 18, 10, 6, 12, 6, 14, 4, 16, 10, 4, 12, 14, 12, 22, 20, 14, 18, 20, 8, 12, 18, 6, 4, 10, 10, 16, 14, 14, 6, 14, 14, 6, 2, 10, 12, 8, 4, 8, 6, 2, 6, 2, 6, 4, 28, 10, 12, 20, 30, 24, 24, 32, 30, 22, 16, 26, 18, 18, 24, 14, 20, 30, 22, 8, 0, 16, 22, 18, 10, 24, 16, 4, 8, 12, 10, 10, 10, 8, 8, 20, 14, 18, 24, 24, 28, 30, 20, 40, 36, 32, 56, 54, 60, 56, 28, 16, 28, 30, 22, 22, 14, 62, 40, 42, 68, 60, 56, 64, 32, 50, 34, 14, 24, 20, 24, 38, 42, 60, 46, 52, 42, 30, 28, 12, 16, 14, 22, 16, 12, 18, 38, 16, 30, 24, 16, 20, 10, 14, 14, 30, 30, 16, 30, 14, 50, 52, 64, 66, 64, 54, 44, 46, 52, 52, 34, 40, 30, 36, 28, 34, 22, 34, 20, 20, 20, 22, 18, 16, 30, 16, 24, 28, 22, 24, 34, 42, 50, 62, 44, 46, 44, 34, 20, 32, 32, 20, 28, 20, 20, 32, 20, 12, 16, 16, 24, 6, 18, 22, 26, 16, 12, 22, 10, 18, 38, 58, 44, 44, 44, 44, 24, 18, 14, 12, 12, 12, 10, 18, 10, 24, 14, 18, 22, 10, 20, 18, 18, 6, 22, 20, 26, 10, 24, 28, 24, 34, 68, 32, 28, 24, 18, 30, 32, 16, 12, 24, 22, 10, 12, 36, 28, 52, 28, 14, 6, 10, 8, 16, 10, 12, 38, 32, 34, 24, 28, 46, 36, 32, 38, 18, 22, 18, 14, 20, 24, 16, 20, 10, 28, 42, 36, 30, 20, 18, 26, 16, 24, 20, 38, 52, 40, 34, 46, 42, 24, 48, 62, 60, 76, 30, 36, 32, 42, 32, 48, 30, 32, 42, 32, 22, 20, 14, 38, 40, 32, 46, 32, 42, 22, 30, 24, 24, 30, 44, 26, 38, 28, 6, 40, 22, 32, 28, 32, 44, 48, 38, 50, 92, 50, 38, 44, 42, 22, 30, 32, 34, 34, 72, 46, 60, 28, 44, 76, 78, 72, 60, 68, 72, 32, 24, 28, 38, 32, 42, 34, 38, 44, 22, 30, 28, 20, 24, 24, 16, 26, 28, 16, 16, 26, 14, 28, 44, 48, 48, 36, 32, 46, 24, 20, 20, 20, 24, 38, 50, 24, 42, 46, 24, 44, 26, 20, 30, 16, 18, 28, 22, 20, 18, 36, 42, 42, 34, 60, 56, 54, 26, 52, 40, 44, 90, 66, 78, 70, 58, 66, 26, 42, 38, 58, 114, 122, 120, 90, 72, 38, 80, 60, 62, 58, 58, 30, 66, 58, 46, 34, 50, 26, 46, 32, 40, 26, 18, 22, 98, 82, 118, 162, 130, 94, 128, 80, 54, 90, 138, 140, 144, 98, 150, 140, 150, 166, 118, 128, 112, 96, 62, 26, 36, 18, 62, 36, 76, 44, 54, 32, 36, 28, 26, 28, 24, 20, 22, 12, 28, 24, 14, 24, 34, 32, 32, 30, 38, 30, 30, 24, 20, 20, 22, 28, 16, 28, 34, 26, 10, 8, 14, 16, 16, 22, 20, 8, 26, 18, 24, 18, 18, 12, 16, 18, 32, 50, 46, 54, 38, 38, 34, 26, 22, 26, 32, 26, 30, 22, 12, 18, 20, 12, 28, 10, 14, 16, 14, 16, 18, 24, 12, 26, 32, 24, 60, 90, 62, 52, 34, 32, 24, 12, 12, 10, 20, 10, 8, 22, 12, 22, 20, 8, 14, 10, 16, 14, 14, 10, 12, 14, 4, 14, 28, 48, 42, 42, 32, 24, 14, 14, 8, 10, 8, 18, 20, 30, 14, 10, 12, 16, 28, 26, 18, 10, 16, 20, 18, 12, 20, 16, 16, 32, 38, 50, 36, 48, 32, 32, 40, 34, 26, 16, 14, 46, 40, 48, 12, 20, 14, 22, 22, 26, 30, 24, 12, 44, 36, 32, 32, 52, 48, 40, 48, 80, 96, 60, 74, 62, 42, 26, 38, 18, 34, 44, 36, 36, 26, 34, 30, 14, 10, 18, 14, 18, 18, 4, 12, 18, 20, 24, 28, 32, 50, 62, 82, 78, 72, 58, 58, 68, 90, 68, 22, 32, 22, 42, 22, 26, 70, 42, 48, 40, 42, 36, 30, 32, 14, 38, 38, 44, 46, 44, 42, 76, 70, 62, 48, 84, 28, 42, 34, 42, 44, 38, 56, 62, 86, 56, 62, 90, 64, 78, 82, 50, 54, 50, 46, 42, 56, 46, 66, 100, 84, 106, 68, 56, 38, 36, 24, 40, 50, 34, 24, 68, 48, 40, 50, 38, 64, 52, 50, 36, 40, 52, 62, 86, 48, 58, 46, 48, 38, 58, 64, 38, 54, 48, 24, 28, 24, 36, 40, 16, 32, 32, 22, 36, 54, 56, 70, 62, 48, 30, 54, 44, 20, 42, 44, 40, 36, 50, 24, 42, 64, 54, 40, 22, 32, 26, 32, 42, 52, 80, 74, 52, 30, 58, 42, 34, 72, 66, 64, 68, 72, 72, 64, 138, 144, 146, 140, 166, 126, 134, 118, 130, 82, 54, 62, 64, 70, 68, 52, 32, 28, 54, 62, 70, 78, 84, 68, 54, 24, 40, 38, 40, 26, 42, 36, 36, 48, 26, 60, 64, 60, 48, 46, 58, 78, 88, 68, 54, 42, 66, 46, 38, 64, 40, 38, 36, 32, 44, 104, 144, 146, 100, 64, 30, 24, 44, 68, 42, 84, 62, 58, 40, 24, 16, 22, 24, 30, 28, 22, 38, 16, 14, 20, 24, 16, 18, 16, 6, 18, 16, 24, 20, 28, 22, 32, 54, 72, 96, 78, 66, 102, 52, 28, 26, 16, 36, 26, 24, 12, 18, 22, 18, 16, 14, 32, 10, 12, 16, 8, 14, 12, 18, 14, 34, 34, 54, 70, 64, 68, 52, 38, 36, 26, 32, 32, 18, 36, 34, 14, 14, 30, 20, 34, 78, 30, 16, 20, 12, 26, 12, 22, 20, 32, 20, 26, 86, 68, 68, 68, 56, 56, 26, 44, 54, 54, 40, 56, 28, 42, 42, 50, 36, 40, 58, 32, 42, 18, 40, 34, 38, 46, 34, 80, 82, 86, 58, 64, 78, 64, 46, 48, 52, 30, 40, 64, 88, 60, 50, 42, 38, 36, 20, 30, 42, 34, 36, 24, 34, 46, 54, 50, 30, 54, 44, 86, 84, 96, 78, 58, 58, 40, 48, 38, 60, 74, 84, 66, 52, 42, 44, 32, 52, 52, 48, 42, 60, 50, 48, 68, 46, 60, 66, 68, 92, 96, 104, 80, 104, 104, 80, 68, 50, 70, 56, 66, 56, 36, 26, 32, 30, 20, 40, 46, 36, 44, 32, 30, 28, 36, 44, 52, 76, 34, 40, 54, 58, 70, 60, 78, 64, 44, 48, 42, 26, 52, 62, 62, 60, 38, 46, 62, 46, 34, 28, 36, 28, 22, 56, 40, 58, 34, 44, 56, 54, 66, 72, 58, 54, 40, 56, 38, 32, 42, 28, 40, 50, 20, 20, 32, 38, 26, 34, 26, 36, 42, 54, 52, 56, 28, 20, 24, 36, 40, 54, 76, 54, 44, 38, 56, 50, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1414, 1343, 1385, 1471, 1444, 1477, 1321, 1405, 1383, 1388, 1426, 1458, 1514, 1504, 1527, 1517, 1599, 1513, 1486, 1500, 1247, 1435, 1547, 1498, 1378, 1407, 1443, 1381, 1401, 1357, 1414, 1093, 1004, 859, 979, 973, 1038, 985, 1059, 1154, 1306, 1483, 1509, 1482, 1527, 1591, 1616, 1607, 1581, 1543, 1469, 1453, 1419, 1392, 1403, 1533, 1621, 1625, 1653, 1658, 1625, 1607, 1626, 1634, 1637, 1573, 1546, 1472, 1473, 1501, 1527, 1580, 1627, 1791, 1894, 1933, 2013, 2272, 2378, 2425, 2381, 2328, 2343, 2283, 2298, 1989, 1862, 1851, 1756, 1811, 1985, 2213, 2242, 2316, 2370, 2305, 2318, 2243, 2308, 2425, 2385, 2534, 2597, 2570, 2624, 2587, 2652, 2631, 2709, 2631, 2654, 2681, 2674, 2571, 2431, 2414, 2483, 2444, 2372, 2482, 2377, 2227, 2150, 2104, 2150, 1999, 2145, 2244, 2288, 2382, 2508, 2591, 2526, 2587, 2613, 2587, 2610, 2615, 2586, 2581, 2574, 2618, 2566, 2582, 2638, 2699, 2676, 2855, 2812, 2719, 2686, 2555, 2328, 2253, 2189, 2066, 2065, 2156, 2076, 2155, 2176, 2130, 2048, 1903, 1870, 1842, 1798, 1719, 1678, 1629, 1623, 1481, 1446, 1601, 1597, 1588, 1633, 1588, 1580, 1520, 1457, 1475, 1453, 1410, 1409, 1355, 1369, 1496, 1618, 1688, 1776, 1800, 1813, 1894, 1977, 2049, 2029, 2060, 2082, 2158, 2208, 2255, 2326, 2245, 2172, 2150, 2274, 2162, 2028, 1986, 1885, 1796, 1829, 1842, 1861, 1870, 1928, 2018, 2030, 1733, 1754, 1802, 1864, 1836, 1864, 1885, 1929, 1876, 1902, 1929, 1932, 1952, 1926, 1901, 1820, 1859, 1763, 1777, 1696, 1615, 1606, 1562, 1568, 1562, 1559, 1611, 1547, 1583, 1646, 1553, 1446, 1550, 1564, 1591, 1577, 1593, 1582, 1537, 1707, 1728, 1631, 1736, 1694, 1723, 1707, 1680, 1713, 1722, 1577, 1581, 1538, 1538, 1563, 1599, 1532, 1600, 1616, 1443, 1704, 1639, 1766, 1797, 1875, 1825, 1861, 1904, 1888, 1931, 1994, 1997, 2008, 2047, 2036, 1931, 1897, 1847, 1854, 1881, 1846, 1650, 1627, 1562, 1532, 1536, 1556, 1522, 1564, 1694, 1788, 1957, 2006, 2190, 2314, 2308, 2246, 1881, 1860, 1804, 2131, 2167, 2058, 2120, 2154, 1863, 1885, 1891, 1950, 1903, 1778, 1757, 1672, 1597, 1561, 1612, 1711, 1790, 1855, 1942, 1888, 1877, 1924, 2030, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 23, 22, 38, 34, 22, 19, 22, 22, 19, 30, 20, 12, 17, 22, 19, 18, 19, 22, 23, 29, 27, 22, 22, 28, 18, 17, 24, 19, 14, 25, 10, 17, 12, 26, 23, 17, 19, 24, 25, 27, 17, 27, 23, 20, 25, 30, 23, 27, 25, 28, 31, 34, 32, 27, 33, 28, 32, 23, 21, 28, 22, 33, 21, 21, 85, 190, 119, 31, 37, 58, 135, 41, 41, 46, 37, 35, 27, 39, 31, 111, 45, 27, 30, 57, 52, 66, 55, 32, 31, 43, 40, 38, 41, 39, 38, 65, 39, 46, 65, 49, 75, 61, 43, 40, 92, 55, 62, 41, 75, 62, 51, 73, 242, 46, 41, 51, 50, 54, 57, 51, 46, 52, 46, 51, 63, 43, 54, 38, 55, 77, 43, 53, 48, 90, 54, 61, 53, 30, 53, 79, 194, 58, 46, 64, 47, 54, 56, 42, 60, 42, 48, 37, 53, 41, 55, 52, 40, 43, 39, 35, 23, 35, 28, 24, 21, 31, 39, 22, 33, 28, 30, 24, 33, 20, 26, 28, 29, 21, 25, 20, 37, 33, 36, 21, 28, 38, 33, 35, 45, 33, 38, 41, 45, 43, 46, 36, 40, 29, 29, 43, 41, 37, 42, 39, 39, 42, 35, 37, 34, 35, 53, 38, 39, 35, 33, 38, 57, 80, 46, 50, 50, 40, 45, 44, 58, 61, 59, 44, 48, 40, 45, 39, 38, 34, 56, 44, 36, 32, 49, 38, 41, 50, 41, 45, 46, 41, 42, 44, 57, 47, 38, 105, 47, 57, 51, 43, 53, 36, 45, 59, 45, 68, 70, 57, 49, 56, 40, 52, 52, 37, 52, 51, 57, 35, 56, 59, 46, 63, 47, 46, 45, 46, 46, 44, 46, 43, 45, 42, 37, 50, 46, 35, 45, 43, 34, 42, 43, 45, 40, 60, 39, 56, 76, 41, 42, 56, 35, 43, 35, 49, 40, 286, 64, 46, 128, 65, 49, 42, 48, 60, 34, 31, 37, 35, 31, 40, 39, 29, 34, 78, 31, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 102, 90, 100, 106, 100, 120, 136, 94, 95, 143, 112, 109, 108, 97, 99, 85, 87, 110, 82, 96, 95, 74, 129, 140, 124, 127, 85, 128, 122, 105, 121, 117, 107, 80, 100, 76, 121, 119, 87, 101, 92, 71, 90, 81, 73, 76, 82, 66, 91, 71, 81, 101, 100, 85, 88, 105, 123, 110, 100, 113, 91, 76, 118, 129, 123, 128, 112, 122, 108, 114, 120, 136, 123, 116, 106, 100, 135, 194, 163, 106, 152, 135, 164, 197, 173, 147, 158, 121, 110, 93, 123, 128, 125, 117, 141, 137, 113, 128, 142, 133, 109, 143, 130, 124, 119, 107, 150, 110, 123, 135, 147, 186, 181, 184, 154, 156, 159, 124, 121, 111, 129, 137, 126, 144, 153, 119, 124, 163, 130, 134, 126, 128, 114, 112, 97, 100, 113, 104, 109, 118, 157, 163, 201, 186, 240, 209, 203, 214, 170, 173, 150, 169, 152, 155, 179, 213, 187, 184, 158, 133, 96, 70, 70, 58, 30, 16, 19, 61, 47, 64, 70, 108, 126, 105, 109, 94, 97, 75, 99, 81, 61, 75, 93, 83, 70, 92, 79, 80, 100, 88, 83, 98, 88, 86, 90, 104, 96, 98, 113, 142, 137, 143, 125, 152, 114, 128, 111, 110, 77, 118, 106, 114, 140, 115, 126, 133, 126, 108, 173, 166, 136, 120, 109, 123, 127, 138, 112, 108, 108, 180, 162, 137, 107, 139, 123, 117, 106, 130, 113, 90, 108, 111, 130, 100, 129, 126, 123, 148, 127, 108, 127, 142, 99, 136, 131, 123, 138, 137, 137, 139, 138, 151, 164, 168, 179, 159, 145, 134, 147, 112, 116, 138, 115, 136, 117, 130, 150, 162, 103, 133, 123, 117, 105, 117, 128, 135, 132, 146, 166, 157, 187, 157, 143, 176, 151, 183, 154, 136, 130, 131, 150, 154, 146, 4, 3, 5, 0, 3, 3, 5, 4, 3, 3, 0, 5, 3, 4, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 4, 0, 6, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],\n        ],\n      },\n    }\n    return <Timebar\n      start={'2017-12-01T00:00:00.000Z'}\n      end={new Date().toISOString()}\n      absoluteStart={'2017-12-01T00:00:00.000Z'}\n      absoluteEnd={new Date().toISOString()}\n      bookmarkStart={null}\n      bookmarkEnd={null}\n      onChange={(d) => console.log(d)}\n      onBookmarkChange={(d) => console.log(d)}\n      // enablePlayback\n    >\n      {(props) =>\n        <TimebarEvents\n          {...props}\n          events={eventsMock}\n          showFishing={false}\n        />\n      }\n    </Timebar>\n  }}\n</Playground>\n           </MDXTag>\n  }\n}\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timebar\":\"timebar_Timebar__1C7GA\",\"uiButton\":\"timebar_uiButton__1e2qv\",\"playbackActions\":\"timebar_playbackActions__2NQyE\",\"secondary\":\"timebar_secondary__2mC8Q\",\"loop\":\"timebar_loop__1RN12\",\"speed\":\"timebar_speed__2JKxj\",\"timeActions\":\"timebar_timeActions__3eDNK\",\"timeRange\":\"timebar_timeRange__1UFds\",\"timeScale\":\"timebar_timeScale__1y_vV\",\"bookmark\":\"timebar_bookmark__23Pha\",\"timeRangeContainer\":\"timebar_timeRangeContainer__3P_UI\"};"],"sourceRoot":""}