(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports={version:8,glyphs:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true",sprite:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites",metadata:{"mapbox:groups":{"basemap-background":{name:"basemap-background"},static:{name:"static"},temporal:{name:"temporal"},tracks:{name:"tracks"},"basemap-foreground":{name:"basemap-foreground"}},"gfw:basemap-layers":[{id:"satellite",label:"Satellite"},{id:"north-star",label:"North Star"},{id:"labels",isOption:!0},{id:"graticules",isOption:!0},{id:"bathymetry",isOption:!0}],"gfw:styles":{selected:{fill:{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},circle:{"circle-stroke-width":[2,.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},highlighted:{circle:{"circle-stroke-color":["#fff","#000"]}}}},sources:{6:{metadata:{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{id:"nama"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},satellite:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256,attribution:"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href='https://www.google.com/intl/en-GB_US/help/terms_maps.html'>Terms of Use</a><br>"},"north-star":{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},labels:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},graticules:{metadata:{"gfw:carto-sql":"select * from graticules where scalerank=4"},type:"vector"},bathymetry:{metadata:{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},type:"vector"},mpant:{metadata:{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},mparu:{metadata:{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},eez:{metadata:{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, 'eez:' || mrgid as region_id, geoname as reporting_name, 'eez:' || mrgid as reporting_id FROM eez","gfw:popups":[{id:"name"}]},type:"vector",attribution:"EEZs: marineregions.org"},highseas:{metadata:{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{id:"regionid"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},protectedplanet:{metadata:{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector",attribution:"MPAs: www.protectedplanet.net"},rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, 'rfmo:' || rfb as reporting_id, 'rfmo:' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{id:"rfb"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},falklands_conservation:{metadata:{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{id:"full_name"},{id:"zone"},{id:"area_sqkm"}]},type:"vector"},encounters_ais:{type:"vector",tiles:["https://api-dot-skytruth-pelagos-production.appspot.com/v2/tilesets/gfw-task-673-encounters-v3/{z},{x},{y}"]},events_fishing:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},events_encounter:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_gap:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_port:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/port/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_encounter_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_gap_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_port_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}}},layers:[{id:"background",metadata:{"mapbox:group":"basemap-background"},type:"background",layout:{visibility:"visible"},paint:{"background-color":"#001436"}},{id:"satellite",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"satellite",layout:{visibility:"visible"}},{id:"north-star",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"north-star"},{id:"bathymetry",metadata:{"mapbox:group":"basemap-background"},type:"fill",source:"bathymetry","source-layer":"bathymetry",paint:{"fill-color":["step",["get","depth"],"#1e346c",1e3,"#1a2f63",2e3,"#142655",3e3,"#101f4a",4e3,"#0d1b43",5e3,"#0a163b",6e3,"#061132",7e3,"#030d2a",8e3,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{id:"mpant",metadata:{"mapbox:group":"static"},type:"fill",source:"mpant","source-layer":"mpant"},{id:"mpant-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mpant","source-layer":"mpant",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"mparu",metadata:{"mapbox:group":"static"},type:"fill",source:"mparu","source-layer":"mparu"},{id:"mparu-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mparu","source-layer":"mparu",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"eez",metadata:{"mapbox:group":"static"},type:"fill",source:"eez","source-layer":"eez"},{id:"eez-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"eez","source-layer":"eez",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"highseas",metadata:{"mapbox:group":"static"},type:"fill",source:"highseas","source-layer":"highseas"},{id:"highseas-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"highseas","source-layer":"highseas",layout:{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"rfmo","source-layer":"rfmo"},{id:"rfmo-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"rfmo","source-layer":"rfmo",layout:{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"6",metadata:{"mapbox:group":"static"},type:"fill",source:"6","source-layer":"6"},{id:"6-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"6","source-layer":"6",layout:{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"protectedplanet",metadata:{"mapbox:group":"static"},type:"fill",source:"protectedplanet","source-layer":"protectedplanet"},{id:"protectedplanet-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"protectedplanet","source-layer":"protectedplanet",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"falklands_conservation",metadata:{"mapbox:group":"static"},type:"fill",source:"falklands_conservation","source-layer":"falklands_conservation"},{id:"falklands_conservation-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"falklands_conservation","source-layer":"falklands_conservation",layout:{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"events_fishing",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_fishing","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_encounter","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"encounters_ais",type:"circle",source:"encounters_ais","source-layer":"points",metadata:{"gfw:temporal":!0,"gfw:temporalField":"timeIndex","mapbox:group":"temporal"},paint:{"circle-color":"#e5647d","circle-radius":3,"circle-opacity":.9,"circle-stroke-opacity":0}},{id:"encounters_ais_outline",type:"circle",source:"encounters_ais","source-layer":"points",metadata:{"gfw:temporal":!0,"gfw:temporalField":"timeIndex","gfw:mainColorPaintProperty":"circle-stroke-color","mapbox:group":"temporal"},paint:{"circle-color":"hsla(0, 0%, 0%, 0)","circle-stroke-color":"#e5647d","circle-stroke-width":1,"circle-radius":6}},{id:"events_gap",type:"circle",source:"events_gap","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_port",type:"circle",source:"events_port","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter_vessel",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["encounter_highlight","encounter"]}}},layout:{"icon-image":"encounter","icon-allow-overlap":!0}},{id:"events_encounter_vessel_number",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_gap_vessel",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["gap_highlight","gap"]}}},layout:{"icon-image":"gap","icon-allow-overlap":!0}},{id:"events_gap_vessel_number",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_port_vessel",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["port_highlight","port"]}}},layout:{"icon-image":"port","icon-allow-overlap":!0}},{id:"events_port_vessel_number",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"graticules-lines",metadata:{"mapbox:group":"basemap-foreground"},type:"line",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],paint:{"line-color":"#174084","line-opacity":{base:1,stops:[[0,.7],[8,.7],[9,.2]]},"line-width":.5}},{id:"graticules-labels",metadata:{"mapbox:group":"basemap-foreground"},type:"symbol",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],layout:{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{base:1,stops:[[3,500],[8,1e3]]},"text-size":{base:1,stops:[[3,7],[7,12]]},"text-letter-spacing":.2},paint:{"text-color":"hsl(0, 0%, 100%)","text-halo-width":.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{base:1,stops:[[0,1],[8,1],[9,0]]}}},{id:"labels",metadata:{"mapbox:group":"basemap-foreground"},type:"raster",source:"labels"}]}},"./src/map/glmap/map.css":function(e,t,r){e.exports={map:"map_map__1CWd_",googleLogo:"map_googleLogo__2KshJ"}},"./src/map/lib/Pack.js":function(e,t,r){"use strict";var n={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},o=function(e,t,r,n,o){void 0==r&&(r=e.length),void 0==t&&(t=0),void 0==o&&(o=t);for(var a=t;a<r;a++)n[a-t+o]=255&e.charCodeAt(a)},a=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},i={typemap:{byname:n,byarray:{}},pack:function(e,t,r){var n=new ArrayBuffer(e.size);return new DataView(n)[e.setter](0,t,r),a(n)},arrayBufferToString:a,stringToArrayBuffer:function(e,t,r){void 0==r&&(r=e.length),void 0==t&&(t=0);var n=new Uint8ClampedArray(r-t);return o(e,t,r,n,0),n.buffer},writeStringToArrayBuffer:o};for(var s in i.typemap.byname){var l=i.typemap.byname[s];l.name=s,i.typemap.byarray[l.array]=l}t.a=i},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Pack__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/map/lib/Pack.js");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PelagosClient=function(){function PelagosClient(){_classCallCheck(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return _createClass(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(r,n){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=r,this.reject=n,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient},"./src/map/map.mdx":function(e,t,r){"use strict";r.r(t);var n=r("./node_modules/react/index.js"),o=r.n(n),a=r("./node_modules/@mdx-js/tag/dist/index.js"),i=r("./node_modules/docz/dist/index.m.js"),s=r("./node_modules/redux/es/redux.js"),l=r("./node_modules/react-redux/es/index.js"),c=r("./node_modules/lodash/throttle.js"),u=r.n(c),p=r("./node_modules/prop-types/index.js"),d=r.n(p),h={id:d.a.string.isRequired,url:d.a.string,data:d.a.object,color:d.a.string,type:d.a.oneOf(["geojson","pelagos",void 0]),layerTemporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),fitBoundsOnLoad:d.a.bool},A=(d.a.string.isRequired,d.a.string,d.a.string,d.a.bool,d.a.number,d.a.number,d.a.arrayOf(d.a.shape({hue:d.a.number,filterValues:d.a.object})),d.a.shape({endpoints:d.a.object,colsByName:d.a.object,temporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),temporalExtentsLess:d.a.bool}).isRequired,d.a.bool,d.a.string,d.a.bool,d.a.string.isRequired,d.a.bool,d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.number,d.a.string,d.a.bool,d.a.bool,d.a.arrayOf(d.a.arrayOf(d.a.string)),d.a.bool,d.a.oneOf([void 0,"geojson","raster"]),d.a.string,d.a.object,d.a.object,d.a.node,d.a.number.isRequired,d.a.number.isRequired,d.a.number,d.a.arrayOf(d.a.number),r("./node_modules/reselect/es/index.js")),g=r("./node_modules/immutable/dist/immutable.es.js"),m=8,f=2e5,y="dot-world-fishing",E=function(e,t,r){var n=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==r?"".concat(r,"_").concat(n):n}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),r},b=function(e){return function(t,r){t({type:"COMPLETE_LOADER",payload:e});var n=r();n.map.module.loaders.length||void 0===n.map.module.onLoadComplete||n.map.module.onLoadComplete()}},w=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}},B=function(e){return e.map.module.temporalExtent},v=function(e){return e.map.module.highlightTemporalExtent};function C(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function I(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){D(e,t,r[t])})}return e}function D(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var k=Object(A.a)(function(e){return e.map.tracks.data},function(e){return e.filter(function(e){return"geojson"===e.type})}),O=Object(A.a)(k,function(e){return e.filter(function(e){return void 0!==e.data})}),S=function(e,t){return{sources:I({},e.sources,t.sources),layers:[].concat(C(e.layers),C(t.layers))}},L=function(e,t){var r=t.start,n=t.end;if(!e||!e.features)return null;var o=e.features.reduce(function(e,t){if(t.properties&&t.properties.coordinateProperties&&t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var o=t.geometry.coordinates.reduce(function(e,o,a){var i=t.properties.coordinateProperties.times[a];return i>=r&&i<=n&&(e.coordinates.push(o),e.times.push(i)),e},{coordinates:[],times:[]});if(!o.coordinates.length)return e;var a=I({},t,{geometry:I({},t.geometry,{coordinates:o.coordinates}),properties:I({},t.properties,{coordinateProperties:{times:o.times}})});e.push(a)}return e},[]);return I({},e,{features:o})},M=Object(A.a)([B,O],function(e,t){var r=e&&e.length>0,n=t&&t.length>0;if(!r||!n)return null;var o={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"Track"),n={sources:D({},r,{type:"geojson",data:L(t.data,o)}),layers:[{id:"".concat(t.id,"Lines"),source:r,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:r,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return S(e,n)},{sources:{},layers:[]})}),Q=Object(A.a)([v,O],function(e,t){var r=e&&e.length>0,n=t&&t.length>0;if(!r||!n)return null;var o={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"HighlightedTrack"),n={sources:D({},r,{type:"geojson",data:L(t.data,o)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:r,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return S(e,n)},{sources:{},layers:[]})}),R=Object(A.a)([M,Q],function(e,t){return t?S(e,t):e}),x=r("./node_modules/@turf/area/index.js"),T=r.n(x),_="ZOOM",Y={NORMAL:0,BULLSEYE:2},F=0,G=1,H="geojson",j="raster",U=r("./node_modules/lodash/difference.js"),P=r.n(U),K=r("./node_modules/lodash/uniq.js"),q=r.n(K),W=r("./node_modules/lodash/uniqBy.js"),J=r.n(W),Z=r("./node_modules/lodash/pull.js"),z=r.n(Z),V=r("./node_modules/lodash/sumBy.js"),N=r.n(V),X=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),$=r("./node_modules/@globalfishingwatch/map-convert/index.js"),ee=r.n($),te=r("./node_modules/lodash/template.js"),re=r.n(te),ne=r("./node_modules/lodash/templateSettings.js"),oe=r.n(ne),ae=r("./src/map/lib/pelagosClient.js");function ie(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],n=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(l){o=!0,a=l}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var se=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=[];return(t||[null]).forEach(function(t,o){var a={};null!==t&&!0!==r.temporalExtentsLess&&(a.startTimeISO=new Date(t[0]).toISOString(),a.endTimeISO=new Date(t[1]).toISOString()),r.tileCoordinates&&(a.x=r.tileCoordinates.x,a.y=r.tileCoordinates.y,a.z=r.tileCoordinates.zoom);var i=function(e,t){return oe.a.interpolate=/{{([\s\S]+?)}}/g,re()(e)(t)}(e,a);(!0===r.temporalExtentsLess||!r.temporalExtentsIndices||r.temporalExtentsIndices.indexOf(o)>-1)&&n.push(i)}),n},le=function(e,t,r){for(var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=[],a=se(e,r,n),i=0,s=a.length;i<s;i++)o.push((new ae.a).obtainTile(a[i],t));return o},ce=function(e){return e.filter(function(e){return null!==e})},ue=function(e,t){var r,n={},o=N()(e,function(e){return e.longitude.length}),a=t.filter(function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)});a.forEach(function(e){n[e]=new Float32Array(o)});for(var i=0,s=function(e){n[e].set(r[e],i)},l=0,c=e.length;l<c;l++)r=e[l],a.forEach(s),i+=r.longitude.length;return n},pe=function(e,t,r,n){var o=void 0===n?[]:n,a=r.zoom,i=ee.a.getZoomFactorRadius(a),s=ee.a.getZoomFactorRadiusRenderingMode(a),l=ee.a.getZoomFactorOpacity(a),c={},u=Object.keys(t);u.forEach(function(e){c[e]=!0});var p=[].concat(u);!0===c.sigma&&p.push("radius"),!0===c.weight&&p.push("opacity"),!0===c.longitude&&(p.push("worldX"),p.push("worldY")),!0===c.id&&p.push("series"),["latitude","longitude","datetime"].forEach(function(e){void 0!==t[e]&&!0!==t[e].hidden||z()(p,e)}),z()(p,"sigma","weight"),p=q()(p);for(var d=function(t,r){var n={};u.forEach(function(r){n[r]=e[r][t]});var a=c.timeIndex?n.timeIndex:ee.a.getOffsetedTimeAtPrecision(n.datetime),d=ie(Object(X.g)([n.longitude,n.latitude],1),2),h=d[0],A=d[1];if(n.worldX=h,n.worldY=A,c.sigma&&(n.radius=ee.a.sigmaToRadius(n.sigma,s,i)),c.weight&&(n.opacity=ee.a.weightToOpacity(n.weight,l)),c.id&&(n.series=n.id),!o[a]){var g={};return p.forEach(function(e){g[e]=[n[e]]}),o[a]=g,"continue"}var m=o[a];p.forEach(function(e){m[e].push(n[e])})},h=0,A=e.latitude.length;h<A;h++)d(h);return o},de=function(e){e.hasFishing=[],e.worldX=[],e.worldY=[];for(var t=0,r=e.weight.length;t<r;t++){var n=ie(Object(X.g)([e.longitude[t],e.latitude[t]],1),2),o=n[0],a=n[1];e.worldX[t]=o,e.worldY[t]=a,e.hasFishing[t]=e.weight[t]>0}return e},he=function(e){for(var t=[],r=0,n=e.series.length;r<n;r++){var o=e.datetime[r],a=ee.a.getOffsetedTimeAtPrecision(o);if(t[a]){var i=t[a];i.worldX.push(e.worldX[r]),i.worldY.push(e.worldY[r]),i.series.push(e.series[r]),i.hasFishing.push(e.hasFishing[r])}else{var s={worldX:[e.worldX[r]],worldY:[e.worldY[r]],series:[e.series[r]],hasFishing:[e.hasFishing[r]]};t[a]=s}}return t},Ae=function(e,t,r){return Object.keys(r).every(function(n){return void 0!==e[n]&&r[n].indexOf(e[n][t])>-1})},ge=function(e,t,r,n,o){for(var a=[],i=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var r=e[t];if(void 0===r)return"continue";for(var n=function(e){var n=r.worldX[e],c=r.worldY[e];if((!o.length||function(e,t,r){return r.filter(function(e){return!0!==e.pass}).some(function(r){return Ae(e,t,r.filterValues)})}(r,e,o))&&n>=i-l&&n<=i+l&&c>=s-l&&c<=s+l){var u={};Object.keys(r).forEach(function(t){u[t]=r[t][e]}),u.timeIndex=t,a.push(u)}},c=0;c<r.worldX.length;c++)n(c)},u=r;u<n;u++)c(u);return a},me=r("./node_modules/@mapbox/tile-cover/index.js"),fe=r.n(me),ye=r("./node_modules/lodash/debounce.js"),Ee=r.n(ye),be=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function we(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Be=function(e){var t=Math.ceil(e+.5),r=!0;return t>10&&(t=10,r=!1),{min_zoom:t,max_zoom:t,tilesAvailable:r}},ve=function(){return function(e,t){var r=t();if(!r.map.heatmapTiles.currentToLoadTileUids.length){var n=r.map.heatmapTiles.currentToReleaseTileUids;e(Fe(n)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},Ce=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(ve())}},Ie=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var n=r(),o=n.map.heatmapTiles.currentVisibleTiles,a=[],i=[];if(!0===e)a=o;else{var s=n.map.heatmapTiles.currentLoadedTiles;o.forEach(function(e){void 0===s.find(function(t){return t.uid===e.uid})&&a.push(e)}),s.forEach(function(e){void 0===o.find(function(t){return t.uid===e.uid})&&i.push(e.uid)})}var l=a.map(function(e){return e.uid});a.forEach(function(e){var r;t((r=e,function(e,t){e({type:Qe,payload:r});var n=t().map.heatmap.heatmapLayers,o=Object.keys(n).filter(function(e){return!0===n[e].visible});o.length&&e(Ye(o,[r]))}))}),t({type:"SET_CURRENTLY_LOADED_TILES",payload:o}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:i}}),t(Ge()),t(ve())}},De=Ee()(function(e){e(Ie())},500),ke=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var n=r().map.viewport,o=n.viewport;if(null===n.currentTransition){var a=new be.a(o),i=[a.unproject([0,0]),a.unproject([o.width,o.height])],s=i[0],l=i[1],c=[s[0],l[1],l[0],s[1]],u=c[0],p=c[1],d=c[2],h=c[3],A=[],g=Be(o.zoom);if(!1!==g.tilesAvailable||!0===e){if(d>180||u<-180){var m=d>180?u:u+360,f=d>180?d-360:d;A.push([[[m,h],[179.999,h],[179.999,p],[m,p],[m,h]]]),A.push([[[-180,h],[f,h],[f,p],[-180,p],[-180,h]]])}else A.push([[[u,h],[d,h],[d,p],[u,p],[u,h]]]);var y={type:"MultiPolygon",coordinates:A},E=fe.a.tiles(y,g),b=fe.a.indexes(y,g),w=[];E.forEach(function(e,t){var r=b[t];e[2]>=2&&w.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:r})}),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:w}),!1===(n.prevZoom!==o.zoom)?t(Ie(e)):De(t)}}}},Oe=function(e,t){return function(r,n){var o={type:"Point",coordinates:[e.longitude,e.latitude]},a=n().map.viewport.viewport.zoom,i=[a,a-1,a+1].map(function(e){return Be(e)}).map(function(e){return fe.a.indexes(o,e)}).map(function(e){return e[0]});r(function(e,t){return function(r,n){var o=n(),a=je(o,e,t),i=a.layer,s=a.isEmpty,l=a.isCluster,c=a.isMouseCluster,u=a.foundVessels;if(!0===l||void 0!==i.id||o.map.heatmap.highlightedVessels.layerId!==i.id){var p=void 0===i?null:{id:i.id,tilesetId:i.tilesetId,subtype:i.subtype,header:i.header};r({type:Re,payload:{layer:p,isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:u}})}else r(Ue())}}(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){we(e,t,r[t])})}return e}({},e,{uids:i}),t))}};function Se(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){Le(e,t,r[t])})}return e}function Le(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Me(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Qe="ADD_REFERENCE_TILE",Re="HIGHLIGHT_VESSELS",xe="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",Te="UPDATE_HEATMAP_TILE";function _e(e,t){var r=e[0].getTime(),n=e[1].getTime(),o=[];return t.forEach(function(e,t){var a=e[0];e[1]>=r&&a<=n&&o.push(t)}),o}function Ye(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(n,o){var a=o(),i=E(n,a,e.join("-")),s=a.map.module.token,l=a.map.heatmap.heatmapLayers,c={};e.forEach(function(e){c[e]=Me(l[e].tiles)});var u=[];e.forEach(function(e){var o=l[e].header,a=Se({},o),i=a.temporalExtents,p=a.temporalExtentsLess,d=a.colsByName,h=o.endpoints.tiles;t.forEach(function(t){var o=c[e].find(function(e){return e.uid===t.uid});o||(o={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(o));var a=void 0===r?l[e].visibleTemporalExtentsIndices:r[e],A=P()(a,o.temporalExtentsIndicesLoaded),g=function(e,t,r,n,o){var a=o.url,i=o.temporalExtents,s=o.temporalExtentsLess;if(void 0===a)throw new Error("URL/endpoints object is not available on this tilesets header");var l=le(a,r,i,{tileCoordinates:t,temporalExtentsIndices:n,temporalExtentsLess:s}),c=Promise.all(l);return new Promise(function(t){c.then(function(r){t({loadedLayerId:e,rawTileData:r})})})}(e,t.tileCoordinates,s,A,{url:h,temporalExtents:i,temporalExtentsLess:p});u.push(g),g.then(function(e){var r=e.loadedLayerId,a=e.rawTileData;o.temporalExtentsIndicesLoaded=q()(o.temporalExtentsIndicesLoaded.concat(A)),o.data=function(e,t,r,n){var o,a=ce(e);return o=ue(a,Object.keys(t)),0===Object.keys(o).length?[]:pe(o,t,r,n)}(a,d,t.tileCoordinates,o.data),n({type:Te,payload:{layerId:r,tile:o}})})})}),Promise.all(u).then(function(){n(b(i)),n(Ce(t.map(function(e){return e.uid})))})}}var Fe=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}},Ge=function(){return{type:"UPDATE_LOADED_TILES"}};function He(e){return function(t,r){var n=r().map.heatmap.referenceTiles;t(Ye([e],n))}}var je=function(e,t,r){var n=e.map.heatmap.heatmapLayers,o=r[0],a=r[1],i=[];Object.keys(n).forEach(function(e){var r=n[e];if(!0===r.visible){var s=t.uids.map(function(e){return r.tiles.find(function(t){return t.uid===e})}).filter(function(e){return void 0!==e&&void 0!==e.data}),l=r.filters;if(s.length){var c=s[0];i.push({layer:r,vessels:ge(c.data,t,o,a,l)})}}});var s,l,c,u,p,d=i.filter(function(e){return e.vessels.length>0});if(0===d.length)c=!0;else if(d.length>1)s=!0;else{var h=(u=d[0]).vessels;if(0===h.length)c=!0;else h.filter(function(e){return e.id<0}).length?s=!0:l=(p=J()(h,function(e){return e.series})).length>1}return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:p,layer:void 0===u?{}:u.layer}};function Ue(){return{type:Re,payload:{isEmpty:!0,clickableCluster:!1}}}var Pe=function(e,t){return function(r,n){if(null!==e){var o=n().map.heatmap.heatmapLayers;e.forEach(function(e){var n,a,i=e.id,s=o[i];void 0===s?r((n=e,a=t,function(e){var t=n.header.temporalExtents;e({type:"ADD_HEATMAP_LAYER",payload:Se({},n,{visibleTemporalExtentsIndices:_e(a,t)})}),!0===n.visible&&e(He(n.id))})):(s.visible!==e.visible&&!0===e.visible&&r(He(i)),s.visible===e.visible&&s.hue===e.hue&&s.opacity===e.opacity&&s.filters===e.filters&&s.interactive===e.interactive||r({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))}),Object.keys(o).forEach(function(t){var n;e.find(function(e){return e.id===t})||r((n=t,function(e){e({type:"REMOVE_HEATMAP_LAYER",payload:{id:n}})}))})}else console.warn("New layers in updateHeatmapLayers can't be null")}},Ke=r("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js"),qe=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(o){o({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:r,zoom:n}}),o(ke()),o(function(e,t){var r=t(),n=r.map.module.onViewportChange;if(void 0!==n){var o=r.map.viewport;void 0!==o.bounds&&n({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})}};function We(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Je=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=void 0===t||void 0===t.metadata||void 0===t.metadata["gfw:popups"]?[]:t.metadata["gfw:popups"],n=e.properties,o=Object.keys(e.properties).filter(function(e){return 0===r.length||void 0!==r.find(function(t){return t.id===e})}).map(function(t){var o="POLYGON_LAYERS_AREA"===t?function(e){return(Math.pow(10,-6)*T()(e.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})}(e):n[t],a=r.find(function(e){return e.id===t})||{},i=a.label||t;return{id:t,label:i,value:o,title:"".concat(i,": ").concat(o),isLink:a.isLink,isMain:a.isMain}}),a=o.find(function(e){return!0===e.isMain})||o.find(function(e){return"name"===e.id})||o.find(function(e){return"id"===e.id})||o[0];return void 0!==a&&(a.isMain=!0),o},Ze=function(e,t,r){var n={properties:e.properties},o=Je(e,r);n.fields=o;var a=o.find(function(e){return!0===e.isMain});return n.title=void 0===a?t:a.value,n},ze=function(e,t,r,n,o){return function(a,i){"click"===e&&a({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s,l=i().map.style.mapStyle.toJS(),c={latitude:t,longitude:r,features:[]},u=i().map.heatmap.highlightedVessels;if(!0!==u.isEmpty){var p=void 0===u.foundVessels?[]:u.foundVessels,d=0===p.length?[]:p[0],h=!0===u.clickableCluster,A=!0===h&&!1===u.highlightableCluster?-1:p.length;s={isCluster:h,count:A,layer:{id:u.layer.id,group:"legacyHeatmap"},properties:d},c.features.push(s)}var g=[];(n||[]).forEach(function(e){var t=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source}(e),r=l.sources[t],n=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){We(e,t,r[t])})}return e}({layer:{id:t,group:e.layer.metadata&&e.layer.metadata["mapbox:group"]}},Ze(e,t,r));if(!0===e.properties.cluster){var a=function(e,t){var r=e.properties.cluster_id,n=t(e.source);return new Promise(function(t,o){n.getClusterExpansionZoom(r,function(a,i){n.getClusterLeaves(r,99,0,function(r,s){(a||r)&&o();var l=s.map(function(t){return Ze(t,e.layer.id,n)});t({zoom:i,childrenFeatures:l})})})})}(e,o).then(function(e){n.cluster=e,n.count=e.childrenFeatures.length});g.push(a),n.isCluster=!0}else n.isCluster=!1;c.features.push(n)}),Promise.all(g).then(function(){c.isCluster=c.features.length>1||c.features.some(function(e){return!0===e.isCluster}),void 0!==s&&-1===s.count?c.count=-1:c.count=c.features.reduce(function(e,t){return e+(t.count||1)},0),1===c.count&&(c.feature=c.features[0]);var n=!0===i().map.module.autoClusterZoom,o=i().map.module.isCluster(c);if(c.isCluster=o,n&&"click"===e&&!0===c.isCluster){a(Ue());var l=c.features[0].cluster&&c.features[0].cluster.zoom;a(function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return function(n){n(qe(1,e,t,r))}}(t,r,l))}var u=c.features.length?"pointer":null;!0===c.isCluster&&!0===n&&(u="zoom-in"),a({type:"SET_MAP_CURSOR",payload:u});var p="click"===e?i().map.module.onClick:i().map.module.onHover;void 0!==p&&p(c)})}},Ve=r("./node_modules/react-map-gl/dist/esm/index.js"),Ne=(r("./node_modules/mapbox-gl/dist/mapbox-gl.css"),r("./node_modules/pixi.js/lib/index.js")),Xe=function(e,t,r){var n=e%360/parseFloat(360)*6,o=100===t?1:t%100/parseFloat(100),a=100===r?1:r%100/parseFloat(100),i=Math.floor(n),s=n-i,l=a*(1-o),c=a*(1-s*o),u=a*(1-(1-s)*o),p=i%6,d=[a,c,l,l,u,a][p],h=[u,a,a,c,l,l][p],A=[l,l,u,a,a,c][p];return{r:Math.round(255*d),g:Math.round(255*h),b:Math.round(255*A)}},$e=function(e){return Xe(e,50,100)},et=function(e){var t=$e(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")},tt=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},rt=function(e){return 12*e},nt=function(e){return e%360};function ot(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var at=function(){function e(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.stage=new PIXI.particles.ParticleContainer(f,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===o&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var a=new PIXI.Rectangle(0,0,2*m,2*m);this.mainVesselTexture=new PIXI.Texture(t,a),this._setTextureFrame(r,n),this.clearSpriteProps()}var t,r,n;return t=e,(r=[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(f),y:new Float32Array(f),a:new Float32Array(f),s:new Float32Array(f)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,r,n){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=r,this.spritesProps.s[this.spritesPropsCount]=n,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.mainVesselTexture.frame.clone();if(null!==e&&(r.x=2*m*e+e),null!==t){var n=function(e){return Math.round(e/360*30)}(t);30===n&&(n=0),r.y=n*m*2,n>0&&(r.y+=n)}this.mainVesselTexture.frame=r,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var r=this.stage.children[t],n=this.spritesProps.s[t];r.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],n,n),r.alpha=this.spritesProps.a[t]}for(var o=this.stage.children.length,a=e;a<o;a++){this.stage.children[a].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),r=0;r<t;r++)this.stage.removeChildAt(0);if(e>0){var n=Math.max(5e3,e);this._addSprites(n)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var r=new PIXI.Sprite(this.mainVesselTexture);r.anchor.x=.5,r.anchor.y=.5,r.x=-100,this.stage.addChild(r)}}}])&&ot(t.prototype,r),n&&ot(t,n),e}();function it(e){return(it="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function st(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],n=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(l){o=!0,a=l}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function lt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function ct(e,t){return!t||"object"!==it(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ut(e){return(ut=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function pt(e,t){return(pt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}at.__docgenInfo={description:"",methods:[{name:"clearSpriteProps",docblock:null,modifiers:[],params:[],returns:null},{name:"pushSpriteProps",docblock:null,modifiers:[],params:[{name:"x",type:null},{name:"y",type:null},{name:"a",type:null},{name:"s",type:null}],returns:null},{name:"setRenderingStyleIndex",docblock:null,modifiers:[],params:[{name:"renderingStyleIndex",type:null}],returns:null},{name:"destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_setTextureFrame",docblock:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used\n@heatmapStyle bool whether to use heatmap style or solid circle style\n@hue number hue value between 0 and 360",modifiers:[],params:[{name:"renderingStyleIndex"},{name:"hue"}],returns:null,description:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used"},{name:"resizeSpritesPool",docblock:null,modifiers:[],params:[],returns:null},{name:"_addSprites",docblock:null,modifiers:[],params:[{name:"num",type:null}],returns:null}],displayName:"HeatmapSubLayer"};var dt=function(e,t,r){return[1/1.5*(r[0]*e+r[4]*t+r[12]),1/1.5*(r[5]*t+r[13])]},ht=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),ct(this,ut(t).apply(this,arguments))}var r,n,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&pt(e,t)}(t,o.a.Component),r=t,(n=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,r=e.rootStage,n=e.useRadialGradientStyle,o=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:o,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(n),this.stage=new Ne.Container,r.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Y.NORMAL;this.brushRenderingStyle="string"===typeof e?Y[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?F:G,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===Y.NORMAL?this.brushZoomRenderingStyle:0,r=this.brushRenderingStyle+t;r!==this.renderingStyleIndex&&(this.renderingStyleIndex=r,Object.values(this.subLayers).forEach(function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)}))}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.filters,n=t.baseTexture,o=t.layer;if(null!==o&&void 0!==o&&void 0!==o.tiles&&!1!==o.visible){this.stage.visible=!0,this.stage.alpha=o.opacity;for(var a=o.tiles,i=o.hue,s=void 0!==r&&r.length?r.filter(function(e){return!0!==e.pass}).map(function(e){return void 0===e.hue?"0":e.hue.toString()}):[i.toString()],l=Object.keys(this.subLayers),c=q()(s.concat(l)),u=0;u<c.length;u++){var p=c[u];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(n,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(a.forEach(function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:r.length,defaultHue:i})}),s.forEach(function(t){e.subLayers[t].render()}))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,r=e.numFilters,n=e.defaultHue;if(t)for(var o=this.props,a=o.startIndex,i=o.endIndex,s=o.viewport,l=o.filters,c=o.viewportLeft,u=o.viewportRight,p=a;p<i;p++){var d=t[p];if(d)for(var h=0,A=d.worldX.length;h<A;h++){var g=void 0;void 0!==l&&l.length||(g=n);for(var m=0;m<r;m++){var f=l[m];if(Ae(d,h,f.filterValues)){g=f.hue;break}}if(void 0!==g){var y=d.worldX[h];c>0&&y<c?y+=512:c<0&&y>u&&(y-=512);var E=y*s.scale,b=d.worldY[h]*s.scale,w=s.pixelProjectionMatrix,B=st(0===s.pitch?dt(E,b,w):Object(X.k)([E,b],w),2),v=B[0],C=B[1];v>-10&&v<s.width+10&&C>-10&&C<s.height+10&&this.subLayers[g].pushSpriteProps(v,C,d.opacity?d.opacity[h]:this.renderingStyle.defaultOpacity,d.radius?d.radius[h]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,r){var n=new at(e,t,r,this.brushRenderingStyle===Y.BULLSEYE);return this.stage.addChild(n.stage),n}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}])&&lt(r.prototype,n),a&&lt(r,a),t}(),At=ht;function gt(e){return(gt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function mt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],n=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(l){o=!0,a=l}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function ft(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function yt(e,t){return!t||"object"!==gt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Et(e){return(Et=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function bt(e,t){return(bt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}ht.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"setBrushRenderingStyle",docblock:null,modifiers:[],params:[{name:"style",type:null}],returns:null},{name:"setBrushZoomRenderingStyle",docblock:null,modifiers:[],params:[{name:"useRadialGradientStyle",type:null}],returns:null},{name:"_setBrushRenderingStyleIndex",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_setSubLayersSpritePropsForTile",docblock:null,modifiers:[],params:[{name:"{ data, numFilters, defaultHue }",type:null}],returns:null},{name:"_createSublayer",docblock:null,modifiers:[],params:[{name:"baseTexture",type:null},{name:"renderingStyleIndex",type:null},{name:"hue",type:null}],returns:null},{name:"_destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_destroySubLayer",docblock:null,modifiers:[],params:[{name:"subLayer",type:null}],returns:null}],displayName:"HeatmapLayer",props:{layer:{type:{name:"object"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},filters:{type:{name:"array"},required:!1,description:""},baseTexture:{type:{name:"object"},required:!1,description:""},useRadialGradientStyle:{type:{name:"bool"},required:!1,description:""},customRenderingStyle:{type:{name:"object"},required:!1,description:""},viewportLeft:{type:{name:"number"},required:!1,description:""},viewportRight:{type:{name:"number"},required:!1,description:""}}};var wt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),yt(this,Et(t).apply(this,arguments))}var r,n,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&bt(e,t)}(t,o.a.Component),r=t,(n=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"_build",value:function(){var e=this.props.rootStage;this.stage=new PIXI.Graphics,this.stage.nativeLines=!0,e.addChild(this.stage)}},{key:"clear",value:function(){this.stage.clear()}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.tracks,n=t.zoom,o=t.startIndex,a=t.endIndex,i=t.highlightTemporalExtentIndexes;if(this.clear(),r.length){var s=null===i?void 0:[Math.max(o,i[0]),Math.min(a,i[1])],l=s&&s[1]-s[0]>0?s:void 0,c=n>2,u=1+.5*(n-2),p=void 0!==l&&l[0]>0&&l[1]>0;r.forEach(function(t){e._drawTrack({data:t.data,startIndex:o,endIndex:a,drawFishingCircles:c,fishingCirclesRadius:u,color:"0x".concat(t.color.substr(1)),lineThickness:1,lineOpacity:1}),!0===p&&e._drawTrack({data:t.data,startIndex:i[0],endIndex:i[1],drawFishingCircles:c,fishingCirclesRadius:u,color:"0xFFFFFF",lineThickness:2,lineOpacity:1})})}}},{key:"_drawTrack",value:function(e){var t,r,n,o=this,a=e.data,i=e.startIndex,s=e.endIndex,l=e.drawFishingCircles,c=e.fishingCirclesRadius,u=e.color,p=e.lineThickness,d=e.lineOpacity,h=e.worldOffset,A=void 0===h?0:h,g=this.props.viewport,m=0,f={x:[],y:[]};this.stage.lineStyle(p,u,d);for(var y=!1,E=i;E<s;E++){var b=a[E];if(b)for(var w=0,B=b.series.length;w<B;w++){var v=b.series[w];m++;var C=b.worldX[w]+A,I=b.worldY[w],D=mt(Object(X.k)([C*g.scale,I*g.scale],g.pixelProjectionMatrix),2),k=D[0],O=D[1];if(t!==v&&this.stage.moveTo(k,O),r&&Math.abs(C-r)>256){0===A&&(y=!0);var S=n+(I-n)/2,L=C-r<0,M=A+(512-1e-6),Q=L?M:A,R=L?A:M,x=mt(Object(X.k)([Q*g.scale,S*g.scale],g.pixelProjectionMatrix),2),T=x[0],_=x[1];this.stage.lineTo(T,_);var Y=mt(Object(X.k)([R*g.scale,S*g.scale],g.pixelProjectionMatrix),2),F=Y[0],G=Y[1];this.stage.moveTo(F,G)}this.stage.lineTo(k,O),l&&!0===b.hasFishing[w]&&(f.x.push(k),f.y.push(O)),r=C,n=I,t=v}}if(l){this.stage.lineStyle(0),this.stage.beginFill(u,1);for(var H=0,j=f.x.length;H<j;H++)this.stage.drawCircle(f.x[H],f.y[H],c);this.stage.endFill()}return!0===y&&[-512,512].forEach(function(e){o._drawTrack({worldOffset:e,data:a,startIndex:i,endIndex:s,drawFishingCircles:l,fishingCirclesRadius:c,color:u,lineThickness:p,lineOpacity:d})}),m}},{key:"render",value:function(){return null}}])&&ft(r.prototype,n),a&&ft(r,a),t}(),Bt=wt;function vt(e){return(vt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ct(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){Lt(e,t,r[t])})}return e}function It(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],n=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(l){o=!0,a=l}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Dt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function kt(e){return(kt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ot(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function St(e,t){return(St=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Lt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}wt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"clear",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_drawTrack",docblock:"Draws a single track (line + points)\n\n@param data track points data in 'playback form' (ie organized by days)\n@param extent extent, in day indices\n@param offset object containing info about the current situation of the map viewport, used to compute screen coords\n@param drawFishingCircles whether to draw fishing circles or not\n@param fishingCirclesRadius radius of the fishing circles\n@param color\n@param lineThickness\n@param lineOpacity\n@param worldOffset offset to use when a track crosses the dateline (ie 512 to add a second world to the right)",modifiers:[],params:[{name:"{\n  data,\n  startIndex,\n  endIndex,\n  drawFishingCircles,\n  fishingCirclesRadius,\n  color,\n  lineThickness,\n  lineOpacity,\n  worldOffset = 0,\n}"}],returns:null,description:"Draws a single track (line + points)"}],displayName:"TracksLayer",props:{zoom:{type:{name:"number"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},highlightTemporalExtentIndexes:{type:{name:"array"},required:!1,description:""},tracks:{type:{name:"array"},required:!1,description:""}}};var Mt=function(e){function t(){var e,r,n,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=new Array(a),s=0;s<a;s++)i[s]=arguments[s];return n=this,o=(e=kt(t)).call.apply(e,[this].concat(i)),r=!o||"object"!==vt(o)&&"function"!==typeof o?Ot(n):o,Lt(Ot(r),"state",{pixiReady:!1}),Lt(Ot(r),"onTouchStart",function(e){e.touches.length&&r.queryCoords(e.touches[0].clientX,e.touches[0].clientY)}),Lt(Ot(r),"onMouseMove",function(e){r.queryCoords(e.clientX,e.clientY)}),Lt(Ot(r),"_onTick",function(){!0===r.heatmapFadingIn&&r.heatmapStage.alpha<1&&r._heatmapFadeinStep()}),r}var r,a,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&St(e,t)}(t,Ve["a"]),r=t,(a=[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,r=e.height;this.pixi=new Ne.Application({width:t,height:r,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var n=function(e,t){var r=document.createElement("canvas"),n=r.getContext("2d"),o=2*e;r.width=3*o+2,r.height=31*o+31;for(var a=0;a<31;a++){var i=o*a+a,s=i+e,l=e,c=n.createRadialGradient(l,s,e*t,l,s,e),u=rt(a),p=et(u);c.addColorStop(0,p);var d=Xe(nt(u+30),80,100);c.addColorStop(1,"rgba(".concat(d.r,", ").concat(d.g,", ").concat(d.b,", 0)")),n.fillStyle=c,n.fillRect(0,i,o,o),l+=o+1,n.beginPath(),n.arc(l,s,e,0,2*Math.PI,!1),n.fillStyle=p,n.fill(),l+=o+1,n.beginPath(),n.arc(l,s,.4*e,0,2*Math.PI,!1),n.fillStyle=p,n.fill(),n.beginPath(),n.arc(l,s,.95*e,0,2*Math.PI,!1),n.lineWidth=1,n.strokeStyle=p,n.stroke()}return r}(m,.15);this.baseTexture=Ne.Texture.fromCanvas(n),this.heatmapStage=new Ne.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_destroy",value:function(){this.pixi.destroy()}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every(function(e){return!0!==e.interactive})){var r=this._context.viewport,n=It(r.unproject([e,t]),2),o=n[0],a=n[1],i=o;i>180?i-=360:i<-180&&(i+=360);var s=It(Object(X.g)([i,a],1),2),l=s[0],c=s[1],u=10/r.scale;this.props.queryHeatmapVessels({longitude:i,latitude:a,worldX:l,worldY:c,toleranceRadiusInWorldUnits:u},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,r){var n={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},o=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)n=Ct({highlightLayerData:n},r.find(function(t){return t.id===e.layer.id})),o=e.foundVessels.map(function(e){return{hue:312,filterValues:{series:[e.series]}}});else if(null!==t){n=Ct({highlightLayerData:n},r.find(function(e){return e.id===t.layer.id})),o=[{hue:312,filterValues:{series:[t.id]}}]}return{highlightLayerData:n,highlightFilters:o}}},{key:"_render",value:function(){var e=this,t=this.props,r=t.zoom,a=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightTemporalExtentIndexes,l=t.highlightedVessels,c=t.highlightedClickedVessel,u=t.tracks,p=t.leftWorldScaled,d=t.rightWorldScaled,h=this._context.viewport,A=this.state.pixiReady,g=i[0],m=i[1],f=function(e){return e<6}(r);if(!0!==l.isEmpty&&this.toggleHeatmapDimming(!0),!0===l.isEmpty&&0===u.length&&this._startHeatmapFadein(),this.renderer&&this.renderer.gl&&void 0!==this.renderer.gl.getError){var y=this.renderer.gl.getError();0!==y&&console.log(y)}var E=this._getHighlightData(l,c,a),b=E.highlightLayerData,w=E.highlightFilters;return o.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===A&&o.a.createElement(n.Fragment,null,a.map(function(t){return o.a.createElement(At,{key:t.id,layer:t,filters:t.filters||[],viewport:h,startIndex:g,endIndex:m,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:f,customRenderingStyle:{},viewportLeft:p,viewportRight:d})}),void 0!==this.stage&&o.a.createElement(At,{key:"highlighted",layer:b,filters:w,viewport:h,startIndex:g,endIndex:m,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:f,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:p,viewportRight:d}),void 0!==this.stage&&o.a.createElement(Bt,{tracks:u,viewport:h,zoom:r,startIndex:g,endIndex:m,highlightTemporalExtentIndexes:s,rootStage:this.stage})))}}])&&Dt(r.prototype,a),i&&Dt(r,i),t}();Mt.propTypes={zoom:d.a.number,heatmapLayers:d.a.array,temporalExtentIndexes:d.a.array,highlightTemporalExtentIndexes:d.a.array,highlightedVessels:d.a.object,highlightedClickedVessel:d.a.object,tracks:d.a.array,queryHeatmapVessels:d.a.func,exportNativeViewport:d.a.func,leftWorldScaled:d.a.number,rightWorldScaled:d.a.number},Mt.contextTypes={viewport:d.a.object};var Qt=Mt;function Rt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var xt=Object(A.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).map(function(t){return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){Rt(e,t,r[t])})}return e}({},e[t])})}),Tt=Object(A.a)([function(e){return e.map.tracks.data}],function(e){return e.filter(function(e){return"geojson"!==e.type}).filter(function(e){return void 0!==e.data})}),_t=Object(A.a)([B],function(e){var t=e[0].getTime(),r=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Yt=Object(A.a)([v],function(e){if(void 0===e||null===e||!e.length)return null;var t=e[0].getTime(),r=e[1].getTime();return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Ft=Object(l.b)(function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:xt(e),tracks:Tt(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:_t(e),highlightTemporalExtentIndexes:Yt(e)}},function(e,t){return{queryHeatmapVessels:function(t,r){e(Oe(t,r))},exportNativeViewport:function(t){var r;e((r=t,function(e){var t=[0,0],n=[r.width,r.height],o=Object(X.h)(t,r.pixelUnprojectionMatrix),a=Object(X.h)(n,r.pixelUnprojectionMatrix),i=o[0]/r.scale,s=a[0]/r.scale,l=r.unproject(t),c=r.unproject(n);e({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:i,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}))}}})(Qt),Gt=r("./src/map/glmap/map.css"),Ht=r.n(Gt);function jt(e){return(jt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ut(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Pt(e){return(Pt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Kt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function qt(e,t){return(qt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Wt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Jt=function(e){var t=e.latitude,r=e.longitude,n=e.children,a=e.closeButton,i=e.onClose;return o.a.createElement(Ve.b,{latitude:t,longitude:r,closeButton:a,onClose:i,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},n)};Jt.defaultProps={onClose:function(){}};var Zt=function(e){function t(e){var r,n,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,o=Pt(t).call(this,e),r=!o||"object"!==jt(o)&&"function"!==typeof o?Kt(n):o,Wt(Kt(r),"_resize",function(){if(null!==r._mapContainerRef){var e=window.getComputedStyle(r._mapContainerRef),t=parseInt(e.width,10),n=parseInt(e.height,10)+1;t===r.props.viewport.width&&n===r.props.viewport.height||r.props.setViewport(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){Wt(e,t,r[t])})}return e}({},r.props.viewport,{width:t,height:n}))}else console.warn("Cant set viewport on a map that hasnt finished intanciating yet")}),Wt(Kt(r),"onViewportChange",function(e){r.props.setViewport(e)}),Wt(Kt(r),"onMapInteraction",function(e,t){r.props.mapInteraction(t,e.lngLat[1],e.lngLat[0],e.features,r.glGetSource)}),Wt(Kt(r),"onHover",function(e){r.onMapInteraction(e,"hover")}),Wt(Kt(r),"onClick",function(e){r.onMapInteraction(e,"click")}),Wt(Kt(r),"getRef",function(e){null!==e&&(r.glMap=e.getMap(),r.glGetSource=r.glMap.getSource.bind(r.glMap))}),Wt(Kt(r),"getCursor",function(e){var t=e.isDragging,n=r.props.cursor;return null===n?t?"grabbing":"grab":n}),Wt(Kt(r),"transformRequest",function(e,t){var n=r.props.token;if(null!==n&&"Tile"===t&&e.match(y))return{url:e,headers:{Authorization:"Bearer "+n}}}),r.state={mouseOver:!0},r._mapContainerRef=null,r}var r,n,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&qt(e,t)}(t,o.a.Component),r=t,(n=[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("resize",this._resize),this._resize(),window.setTimeout(function(){return e._resize()},1),window.setTimeout(function(){return e._resize()},1e4)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this._resize)}},{key:"render",value:function(){var e=this,t=this.props,r=t.viewport,n=t.maxZoom,a=t.minZoom,i=t.transitionEnd,s=t.mapStyle,l=t.onClosePopup,c=t.clickPopup,u=t.hoverPopup,p=t.hasHeatmapLayers,d=t.interactiveLayerIds;return o.a.createElement("div",{id:"map",className:Ht.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},o.a.createElement(Ve.c,Object.assign({ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:i,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:s},r,{maxZoom:n,minZoom:a,onViewportChange:this.onViewportChange,interactiveLayerIds:d,clickRadius:4}),!1!==p&&o.a.createElement(Ft,null),void 0!==c&&null!==c&&o.a.createElement(Jt,{latitude:c.latitude,longitude:c.longitude,closeButton:!0,onClose:l},c.content),!0===this.state.mouseOver&&void 0!==u&&null!==u&&o.a.createElement(Jt,{latitude:u.latitude,longitude:u.longitude,closeButton:!1},u.content)),o.a.createElement("div",{className:Ht.a.googleLogo}))}}])&&Ut(r.prototype,n),a&&Ut(r,a),t}();Zt.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapInteraction:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,interactiveLayerIds:null};var zt=Zt;Zt.__docgenInfo={description:"",methods:[{name:"_resize",docblock:null,modifiers:[],params:[],returns:null},{name:"onViewportChange",docblock:null,modifiers:[],params:[{name:"viewport",type:null}],returns:null},{name:"onMapInteraction",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"type",type:null}],returns:null},{name:"onHover",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"onClick",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"getRef",docblock:null,modifiers:[],params:[{name:"ref",type:null}],returns:null},{name:"getCursor",docblock:null,modifiers:[],params:[{name:"{ isDragging }",type:null}],returns:null},{name:"transformRequest",docblock:null,modifiers:[],params:[{name:"url",type:null},{name:"resourceType",type:null}],returns:null}],displayName:"Map",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},mapInteraction:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},transitionEnd:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},interactiveLayerIds:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:""},viewport:{type:{name:"object"},required:!0,description:""},mapStyle:{type:{name:"object"},required:!0,description:""},maxZoom:{type:{name:"number"},required:!0,description:""},minZoom:{type:{name:"number"},required:!0,description:""},setViewport:{type:{name:"func"},required:!0,description:""},hasHeatmapLayers:{type:{name:"bool"},required:!0,description:""}}};var Vt=Object(A.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).length>0}),Nt=Object(A.a)([function(e){return e.map.style.staticLayers}],function(e){return e.filter(function(e){return!0===e.interactive&&!0===e.visible}).map(function(e){return e.id})}),Xt=Object(A.a)([function(e){return e.map.style.mapStyle},R],function(e,t){if(!t)return e;var r=e.toJS().layers.filter(function(e){return void 0!==e.metadata}).map(function(e){return e.metadata["mapbox:group"]}).lastIndexOf("temporal")+1,n=e.mergeIn(["sources"],t.sources),o=e.get("layers");return t.layers.forEach(function(e,t){o=o.insert(r+t,Object(g.a)(e))}),n=n.set("layers",o)}),$t=Object(l.b)(function(e,t){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,cursor:e.map.interaction.cursor,token:e.map.module.token,mapStyle:Xt(e),hasHeatmapLayers:Vt(e),interactiveLayerIds:Nt(e)}},function(e){return{setViewport:function(t){e(function(e){return function(t){t({type:"SET_VIEWPORT",payload:e}),t(ke()),t(function(e,t){var r=t(),n=r.map.module.onViewportChange;if(void 0!==n){var o=r.map.viewport;void 0!==o.bounds&&n({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})}}(t))},mapInteraction:function(t,r,n,o,a,i){e(ze(t,r,n,o,a))},transitionEnd:function(){e(function(e){e({type:"TRANSITION_END"}),e(ke()),e(function(e,t){var r=t(),n=r.map.module.onViewportChange;if(void 0!==n){var o=r.map.viewport;void 0!==o.bounds&&n({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})})},onClosePopup:function(){e(function(e,t){var r=t();void 0!==r.map.module.onClosePopup&&r.map.module.onClosePopup()})}}})(zt),er=r("./src/map/glmap/gl-styles/style.json");function tr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function rr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){nr(e,t,r[t])})}return e}function nr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var or,ar=q()(Object.keys(er.sources).map(function(e){return er.sources[e].attribution}).filter(function(e){return void 0!==e})),ir=function(e){if(void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),void 0===e.metadata&&(e.metadata={}),!0===e.metadata["gfw:temporal"]){var t=void 0===e.metadata["gfw:temporalField"]?"timestamp":e.metadata["gfw:temporalField"];e.filter=["all",[">",t,0],["<",t,999999999999]]}return void 0===e.metadata["mapbox:group"]&&(e.metadata["mapbox:group"]="temporal"),"visible"!==e.layout.visibility&&(e.layout.visibility="none"),e},sr={mapStyle:Object(g.a)((or=er,or.layers.forEach(function(e){ir(e)}),or)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:ar},lr=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function cr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function ur(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){pr(e,t,r[t])})}return e}function pr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var dr="INIT_MAP_STYLE",hr="SET_MAP_STYLE",Ar="MARK_CARTO_LAYERS_AS_INSTANCIATED",gr="SET_STATIC_LAYERS",mr="SET_BASEMAP_LAYERS",fr=function(e){return{type:hr,payload:e}},yr=function(e,t,r){for(var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=t().map.style.mapStyle,a=o.toJS().layers,i=Math.round(r[0].getTime()/1e3),s=Math.round(r[1].getTime()/1e3),l=ee.a.getOffsetedTimeAtPrecision(r[0].getTime()),c=ee.a.getOffsetedTimeAtPrecision(r[1].getTime()),u=0;u<a.length;u++){var p=a[u];if(void 0!==p.metadata&&!0===p.metadata["gfw:temporal"]&&!(!0===n&&!0!==p.metadata["gfw:temporal:throttled"]||!1===n&&!0===p.metadata["gfw:temporal:throttled"])){var d=o.getIn(["layers",u,"filter"]).toJS();if(null===d)throw new Error("filter must be preset on style.json for temporal layer: ",p.id);var h=p.metadata&&"timeIndex"===p.metadata["gfw:temporalField"];d[1][2]=h?l:i,d[2][2]=h?c:s,o=o.setIn(["layers",u,"filter"],Object(g.a)(d))}}e(fr(o))},Er=u()(function(e,t,r){yr(e,t,r,!0)},400),br=function(e){return function(t,r){yr(t,r,e),Er(t,r,e)}},wr=function(e,t,r){var n=e.toJS().layers,o=e,a=n.findIndex(function(e){return e.id===t}),i=n.find(function(e){return e.id===t});if(o=function(e,t,r){var n=!0===t.visible?"visible":"none";return e.setIn(["layers",r,"layout","visibility"],n)}(o,r,a),!0===r.isBasemap)return o;var s=void 0===r.opacity?1:r.opacity;switch(i.type){case"fill":o=o.setIn(["layers",a,"paint","fill-opacity"],s).setIn(["layers",a,"paint","fill-outline-color"],r.color).setIn(["layers",a,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":o=o.setIn(["layers",a,"paint","line-opacity"],s).setIn(["layers",a,"paint","line-color"],r.color);break;case"symbol":if(i.metadata&&!0===i.metadata["gfw:isLabel"]){var l="visible"===o.getIn(["layers",a,"layout","visibility"])&&!0===r.showLabels?"visible":"none";if(o=o.setIn(["layers",a,"layout","visibility"],l),!0!==r.showLabels)break}o=o.setIn(["layers",a,"paint","text-opacity"],s),void 0!==r.color&&(o=o.setIn(["layers",a,"paint","text-color"],r.color));break;case"circle":if(o=o.setIn(["layers",a,"paint","circle-opacity"],s).setIn(["layers",a,"paint","circle-stroke-opacity"],s),void 0!==r.color){var c=i.metadata["gfw:mainColorPaintProperty"]||"circle-color";o=o.setIn(["layers",a,"paint",c],r.color)}break;case"raster":o=o.setIn(["layers",a,"paint","raster-opacity"],s)}return o=function(e,t,r,n){var o=e,a=e.toJS(),i=r.type,s=a.metadata["gfw:styles"],l=r.metadata;return["selected","highlighted"].forEach(function(e){var a=t["".concat(e,"Features")],c=null!==a&&void 0!==a&&a.values.length>0,u=t[e],p=ur({},s[e][i]||{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{});Object.keys(p).length&&Object.keys(p).forEach(function(e){var i,s=p[e][0],l=p[e][1],d=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===c&&!0!==u&&!1!==u){var h=er.layers.find(function(e){return e.id===r.id});i=void 0!==h?r.metadata&&r.metadata["gfw:mainColorPaintProperty"]===e?null:h[d][e]:null}else if(!0===u||!1===u)i=!0===u?s:l;else{var A="";if(null!==t.color&&void 0!==t.color){var g=tt(t.color);A="".concat(g.r,",").concat(g.g,",").concat(g.b)}i=["match",["get",a.field],a.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",A),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",A)]}void 0!==i&&null!==i&&(o=o.setIn(["layers",n,d,e],i))})}),o}(o,r,i,a)},Br=function(e,t,r,n){return function(o,a){var i=a().map.style.mapStyle,s=i.toJS();if(void 0===s.sources[t]){var l={type:e};e===H?l.data=n:e===j&&(l.tiles=[r],l.tileSize=256),i=i.setIn(["sources",t],Object(g.a)(l))}if(void 0===s.layers.find(function(e){return e.id===t})){var c=e===H?function(e){var t=e.features.map(function(e){var t=e.geometry;return void 0===t?null:t.type}),r=lr.map(function(e){var r=0;return t.forEach(function(t){e.geoJSON.indexOf(t)>-1&&r++}),{gl:e.gl,num:r}}),n="fill",o=0;return r.forEach(function(e){e.num>o&&(n=e.gl,o=e.num)}),n}(n):e,u=Object(g.a)({id:t,source:t,type:c,layout:{},paint:{}}),p=e===j?s.layers.length-1-s.layers.filter(function(e){return"labels"!==e.id}).reverse().findIndex(function(e){return"raster"===e.type}):s.layers.length-1;i=i.set("layers",i.get("layers").splice(p,0,u))}o(fr(i))}},vr=function(e){return function(t,r){t({type:Ar,payload:e.map(function(e){return e.sourceId})});var n=e.map(function(e){return r=(t=e).sourceId,n=t.sourceCartoSQL,o={layers:[{id:r,options:{sql:n}}]},a=encodeURIComponent(JSON.stringify(o)),i="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG".replace("$MAPCONFIG",a),new Promise(function(e){fetch(i).then(function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(r)),Promise.reject(),null):e.json()}).then(function(t){e({layergroupid:t.layergroupid,sourceId:r})}).catch(function(e){console.warn(e)})});var t,r,n,o,a,i});Promise.all(n.map(function(e){return e.catch(function(e){return e})})).then(function(n){var o=r().map.style.mapStyle,a=o.toJS();n.forEach(function(t){var r="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt".replace("$LAYERGROUPID",t.layergroupid),n="".concat(t.sourceId,"-instanciated");o=o.setIn(["sources",n],Object(g.a)({type:"vector",tiles:[r]})),a.layers.forEach(function(r,a){if(r.source===t.sourceId){o=(o=o.setIn(["layers",a,"source"],n)).setIn(["layers",a,"metadata","gfw:id"],t.sourceId);var i=e.find(function(e){return e.refLayer.id===t.sourceId}).refLayer;o=wr(o,r.id,i)}})}),t(fr(o))}).catch(function(e){console.warn(e)})}},Cr=function(e,t){return function(r,n){r({type:gr,payload:e}),r({type:mr,payload:t});var o=[].concat(cr(e),cr(t.map(function(e){return ur({},e,{isBasemap:!0})}))),a=n().map.style.mapStyle.toJS().sources,i=o.filter(function(e){return void 0!==e.gl&&void 0===a[e.id]});i.length&&r(function(e){return function(t,r){var n=r(),o=n.map.style.mapStyle;e.forEach(function(e){var t=e.id,r=e.gl,n=Object(g.a)(r.source);o=o.setIn(["sources",t],n),r.layers.forEach(function(e){var n=void 0===e["source-layer"]?t:e["source-layer"],a=e.id;void 0===a&&(a=1===r.layers.length?t:"".concat(t,"-").concat((new Date).getTime()));var i=ur({},ir(e),{id:a,source:t,"source-layer":n}),s=o.get("layers"),l=i.metadata["mapbox:group"],c=s.findLastIndex(function(e){return l===e.toJS().metadata["mapbox:group"]});o=o.set("layers",s.splice(c,0,Object(g.a)(i)))})}),t(fr(o)),t(br(n.map.module.temporalExtent))}}(i));var s=o.filter(function(e){return!0===e.isCustom&&void 0===a[e.id]});s.length&&s.forEach(function(e){r(Br(e.subtype,e.id,e.url,e.data))});var l=n().map.style,c=l.mapStyle,u=c.toJS(),p=u.layers,d=u.sources,h=[];e.forEach(function(e){var t=e.id;if(void 0!==a[t]&&(void 0!==e.data&&(c=c.setIn(["sources",t,"data"],Object(g.a)(e.data))),void 0!==e.url)){var r=a[t].tiles,n=void 0!==r&&r.length>0?q()([e.url].concat(cr(r))):[e.url];c=c.setIn(["sources",t,"tiles"],Object(g.a)(n))}});for(var A=function(e){var t=p[e],r=t.source,n=d[r],a=void 0!==t.metadata&&t.metadata["gfw:id"]||r,i=o.find(function(e){return e.id===a});if(void 0===i)return t.type,"continue";var s=void 0!==n.metadata&&n.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var u=l.cartoLayersInstanciated.indexOf(r)>-1;return!0!==i.visible||u||h.find(function(e){return e.sourceId===r})||h.push({sourceId:r,sourceCartoSQL:s,refLayer:i}),"continue"}c=wr(c,t.id,i)},m=0;m<p.length;m++)A(m);h.length&&r(vr(h)),r(fr(c))}},Ir=r("./node_modules/@turf/bbox/index.js"),Dr=r.n(Ir),kr=r("./node_modules/redux-thunk/es/index.js");var Or=s.d;Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).MAP_REDUX_REMOTE_DEBUG||Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).REACT_APP_MAP_REDUX_REMOTE_DEBUG;var Sr=Object(s.e)(function(){},{},Or(Object(s.a)(kr.a))),Lr=function(e){var t,r=Sr.getState().map.tracks.data.find(function(t){return t.id===e.toString()});return Sr.dispatch((t=r.geoBounds,function(e,r){var n=r(),o=Object(Ke.a)({bounds:[[t.minLng,t.minLat],[t.maxLng,t.maxLat]],width:n.map.viewport.viewport.width,height:n.map.viewport.viewport.height,padding:50});e(qe(null,o.latitude,o.longitude,o.zoom))})),r.timelineBounds},Mr=Sr,Qr="ADD_TRACK",Rr="UPDATE_TRACK",xr=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach(function(e){e.properties&&e.properties.coordinateProperties&&e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach(function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)})}),{geojson:e,timelineBounds:[t.start,t.end]}},Tr=function(e){var t=Dr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}},_r=function e(t){for(var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n={start:1/0,end:0},o={minLat:1/0,maxLat:-1/0,minLng:1/0,maxLng:-1/0},a=0,i=t.datetime.length;a<i;a++){var s=t.datetime[a];s<n.start?n.start=s:s>n.end&&(n.end=s);var l=t.latitude[a];l<o.minLat?o.minLat=l:l>o.maxLat&&(o.maxLat=l);var c=t.longitude[a];!0===r&&c<0&&(c+=360),c<o.minLng?o.minLng=c:c>o.maxLng&&(o.maxLng=c)}return o.maxLng-o.minLng>350&&!1===r?e(t,!0):{time:[n.start,n.end],geo:o}};var Yr=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,r){var n=r().map.tracks.data;e&&e.forEach(function(e){var r,o=e.id,a=n.find(function(e){return e.id===o});void 0===a?t((r=e,function(e,t){var n=r.id,o=r.url,a=r.type,i=r.fitBoundsOnLoad,s=r.layerTemporalExtents,l=r.color,c=r.data,u=t();if(!u.map.tracks.data.find(function(e){return e.id===n})){var p={id:n,url:o,type:a,color:l,fitBoundsOnLoad:i},d=void 0!==r.data&&null!==r.data,h=void 0!==o&&null!==o&&""!==o;if(d&&(p.data=c,p.geoBounds=Tr(c)),e({type:Qr,payload:p}),!d&&h){var A=E(e,u);if("geojson"!==a){var g=u.map.module.token,m=le(o,g,s);Promise.all(m.map(function(e){return e.catch(function(e){return e})})).then(function(t){var r=ce(t);if(r.length){var o=ue(r,["latitude","longitude","datetime","series","weight","sigma"]),a=de(o),i=_r(o);e({type:Rr,payload:{id:n,data:he(a),geoBounds:i.geo,timelineBounds:i.time}}),e(b(A))}})}else fetch(o).then(function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()}).then(function(t){var r=xr(t),o=r.geojson,a=r.timelineBounds,s=Tr(t);e({type:Rr,payload:{id:n,data:o,geoBounds:s,timelineBounds:a}}),i&&Lr(n)}).catch(function(e){return console.warn(e)}).finally(function(){return e(b(A))})}}})):a.color!==e.color&&t({type:Rr,payload:{id:e.id,color:e.color}})}),n.forEach(function(r){e&&e.find(function(e){return e.id===r.id})||t({type:"REMOVE_TRACK",payload:{trackId:r.id}})})}},Fr=function(e,t){return function(e){return e}};function Gr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Hr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){jr(e,t,r[t])})}return e}function jr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Ur={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},Pr=Fr("module",{loaders:d.a.arrayOf(d.a.number),token:d.a.string,temporalExtent:d.a.arrayOf(d.a.instanceOf(Date)),onViewportChange:d.a.func,onHover:d.a.func,onClick:d.a.func,onLoadStart:d.a.func,onLoadComplete:d.a.func,onClosePopup:d.a.func,onAttributionsChange:d.a.func})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ur,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return Hr({},e,t.payload);case"SET_TEMPORAL_EXTENT":return Hr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return Hr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var r=null!==e.loaders?Gr(e.loaders):[];return r.push(t.payload),Hr({},e,{loaders:r});case"COMPLETE_LOADER":var n=Gr(e.loaders),o=n.findIndex(function(e){return e===t.payload});return n.splice(o,1),Hr({},e,{loaders:n});default:return e}});function Kr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){qr(e,t,r[t])})}return e}function qr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Wr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Jr={data:[]},Zr=Fr("tracks",{data:d.a.arrayOf(d.a.exact(Kr({},h,{data:d.a.object,timelineBounds:d.a.array,geoBounds:d.a.exact({minLat:d.a.number,minLng:d.a.number,maxLat:d.a.number,maxLng:d.a.number})})))})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Jr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Qr:return Kr({},e,{data:[].concat(Wr(e.data),[t.payload])});case Rr:var r=t.payload,n=e.data.map(function(e){return e.id!==r.id?e:Kr({},e,r)});return Kr({},e,{data:n});case"REMOVE_TRACK":var o=t.payload.trackId,a=e.data.filter(function(e){return e.id!==o});return Kr({},e,{data:a});default:return e}});function zr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Vr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){Nr(e,t,r[t])})}return e}function Nr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Xr={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function $r(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){en(e,t,r[t])})}return e}function en(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var tn={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]},rn=r("./node_modules/react-map-gl/dist/es5/utils/transition/viewport-fly-to-interpolator.js"),nn=r.n(rn),on=r("./node_modules/d3-ease/src/index.js");function an(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){sn(e,t,r[t])})}return e}function sn(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ln={transitionDuration:500,transitionInterpolator:new nn.a,transitionEasing:on.a},cn={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};function un(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var pn={cursor:"progress"},dn=Object(s.c)({module:Pr,tracks:Zr,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case xe:var r=e.heatmapLayers,n=r[t.payload.layerId].visibleTemporalExtentsIndices;return n=q()(n.concat(t.payload.indicesAdded)),r[t.payload.layerId].visibleTemporalExtentsIndices=n,Object.assign({},e,r);case"ADD_HEATMAP_LAYER":var o=Object.assign({},e.heatmapLayers,Nr({},t.payload.id,Vr({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:o});case"UPDATE_HEATMAP_LAYER_STYLE":var a=t.payload,i=Vr({},e.heatmapLayers[a.id],a),s=Vr({},e.heatmapLayers,Nr({},a.id,i));return Vr({},e,{heatmapLayers:s});case"REMOVE_HEATMAP_LAYER":var l=Object.assign({},e.heatmapLayers);return delete l[t.payload.id],Object.assign({},e,{heatmapLayers:l});case Qe:return Object.assign({},e,{referenceTiles:[].concat(zr(e.referenceTiles),[t.payload])});case Te:var c=t.payload.layerId,u=t.payload.tile,p=Vr({},e.heatmapLayers[c]),d=zr(p.tiles),h=d.findIndex(function(e){return e.uid===u.uid});-1===h?d.push(u):d=[d.slice(0,h),u,d.slice(h+1)],p.tiles=d;var A=Vr({},e.heatmapLayers,Nr({},c,p));return Vr({},e,{heatmapLayers:A});case"RELEASE_HEATMAP_TILES":var g=t.payload,m=Object.keys(e.heatmapLayers),f=Vr({},e.heatmapLayers);m.forEach(function(e){var t=Vr({},f[e]);g.forEach(function(e){var r=t.tiles.findIndex(function(t){return t.uid===e});r>-1&&t.tiles.splice(r,1)})});var y=zr(e.referenceTiles);return g.forEach(function(e){var t=y.findIndex(function(t){return t.uid===e});t>-1&&(y=[].concat(zr(y.slice(0,t)),zr(y.slice(t+1))))}),Vr({},e,{heatmapLayers:f,referenceTiles:y});case"UPDATE_LOADED_TILES":var E=Vr({},e.heatmapLayers);return Vr({},e,{heatmapLayers:E});case Re:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return Vr({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return Vr({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:tn,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":return $r({},e,{currentVisibleTiles:[].concat(t.payload)});case"SET_CURRENTLY_LOADED_TILES":return $r({},e,{currentLoadedTiles:[].concat(t.payload)});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var r=q()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),n=q()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids));return $r({},e,{currentToLoadTileUids:r.filter(function(e){return-1===n.indexOf(e)}),currentToReleaseTileUids:n});case"MARK_TILES_UIDS_AS_LOADED":var o=e.currentToLoadTileUids,a=t.payload;return $r({},e,{currentToLoadTileUids:o.filter(function(e){return-1===a.indexOf(e)})});case"RELEASE_MARKED_TILES_UIDS":return $r({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:sr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case dr:var r=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return rr({},e,{mapStyle:r});case hr:return rr({},e,{mapStyle:t.payload});case gr:return rr({},e,{staticLayers:t.payload});case mr:return rr({},e,{basemapLayers:t.payload});case Ar:return rr({},e,{cartoLayersInstanciated:[].concat(tr(e.cartoLayersInstanciated),tr(t.payload))});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:cn,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return an({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"UPDATE_VIEWPORT":var r=an({},e.viewport,t.payload);return an({},e,{viewport:r,prevZoom:r.zoom});case"SET_ZOOM_INCREMENT":var n=e.viewport.zoom,o=Math.min(e.maxZoom,t.payload.zoom||n+t.payload.increment),a=an({},e.viewport,ln,{zoom:o,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return an({},e,{viewport:a,canZoomIn:o<e.maxZoom,canZoomOut:o>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:_});case"SET_MOUSE_LAT_LONG":return an({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return an({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return an({},e,t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:pn,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){un(e,t,r[t])})}return e}({},e,{cursor:t.payload});default:return e}}});function hn(e){return(hn="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function An(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function gn(e){return(gn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function mn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function fn(e,t){return(fn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var yn=Object(s.c)({map:dn});Mr.replaceReducer(yn);var En=u()(function(e){Mr.dispatch(br(e)),Mr.dispatch(function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}}(e))},16),bn=function(e){var t;Mr.dispatch((t={latitude:e.center[0],longitude:e.center[1],zoom:e.zoom},function(e){e({type:"UPDATE_VIEWPORT",payload:t}),e(ke()),e(function(e,t){var r=t(),n=r.map.module.onViewportChange;if(void 0!==n){var o=r.map.viewport;void 0!==o.bounds&&n({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})}))},wn=function(e){function t(){var e,r,n,o,a,i,s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var l=arguments.length,c=new Array(l),u=0;u<l;u++)c[u]=arguments[u];return n=this,r=!(o=(e=gn(t)).call.apply(e,[this].concat(c)))||"object"!==hn(o)&&"function"!==typeof o?mn(n):o,a=mn(r),s={initialized:!1,error:null,errorInfo:null},(i="state")in a?Object.defineProperty(a,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):a[i]=s,r}var r,n,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&fn(e,t)}(t,o.a.Component),r=t,(n=[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){var e,t,r;void 0!==this.props.viewport&&bn(this.props.viewport),null!==this.props.glyphsPath&&Mr.dispatch((e={glyphsPath:this.props.glyphsPath},t=e.glyphsPath,{type:dr,payload:{glyphsPath:t}})),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(Mr.getState().map.style.attributions),Mr&&void 0===Mr.getState().map.module.token&&Mr.dispatch((r={token:this.props.token,autoClusterZoom:this.props.autoClusterZoom,isCluster:this.props.isCluster,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange},function(e){e({type:"INIT_MODULE",payload:r})})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&Mr.dispatch(w(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&Mr.dispatch(Cr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&Mr.dispatch(Yr(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&En(this.props.temporalExtent),this.setState({initialized:!0}),null!==this.props.heatmapLayers&&Mr.dispatch(Pe(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){var t;this.props.tracks!==e.tracks&&Mr.dispatch(Yr(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&Mr.dispatch(Pe(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&Mr.dispatch(Cr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||Mr.dispatch((t=this.props.loadTemporalExtent,function(e,r){var n=r(),o=n.map.heatmap.heatmapLayers,a={};Object.keys(o).forEach(function(r){var n=o[r],i=n.header.temporalExtents,s=n.visibleTemporalExtentsIndices,l=_e(t,i),c=P()(l,s);c.length&&(a[r]=c,e({type:xe,payload:{layerId:r,indicesAdded:c}}))});var i=Object.keys(a);i.length&&e(Ye(i,n.map.heatmap.referenceTiles,a))}))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||En(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||Mr.dispatch(w(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&Mr.dispatch(w(this.props.highlightTemporalExtent));var r,n=Mr.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===Mr.getState().map.viewport.currentTransition&&(n.latitude===this.props.viewport.center[0]&&n.longitude===this.props.viewport.center[1]&&n.zoom===this.props.viewport.zoom||(1===Math.abs(n.zoom-this.props.viewport.zoom)?Mr.dispatch((r=this.props.viewport.zoom,function(e){e(qe(null,null,null,r))})):bn(this.props.viewport)))}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),o.a.createElement("div",null,o.a.createElement("h2",null,"Map component crashed!"),o.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),o.a.createElement("div",null,"Component Stack Error Details:"),o.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:o.a.createElement(l.a,{store:Mr},o.a.createElement($t,this.props))}}])&&An(r.prototype,n),a&&An(r,a),t}();wn.defaultProps={token:null,glyphsPath:null,autoClusterZoom:!0,isCluster:function(e){return!0===e.isCluster},highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,onViewportChange:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var Bn=wn;wn.__docgenInfo={description:"",methods:[{name:"componentDidCatch",docblock:null,modifiers:[],params:[{name:"error",type:null},{name:"errorInfo",type:null}],returns:null}],displayName:"MapModule",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},glyphsPath:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},autoClusterZoom:{defaultValue:{value:"true",computed:!1},type:{name:"bool"},required:!1,description:""},isCluster:{defaultValue:{value:"(event) => event.isCluster === true",computed:!1},type:{name:"func"},required:!1,description:""},highlightTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},tracks:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"exact",value:"import { trackTypes } from './proptypes/tracks'",computed:!0}},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},heatmapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},temporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},loadTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},basemapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},staticLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},onViewportChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadStart:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadComplete:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onAttributionsChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!0,description:""}}};er.metadata["gfw:basemap-layers"];function vn(e){return(vn="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Cn(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function In(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Dn(e,t){return!t||"object"!==vn(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function kn(e){return(kn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function On(e,t){return(On=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.d(t,"default",function(){return Sn});var Sn=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=Dn(this,kn(t).call(this,e))).layout=null,r}var r,n,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&On(e,t)}(t,o.a.Component),r=t,(n=[{key:"render",value:function(){var e=this.props,t=e.components,r=Cn(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:t},o.a.createElement(a.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),o.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"description"}},"Description"),o.a.createElement(a.MDXTag,{name:"p",components:t},"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),o.a.createElement(a.MDXTag,{name:"ul",components:t},o.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}},"Map client")),o.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}},"Vessel profiles")),o.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}},"Data portal"))),o.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"available-properties"}},"Available properties"),o.a.createElement(a.MDXTag,{name:"p",components:t},"TODO: fix crash on PropsTable docz component"),o.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),o.a.createElement(i.e,{__codesandbox:"",__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:r,Map:Bn}},o.a.createElement(Bn,{viewport:{center:[.026,123.61],zoom:5}})))}}])&&In(r.prototype,n),s&&In(r,s),t}();Sn.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-map-map.e2130efc9080a814179b.js.map