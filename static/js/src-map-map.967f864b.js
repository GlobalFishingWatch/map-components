(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports={version:8,glyphs:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true",sprite:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites",metadata:{"mapbox:groups":{"basemap-background":{name:"basemap-background"},static:{name:"static"},temporal:{name:"temporal"},tracks:{name:"tracks"},"basemap-foreground":{name:"basemap-foreground"}},"gfw:basemap-layers":[{id:"satellite",label:"Satellite"},{id:"north-star",label:"North Star"},{id:"labels",isOption:!0},{id:"graticules",isOption:!0},{id:"bathymetry",isOption:!0}],"gfw:styles":{selected:{fill:{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},circle:{"circle-stroke-width":[2,.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},highlighted:{circle:{"circle-stroke-color":["#fff","#000"]}}}},sources:{6:{metadata:{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{id:"nama"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},satellite:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256,attribution:"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href='https://www.google.com/intl/en-GB_US/help/terms_maps.html'>Terms of Use</a><br>"},"north-star":{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},labels:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},graticules:{metadata:{"gfw:carto-sql":"select * from graticules where scalerank=4"},type:"vector"},bathymetry:{metadata:{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},type:"vector"},mpant:{metadata:{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},mparu:{metadata:{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},eez:{metadata:{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, 'eez:' || mrgid as region_id, geoname as reporting_name, 'eez:' || mrgid as reporting_id FROM eez","gfw:popups":[{id:"name"}]},type:"vector",attribution:"EEZs: marineregions.org"},highseas:{metadata:{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{id:"regionid"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},protectedplanet:{metadata:{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector",attribution:"MPAs: www.protectedplanet.net"},rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, 'rfmo:' || rfb as reporting_id, 'rfmo:' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{id:"rfb"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},falklands_conservation:{metadata:{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{id:"full_name"},{id:"zone"},{id:"area_sqkm"}]},type:"vector"},events_fishing:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},events_encounter:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_gap:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_port:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/port/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_encounter_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_gap_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_port_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}}},layers:[{id:"background",metadata:{"mapbox:group":"basemap-background"},type:"background",layout:{visibility:"visible"},paint:{"background-color":"#001436"}},{id:"satellite",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"satellite",layout:{visibility:"visible"}},{id:"north-star",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"north-star"},{id:"bathymetry",metadata:{"mapbox:group":"basemap-background"},type:"fill",source:"bathymetry","source-layer":"bathymetry",paint:{"fill-color":["step",["get","depth"],"#1e346c",1e3,"#1a2f63",2e3,"#142655",3e3,"#101f4a",4e3,"#0d1b43",5e3,"#0a163b",6e3,"#061132",7e3,"#030d2a",8e3,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{id:"mpant",metadata:{"mapbox:group":"static"},type:"fill",source:"mpant","source-layer":"mpant"},{id:"mpant-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mpant","source-layer":"mpant",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"mparu",metadata:{"mapbox:group":"static"},type:"fill",source:"mparu","source-layer":"mparu"},{id:"mparu-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mparu","source-layer":"mparu",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"eez",metadata:{"mapbox:group":"static"},type:"fill",source:"eez","source-layer":"eez"},{id:"eez-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"eez","source-layer":"eez",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"highseas",metadata:{"mapbox:group":"static"},type:"fill",source:"highseas","source-layer":"highseas"},{id:"highseas-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"highseas","source-layer":"highseas",layout:{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"rfmo","source-layer":"rfmo"},{id:"rfmo-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"rfmo","source-layer":"rfmo",layout:{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"6",metadata:{"mapbox:group":"static"},type:"fill",source:"6","source-layer":"6"},{id:"6-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"6","source-layer":"6",layout:{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"protectedplanet",metadata:{"mapbox:group":"static"},type:"fill",source:"protectedplanet","source-layer":"protectedplanet"},{id:"protectedplanet-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"protectedplanet","source-layer":"protectedplanet",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"falklands_conservation",metadata:{"mapbox:group":"static"},type:"fill",source:"falklands_conservation","source-layer":"falklands_conservation"},{id:"falklands_conservation-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"falklands_conservation","source-layer":"falklands_conservation",layout:{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"events_fishing",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_fishing","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_encounter","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_gap",type:"circle",source:"events_gap","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_port",type:"circle",source:"events_port","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter_vessel",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["encounter_highlight","encounter"]}}},layout:{"icon-image":"encounter","icon-allow-overlap":!0}},{id:"events_encounter_vessel_number",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_gap_vessel",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["gap_highlight","gap"]}}},layout:{"icon-image":"gap","icon-allow-overlap":!0}},{id:"events_gap_vessel_number",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_port_vessel",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["port_highlight","port"]}}},layout:{"icon-image":"port","icon-allow-overlap":!0}},{id:"events_port_vessel_number",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"graticules-lines",metadata:{"mapbox:group":"basemap-foreground"},type:"line",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],paint:{"line-color":"#174084","line-opacity":{base:1,stops:[[0,.7],[8,.7],[9,.2]]},"line-width":.5}},{id:"graticules-labels",metadata:{"mapbox:group":"basemap-foreground"},type:"symbol",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],layout:{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{base:1,stops:[[3,500],[8,1e3]]},"text-size":{base:1,stops:[[3,7],[7,12]]},"text-letter-spacing":.2},paint:{"text-color":"hsl(0, 0%, 100%)","text-halo-width":.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{base:1,stops:[[0,1],[8,1],[9,0]]}}},{id:"labels",metadata:{"mapbox:group":"basemap-foreground"},type:"raster",source:"labels"}]}},"./src/map/glmap/map.css":function(e,t,r){e.exports={map:"map_map__2QkEc",googleLogo:"map_googleLogo__1hHOD"}},"./src/map/lib/Pack.js":function(e,t,r){"use strict";var o={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},n=function(e,t,r,o,n){void 0==r&&(r=e.length),void 0==t&&(t=0),void 0==n&&(n=t);for(var a=t;a<r;a++)o[a-t+n]=255&e.charCodeAt(a)},a=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},i={typemap:{byname:o,byarray:{}},pack:function(e,t,r){var o=new ArrayBuffer(e.size);return new DataView(o)[e.setter](0,t,r),a(o)},arrayBufferToString:a,stringToArrayBuffer:function(e,t,r){void 0==r&&(r=e.length),void 0==t&&(t=0);var o=new Uint8ClampedArray(r-t);return n(e,t,r,o,0),o.buffer},writeStringToArrayBuffer:n};for(var s in i.typemap.byname){var l=i.typemap.byname[s];l.name=s,i.typemap.byarray[l.array]=l}t.a=i},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Pack__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/map/lib/Pack.js");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PelagosClient=function(){function PelagosClient(){_classCallCheck(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return _createClass(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(r,o){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=r,this.reject=o,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient},"./src/map/map.mdx":function(e,t,r){"use strict";r.r(t);var o=r("./node_modules/react/index.js"),n=r.n(o),a=r("./node_modules/@mdx-js/tag/dist/index.js"),i=r("./node_modules/docz/dist/index.m.js"),s=r("./node_modules/redux/es/redux.js"),l=r("./node_modules/react-redux/es/index.js"),c=r("./node_modules/redux-thunk/es/index.js"),u=r("./node_modules/lodash/throttle.js"),p=r.n(u),d=r("./node_modules/prop-types/index.js"),A=r.n(d),h={id:A.a.string.isRequired,url:A.a.string,data:A.a.object,color:A.a.string,type:A.a.oneOf(["geojson",void 0]),layerTemporalExtents:A.a.arrayOf(A.a.arrayOf(A.a.number)),fitBoundsOnLoad:A.a.bool},g=(A.a.string.isRequired,A.a.string,A.a.string,A.a.bool,A.a.number,A.a.number,A.a.arrayOf(A.a.shape({hue:A.a.number,filterValues:A.a.object})),A.a.shape({endpoints:A.a.object,isPBF:A.a.bool,colsByName:A.a.object,temporalExtents:A.a.arrayOf(A.a.arrayOf(A.a.number)),temporalExtentsLess:A.a.bool}).isRequired,A.a.bool,A.a.string,A.a.bool,A.a.string.isRequired,A.a.bool,A.a.bool,A.a.shape({field:A.a.string,values:A.a.arrayOf(A.a.string)}),A.a.bool,A.a.shape({field:A.a.string,values:A.a.arrayOf(A.a.string)}),A.a.number,A.a.string,A.a.bool,A.a.bool,A.a.arrayOf(A.a.arrayOf(A.a.string)),A.a.bool,A.a.oneOf([void 0,"geojson","raster"]),A.a.string,A.a.object,A.a.object,A.a.node,A.a.number.isRequired,A.a.number.isRequired,A.a.number,A.a.arrayOf(A.a.number),r("./node_modules/reselect/es/index.js")),f=r("./node_modules/immutable/dist/immutable.es.js"),m=8,y=2e5,E=function(e,t){var r=(new Date).getTime();return e({type:"START_LOADER",payload:r}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),r},b=function(e){return function(t,r){var o=r(),n=Object.assign({},o.map.module.loaders);t({type:"COMPLETE_LOADER",payload:e}),n.length||void 0===o.map.module.onLoadComplete||o.map.module.onLoadComplete()}},w=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}},v=function(e){return e.map.module.temporalExtent},B=function(e){return e.map.module.highlightTemporalExtent};function C(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function I(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){S(e,t,r[t])})}return e}function S(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var R=Object(g.a)(function(e){return e.map.tracks.data},function(e){return e.filter(function(e){return"geojson"===e.type})}),D=Object(g.a)(R,function(e){return e.filter(function(e){return void 0!==e.data})}),k=function(e,t){return{sources:I({},e.sources,t.sources),layers:[].concat(C(e.layers),C(t.layers))}},O=function(e,t){var r=t.start,o=t.end;if(!e||!e.features)return null;var n=e.features.reduce(function(e,t){if(t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var n=t.geometry.coordinates.reduce(function(e,n,a){var i=t.properties.coordinateProperties.times[a];return i>=r&&i<=o&&(e.coordinates.push(n),e.times.push(i)),e},{coordinates:[],times:[]});if(!n.coordinates.length)return e;var a=I({},t,{geometry:I({},t.geometry,{coordinates:n.coordinates}),properties:I({},t.properties,{coordinateProperties:{times:n.times}})});e.push(a)}return e},[]);return I({},e,{features:n})},x=Object(g.a)([v,D],function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"Track"),o={sources:S({},r,{type:"geojson",data:O(t.data,n)}),layers:[{id:"".concat(t.id,"Lines"),source:r,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:r,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return k(e,o)},{sources:{},layers:[]})}),Q=Object(g.a)([B,D],function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"HighlightedTrack"),o={sources:S({},r,{type:"geojson",data:O(t.data,n)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:r,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return k(e,o)},{sources:{},layers:[]})}),L=Object(g.a)([x,Q],function(e,t){return t?k(e,t):e}),Y=r("./node_modules/@turf/area/index.js"),M=r.n(Y),T="ZOOM",U={NORMAL:0,BULLSEYE:2},F=0,G=1,_="geojson",j="raster",H=r("./node_modules/lodash/difference.js"),P=r.n(H),J=r("./node_modules/lodash/uniq.js"),K=r.n(J),q=r("./node_modules/lodash/uniqBy.js"),V=r.n(q),Z=r("./node_modules/lodash/pull.js"),W=r.n(Z),z=r("./node_modules/lodash/sumBy.js"),N=r.n(z),X=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),$=r("./node_modules/@globalfishingwatch/map-convert/index.js"),ee=r.n($),te=r("./node_modules/lodash/template.js"),re=r.n(te),oe=r("./node_modules/lodash/templateSettings.js"),ne=r.n(oe),ae=r("./src/map/lib/pelagosClient.js"),ie=r("./node_modules/pbf/index.js"),se=r.n(ie),le=r("./node_modules/@mapbox/vector-tile/index.js"),ce=function(e,t){return fetch(e,{headers:t?{Authorization:"Bearer ".concat(t)}:{}}).then(function(t){if(!t.ok)throw new Error("could not load tile ".concat(e));return t.blob().then(function(e){var t=new FileReader;return new Promise(function(r){t.addEventListener("loadend",function(){var e=new se.a(t.result),o=new le.VectorTile(e);return r(o)}),t.readAsArrayBuffer(e)})})}).catch(function(e){console.warn(e)})};function ue(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var pe=function(e,t,r){var o=[];return(t||[null]).forEach(function(t,n){var a={id:r.seriesgroup};null!==t&&!0!==r.temporalExtentsLess&&(a.startTimeISO=new Date(t[0]).toISOString(),a.endTimeISO=new Date(t[1]).toISOString()),r.tileCoordinates&&(a.x=r.tileCoordinates.x,a.y=r.tileCoordinates.y,a.z=r.tileCoordinates.zoom);var i=function(e,t){return ne.a.interpolate=/{{([\s\S]+?)}}/g,re()(e)(t)}(e,a);(!0===r.temporalExtentsLess||!r.temporalExtentsIndices||r.temporalExtentsIndices.indexOf(n)>-1)&&o.push(i)}),o},de=function(e,t,r,o){for(var n=[],a=pe(e,r,o),i=0,s=a.length;i<s;i++)!0===o.isPBF?n.push(ce(a[i],t)):n.push((new ae.a).obtainTile(a[i],t));return n},Ae=function(e){return e.filter(function(e){return null!==e})},he=function(e,t){var r,o={},n=N()(e,function(e){return e.longitude.length}),a=t.filter(function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)});a.forEach(function(e){o[e]=new Float32Array(n)});for(var i=0,s=function(e){o[e].set(r[e],i)},l=0,c=e.length;l<c;l++)r=e[l],a.forEach(s),i+=r.longitude.length;return o},ge=function(e,t,r,o,n){var a=void 0===n?[]:n,i=r.zoom,s=ee.a.getZoomFactorRadius(i),l=ee.a.getZoomFactorRadiusRenderingMode(i),c=ee.a.getZoomFactorOpacity(i),u={},p=Object.keys(t);p.forEach(function(e){u[e]=!0});var d=[].concat(p);!0===u.sigma&&d.push("radius"),!0===u.weight&&d.push("opacity"),!0===u.longitude&&(d.push("worldX"),d.push("worldY")),!0===u.id&&d.push("series"),["latitude","longitude","datetime"].forEach(function(e){void 0!==t[e]&&!0!==t[e].hidden||W()(d,e)}),W()(d,"sigma","weight"),d=K()(d);for(var A=function(t,n){var A=void 0;if(!0===o){var h=e.feature(t);A=h.properties;var g=h.toGeoJSON(r.x,r.y,i).geometry.coordinates;A.longitude=g[0],A.latitude=g[1]}else A={},p.forEach(function(r){A[r]=e[r][t]});var f=u.timeIndex?A.timeIndex:ee.a.getOffsetedTimeAtPrecision(A.datetime),m=ue(Object(X.d)([A.longitude,A.latitude],1),2),y=m[0],E=m[1];if(A.worldX=y,A.worldY=E,u.sigma&&(A.radius=ee.a.sigmaToRadius(A.sigma,l,s)),u.weight&&(A.opacity=ee.a.weightToOpacity(A.weight,c)),u.id&&(A.series=A.id),!a[f]){var b={};return d.forEach(function(e){b[e]=[A[e]]}),a[f]=b,"continue"}var w=a[f];d.forEach(function(e){w[e].push(A[e])})},h=0,g=!0===o?e.length:e.latitude.length;h<g;h++)A(h);return a},fe=function(e){e.hasFishing=[],e.worldX=[],e.worldY=[];for(var t=0,r=e.weight.length;t<r;t++){var o=ue(Object(X.d)([e.longitude[t],e.latitude[t]],1),2),n=o[0],a=o[1];e.worldX[t]=n,e.worldY[t]=a,e.hasFishing[t]=e.weight[t]>0}return e},me=function(e){for(var t=[],r=0,o=e.series.length;r<o;r++){var n=e.datetime[r],a=ee.a.getOffsetedTimeAtPrecision(n);if(t[a]){var i=t[a];i.worldX.push(e.worldX[r]),i.worldY.push(e.worldY[r]),i.series.push(e.series[r]),i.hasFishing.push(e.hasFishing[r])}else{var s={worldX:[e.worldX[r]],worldY:[e.worldY[r]],series:[e.series[r]],hasFishing:[e.hasFishing[r]]};t[a]=s}}return t},ye=function(e,t,r){return Object.keys(r).every(function(o){return void 0!==e[o]&&r[o].indexOf(e[o][t])>-1})},Ee=function(e,t,r,o,n){for(var a=[],i=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var r=e[t];if(void 0===r)return"continue";for(var o=function(e){var t=r.worldX[e],o=r.worldY[e];if((!n.length||function(e,t,r){return r.filter(function(e){return!0!==e.pass}).some(function(r){return ye(e,t,r.filterValues)})}(r,e,n))&&t>=i-l&&t<=i+l&&o>=s-l&&o<=s+l){var c={};Object.keys(r).forEach(function(t){c[t]=r[t][e]}),a.push(c)}},c=0;c<r.worldX.length;c++)o(c)},u=r;u<o;u++)c(u);return a},be=r("./node_modules/@mapbox/tile-cover/index.js"),we=r.n(be),ve=r("./node_modules/lodash/debounce.js"),Be=r.n(ve),Ce=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function Ie(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Se=function(e){var t=Math.ceil(e+.5),r=!0;return t>10&&(t=10,r=!1),{min_zoom:t,max_zoom:t,tilesAvailable:r}},Re=function(){return function(e,t){var r=t();if(!r.map.heatmapTiles.currentToLoadTileUids.length){var o=r.map.heatmapTiles.currentToReleaseTileUids;e(He(o)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},De=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(Re())}},ke=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r(),n=o.map.heatmapTiles.currentVisibleTiles,a=[],i=[];if(!0===e)a=n;else{var s=o.map.heatmapTiles.currentLoadedTiles;n.forEach(function(e){void 0===s.find(function(t){return t.uid===e.uid})&&a.push(e)}),s.forEach(function(e){void 0===n.find(function(t){return t.uid===e.uid})&&i.push(e.uid)})}var l=a.map(function(e){return e.uid});a.forEach(function(e){var r;t((r=e,function(e,t){e({type:Te,payload:r});var o=t().map.heatmap.heatmapLayers,n=Object.keys(o).filter(function(e){return!0===o[e].visible});n.length&&e(je(n,[r]))}))}),t({type:"SET_CURRENTLY_LOADED_TILES",payload:n}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:i}}),t(Pe()),t(Re())}},Oe=Be()(function(e){e(ke())},500),xe=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r().map.viewport,n=o.viewport;if(null===o.currentTransition){var a=new Ce.a(n),i=[a.unproject([0,0]),a.unproject([n.width,n.height])],s=i[0],l=i[1],c=[s[0],l[1],l[0],s[1]],u=c[0],p=c[1],d=c[2],A=c[3],h=[],g=Se(n.zoom);if(!1!==g.tilesAvailable||!0===e){if(d>180||u<-180){var f=d>180?u:u+360,m=d>180?d-360:d;h.push([[[f,A],[179.999,A],[179.999,p],[f,p],[f,A]]]),h.push([[[-180,A],[m,A],[m,p],[-180,p],[-180,A]]])}else h.push([[[u,A],[d,A],[d,p],[u,p],[u,A]]]);var y={type:"MultiPolygon",coordinates:h},E=we.a.tiles(y,g),b=we.a.indexes(y,g),w=[];E.forEach(function(e,t){var r=b[t];e[2]>=2&&w.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:r})}),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:w}),!1===(o.prevZoom!==n.zoom)?t(ke(e)):Oe(t)}}}},Qe=function(e,t){return function(r,o){var n={type:"Point",coordinates:[e.longitude,e.latitude]},a=o().map.viewport.viewport.zoom,i=[a,a-1,a+1].map(function(e){return Se(e)}).map(function(e){return we.a.indexes(n,e)}).map(function(e){return e[0]});r(function(e,t){return function(r,o){var n=o(),a=Ke(n,e,t),i=a.layer,s=a.isEmpty,l=a.isCluster,c=a.isMouseCluster,u=a.foundVessels;void 0!==i.id||n.map.heatmap.highlightedVessels.layerId!==i.id?r({type:Ue,payload:{layer:{id:i.id,tilesetId:i.tilesetId,subtype:i.subtype,header:i.header},isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:u}}):r(qe())}}(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ie(e,t,r[t])})}return e}({},e,{uids:i}),t))}};function Le(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ye(e,t,r[t])})}return e}function Ye(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Me(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Te="ADD_REFERENCE_TILE",Ue="HIGHLIGHT_VESSELS",Fe="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",Ge="UPDATE_HEATMAP_TILE";function _e(e,t){var r=e[0].getTime(),o=e[1].getTime(),n=[];return t.forEach(function(e,t){var a=e[0];e[1]>=r&&a<=o&&n.push(t)}),n}function je(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(o,n){var a=n(),i=E(o,a),s=a.map.module.token,l=a.map.heatmap.heatmapLayers,c={};e.forEach(function(e){c[e]=Me(l[e].tiles)});var u=[];e.forEach(function(e){var n=l[e].header,a=Le({},n),i=a.temporalExtents,p=a.temporalExtentsLess,d=a.isPBF,A=a.colsByName,h=n.endpoints.tiles;t.forEach(function(t){var n=c[e].find(function(e){return e.uid===t.uid});n||(n={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(n));var a=void 0===r?l[e].visibleTemporalExtentsIndices:r[e],g=P()(a,n.temporalExtentsIndicesLoaded),f=function(e,t,r,o,n){var a=n.url,i=n.temporalExtents,s=n.temporalExtentsLess,l=n.isPBF;if(void 0===a)throw new Error("URL/endpoints object is not available on this tilesets header");var c=de(a,r,i,{tileCoordinates:t,temporalExtentsIndices:o,temporalExtentsLess:s,isPBF:l}),u=Promise.all(c);return new Promise(function(t){u.then(function(r){t({loadedLayerId:e,rawTileData:r})})})}(e,t.tileCoordinates,s,g,{url:h,temporalExtents:i,temporalExtentsLess:p,isPBF:d});u.push(f),f.then(function(e){var r=e.loadedLayerId,a=e.rawTileData;n.temporalExtentsIndicesLoaded=K()(n.temporalExtentsIndicesLoaded.concat(g)),n.data=function(e,t,r,o,n){var a;if(!0===r){if(void 0===e||!e.length||void 0===e[0]||!Object.keys(e[0].layers).length)return[];a=e[0].layers.points}else{var i=Ae(e);if(a=he(i,Object.keys(t)),0===Object.keys(a).length)return[]}return ge(a,t,o,r,n)}(a,A,d,t.tileCoordinates,n.data),o({type:Ge,payload:{layerId:r,tile:n}})})})}),Promise.all(u).then(function(){o(b(i)),o(De(t.map(function(e){return e.uid})))})}}var He=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}},Pe=function(){return{type:"UPDATE_LOADED_TILES"}};function Je(e){return function(t,r){var o=r().map.heatmap.referenceTiles;t(je([e],o))}}var Ke=function(e,t,r){var o=e.map.heatmap.heatmapLayers,n=r[0],a=r[1],i=[];Object.keys(o).forEach(function(e){var r=o[e],s=t.uids.map(function(e){return r.tiles.find(function(t){return t.uid===e})}).filter(function(e){return void 0!==e&&void 0!==e.data}),l=r.filters;if(s.length){var c=s[0];i.push({layer:r,vessels:Ee(c.data,t,n,a,l)})}});var s,l,c,u,p,d=i.filter(function(e){return e.vessels.length>0}),A=d.filter(function(e){return"Encounters"===e.layer.subtype}).length>0;if(0===d.length)c=!0;else if(d.length>1&&!A)s=!0;else{var h=(u=A?d.find(function(e){return"Encounters"===e.layer.subtype}):d[0]).vessels;if(0===h.length)c=!0;else h.filter(function(e){return e.seriesgroup<0}).length?s=!0:l=(p=V()(h,function(e){return e.series})).length>1}return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:p,layer:void 0===u?{}:u.layer}};function qe(){return{type:Ue,payload:{isEmpty:!0,clickableCluster:!1}}}var Ve=function(e,t){return function(r,o){var n=o().map.heatmap.heatmapLayers;e.forEach(function(e){var o,a,i=e.id,s=n[i];void 0===s?r((o=e,a=t,function(e){var t=o.header.temporalExtents;e({type:"ADD_HEATMAP_LAYER",payload:Le({},o,{visibleTemporalExtentsIndices:_e(a,t)})}),!0===o.visible&&e(Je(o.id))})):(s.visible!==e.visible&&!0===e.visible&&r(Je(i)),s.visible===e.visible&&s.hue===e.hue&&s.opacity===e.opacity&&s.filters===e.filters&&s.interactive===e.interactive||r({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))}),Object.keys(n).forEach(function(t){var o;e.find(function(e){return e.id===t})||r((o=t,function(e){e({type:"REMOVE_HEATMAP_LAYER",payload:{id:o}})}))})}},Ze=r("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js"),We=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(n){n({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:r,zoom:o}}),n(xe()),n(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var n=r.map.viewport;void 0!==n.bounds&&o({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})}};function ze(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ne(e,t,r[t])})}return e}function Ne(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Xe=function(e,t,r){var o=t.style.mapStyle.toJS().sources[e];return void 0===o&&console.warn("Couldnt find source when looking for fields of layer",e),"geojson"!==o.type?void 0===o.metadata||void 0===o.metadata["gfw:popups"]?null:o.metadata["gfw:popups"]:0===Object.keys(r.properties).length?null:Object.keys(r.properties).map(function(e){return{id:e}})},$e=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source},et=function(e){if(void 0!==e&&e.length)for(var t=0;t<e.length;t++){var r=e[t],o=$e(r);if(void 0!==o)return{feature:r,staticLayerId:o}}},tt=function(e,t,r,o){return function(n,a){var i=a().map;n({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s=i.heatmap.highlightedVessels,l=s.layer,c=s.isEmpty,u=s.clickableCluster,p=s.foundVessels,d={type:null};if(!0===c){var A=et(r);if(void 0!==A){var h,g=Xe(A.staticLayerId,i,A.feature),f=A.feature.properties;null!==g&&(h=g.map(function(e){var t,r=e.id||e,o="POLYGON_LAYERS_AREA"===r?(t=A.feature,(Math.pow(10,-6)*M()(t.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})):f[r];return{title:e.label||e.id,isLink:e.isLink,value:o}})),d.type="static",d.cluster=o,d.layer={id:A.staticLayerId},d.target={fields:h,properties:f}}}else d.type="activity",d.layer=l,!0===u?(n(function(e,t){return function(r){r(We(1,e,t))}}(e,t)),n(qe()),d.target={isCluster:!0}):d.target=p[0];i.module.onClick&&i.module.onClick(ze({},d,{latitude:e,longitude:t}))}},rt=r("./node_modules/react-map-gl/dist/esm/index.js"),ot=(r("./node_modules/mapbox-gl/dist/mapbox-gl.css"),r("./node_modules/pixi.js/lib/index.js")),nt=function(e,t,r){var o=e%360/parseFloat(360)*6,n=100===t?1:t%100/parseFloat(100),a=100===r?1:r%100/parseFloat(100),i=Math.floor(o),s=o-i,l=a*(1-n),c=a*(1-s*n),u=a*(1-(1-s)*n),p=i%6,d=[a,c,l,l,u,a][p],A=[u,a,a,c,l,l][p],h=[l,l,u,a,a,c][p];return{r:Math.round(255*d),g:Math.round(255*A),b:Math.round(255*h)}},at=function(e){return nt(e,50,100)},it=function(e){var t=at(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")},st=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},lt=function(e){return 12*e},ct=function(e){return e%360};function ut(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var pt=function(){function e(t,r,o){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.stage=new PIXI.particles.ParticleContainer(y,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===n&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var a=new PIXI.Rectangle(0,0,2*m,2*m);this.mainVesselTexture=new PIXI.Texture(t,a),this._setTextureFrame(r,o),this.clearSpriteProps()}var t,r,o;return t=e,(r=[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(y),y:new Float32Array(y),a:new Float32Array(y),s:new Float32Array(y)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,r,o){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=r,this.spritesProps.s[this.spritesPropsCount]=o,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.mainVesselTexture.frame.clone();if(null!==e&&(r.x=2*m*e+e),null!==t){var o=function(e){return Math.round(e/360*30)}(t);30===o&&(o=0),r.y=o*m*2,o>0&&(r.y+=o)}this.mainVesselTexture.frame=r,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var r=this.stage.children[t],o=this.spritesProps.s[t];r.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],o,o),r.alpha=this.spritesProps.a[t]}for(var n=this.stage.children.length,a=e;a<n;a++){this.stage.children[a].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),r=0;r<t;r++)this.stage.removeChildAt(0);if(e>0){var o=Math.max(5e3,e);this._addSprites(o)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var r=new PIXI.Sprite(this.mainVesselTexture);r.anchor.x=.5,r.anchor.y=.5,r.x=-100,this.stage.addChild(r)}}}])&&ut(t.prototype,r),o&&ut(t,o),e}();function dt(e){return(dt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function At(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function ht(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function gt(e,t){return!t||"object"!==dt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ft(e){return(ft=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function mt(e,t){return(mt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}pt.__docgenInfo={description:"",methods:[{name:"clearSpriteProps",docblock:null,modifiers:[],params:[],returns:null},{name:"pushSpriteProps",docblock:null,modifiers:[],params:[{name:"x",type:null},{name:"y",type:null},{name:"a",type:null},{name:"s",type:null}],returns:null},{name:"setRenderingStyleIndex",docblock:null,modifiers:[],params:[{name:"renderingStyleIndex",type:null}],returns:null},{name:"destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_setTextureFrame",docblock:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used\n@heatmapStyle bool whether to use heatmap style or solid circle style\n@hue number hue value between 0 and 360",modifiers:[],params:[{name:"renderingStyleIndex"},{name:"hue"}],returns:null,description:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used"},{name:"resizeSpritesPool",docblock:null,modifiers:[],params:[],returns:null},{name:"_addSprites",docblock:null,modifiers:[],params:[{name:"num",type:null}],returns:null}],displayName:"HeatmapSubLayer"};var yt=function(e,t,r){return[1/1.5*(r[0]*e+r[4]*t+r[12]),1/1.5*(r[5]*t+r[13])]},Et=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),gt(this,ft(t).apply(this,arguments))}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&mt(e,t)}(t,n.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,r=e.rootStage,o=e.useRadialGradientStyle,n=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:n,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(o),this.stage=new ot.Container,r.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:U.NORMAL;this.brushRenderingStyle="string"===typeof e?U[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?F:G,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===U.NORMAL?this.brushZoomRenderingStyle:0,r=this.brushRenderingStyle+t;r!==this.renderingStyleIndex&&(this.renderingStyleIndex=r,Object.values(this.subLayers).forEach(function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)}))}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.filters,o=t.baseTexture,n=t.layer;if(null!==n&&void 0!==n&&void 0!==n.tiles&&!1!==n.visible){this.stage.visible=!0,this.stage.alpha=n.opacity;for(var a=n.tiles,i=n.hue,s=void 0!==r&&r.length?r.filter(function(e){return!0!==e.pass}).map(function(e){return void 0===e.hue?"0":e.hue.toString()}):[i.toString()],l=Object.keys(this.subLayers),c=K()(s.concat(l)),u=0;u<c.length;u++){var p=c[u];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(o,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(a.forEach(function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:r.length,defaultHue:i})}),s.forEach(function(t){e.subLayers[t].render()}))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,r=e.numFilters,o=e.defaultHue;if(t)for(var n=this.props,a=n.startIndex,i=n.endIndex,s=n.viewport,l=n.filters,c=n.viewportLeft,u=n.viewportRight,p=a;p<i;p++){var d=t[p];if(d)for(var A=0,h=d.worldX.length;A<h;A++){var g=void 0;void 0!==l&&l.length||(g=o);for(var f=0;f<r;f++){var m=l[f];if(ye(d,A,m.filterValues)){g=m.hue;break}}if(void 0!==g){var y=d.worldX[A];c>0&&y<c?y+=512:c<0&&y>u&&(y-=512);var E=y*s.scale,b=d.worldY[A]*s.scale,w=s.pixelProjectionMatrix,v=At(0===s.pitch?yt(E,b,w):Object(X.h)([E,b],w),2),B=v[0],C=v[1];B>-10&&B<s.width+10&&C>-10&&C<s.height+10&&this.subLayers[g].pushSpriteProps(B,C,d.opacity?d.opacity[A]:this.renderingStyle.defaultOpacity,d.radius?d.radius[A]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,r){var o=new pt(e,t,r,this.brushRenderingStyle===U.BULLSEYE);return this.stage.addChild(o.stage),o}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}])&&ht(r.prototype,o),a&&ht(r,a),t}(),bt=Et;function wt(e){return(wt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function vt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Bt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Ct(e,t){return!t||"object"!==wt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function It(e){return(It=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function St(e,t){return(St=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}Et.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"setBrushRenderingStyle",docblock:null,modifiers:[],params:[{name:"style",type:null}],returns:null},{name:"setBrushZoomRenderingStyle",docblock:null,modifiers:[],params:[{name:"useRadialGradientStyle",type:null}],returns:null},{name:"_setBrushRenderingStyleIndex",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_setSubLayersSpritePropsForTile",docblock:null,modifiers:[],params:[{name:"{ data, numFilters, defaultHue }",type:null}],returns:null},{name:"_createSublayer",docblock:null,modifiers:[],params:[{name:"baseTexture",type:null},{name:"renderingStyleIndex",type:null},{name:"hue",type:null}],returns:null},{name:"_destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_destroySubLayer",docblock:null,modifiers:[],params:[{name:"subLayer",type:null}],returns:null}],displayName:"HeatmapLayer",props:{layer:{type:{name:"object"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},filters:{type:{name:"array"},required:!1,description:""},baseTexture:{type:{name:"object"},required:!1,description:""},useRadialGradientStyle:{type:{name:"bool"},required:!1,description:""},customRenderingStyle:{type:{name:"object"},required:!1,description:""},viewportLeft:{type:{name:"number"},required:!1,description:""},viewportRight:{type:{name:"number"},required:!1,description:""}}};var Rt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Ct(this,It(t).apply(this,arguments))}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&St(e,t)}(t,n.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"_build",value:function(){var e=this.props.rootStage;this.stage=new PIXI.Graphics,this.stage.nativeLines=!0,e.addChild(this.stage)}},{key:"clear",value:function(){this.stage.clear()}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.tracks,o=t.zoom,n=t.startIndex,a=t.endIndex,i=t.highlightTemporalExtentIndexes;if(this.clear(),r.length){var s=null===i?void 0:[Math.max(n,i[0]),Math.min(a,i[1])],l=s&&s[1]-s[0]>0?s:void 0,c=o>2,u=1+.5*(o-2),p=void 0!==l&&l[0]>0&&l[1]>0;r.forEach(function(t){e._drawTrack({data:t.data,startIndex:n,endIndex:a,drawFishingCircles:c,fishingCirclesRadius:u,color:"0x".concat(t.color.substr(1)),lineThickness:1,lineOpacity:1}),!0===p&&e._drawTrack({data:t.data,startIndex:i[0],endIndex:i[1],drawFishingCircles:c,fishingCirclesRadius:u,color:"0xFFFFFF",lineThickness:2,lineOpacity:1})})}}},{key:"_drawTrack",value:function(e){var t,r,o,n=this,a=e.data,i=e.startIndex,s=e.endIndex,l=e.drawFishingCircles,c=e.fishingCirclesRadius,u=e.color,p=e.lineThickness,d=e.lineOpacity,A=e.worldOffset,h=void 0===A?0:A,g=this.props.viewport,f=0,m={x:[],y:[]};this.stage.lineStyle(p,u,d);for(var y=!1,E=i;E<s;E++){var b=a[E];if(b)for(var w=0,v=b.series.length;w<v;w++){var B=b.series[w];f++;var C=b.worldX[w]+h,I=b.worldY[w],S=vt(Object(X.h)([C*g.scale,I*g.scale],g.pixelProjectionMatrix),2),R=S[0],D=S[1];if(t!==B&&this.stage.moveTo(R,D),r&&Math.abs(C-r)>256){0===h&&(y=!0);var k=o+(I-o)/2,O=C-r<0,x=h+(512-1e-6),Q=O?x:h,L=O?h:x,Y=vt(Object(X.h)([Q*g.scale,k*g.scale],g.pixelProjectionMatrix),2),M=Y[0],T=Y[1];this.stage.lineTo(M,T);var U=vt(Object(X.h)([L*g.scale,k*g.scale],g.pixelProjectionMatrix),2),F=U[0],G=U[1];this.stage.moveTo(F,G)}this.stage.lineTo(R,D),l&&!0===b.hasFishing[w]&&(m.x.push(R),m.y.push(D)),r=C,o=I,t=B}}if(l){this.stage.lineStyle(0),this.stage.beginFill(u,1);for(var _=0,j=m.x.length;_<j;_++)this.stage.drawCircle(m.x[_],m.y[_],c);this.stage.endFill()}return!0===y&&[-512,512].forEach(function(e){n._drawTrack({worldOffset:e,data:a,startIndex:i,endIndex:s,drawFishingCircles:l,fishingCirclesRadius:c,color:u,lineThickness:p,lineOpacity:d})}),f}},{key:"render",value:function(){return null}}])&&Bt(r.prototype,o),a&&Bt(r,a),t}(),Dt=Rt;function kt(e){return(kt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ot(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Tt(e,t,r[t])})}return e}function xt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Qt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Lt(e){return(Lt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Yt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Mt(e,t){return(Mt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Tt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Rt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"clear",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_drawTrack",docblock:"Draws a single track (line + points)\n\n@param data track points data in 'playback form' (ie organized by days)\n@param extent extent, in day indices\n@param offset object containing info about the current situation of the map viewport, used to compute screen coords\n@param drawFishingCircles whether to draw fishing circles or not\n@param fishingCirclesRadius radius of the fishing circles\n@param color\n@param lineThickness\n@param lineOpacity\n@param worldOffset offset to use when a track crosses the dateline (ie 512 to add a second world to the right)",modifiers:[],params:[{name:"{\n  data,\n  startIndex,\n  endIndex,\n  drawFishingCircles,\n  fishingCirclesRadius,\n  color,\n  lineThickness,\n  lineOpacity,\n  worldOffset = 0,\n}"}],returns:null,description:"Draws a single track (line + points)"}],displayName:"TracksLayer",props:{zoom:{type:{name:"number"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},highlightTemporalExtentIndexes:{type:{name:"array"},required:!1,description:""},tracks:{type:{name:"array"},required:!1,description:""}}};var Ut=function(e){function t(){var e,r,o,n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=new Array(a),s=0;s<a;s++)i[s]=arguments[s];return o=this,n=(e=Lt(t)).call.apply(e,[this].concat(i)),r=!n||"object"!==kt(n)&&"function"!==typeof n?Yt(o):n,Tt(Yt(r),"onTouchStart",function(e){e.touches.length&&r.queryCoords(e.touches[0].clientX,e.touches[0].clientY)}),Tt(Yt(r),"onMouseMove",function(e){r.queryCoords(e.clientX,e.clientY)}),Tt(Yt(r),"_onTick",function(){!0===r.heatmapFadingIn&&r.heatmapStage.alpha<1&&r._heatmapFadeinStep()}),r}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Mt(e,t)}(t,rt["a"]),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,r=e.height;this.pixi=new ot.Application({width:t,height:r,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var o=function(e,t){var r=document.createElement("canvas"),o=r.getContext("2d"),n=2*e;r.width=3*n+2,r.height=31*n+31;for(var a=0;a<31;a++){var i=n*a+a,s=i+e,l=e,c=o.createRadialGradient(l,s,e*t,l,s,e),u=lt(a),p=it(u);c.addColorStop(0,p);var d=nt(ct(u+30),80,100);c.addColorStop(1,"rgba(".concat(d.r,", ").concat(d.g,", ").concat(d.b,", 0)")),o.fillStyle=c,o.fillRect(0,i,n,n),l+=n+1,o.beginPath(),o.arc(l,s,e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),l+=n+1,o.beginPath(),o.arc(l,s,.4*e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),o.beginPath(),o.arc(l,s,.95*e,0,2*Math.PI,!1),o.lineWidth=1,o.strokeStyle=p,o.stroke()}return r}(m,.15);this.baseTexture=ot.Texture.fromCanvas(o),this.heatmapStage=new ot.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every(function(e){return!0!==e.interactive})){var r=this._context.viewport,o=xt(r.unproject([e,t]),2),n=o[0],a=o[1],i=n;i>180?i-=360:i<-180&&(i+=360);var s=xt(Object(X.d)([i,a],1),2),l=s[0],c=s[1],u=10/r.scale;this.props.queryHeatmapVessels({longitude:i,latitude:a,worldX:l,worldY:c,toleranceRadiusInWorldUnits:u},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,r){var o={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},n=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)o=Ot({highlightLayerData:o},r.find(function(t){return t.id===e.layer.id})),n=e.foundVessels.map(function(e){return{hue:312,filterValues:{series:[e.series]}}});else if(null!==t){o=Ot({highlightLayerData:o},r.find(function(e){return e.id===t.layer.id})),n=[{hue:312,filterValues:{series:[t.seriesgroup]}}]}return{highlightLayerData:o,highlightFilters:n}}},{key:"_render",value:function(){var e=this,t=this.props,r=t.zoom,o=t.heatmapLayers,a=t.temporalExtentIndexes,i=t.highlightTemporalExtentIndexes,s=t.highlightedVessels,l=t.highlightedClickedVessel,c=t.tracks,u=t.leftWorldScaled,p=t.rightWorldScaled,d=this._context.viewport,A=a[0],h=a[1],g=function(e){return e<6}(r);if(!0!==s.isEmpty&&this.toggleHeatmapDimming(!0),!0===s.isEmpty&&0===c.length&&this._startHeatmapFadein(),this.renderer){var f=this.renderer.gl.getError();0!==f&&console.log(f)}var m=this._getHighlightData(s,l,o),y=m.highlightLayerData,E=m.highlightFilters;return n.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},o.map(function(t){return n.a.createElement(bt,{key:t.id,layer:t,filters:t.filters||[],viewport:d,startIndex:A,endIndex:h,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:g,customRenderingStyle:{},viewportLeft:u,viewportRight:p})}),void 0!==this.stage&&n.a.createElement(bt,{key:"highlighted",layer:y,filters:E,viewport:d,startIndex:A,endIndex:h,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:g,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:u,viewportRight:p}),void 0!==this.stage&&n.a.createElement(Dt,{tracks:c,viewport:d,zoom:r,startIndex:A,endIndex:h,highlightTemporalExtentIndexes:i,rootStage:this.stage}))}}])&&Qt(r.prototype,o),a&&Qt(r,a),t}();Ut.propTypes={zoom:A.a.number,heatmapLayers:A.a.array,temporalExtentIndexes:A.a.array,highlightTemporalExtentIndexes:A.a.array,highlightedVessels:A.a.object,highlightedClickedVessel:A.a.object,tracks:A.a.array,queryHeatmapVessels:A.a.func,exportNativeViewport:A.a.func,leftWorldScaled:A.a.number,rightWorldScaled:A.a.number},Ut.contextTypes={viewport:A.a.object};var Ft=Ut;function Gt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var _t=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).map(function(t){return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Gt(e,t,r[t])})}return e}({},e[t])})}),jt=Object(g.a)([function(e){return e.map.tracks.data}],function(e){return e.filter(function(e){return"geojson"!==e.type}).filter(function(e){return void 0!==e.data})}),Ht=Object(g.a)([v],function(e){var t=e[0].getTime(),r=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Pt=Object(g.a)([B],function(e){if(void 0===e||null===e||!e.length)return null;var t=e[0].getTime(),r=e[1].getTime();return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Jt=Object(l.b)(function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:_t(e),tracks:jt(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:Ht(e),highlightTemporalExtentIndexes:Pt(e)}},function(e,t){return{queryHeatmapVessels:function(t,r){e(Qe(t,r))},exportNativeViewport:function(t){var r;e((r=t,function(e){var t=[0,0],o=[r.width,r.height],n=Object(X.e)(t,r.pixelUnprojectionMatrix),a=Object(X.e)(o,r.pixelUnprojectionMatrix),i=n[0]/r.scale,s=a[0]/r.scale,l=r.unproject(t),c=r.unproject(o);e({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:i,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}))}}})(Ft),Kt=r("./src/map/glmap/map.css"),qt=r.n(Kt);function Vt(e){return(Vt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Zt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Wt(e){return(Wt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function zt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Nt(e,t){return(Nt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Xt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var $t=function(e){var t=e.latitude,r=e.longitude,o=e.children,a=e.closeButton,i=e.onClose;return n.a.createElement(rt.c,{latitude:t,longitude:r,closeButton:a,onClose:i,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},o)},er=function(e){function t(e){var r,o,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,n=Wt(t).call(this,e),r=!n||"object"!==Vt(n)&&"function"!==typeof n?zt(o):n,Xt(zt(r),"_resize",function(){if(void 0!==r._mapContainerRef){var e=window.getComputedStyle(r._mapContainerRef),t=parseInt(e.width,10),o=parseInt(e.height,10)+1;t===r.props.viewport.width&&o===r.props.viewport.height||r.props.setViewport(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Xt(e,t,r[t])})}return e}({},r.props.viewport,{width:t,height:o}))}else console.warn("Cant set viewport on a map that hasnt finished intanciating yet")}),Xt(zt(r),"onViewportChange",function(e){r.props.setViewport(e)}),Xt(zt(r),"onMapInteraction",function(e,t){var o="hover"===t?r.props.mapHover:r.props.mapClick;if(void 0!==r.glMap&&void 0!==e.features&&e.features.length){var n=e.features[0];if(!0===n.properties.cluster){var a=n.properties.cluster_id,i=n.source,s=r.glMap.getSource(i);return void s.getClusterExpansionZoom(a,function(t,r){s.getClusterLeaves(a,99,0,function(n,a){t||n||o(e.lngLat[1],e.lngLat[0],e.features,{zoom:r,children:a})})})}}o(e.lngLat[1],e.lngLat[0],e.features)}),Xt(zt(r),"onHover",function(e){r.onMapInteraction(e,"hover")}),Xt(zt(r),"onClick",function(e){r.onMapInteraction(e,"click")}),r.state={mouseOver:!0},r}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Nt(e,t)}(t,n.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("resize",this._resize),this._resize(),window.setTimeout(function(){return e._resize()},1),window.setTimeout(function(){return e._resize()},1e4)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this._resize)}},{key:"render",value:function(){var e=this,t=this.props,r=t.viewport,o=t.maxZoom,a=t.minZoom,i=t.transitionEnd,s=t.mapStyle,l=t.onClosePopup,c=t.clickPopup,u=t.hoverPopup,p=t.cursor,d=t.interactiveLayerIds;return n.a.createElement("div",{id:"map",className:qt.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},n.a.createElement(rt.d,Object.assign({ref:function(t){null!==t&&(e.glMap=t.getMap())},onTransitionEnd:i,onHover:this.onHover,onClick:this.onClick,getCursor:function(e){var t=e.isDragging;return null===p?t?"grabbing":"grab":p},mapStyle:s},r,{maxZoom:o,minZoom:a,onViewportChange:this.onViewportChange,interactiveLayerIds:d}),n.a.createElement(Jt,{loadTemporalExtent:this.props.loadTemporalExtent}),void 0!==c&&null!==c&&n.a.createElement($t,{latitude:c.latitude,longitude:c.longitude,closeButton:!0,onClose:l},c.content),!0===this.state.mouseOver&&void 0!==u&&null!==u&&n.a.createElement($t,{latitude:u.latitude,longitude:u.longitude,closeButton:!1},u.content)),n.a.createElement("div",{className:qt.a.googleLogo}))}}])&&Zt(r.prototype,o),a&&Zt(r,a),t}(),tr=er;er.__docgenInfo={description:"",methods:[{name:"_resize",docblock:null,modifiers:[],params:[],returns:null},{name:"onViewportChange",docblock:null,modifiers:[],params:[{name:"viewport",type:null}],returns:null},{name:"onMapInteraction",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"type",type:null}],returns:null},{name:"onHover",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"onClick",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null}],displayName:"Map",props:{viewport:{type:{name:"object"},required:!1,description:""},mapStyle:{type:{name:"object"},required:!1,description:""},clickPopup:{type:{name:"object"},required:!1,description:""},hoverPopup:{type:{name:"object"},required:!1,description:""},maxZoom:{type:{name:"number"},required:!1,description:""},minZoom:{type:{name:"number"},required:!1,description:""},setViewport:{type:{name:"func"},required:!1,description:""},mapHover:{type:{name:"func"},required:!1,description:""},mapClick:{type:{name:"func"},required:!1,description:""},onClosePopup:{type:{name:"func"},required:!1,description:""},transitionEnd:{type:{name:"func"},required:!1,description:""},cursor:{type:{name:"string"},required:!1,description:""},interactiveLayerIds:{type:{name:"arrayOf",value:{name:"string"}},required:!1,description:""}}};var rr=Object(g.a)([function(e){return e.map.style.staticLayers}],function(e){return e.filter(function(e){return!0===e.interactive&&!0===e.visible}).map(function(e){return e.id})}),or=Object(g.a)([function(e){return e.map.style.mapStyle},L],function(e,t){if(!t)return e;var r=e.toJS().layers.filter(function(e){return void 0!==e.metadata}).map(function(e){return e.metadata["mapbox:group"]}).lastIndexOf("static")+1,o=e.mergeIn(["sources"],t.sources),n=e.get("layers");return t.layers.forEach(function(e,t){n=n.insert(r+t,Object(f.a)(e))}),o=o.set("layers",n)}),nr=Object(l.b)(function(e,t){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,cursor:e.map.interaction.cursor,mapStyle:or(e),interactiveLayerIds:rr(e)}},function(e){return{setViewport:function(t){e(function(e){return function(t){t({type:"SET_VIEWPORT",payload:e}),t(xe()),t(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var n=r.map.viewport;void 0!==n.bounds&&o({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})}}(t))},mapHover:function(t,r,o,n){e(function(e,t,r,o){return function(n,a){var i=a().map,s=i.heatmap.highlightedVessels,l=s.layer,c=s.isEmpty,u=s.foundVessels,p=null,d={type:null};if(!0===c){var A=et(r);if(void 0!==A){var h=Xe(A.staticLayerId,i,A.feature);if(null!==h){var g=A.feature.properties,f=(h.find(function(e){return e.id&&"name"===e.id.toLowerCase()})||h.find(function(e){return e.id&&"id"===e.id.toLowerCase()})||h.find(function(e){return e.id&&null!==g[e.id]&&"null"!==g[e.id]&&void 0!==g[e.id]})).id,m=g[f];d.type="static",d.cluster=o,d.layer={id:A.staticLayerId},d.target={featureTitle:m,properties:g},p="pointer"}}}else if(!0!==c){var y=void 0===u||u.length>1;p=y?"zoom-in":"pointer",d.type="activity",d.layer=l,d.target={objects:u,isCluster:y}}p!==i.interaction.cursor&&n({type:"SET_MAP_CURSOR",payload:p}),i.module.onHover&&i.module.onHover(ze({},d,{latitude:e,longitude:t}))}}(t,r,o,n))},mapClick:function(t,r,o,n){e(tt(t,r,o,n))},transitionEnd:function(){e(function(e){e({type:"TRANSITION_END"}),e(xe()),e(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var n=r.map.viewport;void 0!==n.bounds&&o({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})})},onClosePopup:function(){e(function(e,t){var r=t();void 0!==r.map.module.onClosePopup&&r.map.module.onClosePopup()})}}})(tr),ar=r("./src/map/glmap/gl-styles/style.json"),ir=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function sr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function lr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){cr(e,t,r[t])})}return e}function cr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ur=function(e){return{type:"SET_MAP_STYLE",payload:e}},pr=function(e,t,r){var o=e.toJS().layers,n=e,a=o.findIndex(function(e){return e.id===t}),i=o.find(function(e){return e.id===t});if(n=function(e,t,r){var o=!0===t.visible?"visible":"none";return e.setIn(["layers",r,"layout","visibility"],o)}(n,r,a),!0===r.isBasemap)return n;var s=ar.layers.find(function(e){return e.id===t}),l=void 0===r.opacity?1:r.opacity;switch(i.type){case"fill":n=n.setIn(["layers",a,"paint","fill-opacity"],l).setIn(["layers",a,"paint","fill-outline-color"],r.color).setIn(["layers",a,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":n=n.setIn(["layers",a,"paint","line-opacity"],l).setIn(["layers",a,"paint","line-color"],r.color);break;case"symbol":if(i.metadata&&!0===i.metadata["gfw:isLabel"]){var c="visible"===n.getIn(["layers",a,"layout","visibility"])&&!0===r.showLabels?"visible":"none";if(n=n.setIn(["layers",a,"layout","visibility"],c),!0!==r.showLabels)break}n=n.setIn(["layers",a,"paint","text-opacity"],l),void 0!==r.color&&(n=n.setIn(["layers",a,"paint","text-color"],r.color));break;case"circle":n=n.setIn(["layers",a,"paint","circle-opacity"],l).setIn(["layers",a,"paint","circle-radius"],s.paint["circle-radius"]).setIn(["layers",a,"paint","circle-stroke-color"],s.paint["circle-stroke-color"]||"#000").setIn(["layers",a,"paint","circle-stroke-width"],s.paint["circle-stroke-width"]||1),void 0!==r.color&&(n=n.setIn(["layers",a,"paint","circle-color"],r.color));break;case"raster":n=n.setIn(["layers",a,"paint","raster-opacity"],l)}return n=function(e,t,r,o){var n=e,a=e.toJS(),i=r.type,s=a.metadata["gfw:styles"],l=r.metadata;return["selected","highlighted"].forEach(function(e){var a=t["".concat(e,"Features")],c=null!==a&&void 0!==a&&a.values.length>0,u=t[e],p=lr({},s[e][i]||{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{});Object.keys(p).length&&Object.keys(p).forEach(function(e){var i,s=p[e][0],l=p[e][1],d=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===c&&!0!==u&&!1!==u)i=ar.layers.find(function(e){return e.id===r.id})[d][e];else if(!0===u||!1===u)i=!0===u?s:l;else{var A="";if(null!==t.color&&void 0!==t.color){var h=st(t.color);A="".concat(h.r,",").concat(h.g,",").concat(h.b)}i=["match",["get",a.field],a.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",A),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",A)]}void 0!==i&&(n=n.setIn(["layers",o,d,e],i))})}),n}(n,r,i,a)},dr=function(e,t,r,o){return function(n,a){var i=a().map.style.mapStyle,s=i.toJS();if(void 0===s.sources[t]){var l={type:e};e===_?l.data=o:e===j&&(l.tiles=[r],l.tileSize=256),i=i.setIn(["sources",t],Object(f.a)(l))}if(void 0===s.layers.find(function(e){return e.id===t})){var c=e===_?function(e){var t=e.features.map(function(e){var t=e.geometry;return void 0===t?null:t.type}),r=ir.map(function(e){var r=0;return t.forEach(function(t){e.geoJSON.indexOf(t)>-1&&r++}),{gl:e.gl,num:r}}),o="fill",n=0;return r.forEach(function(e){e.num>n&&(o=e.gl,n=e.num)}),o}(o):e,u=Object(f.a)({id:t,source:t,type:c,layout:{},paint:{}}),p=e===j?s.layers.length-1-s.layers.filter(function(e){return"labels"!==e.id}).reverse().findIndex(function(e){return"raster"===e.type}):s.layers.length-1;i=i.set("layers",i.get("layers").splice(p,0,u))}n(ur(i))}},Ar=function(e){return function(t,r){t({type:"MARK_CARTO_LAYERS_AS_INSTANCIATED",payload:e.map(function(e){return e.sourceId})});var o=e.map(function(e){return r=(t=e).sourceId,o=t.sourceCartoSQL,n={layers:[{id:r,options:{sql:o}}]},a=encodeURIComponent(JSON.stringify(n)),i="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG".replace("$MAPCONFIG",a),new Promise(function(e){fetch(i).then(function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(r)),Promise.reject(),null):e.json()}).then(function(t){e({layergroupid:t.layergroupid,sourceId:r})}).catch(function(e){console.warn(e)})});var t,r,o,n,a,i});Promise.all(o.map(function(e){return e.catch(function(e){return e})})).then(function(o){var n=r().map.style.mapStyle,a=n.toJS();o.forEach(function(t){var r="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt".replace("$LAYERGROUPID",t.layergroupid),o="".concat(t.sourceId,"-instanciated");n=n.setIn(["sources",o],Object(f.a)({type:"vector",tiles:[r]})),a.layers.forEach(function(r,a){if(r.source===t.sourceId){n=(n=n.setIn(["layers",a,"source"],o)).setIn(["layers",a,"metadata","gfw:id"],t.sourceId);var i=e.find(function(e){return e.refLayer.id===t.sourceId}).refLayer;n=pr(n,r.id,i)}})}),t(ur(n))}).catch(function(e){console.warn(e)})}},hr=function(e,t){return function(r,o){r({type:"SET_STATIC_LAYERS",payload:e}),r({type:"SET_BASEMAP_LAYERS",payload:t});var n=[].concat(sr(e),sr(t.map(function(e){return lr({},e,{isBasemap:!0})}))),a=o().map.style.mapStyle.toJS().sources,i=n.filter(function(e){return void 0!==e.gl&&void 0===a[e.id]});i.length&&r(function(e){return function(t,r){var o=r().map.style.mapStyle;e.forEach(function(e){var t=e.id,r=e.gl,n=Object(f.a)(r.source);o=o.setIn(["sources",t],n);var a=[];r.layers.forEach(function(e){var r=lr({},e,{source:t,"source-layer":t});a.push(r)});var i=Object(f.a)(a);o=o.set("layers",o.get("layers").concat(i))}),t(ur(o))}}(i));var s=n.filter(function(e){return!0===e.isCustom&&void 0===a[e.id]});s.length&&s.forEach(function(e){r(dr(e.subtype,e.id,e.url,e.data))});var l=o().map.style,c=l.mapStyle,u=c.toJS(),p=u.layers,d=u.sources,A=[];e.forEach(function(e){var t=e.id;void 0!==e.data&&void 0!==a[t]&&(c=c.setIn(["sources",t,"data"],Object(f.a)(e.data)))});for(var h=function(e){var t=p[e],r=t.source,o=d[r],a=void 0!==t.metadata&&t.metadata["gfw:id"]||r,i=n.find(function(e){return e.id===a});if(void 0===i)return t.type,"continue";var s=void 0!==o.metadata&&o.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var u=l.cartoLayersInstanciated.indexOf(r)>-1;return!0!==i.visible||u||A.find(function(e){return e.sourceId===r})||A.push({sourceId:r,sourceCartoSQL:s,refLayer:i}),"continue"}c=pr(c,t.id,i)},g=0;g<p.length;g++)h(g);A.length&&r(Ar(A)),r(ur(c))}},gr=r("./node_modules/@turf/bbox/index.js"),fr=r.n(gr),mr="ADD_TRACK",yr="UPDATE_TRACK",Er=function(e){var t={start:1/0,end:0};e&&e.features&&e.features.forEach(function(e){e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach(function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)})});var r=fr()(e);return{geojson:e,geoBounds:{minLat:r[3],minLng:r[0],maxLat:r[1],maxLng:r[2]},timelineBounds:[t.start,t.end]}},br=function e(t){for(var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o={start:1/0,end:0},n={minLat:1/0,maxLat:-1/0,minLng:1/0,maxLng:-1/0},a=0,i=t.datetime.length;a<i;a++){var s=t.datetime[a];s<o.start?o.start=s:s>o.end&&(o.end=s);var l=t.latitude[a];l<n.minLat?n.minLat=l:l>n.maxLat&&(n.maxLat=l);var c=t.longitude[a];!0===r&&c<0&&(c+=360),c<n.minLng?n.minLng=c:c>n.maxLng&&(n.maxLng=c)}return n.maxLng-n.minLng>350&&!1===r?e(t,!0):{time:[o.start,o.end],geo:n}};var wr=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,r){var o=r().map.tracks.data;e&&e.forEach(function(e){var r,n=e.id,a=o.find(function(e){return e.id===n});void 0===a?t((r=e,function(e,t){var o=r.id,n=r.url,a=r.type,i=r.fitBoundsOnLoad,s=r.layerTemporalExtents,l=r.color,c=r.data,u=t();if(!u.map.tracks.data.find(function(e){return e.id===o})){var p={id:o,url:n,type:a,color:l,fitBoundsOnLoad:i},d=void 0!==r.data&&null!==r.data,A=void 0!==n&&null!==n&&""!==n;if(d&&(p.data=c),e({type:mr,payload:p}),!d&&A){var h=E(e,u);if("geojson"!==a){var g=u.map.module.token,f=de(n,g,s,{seriesgroup:o});Promise.all(f.map(function(e){return e.catch(function(e){return e})})).then(function(t){var r=Ae(t);if(r.length){var n=he(r,["latitude","longitude","datetime","series","weight","sigma"]),a=fe(n),i=br(n);e({type:yr,payload:{id:o,data:me(a),geoBounds:i.geo,timelineBounds:i.time}}),e(b(h))}})}else fetch(n).then(function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()}).then(function(t){var r=Er(t),n=r.geojson,a=r.geoBounds,s=r.timelineBounds;e({type:yr,payload:{id:o,data:n,geoBounds:a,timelineBounds:s}}),i&&po(o)}).catch(function(e){return console.warn(e)}).finally(function(){return e(b(h))})}}})):a.color!==e.color&&t({type:yr,payload:{id:e.id,color:e.color}})}),o.forEach(function(r){e&&e.find(function(e){return e.id===r.id})||t({type:"REMOVE_TRACK",payload:{trackId:r.id}})})}},vr=function(e,t){return function(e){return e}};function Br(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Cr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ir(e,t,r[t])})}return e}function Ir(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Sr={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},Rr=vr("module",{loaders:A.a.arrayOf(A.a.number),token:A.a.string,temporalExtent:A.a.arrayOf(A.a.instanceOf(Date)),onViewportChange:A.a.func,onHover:A.a.func,onClick:A.a.func,onLoadStart:A.a.func,onLoadComplete:A.a.func,onClosePopup:A.a.func,onAttributionsChange:A.a.func})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Sr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return Cr({},e,t.payload);case"SET_TEMPORAL_EXTENT":return Cr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return Cr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var r=null!==e.loaders?Br(e.loaders):[];return r.push(t.payload),Cr({},e,{loaders:r});case"COMPLETE_LOADER":var o=Br(e.loaders),n=o.findIndex(function(e){return e===t.payload});return o.splice(n,1),Cr({},e,{loaders:o});default:return e}});function Dr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){kr(e,t,r[t])})}return e}function kr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Or(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var xr={data:[]},Qr=vr("tracks",{data:A.a.arrayOf(A.a.exact(Dr({},h,{data:A.a.object,timelineBounds:A.a.array,geoBounds:A.a.exact({minLat:A.a.number,minLng:A.a.number,maxLat:A.a.number,maxLng:A.a.number})})))})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:xr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case mr:return Dr({},e,{data:[].concat(Or(e.data),[t.payload])});case yr:var r=t.payload,o=e.data.map(function(e){return e.id!==r.id?e:Dr({},e,r)});return Dr({},e,{data:o});case"REMOVE_TRACK":var n=t.payload.trackId,a=e.data.filter(function(e){return e.id!==n});return Dr({},e,{data:a});default:return e}});function Lr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Yr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Mr(e,t,r[t])})}return e}function Mr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Tr={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function Ur(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Fr(e,t,r[t])})}return e}function Fr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Gr={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]},_r=r("./node_modules/d3-ease/src/index.js");function jr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Hr(e,t,r[t])})}return e}function Hr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Pr={transitionDuration:500,transitionInterpolator:new rt.b,transitionEasing:_r.a},Jr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};function Kr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function qr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Vr(e,t,r[t])})}return e}function Vr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Zr,Wr=K()(Object.keys(ar.sources).map(function(e){return ar.sources[e].attribution}).filter(function(e){return void 0!==e})),zr={mapStyle:Object(f.a)((Zr=ar,Zr.layers.forEach(function(e){void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),e.metadata&&!0===e.metadata["gfw:temporal"]&&(e.filter=["all",[">","timestamp",0],["<","timestamp",999999999999]]),"visible"!==e.layout.visibility&&(e.layout.visibility="none")}),Zr)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:Wr};function Nr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Xr={cursor:"progress"};function $r(e){return($r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function eo(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function to(e){return(to=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ro(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function oo(e,t){return(oo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var no=Object(s.c)({module:Rr,tracks:Qr,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Tr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case Fe:var r=e.heatmapLayers,o=r[t.payload.layerId].visibleTemporalExtentsIndices;return o=K()(o.concat(t.payload.indicesAdded)),r[t.payload.layerId].visibleTemporalExtentsIndices=o,Object.assign({},e,r);case"ADD_HEATMAP_LAYER":var n=Object.assign({},e.heatmapLayers,Mr({},t.payload.id,Yr({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:n});case"UPDATE_HEATMAP_LAYER_STYLE":var a=t.payload,i=Yr({},e.heatmapLayers[a.id],a),s=Yr({},e.heatmapLayers,Mr({},a.id,i));return Yr({},e,{heatmapLayers:s});case"REMOVE_HEATMAP_LAYER":var l=Object.assign({},e.heatmapLayers);return delete l[t.payload.layerId],Object.assign({},e,{heatmapLayers:l});case Te:return Object.assign({},e,{referenceTiles:[].concat(Lr(e.referenceTiles),[t.payload])});case Ge:var c=t.payload.layerId,u=t.payload.tile,p=Yr({},e.heatmapLayers[c]),d=Lr(p.tiles),A=d.findIndex(function(e){return e.uid===u.uid});-1===A?d.push(u):d=[d.slice(0,A),u,d.slice(A+1)],p.tiles=d;var h=Yr({},e.heatmapLayers,Mr({},c,p));return Yr({},e,{heatmapLayers:h});case"RELEASE_HEATMAP_TILES":var g=t.payload,f=Object.keys(e.heatmapLayers),m=Yr({},e.heatmapLayers);f.forEach(function(e){var t=Yr({},m[e]);g.forEach(function(e){var r=t.tiles.findIndex(function(t){return t.uid===e});r>-1&&t.tiles.splice(r,1)})});var y=Lr(e.referenceTiles);return g.forEach(function(e){var t=y.findIndex(function(t){return t.uid===e});t>-1&&(y=[].concat(Lr(y.slice(0,t)),Lr(y.slice(t+1))))}),Yr({},e,{heatmapLayers:m,referenceTiles:y});case"UPDATE_LOADED_TILES":var E=Yr({},e.heatmapLayers);return Yr({},e,{heatmapLayers:E});case Ue:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return Yr({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return Yr({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Gr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":return Ur({},e,{currentVisibleTiles:[].concat(t.payload)});case"SET_CURRENTLY_LOADED_TILES":return Ur({},e,{currentLoadedTiles:[].concat(t.payload)});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var r=K()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),o=K()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids));return Ur({},e,{currentToLoadTileUids:r.filter(function(e){return-1===o.indexOf(e)}),currentToReleaseTileUids:o});case"MARK_TILES_UIDS_AS_LOADED":var n=e.currentToLoadTileUids,a=t.payload;return Ur({},e,{currentToLoadTileUids:n.filter(function(e){return-1===a.indexOf(e)})});case"RELEASE_MARKED_TILES_UIDS":return Ur({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:zr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MAP_STYLE":var r=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return qr({},e,{mapStyle:r});case"SET_MAP_STYLE":return qr({},e,{mapStyle:t.payload});case"SET_STATIC_LAYERS":return qr({},e,{staticLayers:t.payload});case"SET_BASEMAP_LAYERS":return qr({},e,{basemapLayers:t.payload});case"MARK_CARTO_LAYERS_AS_INSTANCIATED":return qr({},e,{cartoLayersInstanciated:[].concat(Kr(e.cartoLayersInstanciated),Kr(t.payload))});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Jr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return jr({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"UPDATE_VIEWPORT":var r=jr({},e.viewport,t.payload);return jr({},e,{viewport:r,prevZoom:r.zoom});case"SET_ZOOM_INCREMENT":var o=e.viewport.zoom,n=Math.min(e.maxZoom,t.payload.zoom||o+t.payload.increment),a=jr({},e.viewport,Pr,{zoom:n,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return jr({},e,{viewport:a,canZoomIn:n<e.maxZoom,canZoomOut:n>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:T});case"SET_MOUSE_LAT_LONG":return jr({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return jr({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return jr({},e,t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Nr(e,t,r[t])})}return e}({},e,{cursor:t.payload});default:return e}}}),ao=s.d,io=Object(s.e)(Object(s.c)({map:no}),{},ao(Object(s.a)(c.a))),so=p()(function(e){io.dispatch(function(e){return function(t,r){for(var o=r().map.style.mapStyle,n=o.toJS().layers,a=Math.round(e[0].getTime()/1e3),i=Math.round(e[1].getTime()/1e3),s=0;s<n.length;s++){var l=n[s];if(void 0!==l.metadata&&!0===l.metadata["gfw:temporal"]){var c=o.getIn(["layers",s,"filter"]).toJS();if(null===c)throw new Error("filter must be preset on style.json for temporal layer: ",l.id);c[1][2]=a,c[2][2]=i,o=o.setIn(["layers",s,"filter"],Object(f.a)(c))}}t(ur(o))}}(e)),io.dispatch(function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}}(e))},16),lo=function(e){var t;io.dispatch((t={latitude:e.center[0],longitude:e.center[1],zoom:e.zoom},function(e){e({type:"UPDATE_VIEWPORT",payload:t}),e(xe()),e(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var n=r.map.viewport;void 0!==n.bounds&&o({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})}))},co=function(e){function t(){var e,r,o,n,a,i,s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var l=arguments.length,c=new Array(l),u=0;u<l;u++)c[u]=arguments[u];return o=this,r=!(n=(e=to(t)).call.apply(e,[this].concat(c)))||"object"!==$r(n)&&"function"!==typeof n?ro(o):n,a=ro(r),s={initialized:!1},(i="state")in a?Object.defineProperty(a,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):a[i]=s,r}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&oo(e,t)}(t,n.a.Component),r=t,(o=[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){var e;void 0!==this.props.viewport&&lo(this.props.viewport),void 0!==this.props.glyphsPath&&io.dispatch({type:"INIT_MAP_STYLE",payload:{glyphsPath:{glyphsPath:this.props.glyphsPath}.glyphsPath}}),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(io.getState().map.style.attributions),io&&void 0===io.getState().map.module.token&&io.dispatch((e={token:this.props.token,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange},function(t){t({type:"INIT_MODULE",payload:e})})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&io.dispatch(w(this.props.highlightTemporalExtent)),(void 0!==this.props.basemapLayers&&this.props.basemapLayers.length||void 0!==this.props.staticLayers&&this.props.staticLayers.length)&&io.dispatch(hr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&io.dispatch(wr(this.props.tracks)),void 0!==this.props.temporalExtent&&this.props.temporalExtent.length&&so(this.props.temporalExtent),this.setState({initialized:!0})}},{key:"componentDidUpdate",value:function(e){var t;this.props.tracks!==e.tracks&&io.dispatch(wr(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&io.dispatch(Ve(this.props.heatmapLayers,this.props.loadTemporalExtent)),(void 0!==this.props.basemapLayers&&this.props.basemapLayers.length||void 0!==this.props.staticLayers&&this.props.staticLayers.length)&&io.dispatch(hr(this.props.staticLayers||[],this.props.basemapLayers||[])),void 0!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(void 0!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||io.dispatch((t=this.props.loadTemporalExtent,function(e,r){var o=r(),n=o.map.heatmap.heatmapLayers,a={};Object.keys(n).forEach(function(r){var o=n[r],i=o.header.temporalExtents,s=o.visibleTemporalExtentsIndices,l=_e(t,i),c=P()(l,s);c.length&&(a[r]=c,e({type:Fe,payload:{layerId:r,indicesAdded:c}}))});var i=Object.keys(a);i.length&&e(je(i,o.map.heatmap.referenceTiles,a))}))),void 0!==this.props.temporalExtent&&this.props.temporalExtent.length&&(void 0!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||so(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||io.dispatch(w(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&io.dispatch(w(this.props.highlightTemporalExtent));var r,o=io.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===io.getState().map.viewport.currentTransition&&(o.latitude===this.props.viewport.center[0]&&o.longitude===this.props.viewport.center[1]&&o.zoom===this.props.viewport.zoom||(1===Math.abs(o.zoom-this.props.viewport.zoom)?io.dispatch((r=this.props.viewport.zoom,function(e){e(We(null,null,null,r))})):lo(this.props.viewport)))}},{key:"render",value:function(){return void 0!==this.state.error?(console.log(this.state.error),n.a.createElement("div",null,n.a.createElement("h2",null,"Map component crashed!"),n.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),n.a.createElement("div",null,"Component Stack Error Details:"),n.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:n.a.createElement(l.a,{store:io},n.a.createElement(nr,this.props))}}])&&eo(r.prototype,o),a&&eo(r,a),t}();co.defaultProps={highlightTemporalExtent:null,tracks:null};var uo=co,po=function(e){var t,r=io.getState().map.tracks.data.find(function(t){return t.id===e.toString()});return io.dispatch((t=r.geoBounds,function(e,r){var o=r(),n=Object(Ze.a)({bounds:[[t.minLng,t.minLat],[t.maxLng,t.maxLat]],width:o.map.viewport.viewport.width,height:o.map.viewport.viewport.height,padding:50});e(We(null,n.latitude,n.longitude,n.zoom))})),r.timelineBounds};ar.metadata["gfw:basemap-layers"];function Ao(e){return(Ao="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ho(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}function go(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function fo(e,t){return!t||"object"!==Ao(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function mo(e){return(mo=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function yo(e,t){return(yo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}co.__docgenInfo={description:"",methods:[{name:"componentDidCatch",docblock:null,modifiers:[],params:[{name:"error",type:null},{name:"errorInfo",type:null}],returns:null}],displayName:"MapModule",props:{highlightTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},tracks:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"exact",value:"import { trackTypes } from './proptypes/tracks'",computed:!0}},required:!1,description:""},token:{type:{name:"string"},required:!1,description:""},viewport:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},heatmapLayers:{type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},temporalExtent:{type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},loadTemporalExtent:{type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},basemapLayers:{type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},staticLayers:{type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},hoverPopup:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},clickPopup:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},glyphsPath:{type:{name:"string"},required:!1,description:""},onViewportChange:{type:{name:"func"},required:!1,description:""},onLoadStart:{type:{name:"func"},required:!1,description:""},onLoadComplete:{type:{name:"func"},required:!1,description:""},onClick:{type:{name:"func"},required:!1,description:""},onHover:{type:{name:"func"},required:!1,description:""},onAttributionsChange:{type:{name:"func"},required:!1,description:""},onClosePopup:{type:{name:"func"},required:!1,description:""}}},r.d(t,"default",function(){return Eo});var Eo=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=fo(this,mo(t).call(this,e))).layout=null,r}var r,o,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&yo(e,t)}(t,n.a.Component),r=t,(o=[{key:"render",value:function(){var e=this.props,t=e.components,r=ho(e,["components"]);return n.a.createElement(a.MDXTag,{name:"wrapper",components:t},n.a.createElement(a.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"description"}},"Description"),n.a.createElement(a.MDXTag,{name:"p",components:t},"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),n.a.createElement(a.MDXTag,{name:"ul",components:t},n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}},"Map client")),n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}},"Vessel profiles")),n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}},"Data portal"))),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"available-properties"}},"Available properties"),n.a.createElement(a.MDXTag,{name:"p",components:t},"TODO: fix crash on PropsTable docz component"),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),n.a.createElement(i.e,{__codesandbox:"",__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:r,Map:uo}},n.a.createElement(uo,{viewport:{center:[.026,123.61],zoom:5}})))}}])&&go(r.prototype,o),s&&go(r,s),t}();Eo.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-map-map.61cc48be7c59c5b91d71.js.map