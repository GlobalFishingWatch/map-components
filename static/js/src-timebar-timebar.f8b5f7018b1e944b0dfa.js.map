{"version":3,"sources":["/Users/joseangel/Workspace/map-components/src/timebar/charts/events.module.css","/Users/joseangel/Workspace/map-components/src/timebar/components/bookmark.module.css","/Users/joseangel/Workspace/map-components/src/timebar/components/date-selector.module.css","/Users/joseangel/Workspace/map-components/src/timebar/components/playback.module.css","/Users/joseangel/Workspace/map-components/src/timebar/components/timeline-handler.module.css","/Users/joseangel/Workspace/map-components/src/timebar/components/timeline-units.module.css","/Users/joseangel/Workspace/map-components/src/timebar/components/timeline.module.css","/Users/joseangel/Workspace/map-components/src/timebar/components/timerange-selector.module.css","/Users/joseangel/Workspace/map-components/src/timebar/immediateContext.js","/Users/joseangel/Workspace/map-components/src/timebar/utils.js","/Users/joseangel/Workspace/map-components/src/timebar/icons/arrowUp.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/arrowDown.svg","/Users/joseangel/Workspace/map-components/src/timebar/components/date-selector.js","/Users/joseangel/Workspace/map-components/src/timebar/components/timerange-selector.js","/Users/joseangel/Workspace/map-components/src/timebar/icons/bookmarkFilled.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/delete.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/arrow.svg","/Users/joseangel/Workspace/map-components/src/timebar/components/bookmark.js","/Users/joseangel/Workspace/map-components/src/timebar/layouts/index.js","/Users/joseangel/Workspace/map-components/src/timebar/components/timeline-units.js","/Users/joseangel/Workspace/map-components/src/timebar/icons/drag.svg","/Users/joseangel/Workspace/map-components/src/timebar/components/timeline-handler.js","/Users/joseangel/Workspace/map-components/src/timebar/components/timeline.js","/Users/joseangel/Workspace/map-components/src/timebar/icons/loop.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/back.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/play.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/pause.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/forward.svg","/Users/joseangel/Workspace/map-components/src/timebar/components/playback.js","/Users/joseangel/Workspace/map-components/src/timebar/icons/timeRange.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/bookmark.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/minus.svg","/Users/joseangel/Workspace/map-components/src/timebar/icons/plus.svg","/Users/joseangel/Workspace/map-components/src/timebar/timebar.js","/Users/joseangel/Workspace/map-components/src/timebar/charts/Events.js","/Users/joseangel/Workspace/map-components/src/timebar/timebar.mdx","/Users/joseangel/Workspace/map-components/src/timebar/timebar.module.css"],"names":["module","exports","ImmediateContext","React","createContext","getTime","dateISO","Date","clampToAbsoluteBoundaries","start","end","desiredDeltaMs","absoluteStart","absoluteEnd","clamped","startMs","endMs","absoluteStartMs","absoluteEndMs","newStartClamped","newEndClamped","toISOString","getDeltaMs","getDeltaDays","isMoreThanADay","stickToClosestUnit","date","unit","mDate","dayjs","mStartOf","startOf","mEndOf","endOf","valueOf","getHumanizedDates","format","humanizedStart","humanizedEnd","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","createElement","stroke","strokeWidth","d","fill","props","width","height","viewBox","DateSelector","pressing","pressingInterval","pressingTimeout","startTimeout","window","setInterval","onInterval","onChange","onMouseUp","clear","increment","setTimeout","addEventListener","clearInterval","clearTimeout","removeEventListener","value","canIncrement","canDecrement","className","styles","type","arrowButton","disabled","onMouseDown","Component","ONE_DAY_MS","TimeRangeSelector","last30days","onSubmit","subtract","state","startCanIncrement","startCanDecrement","endCanIncrement","endCanDecrement","setState","which","allBounds","offset","prevDate","newDate","add","bounds","newDateMs","toDate","Math","min","max","undefined","mStart","mEnd","errorMessage","veil","onClick","onDiscard","inner","selectorsContainer","selectorGroup","selectorLabel","setUnit","year","actions","classNames","cta","secondary","submit","fillRule","strokeLinejoin","Bookmark","overflowing","overflowingLeft","overflowingRight","scale","bookmarkStart","bookmarkEnd","minX","maxX","onSelect","immediate","context","x","label","join","renderedX","renderedWidth","minWidth","compact","point","_overflowingLeft","_overflowingRight","_compact","_point","_immediate","style","left","title","main","leftArrow","icon","rightArrow","delete","onDelete","contextType","getUnitLabel","mUnit","baseUnit","availableWidth","getWeekFmt","isFirst","mWeekEnd","unitFormat","formats","month","fm","week","day","hour","finalFormat","getUnitsPositions","outerScale","outerStart","outerEnd","mOuterStart","mOuterEnd","units","numUnitsOffset","numUnits","diff","ui","mUnitNext","xNext","id","hoverLabel","Infinity","push","TimelineUnits","innerDays","native","items","keys","map","from","opacity","leave","enter","update","s","div","button","zoomToUnit","Handler","onTouchStart","handler","dragging","mouseX","defaultProps","DRAG_INNER","DRAG_START","DRAG_END","Timeline","onWindowResize","graphContainer","graphStyle","getComputedStyle","outerX","parseFloat","getBoundingClientRect","outerWidth","outerHeight","innerStartPx","innerEndPx","innerWidth","onEnterFrame","timestamp","frameTimestamp","progress","outerDrag","handlerMouseX","deltaPxRatio","offsetMs","innerScale","invert","newStart","newEnd","requestAnimationFrame","event","clientX","changedTouches","lastX","toggleImmediate","throttledMouseMove","throttle","isDay","onMouseMove","onMouseLeave","node","contains","isMovingInside","currentDeltaMs","movementX","isHandlerZoomInValid","isValid","isHandlerZoomOutValid","isZoomIn","clampedX","stickUnit","cancelAnimationFrame","onBookmarkChange","scaleTime","domain","range","lastUpdatePosition","ref","graph","children","graphHeight","tooltipContainer","el","cx","veilLeft","veilRight","to","lastUpdate","lastUpdateLabel","BASE_STEP","SPEED_STEPS","FAST_FORWARD_REWIND_MULTIPLICATOR","Playback","lastUpdateMs","getStep","memoize","speedStep","baseStepWithSpeed","scaleLinear","deltaMultiplicatorMs","onTick","loop","deltaMs","newStartMs","newEndMs","currentStartEndDeltaMs","togglePlay","tick","elapsedMs","progressRatio","requireNextTick","force","playing","playingNext","onPlayToggleClick","toggleLoop","prevState","onForwardClick","onBackwardClick","onSpeedClick","nextStep","playbackActions","playbackActionsActive","uiStyles","uiButton","secondaryActive","back","buttonBigger","play","forward","speed","rx","transform","strokeLinecap","y","extend","relativeTime","Timebar","toggleTimeRangeSelector","showTimeRangeSelector","setBookmark","onTimeRangeSelectorSubmit","notifyChange","zoom","steps","nextDelta","delta","round","nextUnit","step","unitOffsetMs","mNewStart","onPlaybackTick","interval","enablePlayback","canZoomIn","canZoomOut","hasBookmark","bookmarkDisabled","Provider","timeActions","timeRangeContainer","timeRange","bookmark","timeScale","out","in","Events","getFinalEvents","events","showFishing","series","labels","counts","fishingIndex","indexOf","slice","mCurrentStart","clone","allValues","maxValue","dateIndex","valuesAtDateSum","valuesAtDate","forEach","keyIndex","k","filter","v","console","warn","allRatios","ratiosAtDate","stack","order","stackOrderNone","stackOffsetSilhouette","stackLayout","finalEvents","finalHeight","middle","areaGenerator","area","data","y0","y1","curve","curveStepAfter","eventsForKey","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","of","__position","__code","__scope","Playground","PropsTable","TimebarEvents","__codesandbox","eventsMock","log","isMDXComponent"],"mappings":"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","file":"static/js/src-timebar-timebar.088c7eda.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fishing\":\"events_fishing__1CxvZ\",\"port\":\"events_port__ngvwn\",\"encounter\":\"events_encounter__3ezvN\",\"unregistered\":\"events_unregistered__j4nqN\",\"gap\":\"events_gap__B7n4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bookmark\":\"bookmark_Bookmark__2RvCy\",\"_immediate\":\"bookmark__immediate__3jbVP\",\"main\":\"bookmark_main__2joOc\",\"_compact\":\"bookmark__compact__2K9yT\",\"_overflowingRight\":\"bookmark__overflowingRight__3zBsu\",\"_overflowingLeft\":\"bookmark__overflowingLeft__3fYFd\",\"delete\":\"bookmark_delete__233Is\",\"title\":\"bookmark_title__3_Cbf\",\"leftArrow\":\"bookmark_leftArrow__1xtHH\",\"rightArrow\":\"bookmark_rightArrow__1Hdsx\",\"icon\":\"bookmark_icon__XurGO\",\"_point\":\"bookmark__point__30JDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateSelector\":\"date-selector_DateSelector__1GxEN\",\"arrowButton\":\"date-selector_arrowButton__2p4TS\",\"value\":\"date-selector_value__1ylSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playbackActions\":\"playback_playbackActions__rgiIQ\",\"secondary\":\"playback_secondary__3tAau\",\"playbackActionsActive\":\"playback_playbackActionsActive__2toZH\",\"secondaryActive\":\"playback_secondaryActive__2iTdm\",\"buttonBigger\":\"playback_buttonBigger__24joE\",\"loop\":\"playback_loop__1koiR\",\"speed\":\"playback_speed__30W4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"timeline-handler_handler__9qYyp\",\"_immediate\":\"timeline-handler__immediate__1oLsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"timeline-units_unit__1gXnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timeline\":\"timeline_Timeline__27tvq\",\"graphContainer\":\"timeline_graphContainer__3rvI5\",\"graph\":\"timeline_graph__1CVit\",\"veil\":\"timeline_veil__-31et\",\"veilLeft\":\"timeline_veilLeft__F3CL_\",\"veilRight\":\"timeline_veilRight__3bYrq\",\"_immediate\":\"timeline__immediate__OyMNC\",\"absoluteEnd\":\"timeline_absoluteEnd__3uXk1\",\"lastUpdate\":\"timeline_lastUpdate__3QULW\",\"lastUpdateLabel\":\"timeline_lastUpdateLabel__2baKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRangeSelector\":\"timerange-selector_TimeRangeSelector__2RABF\",\"veil\":\"timerange-selector_veil__QpMMU\",\"inner\":\"timerange-selector_inner__b_0uy\",\"selectorsContainer\":\"timerange-selector_selectorsContainer__2C8Dx\",\"selectorGroup\":\"timerange-selector_selectorGroup__cOSFj\",\"selectorLabel\":\"timerange-selector_selectorLabel__1QjhT\",\"actions\":\"timerange-selector_actions__2UInl\",\"cta\":\"timerange-selector_cta__2VcPL\",\"secondary\":\"timerange-selector_secondary__28k3P\",\"errorMessage\":\"timerange-selector_errorMessage__28bfF\"};","import React from 'react'\nconst ImmediateContext = React.createContext(false)\nexport default ImmediateContext\n","import dayjs from 'dayjs'\n\nexport const getTime = (dateISO) => new Date(dateISO).getTime()\n\nexport const clampToAbsoluteBoundaries = (\n  start,\n  end,\n  desiredDeltaMs,\n  absoluteStart,\n  absoluteEnd\n) => {\n  const startMs = getTime(start)\n  const endMs = getTime(end)\n  const absoluteStartMs = getTime(absoluteStart)\n  const absoluteEndMs = getTime(absoluteEnd)\n  let newStartClamped = start\n  let newEndClamped = end\n  let clamped\n\n  // newStart is before absolute start: use abs start as new start and keep the existing duration to get to new end\n  if (startMs < absoluteStartMs) {\n    newStartClamped = absoluteStart\n    newEndClamped = new Date(absoluteStartMs + desiredDeltaMs).toISOString()\n    clamped = 'start'\n    // newEnd is after absolute end: use abs end as new end and keep the existing duration to get back to new start\n  } else if (endMs > absoluteEndMs) {\n    newEndClamped = absoluteEnd\n    newStartClamped = new Date(absoluteEndMs - desiredDeltaMs).toISOString()\n    clamped = 'end'\n  }\n  return { newStartClamped, newEndClamped, clamped }\n}\n\nexport const getDeltaMs = (start, end) => getTime(end) - getTime(start)\nexport const getDeltaDays = (start, end) => getDeltaMs(start, end) / 1000 / 60 / 60 / 24\nexport const isMoreThanADay = (start, end) => getDeltaDays(start, end) >= 1\n\nexport const stickToClosestUnit = (date, unit) => {\n  const mDate = dayjs(date)\n  const mStartOf = mDate.startOf(unit)\n  const mEndOf = mDate.endOf(unit)\n  const startDeltaMs = getTime(date) - mStartOf.valueOf()\n  const endDeltaMs = mEndOf.valueOf() - getTime(date)\n  const mClosest = startDeltaMs > endDeltaMs ? mEndOf : mStartOf\n  return mClosest.toISOString()\n}\n\nexport const getHumanizedDates = (start, end) => {\n  const format = isMoreThanADay(start, end) ? 'MMM D YYYY' : 'MMM D YYYY HH[h]'\n  const humanizedStart = dayjs(start).format(format)\n  const humanizedEnd = dayjs(end).format(format)\n  return { humanizedStart, humanizedEnd }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 6l4-4 4 4\",\n  fill: \"none\"\n});\n\nvar SvgArrowUp = function SvgArrowUp(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowUp.1cbc9b80.svg\";\nexport { SvgArrowUp as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 1l4 4 4-4\",\n  fill: \"none\"\n});\n\nvar SvgArrowDown = function SvgArrowDown(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowDown.743b8d09.svg\";\nexport { SvgArrowDown as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './date-selector.module.css'\nimport { ReactComponent as IconArrowUp } from '../icons/arrowUp.svg'\nimport { ReactComponent as IconArrowDown } from '../icons/arrowDown.svg'\n\nclass DateSelector extends Component {\n  pressing = 0\n  pressingInterval = null\n  pressingTimeout = null\n\n  onMouseDown(increment) {\n    this.clear()\n    const { onChange } = this.props\n    this.pressing = increment\n    onChange(this.pressing)\n    this.pressingTimeout = window.setTimeout(this.startTimeout, 800)\n    window.addEventListener('mouseup', this.onMouseUp)\n  }\n\n  startTimeout = () => {\n    this.pressingInterval = window.setInterval(this.onInterval, 80)\n  }\n\n  onInterval = () => {\n    const { onChange } = this.props\n    onChange(this.pressing)\n  }\n\n  onMouseUp = () => {\n    this.clear()\n    this.pressing = 0\n  }\n\n  clear() {\n    window.clearInterval(this.pressingInterval)\n    window.clearTimeout(this.pressingTimeout)\n    window.removeEventListener('mouseup', this.onMouseUp)\n  }\n\n  componentWillUnmount() {\n    this.clear()\n  }\n\n  render() {\n    const { onChange, value, canIncrement, canDecrement } = this.props\n    return (\n      <div className={styles.DateSelector}>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canIncrement}\n          onMouseDown={() => {\n            this.onMouseDown(+1)\n          }}\n        >\n          <IconArrowUp />\n        </button>\n        <span className={styles.value}>{value}</span>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canDecrement}\n          onMouseDown={() => {\n            this.onMouseDown(-1)\n          }}\n        >\n          <IconArrowDown />\n        </button>\n      </div>\n    )\n  }\n}\n\nDateSelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  canIncrement: PropTypes.bool.isRequired,\n  canDecrement: PropTypes.bool.isRequired,\n}\n\nexport default DateSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport classNames from 'classnames'\nimport { getTime } from '../utils'\nimport DateSelector from './date-selector'\nimport styles from './timerange-selector.module.css'\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24 - 1\n\nclass TimeRangeSelector extends Component {\n  constructor(props) {\n    super(props)\n    const { start, end, absoluteStart, absoluteEnd } = props\n    this.state = {\n      startCanIncrement: start < end,\n      startCanDecrement: start > absoluteStart,\n      endCanIncrement: getTime(end) + ONE_DAY_MS < getTime(absoluteEnd),\n      endCanDecrement: end > start,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n    this.setState({\n      start,\n      end,\n    })\n  }\n\n  submit(start, end) {\n    const { onSubmit } = this.props\n\n    // on release, \"stick\" to day/hour\n    const newStart = dayjs(start)\n      .startOf('day')\n      .toISOString()\n    const newEnd = dayjs(end)\n      .startOf('day')\n      .toISOString()\n    onSubmit(newStart, newEnd)\n  }\n\n  setUnit(which, allBounds, unit, offset) {\n    const prevDate = this.state[which]\n    const newDate = dayjs(prevDate).add(offset, unit)\n\n    const bounds = allBounds[which]\n    let newDateMs = newDate.toDate().getTime()\n    newDateMs = Math.min(bounds.max, Math.max(bounds.min, newDateMs))\n\n    if (which === 'start') {\n      this.setState({\n        start: new Date(newDateMs),\n        startCanIncrement: newDateMs !== bounds.max,\n        startCanDecrement: newDateMs !== bounds.min,\n        endCanDecrement: newDateMs !== bounds.max,\n      })\n    } else {\n      this.setState({\n        end: new Date(newDateMs),\n        endCanIncrement: newDateMs !== bounds.max,\n        endCanDecrement: newDateMs !== bounds.min,\n        startCanIncrement: newDateMs !== bounds.min,\n      })\n    }\n  }\n\n  last30days = () => {\n    const { absoluteEnd, onSubmit } = this.props\n    onSubmit(\n      dayjs(absoluteEnd)\n        .subtract(30, 'day')\n        .toISOString(),\n      absoluteEnd\n    )\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      startCanIncrement,\n      startCanDecrement,\n      endCanIncrement,\n      endCanDecrement,\n    } = this.state\n    const { absoluteStart, absoluteEnd } = this.props\n\n    if (start === undefined) {\n      return null\n    }\n\n    const bounds = {\n      start: {\n        min: getTime(absoluteStart),\n        max: getTime(end) - ONE_DAY_MS,\n      },\n      end: {\n        min: getTime(start) + ONE_DAY_MS,\n        max: getTime(absoluteEnd),\n      },\n    }\n    const mStart = dayjs(start)\n    const mEnd = dayjs(end)\n\n    let errorMessage = ''\n    if (!startCanDecrement)\n      errorMessage = 'Your start date is the earliest date with data available'\n    if (!endCanIncrement) errorMessage = 'Your end date is the latest date with data available'\n    if (!startCanIncrement && !endCanDecrement)\n      errorMessage = 'Your start and end date must be at least one day apart'\n    if (!startCanDecrement && !endCanIncrement)\n      errorMessage = 'Your time range is the maximum range with data available'\n\n    return (\n      <div className={styles.TimeRangeSelector}>\n        <div className={styles.veil} onClick={this.props.onDiscard} />\n        <div className={styles.inner}>\n          <h2>Select a time range</h2>\n          <div className={styles.selectorsContainer}>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>START</span>\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'day', offset)\n                }}\n                value={mStart.date()}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'month', offset)\n                }}\n                value={mStart.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'year', offset)\n                }}\n                value={mStart.year()}\n              />\n            </div>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>END</span>\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'day', offset)\n                }}\n                value={mEnd.date()}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'month', offset)\n                }}\n                value={mEnd.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'year', offset)\n                }}\n                value={mEnd.year()}\n              />\n            </div>\n          </div>\n          <span className={styles.errorMessage}>{errorMessage}</span>\n          <div className={styles.actions}>\n            <button\n              type=\"button\"\n              className={classNames(styles.cta, styles.secondary)}\n              onClick={this.last30days}\n            >\n              LAST 30 DAYS\n            </button>\n            <button\n              type=\"button\"\n              className={styles.cta}\n              onClick={() => {\n                this.submit(start, end)\n              }}\n            >\n              DONE\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nTimeRangeSelector.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onDiscard: PropTypes.func.isRequired,\n}\n\nexport default TimeRangeSelector\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"#FFF\",\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fillRule: \"evenodd\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmarkFilled = function SvgBookmarkFilled(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmarkFilled.9c323b67.svg\";\nexport { SvgBookmarkFilled as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M10.477.738V2.25H0V.738h2.602L3.375 0h3.727l.773.738h2.602zM.738 11.988v-9h9v9c0 .399-.152.75-.457 1.055-.304.305-.656.457-1.054.457H2.25c-.398 0-.75-.152-1.055-.457-.304-.305-.457-.656-.457-1.055z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgDelete = function SvgDelete(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/delete.c8ee873a.svg\";\nexport { SvgDelete as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M5 1L1 5l4 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgArrow = function SvgArrow(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 10,\n    viewBox: \"0 0 6 10\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrow.7f32b3d1.svg\";\nexport { SvgArrow as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { getHumanizedDates } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport styles from './bookmark.module.css'\nimport { ReactComponent as IconBookmarkFilled } from '../icons/bookmarkFilled.svg'\nimport { ReactComponent as IconDelete } from '../icons/delete.svg'\nimport { ReactComponent as Arrow } from '../icons/arrow.svg'\n\nconst MIN_WIDTH = 32\nconst MIN_WIDTH_WITH_OVERFLOW_ARROWS = 52\nconst COMPACT_MAX_WIDTH = 240\n\nclass Bookmark extends Component {\n  static contextType = ImmediateContext\n  render() {\n    const { scale, bookmarkStart, bookmarkEnd, minX, maxX, onSelect } = this.props\n    const { immediate } = this.context\n\n    const x = scale(new Date(bookmarkStart))\n    const width = scale(new Date(bookmarkEnd)) - x\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(bookmarkStart, bookmarkEnd)\n    const label = [humanizedStart, humanizedEnd].join(' - ')\n\n    let overflowing\n    let overflowingLeft\n    let overflowingRight\n    let renderedX = x\n    let renderedWidth = width\n\n    if (x < minX) {\n      renderedX = minX\n      renderedWidth = x + renderedWidth\n      overflowing = true\n      overflowingLeft = true\n    }\n    if (renderedX + width > maxX) {\n      renderedX = Math.min(renderedX, maxX - MIN_WIDTH_WITH_OVERFLOW_ARROWS)\n      renderedWidth = maxX - renderedX\n      overflowing = true\n      overflowingRight = true\n    }\n\n    const minWidth = overflowing === true ? MIN_WIDTH_WITH_OVERFLOW_ARROWS : MIN_WIDTH\n    renderedWidth = Math.max(minWidth, renderedWidth)\n    const compact = renderedWidth < COMPACT_MAX_WIDTH\n    const point = renderedWidth <= MIN_WIDTH\n\n    return (\n      <div\n        className={classNames(styles.Bookmark, {\n          [styles._overflowingLeft]: overflowingLeft,\n          [styles._overflowingRight]: overflowingRight,\n          [styles._compact]: compact,\n          [styles._point]: point,\n          [styles._immediate]: immediate,\n        })}\n        style={{ left: renderedX, width: renderedWidth }}\n      >\n        <button\n          type=\"button\"\n          title=\"Go to time range bookmark\"\n          className={styles.main}\n          onClick={onSelect}\n        >\n          {overflowingLeft && <Arrow className={styles.leftArrow} />}\n          <IconBookmarkFilled className={styles.icon} />\n          {compact === false && <span className={styles.title}>{label}</span>}\n          {overflowingRight && <Arrow className={styles.rightArrow} />}\n        </button>\n        {compact === false && (\n          <button\n            type=\"button\"\n            title=\"Delete time range bookmark\"\n            className={styles.delete}\n            onClick={this.props.onDelete}\n          >\n            <IconDelete />\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\nBookmark.propTypes = {\n  bookmarkStart: PropTypes.string.isRequired,\n  bookmarkEnd: PropTypes.string.isRequired,\n  scale: PropTypes.func.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  immediate: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n\nexport default Bookmark\n","import dayjs from 'dayjs'\nimport { getTime } from '../utils'\n\nconst getUnitLabel = (mUnit, baseUnit, availableWidth) => {\n  /* eslint key-spacing: 0, no-multi-spaces: 0 */\n\n  const getWeekFmt = (mUnit, isFirst = false) => {\n    const mWeekEnd = mUnit.add(6, 'day')\n    return `${mUnit.format('MMM')} ${mUnit.format('D')}-${mWeekEnd.format('D')} ${\n      isFirst ? mUnit.format('YYYY') : ''\n    }`\n  }\n\n  const FORMATS = {\n    year: { isFirst: () => false, formats: [[0, 'YYYY']] },\n    month: {\n      isFirst: (fm) => fm.month() === 0,\n      formats: [[200, 'MMMM YYYY'], [100, 'MMMM', 'MMM YYYY'], [0, 'MMM', 'MMM YY']],\n    },\n    week: {\n      isFirst: (fm) => {\n        return fm.date() === 1\n      },\n      formats: [\n        [\n          0,\n          (mUnit) => {\n            return getWeekFmt(mUnit)\n          },\n          (mUnit) => {\n            return getWeekFmt(mUnit, true)\n          },\n        ],\n      ],\n    },\n    day: {\n      isFirst: (fm) => fm.date() === 1,\n      formats: [\n        [999, 'ddd D MMMM YYYY'],\n        [200, 'ddd D MMMM'],\n        [70, 'ddd D', 'MMM 1'],\n        [0, 'D', 'MMM'],\n      ],\n    },\n    hour: {\n      isFirst: (fm) => fm.hour() === 0,\n      formats: [[999, 'ddd D MMMM YYYY H[H]'], [0, 'H[H]', 'ddd D']],\n    },\n  }\n  const unitFormat = FORMATS[baseUnit]\n  let format\n  for (let i = 0; i < unitFormat.formats.length; i += 1) {\n    const formatMinWidth = unitFormat.formats[i][0]\n    if (availableWidth > formatMinWidth) {\n      format = unitFormat.formats[i]\n      break\n    }\n  }\n\n  const isFirst = unitFormat.isFirst(mUnit)\n  const finalFormat = isFirst && format[2] ? format[2] : format[1]\n  return typeof finalFormat === 'function' ? finalFormat(mUnit) : mUnit.format(finalFormat)\n}\n\nexport const getUnitsPositions = (\n  outerScale,\n  outerStart,\n  outerEnd,\n  absoluteStart,\n  absoluteEnd,\n  baseUnit\n) => {\n  const startMs = Math.max(getTime(outerStart), getTime(absoluteStart))\n  const endMs = Math.min(getTime(outerEnd), getTime(absoluteEnd))\n\n  // BUFFER ??\n  const mOuterStart = dayjs(startMs).startOf(baseUnit)\n  const mOuterEnd = dayjs(endMs).endOf(baseUnit)\n\n  const units = []\n  const numUnitsOffset = getTime(outerEnd) > getTime(absoluteEnd) ? 0 : 1\n  const numUnits = mOuterEnd.diff(mOuterStart, baseUnit) + numUnitsOffset\n\n  let mUnit = mOuterStart\n  let x = outerScale(mUnit)\n\n  for (let ui = 0; ui <= numUnits; ui += 1) {\n    const mUnitNext = mUnit.add(1, baseUnit)\n    const xNext = outerScale(mUnitNext)\n\n    const id = mUnit.format(\n      {\n        year: 'YYYY',\n        month: 'YYYY-MM',\n        week: 'YYYY-MM-DD',\n        day: 'YYYY-MM-DD',\n        hour: 'YYYY-MM-DD-HH',\n      }[baseUnit]\n    )\n\n    const width = xNext - x\n    const unit = {\n      id,\n      x,\n      width,\n      label: getUnitLabel(mUnit, baseUnit, width),\n      hoverLabel: `${getUnitLabel(mUnit, baseUnit, Infinity)} - Zoom to ${baseUnit}`,\n      start: mUnit.toISOString(),\n      end: mUnitNext.subtract(1, 'hour').toISOString(), // this avoids being stuck when clicking on a day unit\n    }\n    units.push(unit)\n    mUnit = mUnitNext\n    x = xNext\n  }\n\n  return units\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated, Transition } from 'react-spring/renderprops'\nimport { getDeltaDays } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport styles from './timeline-units.module.css'\nimport { getUnitsPositions } from '../layouts'\n\nclass TimelineUnits extends Component {\n  static contextType = ImmediateContext\n  zoomToUnit({ start, end }) {\n    this.props.onChange(start, end)\n  }\n\n  render() {\n    const { start, end, absoluteStart, absoluteEnd, outerScale, outerStart, outerEnd } = this.props\n    const { immediate } = this.context\n    const innerDays = getDeltaDays(start, end)\n\n    let baseUnit = 'day'\n    if (innerDays > 366) baseUnit = 'year'\n    else if (innerDays > 31) baseUnit = 'month'\n    else if (innerDays < 1) baseUnit = 'hour'\n\n    const units = getUnitsPositions(\n      outerScale,\n      outerStart,\n      outerEnd,\n      absoluteStart,\n      absoluteEnd,\n      baseUnit\n    )\n\n    return (\n      <div>\n        <Transition\n          native\n          immediate={immediate}\n          items={units}\n          keys={units.map((d) => d.id)}\n          from={{ opacity: 0 }}\n          leave={{ opacity: 0 }}\n          enter={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n          update={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n        >\n          {(d) => (s) => (\n            <animated.div style={s} className={styles.unit}>\n              {baseUnit === 'hour' ? (\n                <animated.div>{d.label}</animated.div>\n              ) : (\n                <animated.button\n                  type=\"button\"\n                  onClick={() => {\n                    this.zoomToUnit(d)\n                  }}\n                  title={d.hoverLabel}\n                >\n                  {d.label}\n                </animated.button>\n              )}\n            </animated.div>\n          )}\n        </Transition>\n      </div>\n    )\n  }\n}\n\nTimelineUnits.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  outerStart: PropTypes.string.isRequired,\n  outerEnd: PropTypes.string.isRequired,\n  outerScale: PropTypes.func.isRequired,\n}\n\nexport default TimelineUnits\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M4 1L1 5l3 4m3-8l3 4-3 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgDrag = function SvgDrag(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 10\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/drag.ff1ecd52.svg\";\nexport { SvgDrag as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport styles from './timeline-handler.module.css'\nimport { ReactComponent as IconDrag } from '../icons/drag.svg'\n\nconst Handler = (props) => (\n  <button\n    onMouseDown={props.onMouseDown}\n    onTouchStart={props.onMouseDown}\n    type=\"button\"\n    title=\"Drag to change the time range\"\n    className={classNames(styles.handler, {\n      [styles._immediate]: props.dragging === true,\n    })}\n    style={{ left: props.dragging === true ? props.mouseX : props.x }}\n  >\n    <IconDrag />\n  </button>\n)\n\nHandler.propTypes = {\n  onMouseDown: PropTypes.func.isRequired,\n  dragging: PropTypes.bool.isRequired,\n  x: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n}\n\nHandler.defaultProps = {\n  mouseX: 0,\n}\n\nexport default Handler\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport { scaleTime } from 'd3-scale'\nimport dayjs from 'dayjs'\nimport throttle from 'lodash/throttle'\nimport ImmediateContext from '../immediateContext'\nimport { animated, Spring } from 'react-spring/renderprops'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaMs,\n  isMoreThanADay,\n  stickToClosestUnit,\n} from '../utils'\nimport Bookmark from './bookmark'\nimport TimelineUnits from './timeline-units'\nimport Handler from './timeline-handler'\nimport styles from './timeline.module.css'\n\nconst DRAG_INNER = 'DRAG_INNER'\nconst DRAG_START = 'DRAG_START'\nconst DRAG_END = 'DRAG_END'\n\nclass Timeline extends Component {\n  static contextType = ImmediateContext\n  constructor() {\n    super()\n    this.state = {\n      innerStartPx: 0,\n      innerEndPx: 0,\n      innerWidth: 50,\n      outerWidth: 100,\n      outerHeight: 50,\n      dragging: null,\n    }\n    this.graphContainer = null\n    this.isMovingInside = false\n  }\n\n  componentDidMount() {\n    // wait for end of call stack to get rendered CSS\n    window.setTimeout(this.onWindowResize, 10)\n    window.addEventListener('resize', this.onWindowResize)\n    window.addEventListener('mousemove', this.onMouseMove)\n    window.addEventListener('touchmove', this.onMouseMove)\n    window.addEventListener('mouseup', this.onMouseUp)\n    window.addEventListener('touchend', this.onMouseUp)\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n    window.removeEventListener('mousemove', this.onMouseMove)\n    window.removeEventListener('touchmove', this.onMouseMove)\n    window.removeEventListener('mouseup', this.onMouseUp)\n    window.removeEventListener('touchend', this.onMouseUp)\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onWindowResize = () => {\n    if (this.graphContainer !== null) {\n      const graphStyle = window.getComputedStyle(this.graphContainer)\n      const outerX = parseFloat(this.graphContainer.getBoundingClientRect().left)\n      const outerWidth = parseFloat(graphStyle.width)\n      const outerHeight = parseFloat(graphStyle.height)\n      const innerStartPx = outerWidth * 0.15\n      const innerEndPx = outerWidth * 0.85\n      const innerWidth = outerWidth * 0.7\n      this.setState({\n        outerX,\n        innerStartPx,\n        innerEndPx,\n        innerWidth,\n        outerWidth,\n        outerHeight,\n      })\n    }\n  }\n\n  isHandlerZoomInValid(x) {\n    const { dragging, innerStartPx, innerEndPx } = this.state\n    const isZoomIn =\n      (dragging === DRAG_START && x > innerStartPx) || (dragging === DRAG_END && x < innerEndPx)\n\n    // check that start handler doesn't go after end handler or end handler before start handler\n    const isValid =\n      isZoomIn &&\n      ((dragging === DRAG_START && x < innerEndPx - 20) ||\n        (dragging === DRAG_END && x > innerStartPx + 20))\n    const clampedX =\n      dragging === DRAG_START ? Math.min(x, innerEndPx - 20) : Math.max(x, innerStartPx + 20)\n    return { isZoomIn, isValid, clampedX }\n  }\n\n  isHandlerZoomOutValid(x) {\n    const { dragging, innerStartPx, innerEndPx, outerWidth } = this.state\n    return (\n      (dragging === DRAG_START && x < innerStartPx && x > 0) ||\n      (dragging === DRAG_END && x > innerEndPx && x < outerWidth)\n    )\n  }\n\n  onEnterFrame = (timestamp) => {\n    if (this.frameTimestamp === undefined) {\n      this.frameTimestamp = timestamp\n    }\n    const progress = timestamp - this.frameTimestamp\n    this.frameTimestamp = timestamp\n\n    if (this.state.outerDrag === true) {\n      const { dragging, innerStartPx, innerEndPx, outerWidth, handlerMouseX } = this.state\n      const { start, end, absoluteStart, absoluteEnd, onChange } = this.props\n      // console.log(progress);\n      const deltaPxRatio =\n        dragging === DRAG_START\n          ? (innerStartPx - handlerMouseX) / innerStartPx\n          : (handlerMouseX - innerEndPx) / (outerWidth - innerEndPx)\n\n      const offsetMs =\n        (this.innerScale.invert(0.6).getTime() - this.innerScale.invert(0).getTime()) *\n        progress *\n        deltaPxRatio\n      let newStart = start\n      let newEnd = end\n\n      if (dragging === DRAG_START) {\n        newStart = new Date(getTime(start) - offsetMs).toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = new Date(getTime(end) + offsetMs).toISOString()\n      }\n\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart,\n        newEnd,\n        getDeltaMs(start, end),\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    }\n\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  onMouseDown = (event, dragging) => {\n    const { outerX } = this.state\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    this.lastX = clientX\n    const x = clientX - outerX\n    this.context.toggleImmediate(true)\n    this.setState({\n      dragging,\n      handlerMouseX: x,\n    })\n  }\n\n  throttledMouseMove = throttle((clientX, scale, isDay) => {\n    this.props.onMouseMove(clientX, scale, isDay)\n  }, 16)\n\n  onMouseMove = (event) => {\n    const { start, end, absoluteStart, absoluteEnd, onChange, onMouseLeave } = this.props\n    const { dragging, outerX, innerStartPx, innerEndPx } = this.state\n    const clientX = event.clientX || (event.changedTouches && event.changedTouches[0].clientX)\n    if (clientX === undefined) {\n      return\n    }\n    const x = clientX - outerX\n    const isMovingInside = this.node.contains(event.target) && x > innerStartPx && x < innerEndPx\n    if (isMovingInside) {\n      this.isMovingInside = true\n      const isDay = !isMoreThanADay(start, end)\n      this.throttledMouseMove(x, this.outerScale.invert, isDay)\n    } else if (this.isMovingInside === true) {\n      this.isMovingInside = false\n      onMouseLeave()\n    }\n    if (dragging === DRAG_INNER) {\n      const currentDeltaMs = getDeltaMs(start, end)\n      // Calculates x movement from last event since TouchEvent doesn't have the movementX property\n      const movementX = clientX - this.lastX\n      this.lastX = event.clientX || event.changedTouches[0].clientX\n      const newStart = this.innerScale.invert(-movementX)\n      const newEnd = new Date(newStart.getTime() + currentDeltaMs)\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart.toISOString(),\n        newEnd.toISOString(),\n        currentDeltaMs,\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    } else if (this.isHandlerZoomInValid(x).isValid === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: false,\n      })\n    } else if (this.isHandlerZoomOutValid(x) === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: true,\n      })\n    }\n  }\n\n  onMouseUp = (event) => {\n    const { start, end, onChange } = this.props\n    const { dragging, outerX, innerStartPx } = this.state\n\n    if (dragging === null) {\n      return\n    }\n\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    const x = clientX - outerX\n\n    const isHandlerZoomInValid = this.isHandlerZoomInValid(x)\n\n    this.context.toggleImmediate(false)\n    this.setState({\n      dragging: null,\n      handlerMouseX: null,\n      outerDrag: false,\n    })\n\n    let newStart = start\n    let newEnd = end\n\n    if (isHandlerZoomInValid.isZoomIn) {\n      if (dragging === DRAG_START) {\n        newStart = this.innerScale\n          .invert(isHandlerZoomInValid.clampedX - innerStartPx)\n          .toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = this.innerScale.invert(isHandlerZoomInValid.clampedX - innerStartPx).toISOString()\n      }\n    }\n    // on release, \"stick\" to day/hour\n    const stickUnit = isMoreThanADay(newStart, newEnd) ? 'day' : 'hour'\n    newStart = stickToClosestUnit(newStart, stickUnit)\n    newEnd = stickToClosestUnit(newEnd, stickUnit)\n\n    onChange(newStart, newEnd)\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      absoluteEnd,\n      bookmarkStart,\n      bookmarkEnd,\n      onChange,\n      onBookmarkChange,\n    } = this.props\n    const {\n      dragging,\n      handlerMouseX,\n      innerStartPx,\n      innerEndPx,\n      innerWidth,\n      outerX,\n      outerWidth,\n      outerHeight,\n    } = this.state\n    const { immediate } = this.context\n\n    this.innerScale = scaleTime()\n      .domain([new Date(start), new Date(end)])\n      .range([0, innerWidth])\n    const outerStart = this.innerScale.invert(-innerStartPx).toISOString()\n    const outerEnd = this.innerScale.invert(outerWidth - innerStartPx).toISOString()\n\n    this.outerScale = scaleTime()\n      .domain([new Date(outerStart), new Date(outerEnd)])\n      .range([0, this.state.outerWidth])\n\n    const lastUpdatePosition = this.outerScale(new Date(absoluteEnd))\n\n    return (\n      <div ref={(node) => (this.node = node)} className={styles.Timeline}>\n        {bookmarkStart !== undefined && bookmarkStart !== null && (\n          <Bookmark\n            scale={this.outerScale}\n            bookmarkStart={bookmarkStart}\n            bookmarkEnd={bookmarkEnd}\n            minX={-outerX}\n            maxX={outerWidth}\n            onDelete={() => {\n              onBookmarkChange(null, null)\n            }}\n            onSelect={() => {\n              onChange(bookmarkStart, bookmarkEnd)\n            }}\n          />\n        )}\n        <div\n          className={styles.graphContainer}\n          ref={(ref) => {\n            this.graphContainer = ref\n          }}\n        >\n          {/* // TODO separated drag area? */}\n          <div\n            className={styles.graph}\n            onMouseDown={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n            onTouchStart={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n          >\n            <TimelineUnits\n              {...this.props}\n              outerScale={this.outerScale}\n              outerStart={outerStart}\n              outerEnd={outerEnd}\n            />\n            {this.props.children &&\n              this.props.children({\n                outerScale: this.outerScale,\n                outerStart,\n                outerEnd,\n                outerWidth,\n                outerHeight,\n                graphHeight: outerHeight,\n                tooltipContainer: this.tooltipContainer,\n                ...this.props,\n              })}\n          </div>\n        </div>\n        <div\n          ref={(el) => {\n            this.tooltipContainer = el\n          }}\n        />\n        <div\n          className={cx(styles.veilLeft, styles.veil, {\n            [styles._immediate]: dragging === DRAG_START,\n          })}\n          style={{\n            width: dragging === DRAG_START ? handlerMouseX : innerStartPx,\n          }}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          dragging={this.state.dragging === DRAG_START}\n          x={innerStartPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          dragging={this.state.dragging === DRAG_END}\n          x={innerEndPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <div\n          className={cx(styles.veilRight, styles.veil, {\n            [styles._immediate]: dragging === DRAG_END,\n          })}\n          style={{\n            left: dragging === DRAG_END ? handlerMouseX : innerEndPx,\n            width: dragging === DRAG_END ? outerWidth - handlerMouseX : outerWidth - innerEndPx,\n          }}\n        />\n        {lastUpdatePosition <= outerWidth && (\n          <Spring native immediate={immediate} to={{ left: lastUpdatePosition }}>\n            {(style) => (\n              <animated.div className={styles.absoluteEnd} style={style}>\n                <div className={cx(styles.lastUpdate, styles.lastUpdateLabel)}>Last Update</div>\n                <div className={styles.lastUpdate}>{dayjs(absoluteEnd).format('MMMM D YYYY')}</div>\n              </animated.div>\n            )}\n          </Spring>\n        )}\n      </div>\n    )\n  }\n}\n\nTimeline.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onBookmarkChange: PropTypes.func,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n}\n\nTimeline.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  onBookmarkChange: () => {},\n  onMouseLeave: () => {},\n  onMouseMove: () => {},\n}\n\nexport default Timeline\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M6 12v-2l2.66 2.66L6 15.34v-2a5.14 5.14 0 0 1-3.77-1.57A5.14 5.14 0 0 1 .66 8c0-1.04.28-1.99.84-2.84l.97.96A3.8 3.8 0 0 0 2 8c0 1.1.4 2.05 1.17 2.83A3.85 3.85 0 0 0 6 12zm0-9.34c1.46 0 2.71.52 3.77 1.57A5.14 5.14 0 0 1 11.34 8c0 1.04-.28 1.99-.84 2.84l-.97-.96A3.8 3.8 0 0 0 10 8c0-1.1-.4-2.05-1.17-2.83A3.85 3.85 0 0 0 6 4v2L3.34 3.34 6 .66v2z\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgLoop = function SvgLoop(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 16\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/loop.238142cc.svg\";\nexport { SvgLoop as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M7 0v7L2 3.5 7 0zM1 0v7H0V0h1z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgBack = function SvgBack(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/back.92029460.svg\";\nexport { SvgBack as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M.5 1.79v12.42a.5.5 0 0 0 .762.426l10.092-6.21a.5.5 0 0 0 0-.852L1.262 1.364A.5.5 0 0 0 .5 1.79z\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgPlay = function SvgPlay(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 16,\n    viewBox: \"0 0 13 16\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/play.df4d1e51.svg\";\nexport { SvgPlay as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0h3.077v11H0V0zm6.923 0H10v11H6.923V0z\",\n  fill: \"#FFF\"\n});\n\nvar SvgPause = function SvgPause(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 11\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/pause.ef441981.svg\";\nexport { SvgPause as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0l5 3.5L0 7V0zm6 0h1v7H6V0z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgForward = function SvgForward(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/forward.a29c1440.svg\";\nexport { SvgForward as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport memoize from 'memoize-one'\nimport { scaleLinear } from 'd3-scale'\nimport { clampToAbsoluteBoundaries } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport { ReactComponent as IconLoop } from '../icons/loop.svg'\nimport { ReactComponent as IconBack } from '../icons/back.svg'\nimport { ReactComponent as IconPlay } from '../icons/play.svg'\nimport { ReactComponent as IconPause } from '../icons/pause.svg'\nimport { ReactComponent as IconForward } from '../icons/forward.svg'\nimport styles from './playback.module.css'\nimport uiStyles from '../timebar.module.css'\n\nconst BASE_STEP = 0.001\nconst SPEED_STEPS = [1, 2, 3, 5, 10]\nconst FAST_FORWARD_REWIND_MULTIPLICATOR = 100\n\nclass Playback extends Component {\n  static contextType = ImmediateContext\n  lastUpdateMs = null\n  constructor() {\n    super()\n    this.state = {\n      playing: false,\n      speedStep: 0,\n      loop: false,\n    }\n  }\n\n  getStep = memoize((start, end, speedStep) => {\n    const baseStepWithSpeed = BASE_STEP * SPEED_STEPS[speedStep]\n    const startMs = new Date(start).getTime()\n    const endMs = new Date(end).getTime()\n    const scale = scaleLinear()\n      .range([0, 1])\n      .domain([startMs, endMs])\n    const step = scale.invert(baseStepWithSpeed) - startMs\n    return step\n  })\n\n  update = (deltaMultiplicatorMs) => {\n    const { onTick, start, end, absoluteStart, absoluteEnd } = this.props\n    const { speedStep, loop } = this.state\n    const deltaMs = this.getStep(start, end, speedStep) * deltaMultiplicatorMs\n\n    const newStartMs = new Date(start).getTime() + deltaMs\n    const newEndMs = new Date(end).getTime() + deltaMs\n\n    const currentStartEndDeltaMs = newEndMs - newStartMs\n\n    const newStart = new Date(newStartMs).toISOString()\n    const newEnd = new Date(newEndMs).toISOString()\n\n    const { newStartClamped, newEndClamped, clamped } = clampToAbsoluteBoundaries(\n      newStart,\n      newEnd,\n      currentStartEndDeltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    onTick(newStartClamped, newEndClamped)\n\n    if (clamped === 'end') {\n      if (loop === true) {\n        // start again from absoluteStart\n        const newEnd = new Date(\n          new Date(absoluteStart).getTime() + currentStartEndDeltaMs\n        ).toISOString()\n        onTick(absoluteStart, newEnd)\n      } else {\n        this.togglePlay(false)\n      }\n    }\n    if (clamped !== 'end' || loop === true) {\n      return true\n    }\n  }\n\n  tick = (elapsedMs) => {\n    if (this.lastUpdateMs === null) {\n      this.lastUpdateMs = elapsedMs\n    }\n    // \"compare\" elapsed with theoretical 60 fps frame\n    const progressRatio = (elapsedMs - this.lastUpdateMs) / (1000 / 60)\n\n    const requireNextTick = this.update(progressRatio)\n\n    this.lastUpdateMs = elapsedMs\n\n    if (requireNextTick === true) {\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    }\n  }\n\n  togglePlay = (force) => {\n    const { playing } = this.state\n\n    const playingNext = force === undefined ? !playing : force\n\n    if (playingNext) {\n      this.context.toggleImmediate(true)\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    } else {\n      this.context.toggleImmediate(false)\n      this.lastUpdateMs = null\n      window.cancelAnimationFrame(this.requestAnimationFrame)\n    }\n\n    this.setState({\n      playing: playingNext,\n    })\n  }\n\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onPlayToggleClick = () => {\n    this.togglePlay()\n  }\n\n  toggleLoop = () => {\n    this.setState((prevState) => ({\n      loop: !prevState.loop,\n    }))\n  }\n\n  onForwardClick = () => {\n    this.update(FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onBackwardClick = () => {\n    this.update(-FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onSpeedClick = () => {\n    const { speedStep } = this.state\n    const nextStep = speedStep === SPEED_STEPS.length - 1 ? 0 : speedStep + 1\n    this.setState({ speedStep: nextStep })\n  }\n\n  render() {\n    const { playing, loop, speedStep } = this.state\n\n    return (\n      <div\n        className={cx(styles.playbackActions, {\n          [styles.playbackActionsActive]: playing,\n        })}\n      >\n        <button\n          type=\"button\"\n          title=\"Toggle animation looping\"\n          onClick={this.toggleLoop}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.loop, {\n            [styles.secondaryActive]: loop,\n          })}\n        >\n          <IconLoop />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move back\"\n          onClick={this.onBackwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.back)}\n        >\n          <IconBack />\n        </button>\n        <button\n          type=\"button\"\n          title={`${playing === true ? 'Pause' : 'Play'} animation`}\n          onClick={this.onPlayToggleClick}\n          className={cx(uiStyles.uiButton, styles.buttonBigger, styles.play)}\n        >\n          {playing === true ? <IconPause /> : <IconPlay />}\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move forward\"\n          onClick={this.onForwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.forward)}\n        >\n          <IconForward />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Change animation speed\"\n          onClick={this.onSpeedClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.speed)}\n        >\n          {SPEED_STEPS[speedStep]}x\n        </button>\n      </div>\n    )\n  }\n}\n\nPlayback.propTypes = {\n  onTick: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n}\n\nexport default Playback\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M1.06 5v8a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1V5h-13zm14-2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2V3c0-1.1.9-2 2-2v.5a1.5 1.5 0 0 0 3 0V1h5v.5a1.5 1.5 0 0 0 3 0V1a2 2 0 0 1 2 2zm-9 4v5l-3-2.5 3-2.5zm3 0v5l3-2.5-3-2.5zm-5.5-7a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 1 0v-1a.5.5 0 0 0-.5-.5zm8 0a.5.5 0 0 0-.5.5v1a.5.5 0 1 0 1 0v-1a.5.5 0 0 0-.5-.5z\"\n});\n\nvar SvgTimeRange = function SvgTimeRange(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 15\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/timeRange.cb0de496.svg\";\nexport { SvgTimeRange as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fill: \"none\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmark = function SvgBookmark(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmark.d1725b51.svg\";\nexport { SvgBookmark as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  width: 7,\n  height: 1,\n  rx: 0.5,\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgMinus = function SvgMinus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 3,\n    viewBox: \"0 0 9 3\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/minus.cd2a0a55.svg\";\nexport { SvgMinus as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, React.createElement(\"rect\", {\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}), React.createElement(\"rect\", {\n  transform: \"rotate(90 3.5 3.5)\",\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}));\n\nvar SvgPlus = function SvgPlus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 9,\n    viewBox: \"0 0 9 9\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/plus.16944dd2.svg\";\nexport { SvgPlus as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport dayjs from 'dayjs'\nimport ImmediateContext from './immediateContext'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaDays,\n  isMoreThanADay,\n  getHumanizedDates,\n} from './utils'\nimport './timebar-settings.module.css'\nimport styles from './timebar.module.css'\nimport TimeRangeSelector from './components/timerange-selector'\nimport Timeline from './components/timeline'\nimport Playback from './components/playback'\nimport { ReactComponent as IconTimeRange } from './icons/timeRange.svg'\nimport { ReactComponent as IconBookmark } from './icons/bookmark.svg'\nimport { ReactComponent as IconBookmarkFilled } from './icons/bookmarkFilled.svg'\nimport { ReactComponent as IconMinus } from './icons/minus.svg'\nimport { ReactComponent as IconPlus } from './icons/plus.svg'\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime)\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24\n\nclass Timebar extends Component {\n  constructor() {\n    super()\n    this.toggleImmediate = (immediate) => {\n      this.setState((state) => ({\n        immediate,\n      }))\n    }\n    this.interval = null\n    this.state = {\n      immediate: false,\n      showTimeRangeSelector: false,\n      absoluteEnd: null,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n\n    // TODO stick to day/hour here too\n    this.notifyChange(start, end)\n  }\n\n  static getDerivedStateFromProps(props) {\n    // let absolute end run through the end of the day\n    const absoluteEnd = dayjs(props.absoluteEnd)\n      .endOf('day')\n      .toISOString()\n    return {\n      absoluteEnd,\n    }\n  }\n\n  toggleTimeRangeSelector = () => {\n    this.setState((prevState) => ({\n      showTimeRangeSelector: !prevState.showTimeRangeSelector,\n    }))\n  }\n\n  setBookmark = () => {\n    const { start, end, onBookmarkChange } = this.props\n    onBookmarkChange !== null && onBookmarkChange(start, end)\n  }\n\n  onTimeRangeSelectorSubmit = (start, end) => {\n    this.notifyChange(start, end)\n    this.setState({\n      showTimeRangeSelector: false,\n    })\n  }\n\n  zoom = (zoom) => {\n    const { start, end, absoluteStart, absoluteEnd } = this.props\n    const delta = Math.round(getDeltaDays(start, end))\n\n    let steps\n    let nextDelta\n    let nextUnit = 'day'\n\n    if (zoom === 'in') {\n      steps = [365, 32, 30, 7, 1]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        if (delta > step) {\n          nextDelta = step\n          break\n        }\n      }\n      // sub-day situation\n      if (nextDelta === undefined) {\n        nextDelta = 23.9\n        nextUnit = 'hour'\n      }\n    } else if (zoom === 'out') {\n      steps = [1, 7, 30, 32, 365]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        // if (delta > step) {\n        if (delta < step) {\n          nextDelta = step\n          break\n        }\n      }\n\n      // more than 1 year situation\n      if (nextDelta === undefined) {\n        this.notifyChange(absoluteStart, absoluteEnd)\n        return\n      }\n    }\n\n    const unitOffsetMs = nextUnit === 'hour' ? ONE_DAY_MS / 24 : ONE_DAY_MS\n    const middleMs = getTime(start) + (getTime(end) - getTime(start)) / 2\n    const offsetMs = (nextDelta * unitOffsetMs) / 2\n    const newStartMs = middleMs - offsetMs\n    const mNewStart = dayjs(newStartMs).startOf(nextUnit)\n    const newEnd = mNewStart.add(nextDelta, nextUnit).toISOString()\n\n    const deltaMs = nextDelta * unitOffsetMs\n    const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n      mNewStart.toISOString(),\n      newEnd,\n      deltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    this.notifyChange(newStartClamped, newEndClamped)\n  }\n\n  notifyChange = (start, end) => {\n    const { onChange } = this.props\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(start, end)\n    onChange(start, end, humanizedStart, humanizedEnd)\n  }\n\n  onPlaybackTick = (newStart, newEnd) => {\n    this.notifyChange(newStart, newEnd)\n  }\n\n  render() {\n    const { start, end, absoluteStart, bookmarkStart, bookmarkEnd, enablePlayback } = this.props\n    const { immediate } = this.state\n\n    // state.absoluteEnd overrides the value set in props.absoluteEnd - see getDerivedStateFromProps\n    const { showTimeRangeSelector, absoluteEnd } = this.state\n\n    const canZoomIn = isMoreThanADay(start, end)\n    const deltaDays = getDeltaDays(start, end)\n    const absoluteDeltaDays = getDeltaDays(absoluteStart, absoluteEnd)\n    const canZoomOut = deltaDays <= absoluteDeltaDays - 1\n\n    const hasBookmark =\n      bookmarkStart !== undefined &&\n      bookmarkStart !== null &&\n      bookmarkEnd !== undefined &&\n      bookmarkEnd !== null\n    const bookmarkDisabled =\n      hasBookmark &&\n      getTime(bookmarkStart) === getTime(start) &&\n      getTime(bookmarkEnd) === getTime(end)\n\n    return (\n      <ImmediateContext.Provider value={{ immediate, toggleImmediate: this.toggleImmediate }}>\n        <div className={styles.Timebar}>\n          {enablePlayback && (\n            <Playback\n              start={start}\n              end={end}\n              absoluteStart={absoluteStart}\n              absoluteEnd={absoluteEnd}\n              onTick={this.onPlaybackTick}\n            />\n          )}\n\n          <div className={styles.timeActions}>\n            {showTimeRangeSelector && (\n              <TimeRangeSelector\n                {...this.props}\n                absoluteEnd={absoluteEnd}\n                onSubmit={this.onTimeRangeSelectorSubmit}\n                onDiscard={this.toggleTimeRangeSelector}\n              />\n            )}\n            <div className={styles.timeRangeContainer}>\n              <button\n                type=\"button\"\n                title=\"Select a time range\"\n                className={cx(styles.uiButton, styles.timeRange)}\n                onClick={this.toggleTimeRangeSelector}\n              >\n                <IconTimeRange />\n              </button>\n            </div>\n            <button\n              type=\"button\"\n              title=\"Bookmark current time range\"\n              className={cx(styles.uiButton, styles.bookmark)}\n              onClick={this.setBookmark}\n              disabled={bookmarkDisabled === true}\n            >\n              {hasBookmark ? <IconBookmarkFilled /> : <IconBookmark />}\n            </button>\n            <div className={styles.timeScale}>\n              <button\n                type=\"button\"\n                title=\"Zoom out\"\n                disabled={canZoomOut === false}\n                onClick={() => {\n                  this.zoom('out')\n                }}\n                className={cx(styles.uiButton, styles.out)}\n              >\n                <IconMinus />\n              </button>\n              <button\n                type=\"button\"\n                title=\"Zoom in\"\n                disabled={canZoomIn === false}\n                onClick={() => {\n                  this.zoom('in')\n                }}\n                className={cx(styles.uiButton, styles.in)}\n              >\n                <IconPlus />\n              </button>\n            </div>\n          </div>\n\n          <Timeline {...this.props} onChange={this.notifyChange} absoluteEnd={absoluteEnd} />\n        </div>\n      </ImmediateContext.Provider>\n    )\n  }\n}\n\nTimebar.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n  onBookmarkChange: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  enablePlayback: PropTypes.bool,\n}\n\nTimebar.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  enablePlayback: false,\n  onBookmarkChange: () => {},\n}\n\nexport default Timebar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { stack, stackOrderNone, stackOffsetSilhouette, area, curveStepAfter } from 'd3-shape'\nimport dayjs from 'dayjs'\nimport styles from './events.module.css'\n\nconst TOP_MARGIN = 5\nconst BOTTOM_MARGIN = 20\n\nclass Events extends Component {\n  getFinalEvents = memoize(\n    (events, showFishing) => {\n      let { labels, counts } = events.series\n\n      if (showFishing !== true) {\n        const fishingIndex = labels.indexOf('fishing')\n        labels = [...labels.slice(0, fishingIndex), ...labels.slice(fishingIndex + 1)]\n        counts = [...counts.slice(0, fishingIndex), ...counts.slice(fishingIndex + 1)]\n      }\n\n      const baseUnit = events.offset\n      const mStart = dayjs(events.start)\n      const mEnd = dayjs(events.end)\n      let mCurrentStart = mStart.clone()\n      const numUnits = mEnd.diff(mStart, baseUnit)\n\n      const allValues = []\n      let maxValue = 0\n\n      for (let dateIndex = 0; dateIndex < numUnits + 1; dateIndex += 1) {\n        let valuesAtDateSum = 0\n        const valuesAtDate = {\n          date: mCurrentStart.toDate(),\n        }\n        labels.forEach((key, keyIndex) => {\n          const value = counts[keyIndex][dateIndex]\n          valuesAtDate[key] = value\n          valuesAtDateSum += value\n        })\n\n        if (\n          labels.map((k) => valuesAtDate[k]).filter((v) => v === undefined).length === labels.length\n        ) {\n          console.warn('there are no values after this date, aborting rendering', valuesAtDate)\n          break\n        }\n\n        if (valuesAtDateSum > maxValue) {\n          maxValue = valuesAtDateSum\n        }\n\n        mCurrentStart = mCurrentStart.add(1, baseUnit)\n        allValues.push(valuesAtDate)\n      }\n\n      const allRatios = []\n      allValues.forEach((valuesAtDate) => {\n        const ratiosAtDate = { ...valuesAtDate }\n        labels.forEach((key) => {\n          ratiosAtDate[key] = valuesAtDate[key] / maxValue\n        })\n        allRatios.push(ratiosAtDate)\n      })\n      // need to pad with the last value to allow the curveStepAfter line generator to extend\n      allRatios.push({\n        ...allRatios[allRatios.length - 1],\n        date: mCurrentStart.toDate(),\n      })\n\n      const stackLayout = stack()\n        .keys(labels)\n        .order(stackOrderNone)\n        .offset(stackOffsetSilhouette)\n\n      return stackLayout(allRatios)\n    }\n    // TODO need custom equality comparator?\n    // (a: mixed, b: mixed) => boolean\n    // () => { return true; }\n  )\n\n  render() {\n    const { events, outerScale, outerWidth, graphHeight, showFishing } = this.props\n    // Calculate the latest derived data. If original events data hasn't changed\n    // since the last render, `memoize-one` will reuse the last return value.\n    // TODO this probably won't work correctly with Redux immutable state as nextProps.events !== props.events?\n    const finalEvents = this.getFinalEvents(events, showFishing)\n\n    const finalHeight = graphHeight - TOP_MARGIN - BOTTOM_MARGIN\n    const middle = TOP_MARGIN + finalHeight / 2\n\n    const areaGenerator = area()\n      .x((d) => outerScale(d.data.date))\n      .y0((d) => middle + finalHeight * d[0])\n      .y1((d) => middle + finalHeight * d[1])\n      .curve(curveStepAfter)\n    return (\n      <svg width={outerWidth} height={graphHeight} className={styles.Events}>\n        {finalEvents.map((eventsForKey, i) => (\n          <path\n            key={eventsForKey.key + i}\n            d={areaGenerator(eventsForKey)}\n            className={styles[eventsForKey.key]}\n          />\n        ))}\n      </svg>\n    )\n  }\n}\n\nEvents.propTypes = {\n  events: PropTypes.shape({\n    start: PropTypes.string,\n    end: PropTypes.string,\n    offset: PropTypes.string,\n    series: PropTypes.shape({\n      labels: PropTypes.arrayOf(PropTypes.string),\n      counts: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    }),\n  }).isRequired,\n  outerScale: PropTypes.func.isRequired,\n  outerWidth: PropTypes.number.isRequired,\n  graphHeight: PropTypes.number.isRequired,\n  showFishing: PropTypes.bool,\n}\n\nEvents.defaultProps = {\n  showFishing: false,\n}\n\nexport default Events\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, PropsTable } from 'docz'\nimport Timebar from './timebar'\nimport TimebarEvents from './charts/Events.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"timebar\"\n    }}>{`Timebar`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Visualize time-based data and allows users to filter it by a custom time range.`}</p>\n    <p>{`Currently used in:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GlobalFishingWatch/data-portal/blob/64aa2982d2159fbcf13ef58d25ea0ae3e01e0af9/src/timebar/TimebarWrapper.jsx#L2\"\n        }}>{`Data portal`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"available-properties\"\n    }}>{`Available properties`}</h2>\n    <PropsTable of={Timebar} mdxType=\"PropsTable\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const eventsMock = {\\n    start: \\'2014-01-01T00:00:00.000Z\\',\\n    end: \\'2018-12-27T00:00:00.000Z\\',\\n    offset: \\'day\\',\\n    series: {\\n      labels: [\\'encounter\\', \\'fishing\\', \\'gap\\', \\'port\\'],\\n      counts: [\\n        [\\n          36,\\n          36,\\n          24,\\n          16,\\n          16,\\n          8,\\n          22,\\n          28,\\n          22,\\n          26,\\n          36,\\n          32,\\n          68,\\n          40,\\n          30,\\n          32,\\n          44,\\n          52,\\n          56,\\n          18,\\n          34,\\n          30,\\n          32,\\n          32,\\n          24,\\n          26,\\n          34,\\n          24,\\n          34,\\n          30,\\n          62,\\n          36,\\n          26,\\n          38,\\n          26,\\n          26,\\n          14,\\n          26,\\n          26,\\n          20,\\n          32,\\n          36,\\n          42,\\n          36,\\n          22,\\n          32,\\n          32,\\n          34,\\n          32,\\n          38,\\n          38,\\n          22,\\n          28,\\n          22,\\n          12,\\n          14,\\n          14,\\n          14,\\n          16,\\n          20,\\n          10,\\n          18,\\n          28,\\n          14,\\n          28,\\n          40,\\n          32,\\n          52,\\n          24,\\n          34,\\n          24,\\n          34,\\n          24,\\n          34,\\n          22,\\n          26,\\n          28,\\n          12,\\n          16,\\n          26,\\n          18,\\n          12,\\n          14,\\n          28,\\n          32,\\n          26,\\n          28,\\n          14,\\n          34,\\n          14,\\n          14,\\n          20,\\n          22,\\n          16,\\n          16,\\n          16,\\n          22,\\n          28,\\n          20,\\n          26,\\n          20,\\n          26,\\n          32,\\n          54,\\n          38,\\n          20,\\n          38,\\n          22,\\n          20,\\n          8,\\n          16,\\n          16,\\n          8,\\n          4,\\n          8,\\n          12,\\n          12,\\n          16,\\n          16,\\n          24,\\n          18,\\n          12,\\n          20,\\n          22,\\n          22,\\n          36,\\n          40,\\n          20,\\n          42,\\n          18,\\n          16,\\n          26,\\n          28,\\n          38,\\n          26,\\n          28,\\n          12,\\n          8,\\n          10,\\n          8,\\n          8,\\n          16,\\n          16,\\n          16,\\n          24,\\n          20,\\n          20,\\n          26,\\n          8,\\n          24,\\n          10,\\n          16,\\n          32,\\n          22,\\n          6,\\n          20,\\n          18,\\n          16,\\n          14,\\n          24,\\n          22,\\n          24,\\n          22,\\n          16,\\n          14,\\n          14,\\n          28,\\n          20,\\n          24,\\n          16,\\n          14,\\n          20,\\n          34,\\n          26,\\n          32,\\n          16,\\n          20,\\n          16,\\n          22,\\n          14,\\n          14,\\n          22,\\n          24,\\n          20,\\n          10,\\n          12,\\n          14,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          38,\\n          16,\\n          20,\\n          24,\\n          22,\\n          26,\\n          22,\\n          10,\\n          18,\\n          22,\\n          12,\\n          24,\\n          14,\\n          14,\\n          28,\\n          26,\\n          30,\\n          28,\\n          24,\\n          24,\\n          24,\\n          10,\\n          16,\\n          16,\\n          8,\\n          16,\\n          24,\\n          20,\\n          30,\\n          12,\\n          16,\\n          36,\\n          20,\\n          22,\\n          12,\\n          20,\\n          32,\\n          28,\\n          32,\\n          18,\\n          32,\\n          8,\\n          6,\\n          26,\\n          14,\\n          28,\\n          20,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          14,\\n          6,\\n          18,\\n          22,\\n          14,\\n          10,\\n          18,\\n          18,\\n          20,\\n          14,\\n          20,\\n          26,\\n          16,\\n          22,\\n          20,\\n          10,\\n          10,\\n          20,\\n          14,\\n          20,\\n          16,\\n          10,\\n          26,\\n          18,\\n          14,\\n          20,\\n          12,\\n          22,\\n          28,\\n          16,\\n          22,\\n          26,\\n          12,\\n          22,\\n          12,\\n          14,\\n          20,\\n          14,\\n          12,\\n          16,\\n          14,\\n          16,\\n          12,\\n          12,\\n          14,\\n          32,\\n          26,\\n          36,\\n          26,\\n          20,\\n          44,\\n          22,\\n          28,\\n          22,\\n          24,\\n          18,\\n          12,\\n          10,\\n          24,\\n          20,\\n          32,\\n          12,\\n          22,\\n          18,\\n          26,\\n          34,\\n          26,\\n          18,\\n          16,\\n          26,\\n          12,\\n          16,\\n          12,\\n          10,\\n          22,\\n          18,\\n          30,\\n          22,\\n          28,\\n          18,\\n          20,\\n          16,\\n          14,\\n          10,\\n          12,\\n          8,\\n          14,\\n          12,\\n          10,\\n          10,\\n          12,\\n          8,\\n          12,\\n          14,\\n          18,\\n          20,\\n          28,\\n          24,\\n          38,\\n          18,\\n          20,\\n          6,\\n          16,\\n          14,\\n          6,\\n          20,\\n          6,\\n          8,\\n          16,\\n          8,\\n          24,\\n          32,\\n          36,\\n          20,\\n          24,\\n          22,\\n          36,\\n          36,\\n          40,\\n          40,\\n          34,\\n          32,\\n          28,\\n          34,\\n          28,\\n          34,\\n          24,\\n          50,\\n          70,\\n          54,\\n          46,\\n          20,\\n          46,\\n          40,\\n          38,\\n          44,\\n          38,\\n          38,\\n          40,\\n          20,\\n          24,\\n          16,\\n          30,\\n          52,\\n          54,\\n          34,\\n          42,\\n          36,\\n          24,\\n          24,\\n          20,\\n          56,\\n          30,\\n          50,\\n          30,\\n          22,\\n          26,\\n          30,\\n          20,\\n          4,\\n          20,\\n          16,\\n          14,\\n          20,\\n          12,\\n          22,\\n          34,\\n          34,\\n          34,\\n          30,\\n          36,\\n          42,\\n          20,\\n          20,\\n          12,\\n          14,\\n          20,\\n          8,\\n          12,\\n          16,\\n          8,\\n          26,\\n          26,\\n          20,\\n          24,\\n          20,\\n          20,\\n          24,\\n          16,\\n          38,\\n          20,\\n          12,\\n          10,\\n          14,\\n          18,\\n          8,\\n          2,\\n          14,\\n          8,\\n          0,\\n          10,\\n          6,\\n          18,\\n          18,\\n          10,\\n          12,\\n          10,\\n          6,\\n          14,\\n          4,\\n          18,\\n          20,\\n          24,\\n          24,\\n          18,\\n          22,\\n          22,\\n          12,\\n          6,\\n          6,\\n          8,\\n          2,\\n          0,\\n          4,\\n          2,\\n          4,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          6,\\n          8,\\n          6,\\n          8,\\n          6,\\n          4,\\n          4,\\n          10,\\n          10,\\n          4,\\n          8,\\n          22,\\n          22,\\n          10,\\n          12,\\n          18,\\n          14,\\n          6,\\n          0,\\n          4,\\n          6,\\n          10,\\n          6,\\n          8,\\n          12,\\n          8,\\n          2,\\n          16,\\n          12,\\n          4,\\n          2,\\n          10,\\n          6,\\n          0,\\n          12,\\n          8,\\n          14,\\n          2,\\n          14,\\n          22,\\n          16,\\n          24,\\n          18,\\n          20,\\n          36,\\n          18,\\n          12,\\n          10,\\n          8,\\n          16,\\n          0,\\n          0,\\n          0,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          8,\\n          6,\\n          6,\\n          4,\\n          6,\\n          2,\\n          4,\\n          0,\\n          6,\\n          6,\\n          4,\\n          6,\\n          8,\\n          10,\\n          6,\\n          12,\\n          16,\\n          10,\\n          4,\\n          6,\\n          2,\\n          8,\\n          0,\\n          6,\\n          4,\\n          4,\\n          10,\\n          18,\\n          16,\\n          14,\\n          6,\\n          0,\\n          8,\\n          2,\\n          8,\\n          14,\\n          12,\\n          10,\\n          6,\\n          10,\\n          10,\\n          12,\\n          20,\\n          16,\\n          28,\\n          8,\\n          12,\\n          8,\\n          4,\\n          2,\\n          2,\\n          6,\\n          8,\\n          4,\\n          8,\\n          4,\\n          2,\\n          4,\\n          0,\\n          4,\\n          2,\\n          2,\\n          2,\\n          2,\\n          0,\\n          4,\\n          4,\\n          6,\\n          14,\\n          8,\\n          12,\\n          18,\\n          26,\\n          18,\\n          10,\\n          18,\\n          10,\\n          14,\\n          14,\\n          14,\\n          4,\\n          2,\\n          2,\\n          4,\\n          2,\\n          4,\\n          6,\\n          4,\\n          6,\\n          22,\\n          8,\\n          8,\\n          24,\\n          14,\\n          6,\\n          8,\\n          8,\\n          8,\\n          8,\\n          14,\\n          6,\\n          18,\\n          18,\\n          16,\\n          32,\\n          24,\\n          52,\\n          18,\\n          18,\\n          8,\\n          4,\\n          2,\\n          0,\\n          4,\\n          2,\\n          10,\\n          14,\\n          6,\\n          16,\\n          14,\\n          6,\\n          18,\\n          4,\\n          12,\\n          10,\\n          8,\\n          8,\\n          12,\\n          8,\\n          8,\\n          6,\\n          10,\\n          18,\\n          10,\\n          6,\\n          12,\\n          6,\\n          14,\\n          4,\\n          16,\\n          10,\\n          4,\\n          12,\\n          14,\\n          12,\\n          22,\\n          20,\\n          14,\\n          18,\\n          20,\\n          8,\\n          12,\\n          18,\\n          6,\\n          4,\\n          10,\\n          10,\\n          16,\\n          14,\\n          14,\\n          6,\\n          14,\\n          14,\\n          6,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          8,\\n          6,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          28,\\n          10,\\n          12,\\n          20,\\n          30,\\n          24,\\n          24,\\n          32,\\n          30,\\n          22,\\n          16,\\n          26,\\n          18,\\n          18,\\n          24,\\n          14,\\n          20,\\n          30,\\n          22,\\n          8,\\n          0,\\n          16,\\n          22,\\n          18,\\n          10,\\n          24,\\n          16,\\n          4,\\n          8,\\n          12,\\n          10,\\n          10,\\n          10,\\n          8,\\n          8,\\n          20,\\n          14,\\n          18,\\n          24,\\n          24,\\n          28,\\n          30,\\n          20,\\n          40,\\n          36,\\n          32,\\n          56,\\n          54,\\n          60,\\n          56,\\n          28,\\n          16,\\n          28,\\n          30,\\n          22,\\n          22,\\n          14,\\n          62,\\n          40,\\n          42,\\n          68,\\n          60,\\n          56,\\n          64,\\n          32,\\n          50,\\n          34,\\n          14,\\n          24,\\n          20,\\n          24,\\n          38,\\n          42,\\n          60,\\n          46,\\n          52,\\n          42,\\n          30,\\n          28,\\n          12,\\n          16,\\n          14,\\n          22,\\n          16,\\n          12,\\n          18,\\n          38,\\n          16,\\n          30,\\n          24,\\n          16,\\n          20,\\n          10,\\n          14,\\n          14,\\n          30,\\n          30,\\n          16,\\n          30,\\n          14,\\n          50,\\n          52,\\n          64,\\n          66,\\n          64,\\n          54,\\n          44,\\n          46,\\n          52,\\n          52,\\n          34,\\n          40,\\n          30,\\n          36,\\n          28,\\n          34,\\n          22,\\n          34,\\n          20,\\n          20,\\n          20,\\n          22,\\n          18,\\n          16,\\n          30,\\n          16,\\n          24,\\n          28,\\n          22,\\n          24,\\n          34,\\n          42,\\n          50,\\n          62,\\n          44,\\n          46,\\n          44,\\n          34,\\n          20,\\n          32,\\n          32,\\n          20,\\n          28,\\n          20,\\n          20,\\n          32,\\n          20,\\n          12,\\n          16,\\n          16,\\n          24,\\n          6,\\n          18,\\n          22,\\n          26,\\n          16,\\n          12,\\n          22,\\n          10,\\n          18,\\n          38,\\n          58,\\n          44,\\n          44,\\n          44,\\n          44,\\n          24,\\n          18,\\n          14,\\n          12,\\n          12,\\n          12,\\n          10,\\n          18,\\n          10,\\n          24,\\n          14,\\n          18,\\n          22,\\n          10,\\n          20,\\n          18,\\n          18,\\n          6,\\n          22,\\n          20,\\n          26,\\n          10,\\n          24,\\n          28,\\n          24,\\n          34,\\n          68,\\n          32,\\n          28,\\n          24,\\n          18,\\n          30,\\n          32,\\n          16,\\n          12,\\n          24,\\n          22,\\n          10,\\n          12,\\n          36,\\n          28,\\n          52,\\n          28,\\n          14,\\n          6,\\n          10,\\n          8,\\n          16,\\n          10,\\n          12,\\n          38,\\n          32,\\n          34,\\n          24,\\n          28,\\n          46,\\n          36,\\n          32,\\n          38,\\n          18,\\n          22,\\n          18,\\n          14,\\n          20,\\n          24,\\n          16,\\n          20,\\n          10,\\n          28,\\n          42,\\n          36,\\n          30,\\n          20,\\n          18,\\n          26,\\n          16,\\n          24,\\n          20,\\n          38,\\n          52,\\n          40,\\n          34,\\n          46,\\n          42,\\n          24,\\n          48,\\n          62,\\n          60,\\n          76,\\n          30,\\n          36,\\n          32,\\n          42,\\n          32,\\n          48,\\n          30,\\n          32,\\n          42,\\n          32,\\n          22,\\n          20,\\n          14,\\n          38,\\n          40,\\n          32,\\n          46,\\n          32,\\n          42,\\n          22,\\n          30,\\n          24,\\n          24,\\n          30,\\n          44,\\n          26,\\n          38,\\n          28,\\n          6,\\n          40,\\n          22,\\n          32,\\n          28,\\n          32,\\n          44,\\n          48,\\n          38,\\n          50,\\n          92,\\n          50,\\n          38,\\n          44,\\n          42,\\n          22,\\n          30,\\n          32,\\n          34,\\n          34,\\n          72,\\n          46,\\n          60,\\n          28,\\n          44,\\n          76,\\n          78,\\n          72,\\n          60,\\n          68,\\n          72,\\n          32,\\n          24,\\n          28,\\n          38,\\n          32,\\n          42,\\n          34,\\n          38,\\n          44,\\n          22,\\n          30,\\n          28,\\n          20,\\n          24,\\n          24,\\n          16,\\n          26,\\n          28,\\n          16,\\n          16,\\n          26,\\n          14,\\n          28,\\n          44,\\n          48,\\n          48,\\n          36,\\n          32,\\n          46,\\n          24,\\n          20,\\n          20,\\n          20,\\n          24,\\n          38,\\n          50,\\n          24,\\n          42,\\n          46,\\n          24,\\n          44,\\n          26,\\n          20,\\n          30,\\n          16,\\n          18,\\n          28,\\n          22,\\n          20,\\n          18,\\n          36,\\n          42,\\n          42,\\n          34,\\n          60,\\n          56,\\n          54,\\n          26,\\n          52,\\n          40,\\n          44,\\n          90,\\n          66,\\n          78,\\n          70,\\n          58,\\n          66,\\n          26,\\n          42,\\n          38,\\n          58,\\n          114,\\n          122,\\n          120,\\n          90,\\n          72,\\n          38,\\n          80,\\n          60,\\n          62,\\n          58,\\n          58,\\n          30,\\n          66,\\n          58,\\n          46,\\n          34,\\n          50,\\n          26,\\n          46,\\n          32,\\n          40,\\n          26,\\n          18,\\n          22,\\n          98,\\n          82,\\n          118,\\n          162,\\n          130,\\n          94,\\n          128,\\n          80,\\n          54,\\n          90,\\n          138,\\n          140,\\n          144,\\n          98,\\n          150,\\n          140,\\n          150,\\n          166,\\n          118,\\n          128,\\n          112,\\n          96,\\n          62,\\n          26,\\n          36,\\n          18,\\n          62,\\n          36,\\n          76,\\n          44,\\n          54,\\n          32,\\n          36,\\n          28,\\n          26,\\n          28,\\n          24,\\n          20,\\n          22,\\n          12,\\n          28,\\n          24,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          30,\\n          38,\\n          30,\\n          30,\\n          24,\\n          20,\\n          20,\\n          22,\\n          28,\\n          16,\\n          28,\\n          34,\\n          26,\\n          10,\\n          8,\\n          14,\\n          16,\\n          16,\\n          22,\\n          20,\\n          8,\\n          26,\\n          18,\\n          24,\\n          18,\\n          18,\\n          12,\\n          16,\\n          18,\\n          32,\\n          50,\\n          46,\\n          54,\\n          38,\\n          38,\\n          34,\\n          26,\\n          22,\\n          26,\\n          32,\\n          26,\\n          30,\\n          22,\\n          12,\\n          18,\\n          20,\\n          12,\\n          28,\\n          10,\\n          14,\\n          16,\\n          14,\\n          16,\\n          18,\\n          24,\\n          12,\\n          26,\\n          32,\\n          24,\\n          60,\\n          90,\\n          62,\\n          52,\\n          34,\\n          32,\\n          24,\\n          12,\\n          12,\\n          10,\\n          20,\\n          10,\\n          8,\\n          22,\\n          12,\\n          22,\\n          20,\\n          8,\\n          14,\\n          10,\\n          16,\\n          14,\\n          14,\\n          10,\\n          12,\\n          14,\\n          4,\\n          14,\\n          28,\\n          48,\\n          42,\\n          42,\\n          32,\\n          24,\\n          14,\\n          14,\\n          8,\\n          10,\\n          8,\\n          18,\\n          20,\\n          30,\\n          14,\\n          10,\\n          12,\\n          16,\\n          28,\\n          26,\\n          18,\\n          10,\\n          16,\\n          20,\\n          18,\\n          12,\\n          20,\\n          16,\\n          16,\\n          32,\\n          38,\\n          50,\\n          36,\\n          48,\\n          32,\\n          32,\\n          40,\\n          34,\\n          26,\\n          16,\\n          14,\\n          46,\\n          40,\\n          48,\\n          12,\\n          20,\\n          14,\\n          22,\\n          22,\\n          26,\\n          30,\\n          24,\\n          12,\\n          44,\\n          36,\\n          32,\\n          32,\\n          52,\\n          48,\\n          40,\\n          48,\\n          80,\\n          96,\\n          60,\\n          74,\\n          62,\\n          42,\\n          26,\\n          38,\\n          18,\\n          34,\\n          44,\\n          36,\\n          36,\\n          26,\\n          34,\\n          30,\\n          14,\\n          10,\\n          18,\\n          14,\\n          18,\\n          18,\\n          4,\\n          12,\\n          18,\\n          20,\\n          24,\\n          28,\\n          32,\\n          50,\\n          62,\\n          82,\\n          78,\\n          72,\\n          58,\\n          58,\\n          68,\\n          90,\\n          68,\\n          22,\\n          32,\\n          22,\\n          42,\\n          22,\\n          26,\\n          70,\\n          42,\\n          48,\\n          40,\\n          42,\\n          36,\\n          30,\\n          32,\\n          14,\\n          38,\\n          38,\\n          44,\\n          46,\\n          44,\\n          42,\\n          76,\\n          70,\\n          62,\\n          48,\\n          84,\\n          28,\\n          42,\\n          34,\\n          42,\\n          44,\\n          38,\\n          56,\\n          62,\\n          86,\\n          56,\\n          62,\\n          90,\\n          64,\\n          78,\\n          82,\\n          50,\\n          54,\\n          50,\\n          46,\\n          42,\\n          56,\\n          46,\\n          66,\\n          100,\\n          84,\\n          106,\\n          68,\\n          56,\\n          38,\\n          36,\\n          24,\\n          40,\\n          50,\\n          34,\\n          24,\\n          68,\\n          48,\\n          40,\\n          50,\\n          38,\\n          64,\\n          52,\\n          50,\\n          36,\\n          40,\\n          52,\\n          62,\\n          86,\\n          48,\\n          58,\\n          46,\\n          48,\\n          38,\\n          58,\\n          64,\\n          38,\\n          54,\\n          48,\\n          24,\\n          28,\\n          24,\\n          36,\\n          40,\\n          16,\\n          32,\\n          32,\\n          22,\\n          36,\\n          54,\\n          56,\\n          70,\\n          62,\\n          48,\\n          30,\\n          54,\\n          44,\\n          20,\\n          42,\\n          44,\\n          40,\\n          36,\\n          50,\\n          24,\\n          42,\\n          64,\\n          54,\\n          40,\\n          22,\\n          32,\\n          26,\\n          32,\\n          42,\\n          52,\\n          80,\\n          74,\\n          52,\\n          30,\\n          58,\\n          42,\\n          34,\\n          72,\\n          66,\\n          64,\\n          68,\\n          72,\\n          72,\\n          64,\\n          138,\\n          144,\\n          146,\\n          140,\\n          166,\\n          126,\\n          134,\\n          118,\\n          130,\\n          82,\\n          54,\\n          62,\\n          64,\\n          70,\\n          68,\\n          52,\\n          32,\\n          28,\\n          54,\\n          62,\\n          70,\\n          78,\\n          84,\\n          68,\\n          54,\\n          24,\\n          40,\\n          38,\\n          40,\\n          26,\\n          42,\\n          36,\\n          36,\\n          48,\\n          26,\\n          60,\\n          64,\\n          60,\\n          48,\\n          46,\\n          58,\\n          78,\\n          88,\\n          68,\\n          54,\\n          42,\\n          66,\\n          46,\\n          38,\\n          64,\\n          40,\\n          38,\\n          36,\\n          32,\\n          44,\\n          104,\\n          144,\\n          146,\\n          100,\\n          64,\\n          30,\\n          24,\\n          44,\\n          68,\\n          42,\\n          84,\\n          62,\\n          58,\\n          40,\\n          24,\\n          16,\\n          22,\\n          24,\\n          30,\\n          28,\\n          22,\\n          38,\\n          16,\\n          14,\\n          20,\\n          24,\\n          16,\\n          18,\\n          16,\\n          6,\\n          18,\\n          16,\\n          24,\\n          20,\\n          28,\\n          22,\\n          32,\\n          54,\\n          72,\\n          96,\\n          78,\\n          66,\\n          102,\\n          52,\\n          28,\\n          26,\\n          16,\\n          36,\\n          26,\\n          24,\\n          12,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          32,\\n          10,\\n          12,\\n          16,\\n          8,\\n          14,\\n          12,\\n          18,\\n          14,\\n          34,\\n          34,\\n          54,\\n          70,\\n          64,\\n          68,\\n          52,\\n          38,\\n          36,\\n          26,\\n          32,\\n          32,\\n          18,\\n          36,\\n          34,\\n          14,\\n          14,\\n          30,\\n          20,\\n          34,\\n          78,\\n          30,\\n          16,\\n          20,\\n          12,\\n          26,\\n          12,\\n          22,\\n          20,\\n          32,\\n          20,\\n          26,\\n          86,\\n          68,\\n          68,\\n          68,\\n          56,\\n          56,\\n          26,\\n          44,\\n          54,\\n          54,\\n          40,\\n          56,\\n          28,\\n          42,\\n          42,\\n          50,\\n          36,\\n          40,\\n          58,\\n          32,\\n          42,\\n          18,\\n          40,\\n          34,\\n          38,\\n          46,\\n          34,\\n          80,\\n          82,\\n          86,\\n          58,\\n          64,\\n          78,\\n          64,\\n          46,\\n          48,\\n          52,\\n          30,\\n          40,\\n          64,\\n          88,\\n          60,\\n          50,\\n          42,\\n          38,\\n          36,\\n          20,\\n          30,\\n          42,\\n          34,\\n          36,\\n          24,\\n          34,\\n          46,\\n          54,\\n          50,\\n          30,\\n          54,\\n          44,\\n          86,\\n          84,\\n          96,\\n          78,\\n          58,\\n          58,\\n          40,\\n          48,\\n          38,\\n          60,\\n          74,\\n          84,\\n          66,\\n          52,\\n          42,\\n          44,\\n          32,\\n          52,\\n          52,\\n          48,\\n          42,\\n          60,\\n          50,\\n          48,\\n          68,\\n          46,\\n          60,\\n          66,\\n          68,\\n          92,\\n          96,\\n          104,\\n          80,\\n          104,\\n          104,\\n          80,\\n          68,\\n          50,\\n          70,\\n          56,\\n          66,\\n          56,\\n          36,\\n          26,\\n          32,\\n          30,\\n          20,\\n          40,\\n          46,\\n          36,\\n          44,\\n          32,\\n          30,\\n          28,\\n          36,\\n          44,\\n          52,\\n          76,\\n          34,\\n          40,\\n          54,\\n          58,\\n          70,\\n          60,\\n          78,\\n          64,\\n          44,\\n          48,\\n          42,\\n          26,\\n          52,\\n          62,\\n          62,\\n          60,\\n          38,\\n          46,\\n          62,\\n          46,\\n          34,\\n          28,\\n          36,\\n          28,\\n          22,\\n          56,\\n          40,\\n          58,\\n          34,\\n          44,\\n          56,\\n          54,\\n          66,\\n          72,\\n          58,\\n          54,\\n          40,\\n          56,\\n          38,\\n          32,\\n          42,\\n          28,\\n          40,\\n          50,\\n          20,\\n          20,\\n          32,\\n          38,\\n          26,\\n          34,\\n          26,\\n          36,\\n          42,\\n          54,\\n          52,\\n          56,\\n          28,\\n          20,\\n          24,\\n          36,\\n          40,\\n          54,\\n          76,\\n          54,\\n          44,\\n          38,\\n          56,\\n          50,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          1414,\\n          1343,\\n          1385,\\n          1471,\\n          1444,\\n          1477,\\n          1321,\\n          1405,\\n          1383,\\n          1388,\\n          1426,\\n          1458,\\n          1514,\\n          1504,\\n          1527,\\n          1517,\\n          1599,\\n          1513,\\n          1486,\\n          1500,\\n          1247,\\n          1435,\\n          1547,\\n          1498,\\n          1378,\\n          1407,\\n          1443,\\n          1381,\\n          1401,\\n          1357,\\n          1414,\\n          1093,\\n          1004,\\n          859,\\n          979,\\n          973,\\n          1038,\\n          985,\\n          1059,\\n          1154,\\n          1306,\\n          1483,\\n          1509,\\n          1482,\\n          1527,\\n          1591,\\n          1616,\\n          1607,\\n          1581,\\n          1543,\\n          1469,\\n          1453,\\n          1419,\\n          1392,\\n          1403,\\n          1533,\\n          1621,\\n          1625,\\n          1653,\\n          1658,\\n          1625,\\n          1607,\\n          1626,\\n          1634,\\n          1637,\\n          1573,\\n          1546,\\n          1472,\\n          1473,\\n          1501,\\n          1527,\\n          1580,\\n          1627,\\n          1791,\\n          1894,\\n          1933,\\n          2013,\\n          2272,\\n          2378,\\n          2425,\\n          2381,\\n          2328,\\n          2343,\\n          2283,\\n          2298,\\n          1989,\\n          1862,\\n          1851,\\n          1756,\\n          1811,\\n          1985,\\n          2213,\\n          2242,\\n          2316,\\n          2370,\\n          2305,\\n          2318,\\n          2243,\\n          2308,\\n          2425,\\n          2385,\\n          2534,\\n          2597,\\n          2570,\\n          2624,\\n          2587,\\n          2652,\\n          2631,\\n          2709,\\n          2631,\\n          2654,\\n          2681,\\n          2674,\\n          2571,\\n          2431,\\n          2414,\\n          2483,\\n          2444,\\n          2372,\\n          2482,\\n          2377,\\n          2227,\\n          2150,\\n          2104,\\n          2150,\\n          1999,\\n          2145,\\n          2244,\\n          2288,\\n          2382,\\n          2508,\\n          2591,\\n          2526,\\n          2587,\\n          2613,\\n          2587,\\n          2610,\\n          2615,\\n          2586,\\n          2581,\\n          2574,\\n          2618,\\n          2566,\\n          2582,\\n          2638,\\n          2699,\\n          2676,\\n          2855,\\n          2812,\\n          2719,\\n          2686,\\n          2555,\\n          2328,\\n          2253,\\n          2189,\\n          2066,\\n          2065,\\n          2156,\\n          2076,\\n          2155,\\n          2176,\\n          2130,\\n          2048,\\n          1903,\\n          1870,\\n          1842,\\n          1798,\\n          1719,\\n          1678,\\n          1629,\\n          1623,\\n          1481,\\n          1446,\\n          1601,\\n          1597,\\n          1588,\\n          1633,\\n          1588,\\n          1580,\\n          1520,\\n          1457,\\n          1475,\\n          1453,\\n          1410,\\n          1409,\\n          1355,\\n          1369,\\n          1496,\\n          1618,\\n          1688,\\n          1776,\\n          1800,\\n          1813,\\n          1894,\\n          1977,\\n          2049,\\n          2029,\\n          2060,\\n          2082,\\n          2158,\\n          2208,\\n          2255,\\n          2326,\\n          2245,\\n          2172,\\n          2150,\\n          2274,\\n          2162,\\n          2028,\\n          1986,\\n          1885,\\n          1796,\\n          1829,\\n          1842,\\n          1861,\\n          1870,\\n          1928,\\n          2018,\\n          2030,\\n          1733,\\n          1754,\\n          1802,\\n          1864,\\n          1836,\\n          1864,\\n          1885,\\n          1929,\\n          1876,\\n          1902,\\n          1929,\\n          1932,\\n          1952,\\n          1926,\\n          1901,\\n          1820,\\n          1859,\\n          1763,\\n          1777,\\n          1696,\\n          1615,\\n          1606,\\n          1562,\\n          1568,\\n          1562,\\n          1559,\\n          1611,\\n          1547,\\n          1583,\\n          1646,\\n          1553,\\n          1446,\\n          1550,\\n          1564,\\n          1591,\\n          1577,\\n          1593,\\n          1582,\\n          1537,\\n          1707,\\n          1728,\\n          1631,\\n          1736,\\n          1694,\\n          1723,\\n          1707,\\n          1680,\\n          1713,\\n          1722,\\n          1577,\\n          1581,\\n          1538,\\n          1538,\\n          1563,\\n          1599,\\n          1532,\\n          1600,\\n          1616,\\n          1443,\\n          1704,\\n          1639,\\n          1766,\\n          1797,\\n          1875,\\n          1825,\\n          1861,\\n          1904,\\n          1888,\\n          1931,\\n          1994,\\n          1997,\\n          2008,\\n          2047,\\n          2036,\\n          1931,\\n          1897,\\n          1847,\\n          1854,\\n          1881,\\n          1846,\\n          1650,\\n          1627,\\n          1562,\\n          1532,\\n          1536,\\n          1556,\\n          1522,\\n          1564,\\n          1694,\\n          1788,\\n          1957,\\n          2006,\\n          2190,\\n          2314,\\n          2308,\\n          2246,\\n          1881,\\n          1860,\\n          1804,\\n          2131,\\n          2167,\\n          2058,\\n          2120,\\n          2154,\\n          1863,\\n          1885,\\n          1891,\\n          1950,\\n          1903,\\n          1778,\\n          1757,\\n          1672,\\n          1597,\\n          1561,\\n          1612,\\n          1711,\\n          1790,\\n          1855,\\n          1942,\\n          1888,\\n          1877,\\n          1924,\\n          2030,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          22,\\n          23,\\n          22,\\n          38,\\n          34,\\n          22,\\n          19,\\n          22,\\n          22,\\n          19,\\n          30,\\n          20,\\n          12,\\n          17,\\n          22,\\n          19,\\n          18,\\n          19,\\n          22,\\n          23,\\n          29,\\n          27,\\n          22,\\n          22,\\n          28,\\n          18,\\n          17,\\n          24,\\n          19,\\n          14,\\n          25,\\n          10,\\n          17,\\n          12,\\n          26,\\n          23,\\n          17,\\n          19,\\n          24,\\n          25,\\n          27,\\n          17,\\n          27,\\n          23,\\n          20,\\n          25,\\n          30,\\n          23,\\n          27,\\n          25,\\n          28,\\n          31,\\n          34,\\n          32,\\n          27,\\n          33,\\n          28,\\n          32,\\n          23,\\n          21,\\n          28,\\n          22,\\n          33,\\n          21,\\n          21,\\n          85,\\n          190,\\n          119,\\n          31,\\n          37,\\n          58,\\n          135,\\n          41,\\n          41,\\n          46,\\n          37,\\n          35,\\n          27,\\n          39,\\n          31,\\n          111,\\n          45,\\n          27,\\n          30,\\n          57,\\n          52,\\n          66,\\n          55,\\n          32,\\n          31,\\n          43,\\n          40,\\n          38,\\n          41,\\n          39,\\n          38,\\n          65,\\n          39,\\n          46,\\n          65,\\n          49,\\n          75,\\n          61,\\n          43,\\n          40,\\n          92,\\n          55,\\n          62,\\n          41,\\n          75,\\n          62,\\n          51,\\n          73,\\n          242,\\n          46,\\n          41,\\n          51,\\n          50,\\n          54,\\n          57,\\n          51,\\n          46,\\n          52,\\n          46,\\n          51,\\n          63,\\n          43,\\n          54,\\n          38,\\n          55,\\n          77,\\n          43,\\n          53,\\n          48,\\n          90,\\n          54,\\n          61,\\n          53,\\n          30,\\n          53,\\n          79,\\n          194,\\n          58,\\n          46,\\n          64,\\n          47,\\n          54,\\n          56,\\n          42,\\n          60,\\n          42,\\n          48,\\n          37,\\n          53,\\n          41,\\n          55,\\n          52,\\n          40,\\n          43,\\n          39,\\n          35,\\n          23,\\n          35,\\n          28,\\n          24,\\n          21,\\n          31,\\n          39,\\n          22,\\n          33,\\n          28,\\n          30,\\n          24,\\n          33,\\n          20,\\n          26,\\n          28,\\n          29,\\n          21,\\n          25,\\n          20,\\n          37,\\n          33,\\n          36,\\n          21,\\n          28,\\n          38,\\n          33,\\n          35,\\n          45,\\n          33,\\n          38,\\n          41,\\n          45,\\n          43,\\n          46,\\n          36,\\n          40,\\n          29,\\n          29,\\n          43,\\n          41,\\n          37,\\n          42,\\n          39,\\n          39,\\n          42,\\n          35,\\n          37,\\n          34,\\n          35,\\n          53,\\n          38,\\n          39,\\n          35,\\n          33,\\n          38,\\n          57,\\n          80,\\n          46,\\n          50,\\n          50,\\n          40,\\n          45,\\n          44,\\n          58,\\n          61,\\n          59,\\n          44,\\n          48,\\n          40,\\n          45,\\n          39,\\n          38,\\n          34,\\n          56,\\n          44,\\n          36,\\n          32,\\n          49,\\n          38,\\n          41,\\n          50,\\n          41,\\n          45,\\n          46,\\n          41,\\n          42,\\n          44,\\n          57,\\n          47,\\n          38,\\n          105,\\n          47,\\n          57,\\n          51,\\n          43,\\n          53,\\n          36,\\n          45,\\n          59,\\n          45,\\n          68,\\n          70,\\n          57,\\n          49,\\n          56,\\n          40,\\n          52,\\n          52,\\n          37,\\n          52,\\n          51,\\n          57,\\n          35,\\n          56,\\n          59,\\n          46,\\n          63,\\n          47,\\n          46,\\n          45,\\n          46,\\n          46,\\n          44,\\n          46,\\n          43,\\n          45,\\n          42,\\n          37,\\n          50,\\n          46,\\n          35,\\n          45,\\n          43,\\n          34,\\n          42,\\n          43,\\n          45,\\n          40,\\n          60,\\n          39,\\n          56,\\n          76,\\n          41,\\n          42,\\n          56,\\n          35,\\n          43,\\n          35,\\n          49,\\n          40,\\n          286,\\n          64,\\n          46,\\n          128,\\n          65,\\n          49,\\n          42,\\n          48,\\n          60,\\n          34,\\n          31,\\n          37,\\n          35,\\n          31,\\n          40,\\n          39,\\n          29,\\n          34,\\n          78,\\n          31,\\n          39,\\n          37,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          65,\\n          102,\\n          90,\\n          100,\\n          106,\\n          100,\\n          120,\\n          136,\\n          94,\\n          95,\\n          143,\\n          112,\\n          109,\\n          108,\\n          97,\\n          99,\\n          85,\\n          87,\\n          110,\\n          82,\\n          96,\\n          95,\\n          74,\\n          129,\\n          140,\\n          124,\\n          127,\\n          85,\\n          128,\\n          122,\\n          105,\\n          121,\\n          117,\\n          107,\\n          80,\\n          100,\\n          76,\\n          121,\\n          119,\\n          87,\\n          101,\\n          92,\\n          71,\\n          90,\\n          81,\\n          73,\\n          76,\\n          82,\\n          66,\\n          91,\\n          71,\\n          81,\\n          101,\\n          100,\\n          85,\\n          88,\\n          105,\\n          123,\\n          110,\\n          100,\\n          113,\\n          91,\\n          76,\\n          118,\\n          129,\\n          123,\\n          128,\\n          112,\\n          122,\\n          108,\\n          114,\\n          120,\\n          136,\\n          123,\\n          116,\\n          106,\\n          100,\\n          135,\\n          194,\\n          163,\\n          106,\\n          152,\\n          135,\\n          164,\\n          197,\\n          173,\\n          147,\\n          158,\\n          121,\\n          110,\\n          93,\\n          123,\\n          128,\\n          125,\\n          117,\\n          141,\\n          137,\\n          113,\\n          128,\\n          142,\\n          133,\\n          109,\\n          143,\\n          130,\\n          124,\\n          119,\\n          107,\\n          150,\\n          110,\\n          123,\\n          135,\\n          147,\\n          186,\\n          181,\\n          184,\\n          154,\\n          156,\\n          159,\\n          124,\\n          121,\\n          111,\\n          129,\\n          137,\\n          126,\\n          144,\\n          153,\\n          119,\\n          124,\\n          163,\\n          130,\\n          134,\\n          126,\\n          128,\\n          114,\\n          112,\\n          97,\\n          100,\\n          113,\\n          104,\\n          109,\\n          118,\\n          157,\\n          163,\\n          201,\\n          186,\\n          240,\\n          209,\\n          203,\\n          214,\\n          170,\\n          173,\\n          150,\\n          169,\\n          152,\\n          155,\\n          179,\\n          213,\\n          187,\\n          184,\\n          158,\\n          133,\\n          96,\\n          70,\\n          70,\\n          58,\\n          30,\\n          16,\\n          19,\\n          61,\\n          47,\\n          64,\\n          70,\\n          108,\\n          126,\\n          105,\\n          109,\\n          94,\\n          97,\\n          75,\\n          99,\\n          81,\\n          61,\\n          75,\\n          93,\\n          83,\\n          70,\\n          92,\\n          79,\\n          80,\\n          100,\\n          88,\\n          83,\\n          98,\\n          88,\\n          86,\\n          90,\\n          104,\\n          96,\\n          98,\\n          113,\\n          142,\\n          137,\\n          143,\\n          125,\\n          152,\\n          114,\\n          128,\\n          111,\\n          110,\\n          77,\\n          118,\\n          106,\\n          114,\\n          140,\\n          115,\\n          126,\\n          133,\\n          126,\\n          108,\\n          173,\\n          166,\\n          136,\\n          120,\\n          109,\\n          123,\\n          127,\\n          138,\\n          112,\\n          108,\\n          108,\\n          180,\\n          162,\\n          137,\\n          107,\\n          139,\\n          123,\\n          117,\\n          106,\\n          130,\\n          113,\\n          90,\\n          108,\\n          111,\\n          130,\\n          100,\\n          129,\\n          126,\\n          123,\\n          148,\\n          127,\\n          108,\\n          127,\\n          142,\\n          99,\\n          136,\\n          131,\\n          123,\\n          138,\\n          137,\\n          137,\\n          139,\\n          138,\\n          151,\\n          164,\\n          168,\\n          179,\\n          159,\\n          145,\\n          134,\\n          147,\\n          112,\\n          116,\\n          138,\\n          115,\\n          136,\\n          117,\\n          130,\\n          150,\\n          162,\\n          103,\\n          133,\\n          123,\\n          117,\\n          105,\\n          117,\\n          128,\\n          135,\\n          132,\\n          146,\\n          166,\\n          157,\\n          187,\\n          157,\\n          143,\\n          176,\\n          151,\\n          183,\\n          154,\\n          136,\\n          130,\\n          131,\\n          150,\\n          154,\\n          146,\\n          4,\\n          3,\\n          5,\\n          0,\\n          3,\\n          3,\\n          5,\\n          4,\\n          3,\\n          3,\\n          0,\\n          5,\\n          3,\\n          4,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          0,\\n          4,\\n          0,\\n          6,\\n          6,\\n          5,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n      ],\\n    },\\n  }\\n  return (\\n    <Timebar\\n      start={\\'2017-12-01T00:00:00.000Z\\'}\\n      end={new Date().toISOString()}\\n      absoluteStart={\\'2017-12-01T00:00:00.000Z\\'}\\n      absoluteEnd={new Date().toISOString()}\\n      bookmarkStart={null}\\n      bookmarkEnd={null}\\n      onChange={d => console.log(d)}\\n      onBookmarkChange={d => console.log(d)}\\n      // enablePlayback\\n    >\\n      {props => (\\n        <TimebarEvents {...props} events={eventsMock} showFishing={false} />\\n      )}\\n    </Timebar>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      PropsTable,\n      Timebar,\n      TimebarEvents\n    }} __codesandbox={``} mdxType=\"Playground\">\n  {() => {\n        const eventsMock = {\n          start: '2014-01-01T00:00:00.000Z',\n          end: '2018-12-27T00:00:00.000Z',\n          offset: 'day',\n          series: {\n            labels: ['encounter', 'fishing', 'gap', 'port'],\n            counts: [[36, 36, 24, 16, 16, 8, 22, 28, 22, 26, 36, 32, 68, 40, 30, 32, 44, 52, 56, 18, 34, 30, 32, 32, 24, 26, 34, 24, 34, 30, 62, 36, 26, 38, 26, 26, 14, 26, 26, 20, 32, 36, 42, 36, 22, 32, 32, 34, 32, 38, 38, 22, 28, 22, 12, 14, 14, 14, 16, 20, 10, 18, 28, 14, 28, 40, 32, 52, 24, 34, 24, 34, 24, 34, 22, 26, 28, 12, 16, 26, 18, 12, 14, 28, 32, 26, 28, 14, 34, 14, 14, 20, 22, 16, 16, 16, 22, 28, 20, 26, 20, 26, 32, 54, 38, 20, 38, 22, 20, 8, 16, 16, 8, 4, 8, 12, 12, 16, 16, 24, 18, 12, 20, 22, 22, 36, 40, 20, 42, 18, 16, 26, 28, 38, 26, 28, 12, 8, 10, 8, 8, 16, 16, 16, 24, 20, 20, 26, 8, 24, 10, 16, 32, 22, 6, 20, 18, 16, 14, 24, 22, 24, 22, 16, 14, 14, 28, 20, 24, 16, 14, 20, 34, 26, 32, 16, 20, 16, 22, 14, 14, 22, 24, 20, 10, 12, 14, 14, 24, 34, 32, 32, 38, 16, 20, 24, 22, 26, 22, 10, 18, 22, 12, 24, 14, 14, 28, 26, 30, 28, 24, 24, 24, 10, 16, 16, 8, 16, 24, 20, 30, 12, 16, 36, 20, 22, 12, 20, 32, 28, 32, 18, 32, 8, 6, 26, 14, 28, 20, 18, 22, 18, 16, 14, 14, 6, 18, 22, 14, 10, 18, 18, 20, 14, 20, 26, 16, 22, 20, 10, 10, 20, 14, 20, 16, 10, 26, 18, 14, 20, 12, 22, 28, 16, 22, 26, 12, 22, 12, 14, 20, 14, 12, 16, 14, 16, 12, 12, 14, 32, 26, 36, 26, 20, 44, 22, 28, 22, 24, 18, 12, 10, 24, 20, 32, 12, 22, 18, 26, 34, 26, 18, 16, 26, 12, 16, 12, 10, 22, 18, 30, 22, 28, 18, 20, 16, 14, 10, 12, 8, 14, 12, 10, 10, 12, 8, 12, 14, 18, 20, 28, 24, 38, 18, 20, 6, 16, 14, 6, 20, 6, 8, 16, 8, 24, 32, 36, 20, 24, 22, 36, 36, 40, 40, 34, 32, 28, 34, 28, 34, 24, 50, 70, 54, 46, 20, 46, 40, 38, 44, 38, 38, 40, 20, 24, 16, 30, 52, 54, 34, 42, 36, 24, 24, 20, 56, 30, 50, 30, 22, 26, 30, 20, 4, 20, 16, 14, 20, 12, 22, 34, 34, 34, 30, 36, 42, 20, 20, 12, 14, 20, 8, 12, 16, 8, 26, 26, 20, 24, 20, 20, 24, 16, 38, 20, 12, 10, 14, 18, 8, 2, 14, 8, 0, 10, 6, 18, 18, 10, 12, 10, 6, 14, 4, 18, 20, 24, 24, 18, 22, 22, 12, 6, 6, 8, 2, 0, 4, 2, 4, 2, 10, 12, 8, 4, 6, 8, 6, 8, 6, 4, 4, 10, 10, 4, 8, 22, 22, 10, 12, 18, 14, 6, 0, 4, 6, 10, 6, 8, 12, 8, 2, 16, 12, 4, 2, 10, 6, 0, 12, 8, 14, 2, 14, 22, 16, 24, 18, 20, 36, 18, 12, 10, 8, 16, 0, 0, 0, 2, 6, 2, 6, 4, 8, 6, 6, 4, 6, 2, 4, 0, 6, 6, 4, 6, 8, 10, 6, 12, 16, 10, 4, 6, 2, 8, 0, 6, 4, 4, 10, 18, 16, 14, 6, 0, 8, 2, 8, 14, 12, 10, 6, 10, 10, 12, 20, 16, 28, 8, 12, 8, 4, 2, 2, 6, 8, 4, 8, 4, 2, 4, 0, 4, 2, 2, 2, 2, 0, 4, 4, 6, 14, 8, 12, 18, 26, 18, 10, 18, 10, 14, 14, 14, 4, 2, 2, 4, 2, 4, 6, 4, 6, 22, 8, 8, 24, 14, 6, 8, 8, 8, 8, 14, 6, 18, 18, 16, 32, 24, 52, 18, 18, 8, 4, 2, 0, 4, 2, 10, 14, 6, 16, 14, 6, 18, 4, 12, 10, 8, 8, 12, 8, 8, 6, 10, 18, 10, 6, 12, 6, 14, 4, 16, 10, 4, 12, 14, 12, 22, 20, 14, 18, 20, 8, 12, 18, 6, 4, 10, 10, 16, 14, 14, 6, 14, 14, 6, 2, 10, 12, 8, 4, 8, 6, 2, 6, 2, 6, 4, 28, 10, 12, 20, 30, 24, 24, 32, 30, 22, 16, 26, 18, 18, 24, 14, 20, 30, 22, 8, 0, 16, 22, 18, 10, 24, 16, 4, 8, 12, 10, 10, 10, 8, 8, 20, 14, 18, 24, 24, 28, 30, 20, 40, 36, 32, 56, 54, 60, 56, 28, 16, 28, 30, 22, 22, 14, 62, 40, 42, 68, 60, 56, 64, 32, 50, 34, 14, 24, 20, 24, 38, 42, 60, 46, 52, 42, 30, 28, 12, 16, 14, 22, 16, 12, 18, 38, 16, 30, 24, 16, 20, 10, 14, 14, 30, 30, 16, 30, 14, 50, 52, 64, 66, 64, 54, 44, 46, 52, 52, 34, 40, 30, 36, 28, 34, 22, 34, 20, 20, 20, 22, 18, 16, 30, 16, 24, 28, 22, 24, 34, 42, 50, 62, 44, 46, 44, 34, 20, 32, 32, 20, 28, 20, 20, 32, 20, 12, 16, 16, 24, 6, 18, 22, 26, 16, 12, 22, 10, 18, 38, 58, 44, 44, 44, 44, 24, 18, 14, 12, 12, 12, 10, 18, 10, 24, 14, 18, 22, 10, 20, 18, 18, 6, 22, 20, 26, 10, 24, 28, 24, 34, 68, 32, 28, 24, 18, 30, 32, 16, 12, 24, 22, 10, 12, 36, 28, 52, 28, 14, 6, 10, 8, 16, 10, 12, 38, 32, 34, 24, 28, 46, 36, 32, 38, 18, 22, 18, 14, 20, 24, 16, 20, 10, 28, 42, 36, 30, 20, 18, 26, 16, 24, 20, 38, 52, 40, 34, 46, 42, 24, 48, 62, 60, 76, 30, 36, 32, 42, 32, 48, 30, 32, 42, 32, 22, 20, 14, 38, 40, 32, 46, 32, 42, 22, 30, 24, 24, 30, 44, 26, 38, 28, 6, 40, 22, 32, 28, 32, 44, 48, 38, 50, 92, 50, 38, 44, 42, 22, 30, 32, 34, 34, 72, 46, 60, 28, 44, 76, 78, 72, 60, 68, 72, 32, 24, 28, 38, 32, 42, 34, 38, 44, 22, 30, 28, 20, 24, 24, 16, 26, 28, 16, 16, 26, 14, 28, 44, 48, 48, 36, 32, 46, 24, 20, 20, 20, 24, 38, 50, 24, 42, 46, 24, 44, 26, 20, 30, 16, 18, 28, 22, 20, 18, 36, 42, 42, 34, 60, 56, 54, 26, 52, 40, 44, 90, 66, 78, 70, 58, 66, 26, 42, 38, 58, 114, 122, 120, 90, 72, 38, 80, 60, 62, 58, 58, 30, 66, 58, 46, 34, 50, 26, 46, 32, 40, 26, 18, 22, 98, 82, 118, 162, 130, 94, 128, 80, 54, 90, 138, 140, 144, 98, 150, 140, 150, 166, 118, 128, 112, 96, 62, 26, 36, 18, 62, 36, 76, 44, 54, 32, 36, 28, 26, 28, 24, 20, 22, 12, 28, 24, 14, 24, 34, 32, 32, 30, 38, 30, 30, 24, 20, 20, 22, 28, 16, 28, 34, 26, 10, 8, 14, 16, 16, 22, 20, 8, 26, 18, 24, 18, 18, 12, 16, 18, 32, 50, 46, 54, 38, 38, 34, 26, 22, 26, 32, 26, 30, 22, 12, 18, 20, 12, 28, 10, 14, 16, 14, 16, 18, 24, 12, 26, 32, 24, 60, 90, 62, 52, 34, 32, 24, 12, 12, 10, 20, 10, 8, 22, 12, 22, 20, 8, 14, 10, 16, 14, 14, 10, 12, 14, 4, 14, 28, 48, 42, 42, 32, 24, 14, 14, 8, 10, 8, 18, 20, 30, 14, 10, 12, 16, 28, 26, 18, 10, 16, 20, 18, 12, 20, 16, 16, 32, 38, 50, 36, 48, 32, 32, 40, 34, 26, 16, 14, 46, 40, 48, 12, 20, 14, 22, 22, 26, 30, 24, 12, 44, 36, 32, 32, 52, 48, 40, 48, 80, 96, 60, 74, 62, 42, 26, 38, 18, 34, 44, 36, 36, 26, 34, 30, 14, 10, 18, 14, 18, 18, 4, 12, 18, 20, 24, 28, 32, 50, 62, 82, 78, 72, 58, 58, 68, 90, 68, 22, 32, 22, 42, 22, 26, 70, 42, 48, 40, 42, 36, 30, 32, 14, 38, 38, 44, 46, 44, 42, 76, 70, 62, 48, 84, 28, 42, 34, 42, 44, 38, 56, 62, 86, 56, 62, 90, 64, 78, 82, 50, 54, 50, 46, 42, 56, 46, 66, 100, 84, 106, 68, 56, 38, 36, 24, 40, 50, 34, 24, 68, 48, 40, 50, 38, 64, 52, 50, 36, 40, 52, 62, 86, 48, 58, 46, 48, 38, 58, 64, 38, 54, 48, 24, 28, 24, 36, 40, 16, 32, 32, 22, 36, 54, 56, 70, 62, 48, 30, 54, 44, 20, 42, 44, 40, 36, 50, 24, 42, 64, 54, 40, 22, 32, 26, 32, 42, 52, 80, 74, 52, 30, 58, 42, 34, 72, 66, 64, 68, 72, 72, 64, 138, 144, 146, 140, 166, 126, 134, 118, 130, 82, 54, 62, 64, 70, 68, 52, 32, 28, 54, 62, 70, 78, 84, 68, 54, 24, 40, 38, 40, 26, 42, 36, 36, 48, 26, 60, 64, 60, 48, 46, 58, 78, 88, 68, 54, 42, 66, 46, 38, 64, 40, 38, 36, 32, 44, 104, 144, 146, 100, 64, 30, 24, 44, 68, 42, 84, 62, 58, 40, 24, 16, 22, 24, 30, 28, 22, 38, 16, 14, 20, 24, 16, 18, 16, 6, 18, 16, 24, 20, 28, 22, 32, 54, 72, 96, 78, 66, 102, 52, 28, 26, 16, 36, 26, 24, 12, 18, 22, 18, 16, 14, 32, 10, 12, 16, 8, 14, 12, 18, 14, 34, 34, 54, 70, 64, 68, 52, 38, 36, 26, 32, 32, 18, 36, 34, 14, 14, 30, 20, 34, 78, 30, 16, 20, 12, 26, 12, 22, 20, 32, 20, 26, 86, 68, 68, 68, 56, 56, 26, 44, 54, 54, 40, 56, 28, 42, 42, 50, 36, 40, 58, 32, 42, 18, 40, 34, 38, 46, 34, 80, 82, 86, 58, 64, 78, 64, 46, 48, 52, 30, 40, 64, 88, 60, 50, 42, 38, 36, 20, 30, 42, 34, 36, 24, 34, 46, 54, 50, 30, 54, 44, 86, 84, 96, 78, 58, 58, 40, 48, 38, 60, 74, 84, 66, 52, 42, 44, 32, 52, 52, 48, 42, 60, 50, 48, 68, 46, 60, 66, 68, 92, 96, 104, 80, 104, 104, 80, 68, 50, 70, 56, 66, 56, 36, 26, 32, 30, 20, 40, 46, 36, 44, 32, 30, 28, 36, 44, 52, 76, 34, 40, 54, 58, 70, 60, 78, 64, 44, 48, 42, 26, 52, 62, 62, 60, 38, 46, 62, 46, 34, 28, 36, 28, 22, 56, 40, 58, 34, 44, 56, 54, 66, 72, 58, 54, 40, 56, 38, 32, 42, 28, 40, 50, 20, 20, 32, 38, 26, 34, 26, 36, 42, 54, 52, 56, 28, 20, 24, 36, 40, 54, 76, 54, 44, 38, 56, 50], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1414, 1343, 1385, 1471, 1444, 1477, 1321, 1405, 1383, 1388, 1426, 1458, 1514, 1504, 1527, 1517, 1599, 1513, 1486, 1500, 1247, 1435, 1547, 1498, 1378, 1407, 1443, 1381, 1401, 1357, 1414, 1093, 1004, 859, 979, 973, 1038, 985, 1059, 1154, 1306, 1483, 1509, 1482, 1527, 1591, 1616, 1607, 1581, 1543, 1469, 1453, 1419, 1392, 1403, 1533, 1621, 1625, 1653, 1658, 1625, 1607, 1626, 1634, 1637, 1573, 1546, 1472, 1473, 1501, 1527, 1580, 1627, 1791, 1894, 1933, 2013, 2272, 2378, 2425, 2381, 2328, 2343, 2283, 2298, 1989, 1862, 1851, 1756, 1811, 1985, 2213, 2242, 2316, 2370, 2305, 2318, 2243, 2308, 2425, 2385, 2534, 2597, 2570, 2624, 2587, 2652, 2631, 2709, 2631, 2654, 2681, 2674, 2571, 2431, 2414, 2483, 2444, 2372, 2482, 2377, 2227, 2150, 2104, 2150, 1999, 2145, 2244, 2288, 2382, 2508, 2591, 2526, 2587, 2613, 2587, 2610, 2615, 2586, 2581, 2574, 2618, 2566, 2582, 2638, 2699, 2676, 2855, 2812, 2719, 2686, 2555, 2328, 2253, 2189, 2066, 2065, 2156, 2076, 2155, 2176, 2130, 2048, 1903, 1870, 1842, 1798, 1719, 1678, 1629, 1623, 1481, 1446, 1601, 1597, 1588, 1633, 1588, 1580, 1520, 1457, 1475, 1453, 1410, 1409, 1355, 1369, 1496, 1618, 1688, 1776, 1800, 1813, 1894, 1977, 2049, 2029, 2060, 2082, 2158, 2208, 2255, 2326, 2245, 2172, 2150, 2274, 2162, 2028, 1986, 1885, 1796, 1829, 1842, 1861, 1870, 1928, 2018, 2030, 1733, 1754, 1802, 1864, 1836, 1864, 1885, 1929, 1876, 1902, 1929, 1932, 1952, 1926, 1901, 1820, 1859, 1763, 1777, 1696, 1615, 1606, 1562, 1568, 1562, 1559, 1611, 1547, 1583, 1646, 1553, 1446, 1550, 1564, 1591, 1577, 1593, 1582, 1537, 1707, 1728, 1631, 1736, 1694, 1723, 1707, 1680, 1713, 1722, 1577, 1581, 1538, 1538, 1563, 1599, 1532, 1600, 1616, 1443, 1704, 1639, 1766, 1797, 1875, 1825, 1861, 1904, 1888, 1931, 1994, 1997, 2008, 2047, 2036, 1931, 1897, 1847, 1854, 1881, 1846, 1650, 1627, 1562, 1532, 1536, 1556, 1522, 1564, 1694, 1788, 1957, 2006, 2190, 2314, 2308, 2246, 1881, 1860, 1804, 2131, 2167, 2058, 2120, 2154, 1863, 1885, 1891, 1950, 1903, 1778, 1757, 1672, 1597, 1561, 1612, 1711, 1790, 1855, 1942, 1888, 1877, 1924, 2030, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 23, 22, 38, 34, 22, 19, 22, 22, 19, 30, 20, 12, 17, 22, 19, 18, 19, 22, 23, 29, 27, 22, 22, 28, 18, 17, 24, 19, 14, 25, 10, 17, 12, 26, 23, 17, 19, 24, 25, 27, 17, 27, 23, 20, 25, 30, 23, 27, 25, 28, 31, 34, 32, 27, 33, 28, 32, 23, 21, 28, 22, 33, 21, 21, 85, 190, 119, 31, 37, 58, 135, 41, 41, 46, 37, 35, 27, 39, 31, 111, 45, 27, 30, 57, 52, 66, 55, 32, 31, 43, 40, 38, 41, 39, 38, 65, 39, 46, 65, 49, 75, 61, 43, 40, 92, 55, 62, 41, 75, 62, 51, 73, 242, 46, 41, 51, 50, 54, 57, 51, 46, 52, 46, 51, 63, 43, 54, 38, 55, 77, 43, 53, 48, 90, 54, 61, 53, 30, 53, 79, 194, 58, 46, 64, 47, 54, 56, 42, 60, 42, 48, 37, 53, 41, 55, 52, 40, 43, 39, 35, 23, 35, 28, 24, 21, 31, 39, 22, 33, 28, 30, 24, 33, 20, 26, 28, 29, 21, 25, 20, 37, 33, 36, 21, 28, 38, 33, 35, 45, 33, 38, 41, 45, 43, 46, 36, 40, 29, 29, 43, 41, 37, 42, 39, 39, 42, 35, 37, 34, 35, 53, 38, 39, 35, 33, 38, 57, 80, 46, 50, 50, 40, 45, 44, 58, 61, 59, 44, 48, 40, 45, 39, 38, 34, 56, 44, 36, 32, 49, 38, 41, 50, 41, 45, 46, 41, 42, 44, 57, 47, 38, 105, 47, 57, 51, 43, 53, 36, 45, 59, 45, 68, 70, 57, 49, 56, 40, 52, 52, 37, 52, 51, 57, 35, 56, 59, 46, 63, 47, 46, 45, 46, 46, 44, 46, 43, 45, 42, 37, 50, 46, 35, 45, 43, 34, 42, 43, 45, 40, 60, 39, 56, 76, 41, 42, 56, 35, 43, 35, 49, 40, 286, 64, 46, 128, 65, 49, 42, 48, 60, 34, 31, 37, 35, 31, 40, 39, 29, 34, 78, 31, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 102, 90, 100, 106, 100, 120, 136, 94, 95, 143, 112, 109, 108, 97, 99, 85, 87, 110, 82, 96, 95, 74, 129, 140, 124, 127, 85, 128, 122, 105, 121, 117, 107, 80, 100, 76, 121, 119, 87, 101, 92, 71, 90, 81, 73, 76, 82, 66, 91, 71, 81, 101, 100, 85, 88, 105, 123, 110, 100, 113, 91, 76, 118, 129, 123, 128, 112, 122, 108, 114, 120, 136, 123, 116, 106, 100, 135, 194, 163, 106, 152, 135, 164, 197, 173, 147, 158, 121, 110, 93, 123, 128, 125, 117, 141, 137, 113, 128, 142, 133, 109, 143, 130, 124, 119, 107, 150, 110, 123, 135, 147, 186, 181, 184, 154, 156, 159, 124, 121, 111, 129, 137, 126, 144, 153, 119, 124, 163, 130, 134, 126, 128, 114, 112, 97, 100, 113, 104, 109, 118, 157, 163, 201, 186, 240, 209, 203, 214, 170, 173, 150, 169, 152, 155, 179, 213, 187, 184, 158, 133, 96, 70, 70, 58, 30, 16, 19, 61, 47, 64, 70, 108, 126, 105, 109, 94, 97, 75, 99, 81, 61, 75, 93, 83, 70, 92, 79, 80, 100, 88, 83, 98, 88, 86, 90, 104, 96, 98, 113, 142, 137, 143, 125, 152, 114, 128, 111, 110, 77, 118, 106, 114, 140, 115, 126, 133, 126, 108, 173, 166, 136, 120, 109, 123, 127, 138, 112, 108, 108, 180, 162, 137, 107, 139, 123, 117, 106, 130, 113, 90, 108, 111, 130, 100, 129, 126, 123, 148, 127, 108, 127, 142, 99, 136, 131, 123, 138, 137, 137, 139, 138, 151, 164, 168, 179, 159, 145, 134, 147, 112, 116, 138, 115, 136, 117, 130, 150, 162, 103, 133, 123, 117, 105, 117, 128, 135, 132, 146, 166, 157, 187, 157, 143, 176, 151, 183, 154, 136, 130, 131, 150, 154, 146, 4, 3, 5, 0, 3, 3, 5, 4, 3, 3, 0, 5, 3, 4, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 4, 0, 6, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n          }\n        };\n        return <Timebar start={'2017-12-01T00:00:00.000Z'} end={new Date().toISOString()} absoluteStart={'2017-12-01T00:00:00.000Z'} absoluteEnd={new Date().toISOString()} bookmarkStart={null} bookmarkEnd={null} onChange={d => console.log(d)} onBookmarkChange={d => console.log(d)} // enablePlayback\n        mdxType=\"Timebar\">\n      {props => <TimebarEvents {...props} events={eventsMock} showFishing={false} mdxType=\"TimebarEvents\" />}\n    </Timebar>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timebar\":\"timebar_Timebar__-q5ws\",\"uiButton\":\"timebar_uiButton__1pGcZ\",\"timeActions\":\"timebar_timeActions__1jwtD\",\"timeRange\":\"timebar_timeRange__25ePV\",\"timeScale\":\"timebar_timeScale__1EYoC\",\"timeRangeContainer\":\"timebar_timeRangeContainer__1gQvz\",\"playbackActions\":\"timebar_playbackActions__3ctOt\",\"bookmark\":\"timebar_bookmark__3v9ew\"};"],"sourceRoot":""}