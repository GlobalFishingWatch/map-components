(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports={version:8,glyphs:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true",sprite:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites",metadata:{"mapbox:groups":{"basemap-background":{name:"basemap-background"},static:{name:"static"},temporal:{name:"temporal"},tracks:{name:"tracks"},"basemap-foreground":{name:"basemap-foreground"}},"gfw:basemap-layers":[{id:"satellite",label:"Satellite"},{id:"north-star",label:"North Star"},{id:"labels",isOption:!0},{id:"graticules",isOption:!0},{id:"bathymetry",isOption:!0}],"gfw:styles":{selected:{fill:{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},circle:{"circle-stroke-width":[2,.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},highlighted:{circle:{"circle-stroke-color":["#fff","#000"]}}}},sources:{6:{metadata:{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{id:"nama"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},satellite:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256,attribution:"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href='https://www.google.com/intl/en-GB_US/help/terms_maps.html'>Terms of Use</a><br>"},"north-star":{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},labels:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},graticules:{metadata:{"gfw:carto-sql":"select * from graticules where scalerank=4"},type:"vector"},bathymetry:{metadata:{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},type:"vector"},mpant:{metadata:{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},mparu:{metadata:{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},eez:{metadata:{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, 'eez:' || mrgid as region_id, geoname as reporting_name, 'eez:' || mrgid as reporting_id FROM eez","gfw:popups":[{id:"name"}]},type:"vector",attribution:"EEZs: marineregions.org"},highseas:{metadata:{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{id:"regionid"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},protectedplanet:{metadata:{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector",attribution:"MPAs: www.protectedplanet.net"},rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, 'rfmo:' || rfb as reporting_id, 'rfmo:' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{id:"rfb"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},cp_rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, id, id as rfb FROM carrier_portal_rfmo_hi_res","gfw:popups":[{id:"rfb"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},bluefin_rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id FROM bluefin_rfmo"},type:"vector"},falklands_conservation:{metadata:{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{id:"full_name"},{id:"zone"},{id:"area_sqkm"}]},type:"vector"},encounters_ais:{type:"vector",tiles:[]},events_fishing:{type:"vector",tiles:["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},events_encounter:{type:"vector",tiles:["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_gap:{type:"vector",tiles:["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_port:{type:"vector",tiles:["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/port/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_encounter_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_gap_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_port_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},rulers:{type:"geojson",data:{type:"FeatureCollection",features:[]}},"rulers-points":{type:"geojson",data:{type:"FeatureCollection",features:[]}}},layers:[{id:"background",metadata:{"mapbox:group":"basemap-background"},type:"background",layout:{visibility:"visible"},paint:{"background-color":"#001436"}},{id:"satellite",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"satellite",layout:{visibility:"visible"}},{id:"north-star",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"north-star"},{id:"bathymetry",metadata:{"mapbox:group":"basemap-background"},type:"fill",source:"bathymetry","source-layer":"bathymetry",paint:{"fill-color":["step",["get","depth"],"#1e346c",1e3,"#1a2f63",2e3,"#142655",3e3,"#101f4a",4e3,"#0d1b43",5e3,"#0a163b",6e3,"#061132",7e3,"#030d2a",8e3,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{id:"mpant",metadata:{"mapbox:group":"static"},type:"fill",source:"mpant","source-layer":"mpant"},{id:"mpant-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mpant","source-layer":"mpant",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"mparu",metadata:{"mapbox:group":"static"},type:"fill",source:"mparu","source-layer":"mparu"},{id:"mparu-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mparu","source-layer":"mparu",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"eez",metadata:{"mapbox:group":"static"},type:"fill",source:"eez","source-layer":"eez"},{id:"eez-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"eez","source-layer":"eez",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"highseas",metadata:{"mapbox:group":"static"},type:"fill",source:"highseas","source-layer":"highseas"},{id:"highseas-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"highseas","source-layer":"highseas",layout:{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"rfmo","source-layer":"rfmo"},{id:"cp_rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"cp_rfmo","source-layer":"cp_rfmo"},{id:"bluefin_rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"bluefin_rfmo","source-layer":"bluefin_rfmo"},{id:"rfmo-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"rfmo","source-layer":"rfmo",layout:{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"6",metadata:{"mapbox:group":"static"},type:"fill",source:"6","source-layer":"6"},{id:"6-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"6","source-layer":"6",layout:{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"protectedplanet",metadata:{"mapbox:group":"static"},type:"fill",source:"protectedplanet","source-layer":"protectedplanet"},{id:"protectedplanet-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"protectedplanet","source-layer":"protectedplanet",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"falklands_conservation",metadata:{"mapbox:group":"static"},type:"fill",source:"falklands_conservation","source-layer":"falklands_conservation"},{id:"falklands_conservation-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"falklands_conservation","source-layer":"falklands_conservation",layout:{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"events_fishing",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_fishing","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_encounter","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"encounters_ais",type:"circle",source:"encounters_ais","source-layer":"points",metadata:{"gfw:temporal":!0,"gfw:temporalField":"timeIndex","mapbox:group":"temporal"},paint:{"circle-color":"#e5647d","circle-radius":3,"circle-opacity":.9,"circle-stroke-opacity":0}},{id:"encounters_ais_outline",type:"circle",source:"encounters_ais","source-layer":"points",metadata:{"gfw:temporal":!0,"gfw:temporalField":"timeIndex","gfw:mainColorPaintProperty":"circle-stroke-color","mapbox:group":"temporal"},paint:{"circle-color":"hsla(0, 0%, 0%, 0)","circle-stroke-color":"#e5647d","circle-stroke-width":1,"circle-radius":6}},{id:"events_gap",type:"circle",source:"events_gap","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_port",type:"circle",source:"events_port","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter_vessel",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["encounter_highlight","encounter"]}}},layout:{"icon-image":"encounter","icon-allow-overlap":!0}},{id:"events_encounter_vessel_number",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_gap_vessel",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["gap_highlight","gap"]}}},layout:{"icon-image":"gap","icon-allow-overlap":!0}},{id:"events_gap_vessel_number",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_port_vessel",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["port_highlight","port"]}}},layout:{"icon-image":"port","icon-allow-overlap":!0}},{id:"events_port_vessel_number",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"graticules-lines",metadata:{"mapbox:group":"basemap-foreground"},type:"line",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],paint:{"line-color":"#174084","line-opacity":{base:1,stops:[[0,.7],[8,.7],[9,.2]]},"line-width":.5}},{id:"graticules-labels",metadata:{"mapbox:group":"basemap-foreground"},type:"symbol",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],layout:{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{base:1,stops:[[3,500],[8,1e3]]},"text-size":{base:1,stops:[[3,7],[7,12]]},"text-letter-spacing":.2},paint:{"text-color":"hsl(0, 0%, 100%)","text-halo-width":.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{base:1,stops:[[0,1],[8,1],[9,0]]}}},{id:"labels",metadata:{"mapbox:group":"basemap-foreground"},type:"raster",source:"labels"},{id:"rulers",source:"rulers",type:"line",metadata:{"mapbox:group":"tools"},paint:{"line-dasharray":[2,1],"line-width":["case",["==",["get","isNew"],!0],1.5,1]}},{id:"ruler-labels",source:"rulers",type:"symbol",layout:{"text-field":"{label}","symbol-placement":"line","text-allow-overlap":!0,"text-offset":[0,-.8],"text-font":["case",["==",["get","isNew"],!0],["literal",["Roboto Medium"]],["literal",["Roboto Mono Light"]]],"text-size":["case",["==",["get","isNew"],!0],13,12]},metadata:{"mapbox:group":"tools"}},{id:"rulers-points",source:"rulers-points",type:"circle",paint:{"circle-radius":["case",["==",["get","isNew"],!0],6,3],"circle-opacity":1,"circle-stroke-opacity":0}}]}},"./src/map/glmap/map.css":function(e,t,r){e.exports={map:"map_map__1TLha",googleLogo:"map_googleLogo__3lQ1y"}},"./src/map/lib/Pack.js":function(e,t,r){"use strict";var o={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},n=function(e,t,r,o,n){void 0==r&&(r=e.length),void 0==t&&(t=0),void 0==n&&(n=t);for(var a=t;a<r;a++)o[a-t+n]=255&e.charCodeAt(a)},a=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},i={typemap:{byname:o,byarray:{}},pack:function(e,t,r){var o=new ArrayBuffer(e.size);return new DataView(o)[e.setter](0,t,r),a(o)},arrayBufferToString:a,stringToArrayBuffer:function(e,t,r){void 0==r&&(r=e.length),void 0==t&&(t=0);var o=new Uint8ClampedArray(r-t);return n(e,t,r,o,0),o.buffer},writeStringToArrayBuffer:n};for(var s in i.typemap.byname){var l=i.typemap.byname[s];l.name=s,i.typemap.byarray[l.array]=l}t.a=i},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Pack__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/map/lib/Pack.js");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PelagosClient=function(){function PelagosClient(){_classCallCheck(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return _createClass(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(r,o){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=r,this.reject=o,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient},"./src/map/map.mdx":function(e,t,r){"use strict";r.r(t);var o=r("./node_modules/react/index.js"),n=r.n(o),a=r("./node_modules/@mdx-js/tag/dist/index.js"),i=r("./node_modules/docz/dist/index.m.js"),s=r("./node_modules/redux/es/redux.js"),l=r("./node_modules/react-redux/es/index.js"),c=r("./node_modules/lodash/throttle.js"),u=r.n(c),p=r("./node_modules/prop-types/index.js"),d=r.n(p),A={id:d.a.string.isRequired,url:d.a.string,data:d.a.object,color:d.a.string,type:d.a.oneOf(["geojson","pelagos",void 0]),layerTemporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),fitBoundsOnLoad:d.a.bool},g=(d.a.string.isRequired,d.a.string,d.a.string,d.a.bool,d.a.number,d.a.number,d.a.arrayOf(d.a.shape({hue:d.a.number,filterValues:d.a.object})),d.a.shape({endpoints:d.a.object,colsByName:d.a.object,temporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),temporalExtentsLess:d.a.bool}).isRequired,d.a.bool,d.a.string,d.a.bool,d.a.string.isRequired,d.a.bool,d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.number,d.a.string,d.a.bool,d.a.bool,d.a.arrayOf(d.a.arrayOf(d.a.string)),d.a.bool,d.a.oneOf([void 0,"geojson","raster"]),d.a.string,d.a.object,d.a.object,d.a.node,d.a.number.isRequired,d.a.number.isRequired,d.a.number,d.a.arrayOf(d.a.number),r("./node_modules/reselect/es/index.js")),f=r("./node_modules/immutable/dist/immutable.es.js"),m=8,h=2e5,y="dot-world-fishing",w=function(e,t,r){var o=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==r?"".concat(r,"_").concat(o):o}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),r},E=function(e){return function(t,r){t({type:"COMPLETE_LOADER",payload:e});var o=r();o.map.module.loaders.length||void 0===o.map.module.onLoadComplete||o.map.module.onLoadComplete()}},v=function(e){return function(t,r){var o=r(),n=o.map.module.onViewportChange;if(void 0!==n){var a=o.map.viewport;n({interactionState:e,zoom:a.viewport.zoom,center:[a.viewport.latitude,a.viewport.longitude],bounds:a.bounds,canZoomIn:a.canZoomIn,canZoomOut:a.canZoomOut,mouseLatLong:a.mouseLatLong})}}},I=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}},B=function(e){return e.map.module.temporalExtent},b=function(e){return e.map.module.highlightTemporalExtent};function C(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function M(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){O(e,t,r[t])})}return e}function O(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var S=Object(g.a)(function(e){return e.map.tracks.data},function(e){return e.filter(function(e){return"geojson"===e.type})}),L=Object(g.a)(S,function(e){return e.filter(function(e){return void 0!==e.data})}),T=function(e,t){return{sources:M({},e.sources,t.sources),layers:[].concat(C(e.layers),C(t.layers))}},D=function(e,t){var r=t.start,o=t.end;if(!e||!e.features)return null;var n=e.features.reduce(function(e,t){if(t.properties&&t.properties.coordinateProperties&&t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var n=t.geometry.coordinates.reduce(function(e,n,a){var i=t.properties.coordinateProperties.times[a];return i>=r&&i<=o&&(e.coordinates.push(n),e.times.push(i)),e},{coordinates:[],times:[]});if(!n.coordinates.length)return e;var a=M({},t,{geometry:M({},t.geometry,{coordinates:n.coordinates}),properties:M({},t.properties,{coordinateProperties:{times:n.times}})});e.push(a)}return e},[]);return M({},e,{features:n})},k=Object(g.a)([B,L],function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"Track"),o={sources:O({},r,{type:"geojson",data:D(t.data,n)}),layers:[{id:"".concat(t.id,"Lines"),source:r,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:r,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return T(e,o)},{sources:{},layers:[]})}),Q=Object(g.a)([b,L],function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"HighlightedTrack"),o={sources:O({},r,{type:"geojson",data:D(t.data,n)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:r,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return T(e,o)},{sources:{},layers:[]})}),j=Object(g.a)([k,Q],function(e,t){return t?T(e,t):e}),R=r("./node_modules/@turf/area/index.js"),F=r.n(R),x="ZOOM",P={NORMAL:0,BULLSEYE:2},Y=0,U=1,N="geojson",G="raster",K=r("./node_modules/lodash/difference.js"),_=r.n(K),V=r("./node_modules/lodash/uniq.js"),J=r.n(V),H=r("./node_modules/lodash/uniqBy.js"),Z=r.n(H),z=r("./node_modules/lodash/pull.js"),q=r.n(z),W=r("./node_modules/lodash/sumBy.js"),X=r.n(W),$=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),ee=r("./node_modules/@globalfishingwatch/map-convert/index.js"),te=r.n(ee),re=r("./node_modules/lodash/template.js"),oe=r.n(re),ne=r("./node_modules/lodash/templateSettings.js"),ae=r.n(ne),ie=r("./src/map/lib/pelagosClient.js");function se(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var le=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=[];return(t||[null]).forEach(function(t,n){var a={};null!==t&&!0!==r.temporalExtentsLess&&(a.startTimeISO=new Date(t[0]).toISOString(),a.endTimeISO=new Date(t[1]).toISOString()),r.tileCoordinates&&(a.x=r.tileCoordinates.x,a.y=r.tileCoordinates.y,a.z=r.tileCoordinates.zoom);var i=function(e,t){return ae.a.interpolate=/{{([\s\S]+?)}}/g,oe()(e)(t)}(e,a);(!0===r.temporalExtentsLess||!r.temporalExtentsIndices||r.temporalExtentsIndices.indexOf(n)>-1)&&o.push(i)}),o},ce=function(e,t,r){for(var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=[],a=le(e,r,o),i=0,s=a.length;i<s;i++)n.push((new ie.a).obtainTile(a[i],t));return n},ue=function(e){return e.filter(function(e){return null!==e})},pe=function(e,t){var r,o={},n=X()(e,function(e){return e.longitude.length}),a=t.filter(function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)});a.forEach(function(e){o[e]=new Float32Array(n)});for(var i=0,s=function(e){o[e].set(r[e],i)},l=0,c=e.length;l<c;l++)r=e[l],a.forEach(s),i+=r.longitude.length;return o},de=function(e,t,r,o){var n=void 0===o?[]:o,a=r.zoom,i=te.a.getZoomFactorRadius(a),s=te.a.getZoomFactorRadiusRenderingMode(a),l=te.a.getZoomFactorOpacity(a),c={},u=Object.keys(t);u.forEach(function(e){c[e]=!0});var p=[].concat(u);!0===c.sigma&&p.push("radius"),!0===c.weight&&p.push("opacity"),!0===c.longitude&&(p.push("worldX"),p.push("worldY")),!0===c.id&&p.push("series"),["latitude","longitude","datetime"].forEach(function(e){void 0!==t[e]&&!0!==t[e].hidden||q()(p,e)}),q()(p,"sigma","weight"),p=J()(p);for(var d=e.latitude.length,A={},g=[],f=function(t,r){var o={};u.forEach(function(r){o[r]=e[r][t]});var n=c.timeIndex?o.timeIndex:te.a.getOffsetedTimeAtPrecision(o.datetime),a=se(Object($.d)([o.longitude,o.latitude],1),2),d=a[0],f=a[1];if(o.worldX=d,o.worldY=f,c.sigma&&(o.radius=te.a.sigmaToRadius(o.sigma,s,i)),c.weight&&(o.opacity=te.a.weightToOpacity(o.weight,l)),c.id&&(o.series=o.id),!A[n]){g.push(n);var m={};return p.forEach(function(e){m[e]=[o[e]]}),A[n]=m,"continue"}var h=A[n];p.forEach(function(e){h[e].push(o[e])})},m=0,h=d;m<h;m++)f(m);return g.forEach(function(e){n[e]=A[e]}),n},Ae=function(e){e.hasFishing=[],e.worldX=[],e.worldY=[];for(var t=0,r=e.weight.length;t<r;t++){var o=se(Object($.d)([e.longitude[t],e.latitude[t]],1),2),n=o[0],a=o[1];e.worldX[t]=n,e.worldY[t]=a,e.hasFishing[t]=e.weight[t]>0}return e},ge=function(e){for(var t=[],r=0,o=e.series.length;r<o;r++){var n=e.datetime[r],a=te.a.getOffsetedTimeAtPrecision(n);if(t[a]){var i=t[a];i.worldX.push(e.worldX[r]),i.worldY.push(e.worldY[r]),i.series.push(e.series[r]),i.hasFishing.push(e.hasFishing[r])}else{var s={worldX:[e.worldX[r]],worldY:[e.worldY[r]],series:[e.series[r]],hasFishing:[e.hasFishing[r]]};t[a]=s}}return t},fe=function(e,t,r){return Object.keys(r).every(function(o){return void 0!==e[o]&&r[o].indexOf(e[o][t])>-1})},me=function(e,t,r,o,n){for(var a=[],i=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var r=e[t];if(void 0===r)return"continue";for(var o=function(e){var o=r.worldX[e],c=r.worldY[e];if((!n.length||function(e,t,r){return r.filter(function(e){return!0!==e.pass}).some(function(r){return fe(e,t,r.filterValues)})}(r,e,n))&&o>=i-l&&o<=i+l&&c>=s-l&&c<=s+l){var u={};Object.keys(r).forEach(function(t){u[t]=r[t][e]}),u.timeIndex=t,a.push(u)}},c=0;c<r.worldX.length;c++)o(c)},u=r;u<o;u++)c(u);return a},he=r("./node_modules/@mapbox/tile-cover/index.js"),ye=r.n(he),we=r("./node_modules/lodash/debounce.js"),Ee=r.n(we),ve=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function Ie(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Be=function(e){var t=Math.ceil(e+.5),r=!0;return t>10&&(t=10,r=!1),{min_zoom:t,max_zoom:t,tilesAvailable:r}},be=function(){return function(e,t){var r=t();if(!r.map.heatmapTiles.currentToLoadTileUids.length){var o=r.map.heatmapTiles.currentToReleaseTileUids;e(Ye(o)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},Ce=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(be())}},Me=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r(),n=o.map.heatmapTiles.currentVisibleTiles,a=[],i=[];if(!0===e)a=n;else{var s=o.map.heatmapTiles.currentLoadedTiles;n.forEach(function(e){void 0===s.find(function(t){return t.uid===e.uid})&&a.push(e)}),s.forEach(function(e){void 0===n.find(function(t){return t.uid===e.uid})&&i.push(e.uid)})}var l=a.map(function(e){return e.uid});a.forEach(function(e){var r;t((r=e,function(e,t){e({type:Qe,payload:r});var o=t().map.heatmap.heatmapLayers,n=Object.keys(o).filter(function(e){return!0===o[e].visible});n.length&&e(Pe(n,[r]))}))}),t({type:"SET_CURRENTLY_LOADED_TILES",payload:n}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:i}}),t(Ue()),t(be())}},Oe=Ee()(function(e){e(Me())},500),Se=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r().map.viewport,n=o.viewport;if(n.width&&n.height&&null===o.currentTransition){var a=new ve.a(n),i=[a.unproject([0,0]),a.unproject([n.width,n.height])],s=i[0],l=i[1],c=[s[0],l[1],l[0],s[1]],u=c[0],p=c[1],d=c[2],A=c[3],g=[],f=Be(n.zoom);if(!1!==f.tilesAvailable||!0===e){if(d>180||u<-180){var m=d>180?u:u+360,h=d>180?d-360:d;g.push([[[m,A],[179.999,A],[179.999,p],[m,p],[m,A]]]),g.push([[[-180,A],[h,A],[h,p],[-180,p],[-180,A]]])}else g.push([[[u,A],[d,A],[d,p],[u,p],[u,A]]]);var y={type:"MultiPolygon",coordinates:g},w=ye.a.tiles(y,f),E=ye.a.indexes(y,f),v=[];w.forEach(function(e,t){var r=E[t];e[2]>=2&&v.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:r})}),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:v}),!1===(o.prevZoom!==n.zoom)?t(Me(e)):Oe(t)}}}},Le=function(e,t){return function(r,o){var n={type:"Point",coordinates:[e.longitude,e.latitude]},a=o().map.viewport.viewport.zoom,i=[a,a-1,a+1].map(function(e){return Be(e)}).map(function(e){return ye.a.indexes(n,e)}).map(function(e){return e[0]});r(function(e,t){return function(r,o){var n=o(),a=Ge(n,e,t),i=a.layer,s=a.isEmpty,l=a.isCluster,c=a.isMouseCluster,u=a.foundVessels;if(!0===l||void 0!==i.id||n.map.heatmap.highlightedVessels.layerId!==i.id){var p=void 0===i?null:{id:i.id,tilesetId:i.tilesetId,subtype:i.subtype,header:i.header};r({type:je,payload:{layer:p,isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:u}})}else r(Ke())}}(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ie(e,t,r[t])})}return e}({},e,{uids:i}),t))}};function Te(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){De(e,t,r[t])})}return e}function De(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ke(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Qe="ADD_REFERENCE_TILE",je="HIGHLIGHT_VESSELS",Re="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",Fe="UPDATE_HEATMAP_TILE";function xe(e,t){var r=e[0].getTime(),o=e[1].getTime(),n=[];return t.forEach(function(e,t){var a=e[0];e[1]>=r&&a<=o&&n.push(t)}),n}function Pe(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(o,n){var a=n(),i=w(o,a,e.join("-")),s=a.map.module.token,l=a.map.heatmap.heatmapLayers,c={};e.forEach(function(e){c[e]=ke(l[e].tiles)});var u=[];e.forEach(function(e){var n=l[e].header,a=Te({},n),i=a.temporalExtents,p=a.temporalExtentsLess,d=a.colsByName,A=n.endpoints.tiles;t.forEach(function(t){var n=c[e].find(function(e){return e.uid===t.uid});n||(n={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(n));var a=void 0===r?l[e].visibleTemporalExtentsIndices:r[e],g=_()(a,n.temporalExtentsIndicesLoaded),f=function(e,t,r,o,n){var a=n.url,i=n.temporalExtents,s=n.temporalExtentsLess;if(void 0===a)throw new Error("URL/endpoints object is not available on this tilesets header");var l=ce(a,r,i,{tileCoordinates:t,temporalExtentsIndices:o,temporalExtentsLess:s}),c=Promise.all(l);return new Promise(function(t){c.then(function(r){t({loadedLayerId:e,rawTileData:r})})})}(e,t.tileCoordinates,s,g,{url:A,temporalExtents:i,temporalExtentsLess:p});u.push(f),f.then(function(e){var r=e.loadedLayerId,a=e.rawTileData;n.temporalExtentsIndicesLoaded=J()(n.temporalExtentsIndicesLoaded.concat(g)),n.data=function(e,t,r,o){var n,a=ue(e);return n=pe(a,Object.keys(t)),0===Object.keys(n).length?[]:de(n,t,r,o)}(a,d,t.tileCoordinates,n.data),o({type:Fe,payload:{layerId:r,tile:n}})})})}),Promise.all(u).then(function(){o(E(i)),o(Ce(t.map(function(e){return e.uid})))})}}var Ye=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}},Ue=function(){return{type:"UPDATE_LOADED_TILES"}};function Ne(e){return function(t,r){var o=r().map.heatmap.referenceTiles;t(Pe([e],o))}}var Ge=function(e,t,r){var o=e.map.heatmap.heatmapLayers,n=r[0],a=r[1],i=[];Object.keys(o).forEach(function(e){var r=o[e];if(!0===r.visible){var s=t.uids.map(function(e){return r.tiles.find(function(t){return t.uid===e})}).filter(function(e){return void 0!==e&&void 0!==e.data}),l=r.filters;if(s.length){var c=s[0];i.push({layer:r,vessels:me(c.data,t,n,a,l)})}}});var s,l,c,u,p,d=i.filter(function(e){return e.vessels.length>0});if(0===d.length)c=!0;else if(d.length>1)s=!0;else{var A=(u=d[0]).vessels;if(0===A.length)c=!0;else A.filter(function(e){return e.id<0}).length?s=!0:l=(p=Z()(A,function(e){return e.series})).length>1}return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:p,layer:void 0===u?{}:u.layer}};function Ke(){return{type:je,payload:{isEmpty:!0,clickableCluster:!1}}}var _e=function(e,t){return function(r,o){if(null!==e){var n=o().map.heatmap.heatmapLayers;e.forEach(function(e){var o,a,i=e.id,s=n[i];void 0===s?r((o=e,a=t,function(e){var t=o.header.temporalExtents;e({type:"ADD_HEATMAP_LAYER",payload:Te({},o,{visibleTemporalExtentsIndices:xe(a,t)})}),!0===o.visible&&e(Ne(o.id))})):(s.visible!==e.visible&&!0===e.visible&&r(Ne(i)),s.visible===e.visible&&s.hue===e.hue&&s.opacity===e.opacity&&s.filters===e.filters&&s.interactive===e.interactive||r({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))}),Object.keys(n).forEach(function(t){var o;e.find(function(e){return e.id===t})||r((o=t,function(e){e({type:"REMOVE_HEATMAP_LAYER",payload:{id:o}})}))})}else console.warn("New layers in updateHeatmapLayers can't be null")}},Ve=r("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js"),Je=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(n){n({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:r,zoom:o}}),n(Se()),n(v())}},He=function(){return function(e){e({type:"TRANSITION_END"}),e(Se()),e(v())}},Ze=function(e){return function(t,r){var o=r(),n=Object(Ve.a)({bounds:[[e.minLng,e.minLat],[e.maxLng,e.maxLat]],width:o.map.viewport.viewport.width,height:o.map.viewport.viewport.height,padding:50});t(Je(null,n.latitude,n.longitude,n.zoom))}};function ze(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var qe=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=t&&void 0!==t.metadata&&void 0!==t.metadata["gfw:popups"]?t.metadata["gfw:popups"]:[],o=e.properties,n=Object.keys(e.properties).filter(function(e){return 0===r.length||void 0!==r.find(function(t){return t.id===e})}).map(function(t){var n="POLYGON_LAYERS_AREA"===t?function(e){return(Math.pow(10,-6)*F()(e.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})}(e):o[t],a=r.find(function(e){return e.id===t})||{},i=a.label||t;return{id:t,label:i,value:n,title:"".concat(i,": ").concat(n),isLink:a.isLink,isMain:a.isMain}}),a=n.find(function(e){return!0===e.isMain})||n.find(function(e){return"name"===e.id})||n.find(function(e){return"id"===e.id})||n[0];return void 0!==a&&(a.isMain=!0),n},We=function(e,t,r){var o={properties:e.properties},n=qe(e,r);o.fields=n;var a=n.find(function(e){return!0===e.isMain});return o.title=void 0===a?t:a.value,o},Xe=function(e,t,r,o,n){return function(a,i){"click"===e&&a({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s,l=i().map.style.mapStyle.toJS(),c={latitude:t,longitude:r,features:[]},u=i().map.heatmap.highlightedVessels;if(!0!==u.isEmpty){var p=void 0===u.foundVessels?[]:u.foundVessels,d=0===p.length?[]:p[0],A=!0===u.clickableCluster,g=!0===A&&!1===u.highlightableCluster?-1:p.length;s={isCluster:A,count:g,layer:{id:u.layer.id,group:"legacyHeatmap"},properties:d},c.features.push(s)}var f=[];(o||[]).forEach(function(e){var t=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source}(e),r=l.sources[t],o=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){ze(e,t,r[t])})}return e}({layer:{id:t,group:e.layer.metadata&&e.layer.metadata["mapbox:group"]}},We(e,t,r));if(!0===e.properties.cluster){var a=function(e,t){var r=e.properties.cluster_id,o=t(e.source);return new Promise(function(t,n){o.getClusterExpansionZoom(r,function(a,i){o.getClusterLeaves(r,99,0,function(r,s){(a||r)&&n();var l=s.map(function(t){return We(t,e.layer.id,o)});t({zoom:i,childrenFeatures:l})})})})}(e,n).then(function(e){o.cluster=e,o.count=e.childrenFeatures.length});f.push(a),o.isCluster=!0}else o.isCluster=!1;c.features.push(o)}),Promise.all(f).then(function(){c.isCluster=c.features.length>1||c.features.some(function(e){return!0===e.isCluster}),void 0!==s&&-1===s.count?c.count=-1:c.count=c.features.reduce(function(e,t){return e+(t.count||1)},0),1===c.count&&(c.feature=c.features[0]);var o=!0===i().map.module.autoClusterZoom,n=i().map.module.isCluster(c);if(c.isCluster=n,o&&"click"===e&&!0===c.isCluster){a(Ke());var l=c.features[0].cluster&&c.features[0].cluster.zoom;a(function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return function(o){o(Je(1,e,t,r))}}(t,r,l))}var u=c.features.length?"pointer":null;!0===c.isCluster&&(u="zoom-in"),a({type:"SET_MAP_CURSOR",payload:u});var p="click"===e?i().map.module.onClick:i().map.module.onHover;void 0!==p&&p(c)})}},$e=r("./node_modules/@babel/runtime/regenerator/index.js"),et=r.n($e),tt=r("./node_modules/react-map-gl/dist/esm/index.js"),rt=(r("./node_modules/mapbox-gl/dist/mapbox-gl.css"),r("./node_modules/pixi.js/lib/index.js")),ot=function(e,t,r){var o=e%360/parseFloat(360)*6,n=100===t?1:t%100/parseFloat(100),a=100===r?1:r%100/parseFloat(100),i=Math.floor(o),s=o-i,l=a*(1-n),c=a*(1-s*n),u=a*(1-(1-s)*n),p=i%6,d=[a,c,l,l,u,a][p],A=[u,a,a,c,l,l][p],g=[l,l,u,a,a,c][p];return{r:Math.round(255*d),g:Math.round(255*A),b:Math.round(255*g)}},nt=function(e){return ot(e,50,100)},at=function(e){var t=nt(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")},it=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},st=function(e){return 12*e},lt=function(e){return e%360};function ct(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var ut=function(){function e(t,r,o){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.stage=new PIXI.particles.ParticleContainer(h,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===n&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var a=new PIXI.Rectangle(0,0,2*m,2*m);this.mainVesselTexture=new PIXI.Texture(t,a),this._setTextureFrame(r,o),this.clearSpriteProps()}var t,r,o;return t=e,(r=[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(h),y:new Float32Array(h),a:new Float32Array(h),s:new Float32Array(h)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,r,o){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=r,this.spritesProps.s[this.spritesPropsCount]=o,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.mainVesselTexture.frame.clone();if(null!==e&&(r.x=2*m*e+e),null!==t){var o=function(e){return Math.round(e/360*30)}(t);30===o&&(o=0),r.y=o*m*2,o>0&&(r.y+=o)}this.mainVesselTexture.frame=r,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var r=this.stage.children[t],o=this.spritesProps.s[t];r.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],o,o),r.alpha=this.spritesProps.a[t]}for(var n=this.stage.children.length,a=e;a<n;a++){this.stage.children[a].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),r=0;r<t;r++)this.stage.removeChildAt(0);if(e>0){var o=Math.max(5e3,e);this._addSprites(o)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var r=new PIXI.Sprite(this.mainVesselTexture);r.anchor.x=.5,r.anchor.y=.5,r.x=-100,this.stage.addChild(r)}}}])&&ct(t.prototype,r),o&&ct(t,o),e}();function pt(e){return(pt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function dt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function At(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function gt(e,t){return!t||"object"!==pt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ft(e){return(ft=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function mt(e,t){return(mt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}ut.__docgenInfo={description:"",methods:[{name:"clearSpriteProps",docblock:null,modifiers:[],params:[],returns:null},{name:"pushSpriteProps",docblock:null,modifiers:[],params:[{name:"x",type:null},{name:"y",type:null},{name:"a",type:null},{name:"s",type:null}],returns:null},{name:"setRenderingStyleIndex",docblock:null,modifiers:[],params:[{name:"renderingStyleIndex",type:null}],returns:null},{name:"destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_setTextureFrame",docblock:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used\n@heatmapStyle bool whether to use heatmap style or solid circle style\n@hue number hue value between 0 and 360",modifiers:[],params:[{name:"renderingStyleIndex"},{name:"hue"}],returns:null,description:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used"},{name:"resizeSpritesPool",docblock:null,modifiers:[],params:[],returns:null},{name:"_addSprites",docblock:null,modifiers:[],params:[{name:"num",type:null}],returns:null}],displayName:"HeatmapSubLayer"};var ht=function(e,t,r){return[1/1.5*(r[0]*e+r[4]*t+r[12]),1/1.5*(r[5]*t+r[13])]},yt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),gt(this,ft(t).apply(this,arguments))}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&mt(e,t)}(t,n.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,r=e.rootStage,o=e.useRadialGradientStyle,n=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:n,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(o),this.stage=new rt.Container,r.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:P.NORMAL;this.brushRenderingStyle="string"===typeof e?P[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?Y:U,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===P.NORMAL?this.brushZoomRenderingStyle:0,r=this.brushRenderingStyle+t;r!==this.renderingStyleIndex&&(this.renderingStyleIndex=r,Object.values(this.subLayers).forEach(function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)}))}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.filters,o=t.baseTexture,n=t.layer;if(null!==n&&void 0!==n&&void 0!==n.tiles&&!1!==n.visible){this.stage.visible=!0,this.stage.alpha=n.opacity;for(var a=n.tiles,i=n.hue,s=void 0!==r&&r.length?r.filter(function(e){return!0!==e.pass}).map(function(e){return void 0===e.hue?"0":e.hue.toString()}):[i.toString()],l=Object.keys(this.subLayers),c=J()(s.concat(l)),u=0;u<c.length;u++){var p=c[u];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(o,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(a.forEach(function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:r.length,defaultHue:i})}),s.forEach(function(t){e.subLayers[t].render()}))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,r=e.numFilters,o=e.defaultHue;if(t)for(var n=this.props,a=n.startIndex,i=n.endIndex,s=n.viewport,l=n.filters,c=n.viewportLeft,u=n.viewportRight,p=a;p<i;p++){var d=t[p];if(d)for(var A=0,g=d.worldX.length;A<g;A++){var f=void 0;void 0!==l&&l.length||(f=o);for(var m=0;m<r;m++){var h=l[m];if(fe(d,A,h.filterValues)){f=h.hue;break}}if(void 0!==f){var y=d.worldX[A];c>0&&y<c?y+=512:c<0&&y>u&&(y-=512);var w=y*s.scale,E=d.worldY[A]*s.scale,v=s.pixelProjectionMatrix,I=dt(0===s.pitch?ht(w,E,v):Object($.h)([w,E],v),2),B=I[0],b=I[1];B>-10&&B<s.width+10&&b>-10&&b<s.height+10&&this.subLayers[f].pushSpriteProps(B,b,d.opacity?d.opacity[A]:this.renderingStyle.defaultOpacity,d.radius?d.radius[A]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,r){var o=new ut(e,t,r,this.brushRenderingStyle===P.BULLSEYE);return this.stage.addChild(o.stage),o}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}])&&At(r.prototype,o),a&&At(r,a),t}(),wt=yt;function Et(e){return(Et="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function vt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function It(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Bt(e,t){return!t||"object"!==Et(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function bt(e){return(bt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ct(e,t){return(Ct=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}yt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"setBrushRenderingStyle",docblock:null,modifiers:[],params:[{name:"style",type:null}],returns:null},{name:"setBrushZoomRenderingStyle",docblock:null,modifiers:[],params:[{name:"useRadialGradientStyle",type:null}],returns:null},{name:"_setBrushRenderingStyleIndex",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_setSubLayersSpritePropsForTile",docblock:null,modifiers:[],params:[{name:"{ data, numFilters, defaultHue }",type:null}],returns:null},{name:"_createSublayer",docblock:null,modifiers:[],params:[{name:"baseTexture",type:null},{name:"renderingStyleIndex",type:null},{name:"hue",type:null}],returns:null},{name:"_destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_destroySubLayer",docblock:null,modifiers:[],params:[{name:"subLayer",type:null}],returns:null}],displayName:"HeatmapLayer",props:{layer:{type:{name:"object"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},filters:{type:{name:"array"},required:!1,description:""},baseTexture:{type:{name:"object"},required:!1,description:""},useRadialGradientStyle:{type:{name:"bool"},required:!1,description:""},customRenderingStyle:{type:{name:"object"},required:!1,description:""},viewportLeft:{type:{name:"number"},required:!1,description:""},viewportRight:{type:{name:"number"},required:!1,description:""}}};var Mt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Bt(this,bt(t).apply(this,arguments))}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ct(e,t)}(t,n.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"_build",value:function(){var e=this.props.rootStage;this.stage=new PIXI.Graphics,this.stage.nativeLines=!0,e.addChild(this.stage)}},{key:"clear",value:function(){this.stage.clear()}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.tracks,o=t.zoom,n=t.startIndex,a=t.endIndex,i=t.highlightTemporalExtentIndexes;if(this.clear(),r.length){var s=null===i?void 0:[Math.max(n,i[0]),Math.min(a,i[1])],l=s&&s[1]-s[0]>0?s:void 0,c=o>2,u=1+.5*(o-2),p=void 0!==l&&l[0]>0&&l[1]>0;r.forEach(function(t){e._drawTrack({data:t.data,startIndex:n,endIndex:a,drawFishingCircles:c,fishingCirclesRadius:u,color:"0x".concat(t.color.substr(1)),lineThickness:1,lineOpacity:1}),!0===p&&e._drawTrack({data:t.data,startIndex:i[0],endIndex:i[1],drawFishingCircles:c,fishingCirclesRadius:u,color:"0xFFFFFF",lineThickness:2,lineOpacity:1})})}}},{key:"_drawTrack",value:function(e){var t,r,o,n=this,a=e.data,i=e.startIndex,s=e.endIndex,l=e.drawFishingCircles,c=e.fishingCirclesRadius,u=e.color,p=e.lineThickness,d=e.lineOpacity,A=e.worldOffset,g=void 0===A?0:A,f=this.props.viewport,m=0,h={x:[],y:[]};this.stage.lineStyle(p,u,d);for(var y=!1,w=i;w<s;w++){var E=a[w];if(E)for(var v=0,I=E.series.length;v<I;v++){var B=E.series[v];m++;var b=E.worldX[v]+g,C=E.worldY[v],M=vt(Object($.h)([b*f.scale,C*f.scale],f.pixelProjectionMatrix),2),O=M[0],S=M[1];if(t!==B&&this.stage.moveTo(O,S),r&&Math.abs(b-r)>256){0===g&&(y=!0);var L=o+(C-o)/2,T=b-r<0,D=g+(512-1e-6),k=T?D:g,Q=T?g:D,j=vt(Object($.h)([k*f.scale,L*f.scale],f.pixelProjectionMatrix),2),R=j[0],F=j[1];this.stage.lineTo(R,F);var x=vt(Object($.h)([Q*f.scale,L*f.scale],f.pixelProjectionMatrix),2),P=x[0],Y=x[1];this.stage.moveTo(P,Y)}this.stage.lineTo(O,S),l&&!0===E.hasFishing[v]&&(h.x.push(O),h.y.push(S)),r=b,o=C,t=B}}if(l){this.stage.lineStyle(0),this.stage.beginFill(u,1);for(var U=0,N=h.x.length;U<N;U++)this.stage.drawCircle(h.x[U],h.y[U],c);this.stage.endFill()}return!0===y&&[-512,512].forEach(function(e){n._drawTrack({worldOffset:e,data:a,startIndex:i,endIndex:s,drawFishingCircles:l,fishingCirclesRadius:c,color:u,lineThickness:p,lineOpacity:d})}),m}},{key:"render",value:function(){return null}}])&&It(r.prototype,o),a&&It(r,a),t}(),Ot=Mt;function St(e){return(St="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Lt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Rt(e,t,r[t])})}return e}function Tt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Dt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function kt(e){return(kt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Qt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function jt(e,t){return(jt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Rt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Mt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"clear",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_drawTrack",docblock:"Draws a single track (line + points)\n\n@param data track points data in 'playback form' (ie organized by days)\n@param extent extent, in day indices\n@param offset object containing info about the current situation of the map viewport, used to compute screen coords\n@param drawFishingCircles whether to draw fishing circles or not\n@param fishingCirclesRadius radius of the fishing circles\n@param color\n@param lineThickness\n@param lineOpacity\n@param worldOffset offset to use when a track crosses the dateline (ie 512 to add a second world to the right)",modifiers:[],params:[{name:"{\n  data,\n  startIndex,\n  endIndex,\n  drawFishingCircles,\n  fishingCirclesRadius,\n  color,\n  lineThickness,\n  lineOpacity,\n  worldOffset = 0,\n}"}],returns:null,description:"Draws a single track (line + points)"}],displayName:"TracksLayer",props:{zoom:{type:{name:"number"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},highlightTemporalExtentIndexes:{type:{name:"array"},required:!1,description:""},tracks:{type:{name:"array"},required:!1,description:""}}};var Ft=function(e){function t(){var e,r,o,n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=new Array(a),s=0;s<a;s++)i[s]=arguments[s];return o=this,n=(e=kt(t)).call.apply(e,[this].concat(i)),r=!n||"object"!==St(n)&&"function"!==typeof n?Qt(o):n,Rt(Qt(r),"state",{pixiReady:!1}),Rt(Qt(r),"onTouchStart",function(e){e.touches.length&&r.queryCoords(e.touches[0].clientX,e.touches[0].clientY)}),Rt(Qt(r),"onMouseMove",function(e){r.queryCoords(e.clientX,e.clientY)}),Rt(Qt(r),"_onTick",function(){!0===r.heatmapFadingIn&&r.heatmapStage.alpha<1&&r._heatmapFadeinStep()}),r}var r,a,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&jt(e,t)}(t,tt["a"]),r=t,(a=[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,r=e.height;this.pixi=new rt.Application({width:t,height:r,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var o=function(e,t){var r=document.createElement("canvas"),o=r.getContext("2d"),n=2*e;r.width=3*n+2,r.height=31*n+31;for(var a=0;a<31;a++){var i=n*a+a,s=i+e,l=e,c=o.createRadialGradient(l,s,e*t,l,s,e),u=st(a),p=at(u);c.addColorStop(0,p);var d=ot(lt(u+30),80,100);c.addColorStop(1,"rgba(".concat(d.r,", ").concat(d.g,", ").concat(d.b,", 0)")),o.fillStyle=c,o.fillRect(0,i,n,n),l+=n+1,o.beginPath(),o.arc(l,s,e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),l+=n+1,o.beginPath(),o.arc(l,s,.4*e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),o.beginPath(),o.arc(l,s,.95*e,0,2*Math.PI,!1),o.lineWidth=1,o.strokeStyle=p,o.stroke()}return r}(m,.15);this.baseTexture=rt.Texture.fromCanvas(o),this.heatmapStage=new rt.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_destroy",value:function(){this.pixi.destroy()}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every(function(e){return!0!==e.interactive})){var r=this._context.viewport,o=Tt(r.unproject([e,t]),2),n=o[0],a=o[1],i=n;i>180?i-=360:i<-180&&(i+=360);var s=Tt(Object($.d)([i,a],1),2),l=s[0],c=s[1],u=10/r.scale;this.props.queryHeatmapVessels({longitude:i,latitude:a,worldX:l,worldY:c,toleranceRadiusInWorldUnits:u},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,r){var o={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},n=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)o=Lt({highlightLayerData:o},r.find(function(t){return t.id===e.layer.id})),n=e.foundVessels.map(function(e){return{hue:312,filterValues:{series:[e.series]}}});else if(null!==t){o=Lt({highlightLayerData:o},r.find(function(e){return e.id===t.layer.id})),n=[{hue:312,filterValues:{series:[t.id]}}]}return{highlightLayerData:o,highlightFilters:n}}},{key:"_render",value:function(){var e=this,t=this.props,r=t.zoom,a=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightTemporalExtentIndexes,l=t.highlightedVessels,c=t.highlightedClickedVessel,u=t.tracks,p=t.leftWorldScaled,d=t.rightWorldScaled,A=this._context.viewport,g=this.state.pixiReady,f=i[0],m=i[1],h=function(e){return e<6}(r);if(!0!==l.isEmpty&&this.toggleHeatmapDimming(!0),!0===l.isEmpty&&0===u.length&&this._startHeatmapFadein(),this.renderer&&this.renderer.gl&&void 0!==this.renderer.gl.getError){var y=this.renderer.gl.getError();0!==y&&console.log(y)}var w=this._getHighlightData(l,c,a),E=w.highlightLayerData,v=w.highlightFilters;return n.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===g&&n.a.createElement(o.Fragment,null,a.map(function(t){return n.a.createElement(wt,{key:t.id,layer:t,filters:t.filters||[],viewport:A,startIndex:f,endIndex:m,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:h,customRenderingStyle:{},viewportLeft:p,viewportRight:d})}),void 0!==this.stage&&n.a.createElement(wt,{key:"highlighted",layer:E,filters:v,viewport:A,startIndex:f,endIndex:m,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:h,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:p,viewportRight:d}),void 0!==this.stage&&n.a.createElement(Ot,{tracks:u,viewport:A,zoom:r,startIndex:f,endIndex:m,highlightTemporalExtentIndexes:s,rootStage:this.stage})))}}])&&Dt(r.prototype,a),i&&Dt(r,i),t}();Ft.propTypes={zoom:d.a.number,heatmapLayers:d.a.array,temporalExtentIndexes:d.a.array,highlightTemporalExtentIndexes:d.a.array,highlightedVessels:d.a.object,highlightedClickedVessel:d.a.object,tracks:d.a.array,queryHeatmapVessels:d.a.func,exportNativeViewport:d.a.func,leftWorldScaled:d.a.number,rightWorldScaled:d.a.number},Ft.contextTypes={viewport:d.a.object};var xt=Ft;function Pt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Yt=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).map(function(t){return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Pt(e,t,r[t])})}return e}({},e[t])})}),Ut=Object(g.a)([function(e){return e.map.tracks.data}],function(e){return e.filter(function(e){return"geojson"!==e.type}).filter(function(e){return void 0!==e.data})}),Nt=Object(g.a)([B],function(e){var t=e[0].getTime(),r=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[te.a.getOffsetedTimeAtPrecision(t),te.a.getOffsetedTimeAtPrecision(r)]}),Gt=Object(g.a)([b],function(e){if(void 0===e||null===e||!e.length)return null;var t=e[0].getTime(),r=e[1].getTime();return[te.a.getOffsetedTimeAtPrecision(t),te.a.getOffsetedTimeAtPrecision(r)]}),Kt=Object(l.b)(function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:Yt(e),tracks:Ut(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:Nt(e),highlightTemporalExtentIndexes:Gt(e)}},function(e,t){return{queryHeatmapVessels:function(t,r){e(Le(t,r))},exportNativeViewport:function(t){var r;e((r=t,function(e){var t=[0,0],o=[r.width,r.height],n=Object($.e)(t,r.pixelUnprojectionMatrix),a=Object($.e)(o,r.pixelUnprojectionMatrix),i=n[0]/r.scale,s=a[0]/r.scale,l=r.unproject(t),c=r.unproject(o);e({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:i,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}))}}})(xt),_t=r("./src/map/glmap/map.css"),Vt=r.n(_t);function Jt(e){return(Jt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ht(e,t,r,o,n,a,i){try{var s=e[a](i),l=s.value}catch(c){return void r(c)}s.done?t(l):Promise.resolve(l).then(o,n)}function Zt(e){return function(){var t=this,r=arguments;return new Promise(function(o,n){var a=e.apply(t,r);function i(e){Ht(a,o,n,i,s,"next",e)}function s(e){Ht(a,o,n,i,s,"throw",e)}i(void 0)})}}function zt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function qt(e){return(qt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Wt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Xt(e,t){return(Xt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function $t(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var er=function(e){var t=e.latitude,r=e.longitude,o=e.children,a=e.closeButton,i=e.onClose;return n.a.createElement(tt.c,{latitude:t,longitude:r,closeButton:a,onClose:i,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},o)};er.defaultProps={onClose:function(){}};var tr=function(e){function t(e){var o,n,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,a=qt(t).call(this,e),o=!a||"object"!==Jt(a)&&"function"!==typeof a?Wt(n):a,$t(Wt(o),"loadObserver",Zt(et.a.mark(function e(){var t;return et.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if("ResizeObserver"in window!==!1){e.next=5;break}return e.next=3,r.e(0).then(r.bind(null,"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"));case 3:t=e.sent,window.ResizeObserver=t.ResizeObserver||t.default;case 5:o._containerResizeObserver=new ResizeObserver(o.handleResizeObserver),o._containerResizeObserver.observe(o._mapContainerRef);case 7:case"end":return e.stop()}},e)}))),$t(Wt(o),"handleResizeObserver",function(e){var t=e[0].contentRect,r=t.width,n=t.height,a=o.props,i=a.viewport,s=a.setViewport;r===i.width&&n===i.height||s(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){$t(e,t,r[t])})}return e}({},i,{width:r,height:n}))}),$t(Wt(o),"onViewportChange",function(e,t){var r=o.props.viewport;r.latitude===e.latitude&&r.longitude===e.longitude&&r.zoom===e.zoom&&r.bearing===e.bearing&&r.pitch===e.pitch||o.props.setViewport(e,t)}),$t(Wt(o),"onMapInteraction",function(e,t){o.props.mapInteraction(t,e.lngLat[1],e.lngLat[0],e.features,o.glGetSource)}),$t(Wt(o),"onHover",function(e){o.onMapInteraction(e,"hover")}),$t(Wt(o),"onClick",function(e){o.onMapInteraction(e,"click")}),$t(Wt(o),"getRef",function(e){null!==e&&(o.glMap=e.getMap(),o.glGetSource=o.glMap.getSource.bind(o.glMap))}),$t(Wt(o),"getCursor",function(e){var t=e.isDragging,r=o.props.cursor;return null===r?t?"grabbing":"grab":r}),$t(Wt(o),"transformRequest",function(e,t){var r=o.props.token;if(null!==r&&"Tile"===t&&e.match(y))return{url:e,headers:{Authorization:"Bearer "+r}}}),o.state={mouseOver:!0},o._mapContainerRef=null,o}var o,a,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Xt(e,t)}(t,n.a.Component),o=t,(a=[{key:"componentDidMount",value:function(){if(null!==this._mapContainerRef&&this.loadObserver(),this.glMap&&void 0!==this.props.setBounds){var e=this.glMap.getBounds(),t=e._ne,r=e._sw;this.props.setBounds({north:t.lat,south:r.lat,west:r.lng,east:t.lng})}}},{key:"componentWillUnmount",value:function(){this._containerResizeObserver&&this._containerResizeObserver.disconnect()}},{key:"render",value:function(){var e=this,t=this.props,r=t.viewport,o=t.maxZoom,a=t.minZoom,i=t.transitionEnd,s=t.mapStyle,l=t.onClosePopup,c=t.clickPopup,u=t.hoverPopup,p=t.hasHeatmapLayers,d=t.markers,A=t.interactiveLayerIds;return n.a.createElement("div",{id:"map",className:Vt.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},n.a.createElement(tt.d,Object.assign({},r,{ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:i,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:s,maxZoom:o,minZoom:a,onViewportChange:this.onViewportChange,interactiveLayerIds:A,clickRadius:4}),!1!==p&&n.a.createElement(Kt,null),void 0!==c&&null!==c&&n.a.createElement(er,{latitude:c.latitude,longitude:c.longitude,closeButton:!0,onClose:l},c.content),!0===this.state.mouseOver&&void 0!==u&&null!==u&&n.a.createElement(er,{latitude:u.latitude,longitude:u.longitude,closeButton:!1},u.content),null!==d&&d.length>0&&d.map(function(e,t){return n.a.createElement(tt.b,{key:t,latitude:e.latitude,longitude:e.longitude},e.content)})),n.a.createElement("div",{className:Vt.a.googleLogo}))}}])&&zt(o.prototype,a),i&&zt(o,i),t}();tr.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapInteraction:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,markers:null,interactiveLayerIds:null,setBounds:void 0};var rr=tr;tr.__docgenInfo={description:"",methods:[{name:"loadObserver",docblock:null,modifiers:["async"],params:[],returns:null},{name:"handleResizeObserver",docblock:null,modifiers:[],params:[{name:"entries",type:null}],returns:null},{name:"onViewportChange",docblock:null,modifiers:[],params:[{name:"viewport",type:null},{name:"interactionState",type:null}],returns:null},{name:"onMapInteraction",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"type",type:null}],returns:null},{name:"onHover",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"onClick",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"getRef",docblock:null,modifiers:[],params:[{name:"ref",type:null}],returns:null},{name:"getCursor",docblock:null,modifiers:[],params:[{name:"{ isDragging }",type:null}],returns:null},{name:"transformRequest",docblock:null,modifiers:[],params:[{name:"url",type:null},{name:"resourceType",type:null}],returns:null}],displayName:"Map",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},mapInteraction:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},transitionEnd:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},markers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:{latitude:{name:"number",required:!0},longitude:{name:"number",required:!0},content:{name:"node",required:!1}}}},required:!1,description:""},interactiveLayerIds:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:""},setBounds:{defaultValue:{value:"undefined",computed:!0},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"object"},required:!0,description:""},mapStyle:{type:{name:"object"},required:!0,description:""},maxZoom:{type:{name:"number"},required:!0,description:""},minZoom:{type:{name:"number"},required:!0,description:""},setViewport:{type:{name:"func"},required:!0,description:""},hasHeatmapLayers:{type:{name:"bool"},required:!0,description:""}}};var or=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).length>0}),nr=Object(g.a)([function(e){return e.map.style.staticLayers}],function(e){return e.reduce(function(e,t){return t.interactive&&t.visible?(void 0!==t.gl?t.gl.layers.forEach(function(r,o){if(1===t.gl.layers.length||void 0!==r.metadata&&!0===r.metadata["gfw:interactive"]){var n=r.id||o>0?"".concat(t.id,"-").concat(o):t.id;e.push(n)}}):e.push(t.id),e):e},[])}),ar=Object(g.a)([function(e){return e.map.style.mapStyle},j],function(e,t){if(!t)return e;var r=e.toJS().layers.filter(function(e){return void 0!==e.metadata}).map(function(e){return e.metadata["mapbox:group"]}).lastIndexOf("temporal")+1,o=e.mergeIn(["sources"],t.sources),n=e.get("layers");return t.layers.forEach(function(e,t){n=n.insert(r+t,Object(f.a)(e))}),o=o.set("layers",n)}),ir=Object(g.a)([function(e){return e.map.interaction.cursor},function(e){return e.map.module.cursor}],function(e,t){return null!==t?t:e}),sr=Object(l.b)(function(e,t){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,cursor:ir(e),token:e.map.module.token,mapStyle:ar(e),hasHeatmapLayers:or(e),interactiveLayerIds:nr(e)}},function(e){return{setViewport:function(t,r){e(function(e,t){return function(r){r({type:"SET_VIEWPORT",payload:e}),r(Se()),r(v(t))}}(t,r))},setBounds:function(t){e(function(e){return{type:"SET_BOUNDS",payload:e}}(t))},mapInteraction:function(t,r,o,n,a,i){e(Xe(t,r,o,n,a))},transitionEnd:function(){e(He())},onClosePopup:function(){e(function(e,t){var r=t();void 0!==r.map.module.onClosePopup&&r.map.module.onClosePopup()})}}})(rr),lr=r("./src/map/glmap/gl-styles/style.json");function cr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function ur(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){pr(e,t,r[t])})}return e}function pr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var dr,Ar=J()(Object.keys(lr.sources).map(function(e){return lr.sources[e].attribution}).filter(function(e){return void 0!==e})),gr=function(e){if(void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),void 0===e.metadata&&(e.metadata={}),!0===e.metadata["gfw:temporal"]){var t=void 0===e.metadata["gfw:temporalField"]?"timestamp":e.metadata["gfw:temporalField"];e.filter=["all",[">",t,0],["<",t,999999999999]]}return void 0===e.metadata["mapbox:group"]&&(e.metadata["mapbox:group"]="temporal"),"visible"!==e.layout.visibility&&(e.layout.visibility="none"),e},fr={mapStyle:Object(f.a)((dr=lr,dr.layers.forEach(function(e){gr(e)}),dr)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:Ar},mr=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function hr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){yr(e,t,r[t])})}return e}function yr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function wr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Er="INIT_MAP_STYLE",vr="SET_MAP_STYLE",Ir="MARK_CARTO_LAYERS_AS_INSTANCIATED",Br="SET_STATIC_LAYERS",br="SET_BASEMAP_LAYERS",Cr=function(e,t){if("vector"!==e.type)return e;var r=e.tiles,o=void 0===t?[]:[t];return hr({},e,{tiles:void 0!==r&&r.length>0?J()([].concat(o,wr(r))):o})},Mr=function(e){return{type:vr,payload:e}},Or=function(e,t,r){for(var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=t().map.style.mapStyle,a=n.toJS().layers,i=Math.round(r[0].getTime()/1e3),s=Math.round(r[1].getTime()/1e3),l=te.a.getOffsetedTimeAtPrecision(r[0].getTime()),c=te.a.getOffsetedTimeAtPrecision(r[1].getTime()),u=0;u<a.length;u++){var p=a[u];if(void 0!==p.metadata&&!0===p.metadata["gfw:temporal"]&&!(!0===o&&!0!==p.metadata["gfw:temporal:throttled"]||!1===o&&!0===p.metadata["gfw:temporal:throttled"])){var d=n.getIn(["layers",u,"filter"]).toJS();if(null===d)throw new Error("filter must be preset on style.json for temporal layer: ",p.id);var A=p.metadata&&"timeIndex"===p.metadata["gfw:temporalField"];d[1][2]=A?l:i,d[2][2]=A?c:s,n=n.setIn(["layers",u,"filter"],Object(f.a)(d))}}e(Mr(n))},Sr=u()(function(e,t,r){Or(e,t,r,!0)},400),Lr=function(e){return function(t,r){Or(t,r,e),Sr(t,r,e)}},Tr=function(e,t,r){var o=e.toJS().layers,n=e,a=o.findIndex(function(e){return e.id===t}),i=o.find(function(e){return e.id===t});if(n=function(e,t,r){var o=!0===t.visible?"visible":"none";return e.setIn(["layers",r,"layout","visibility"],o)}(n,r,a),!0===r.isBasemap)return n;var s=void 0===r.opacity?1:r.opacity;switch(i.type){case"fill":n=n.setIn(["layers",a,"paint","fill-opacity"],s).setIn(["layers",a,"paint","fill-outline-color"],r.color).setIn(["layers",a,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":var l=r.color||i.paint&&i.paint["line-color"];n=n.setIn(["layers",a,"paint","line-opacity"],s).setIn(["layers",a,"paint","line-color"],l);break;case"symbol":if(i.metadata&&!0===i.metadata["gfw:isLabel"]){var c="visible"===n.getIn(["layers",a,"layout","visibility"])&&!0===r.showLabels?"visible":"none";if(n=n.setIn(["layers",a,"layout","visibility"],c),!0!==r.showLabels)break}n=n.setIn(["layers",a,"paint","text-opacity"],s),void 0!==r.color&&(n=n.setIn(["layers",a,"paint","text-color"],r.color));break;case"circle":if(n=n.setIn(["layers",a,"paint","circle-opacity"],s).setIn(["layers",a,"paint","circle-stroke-opacity"],s),void 0!==r.color){var u=i&&i.metadata&&i.metadata["gfw:mainColorPaintProperty"]?i.metadata["gfw:mainColorPaintProperty"]:"circle-color";n=n.setIn(["layers",a,"paint",u],r.color)}break;case"raster":n=n.setIn(["layers",a,"paint","raster-opacity"],s)}return n=function(e,t,r,o){var n=e,a=e.toJS(),i=r.type,s=a.metadata["gfw:styles"],l=r.metadata;return["selected","highlighted"].forEach(function(e){var a=t["".concat(e,"Features")],c=a&&a.style?a.style[i]:{},u=null!==a&&void 0!==a&&a.values.length>0,p=t[e],d=hr({},s[e][i]||{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{},c);Object.keys(d).length&&Object.keys(d).forEach(function(e){var i,s=d[e][0],l=d[e][1],c=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===u&&!0!==p&&!1!==p){var A=lr.layers.find(function(e){return e.id===r.id});i=void 0!==A?r.metadata&&r.metadata["gfw:mainColorPaintProperty"]===e?null:A[c][e]:null}else if(!0===p||!1===p)i=!0===p?s:l;else{var g="";if(null!==t.color&&void 0!==t.color){var f=it(t.color);g="".concat(f.r,",").concat(f.g,",").concat(f.b)}i=["match",["get",a.field],a.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",g),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",g)]}void 0!==i&&null!==i&&(n=n.setIn(["layers",o,c,e],i))})}),n}(n,r,i,a)},Dr=function(e,t,r,o){return function(n,a){var i=a().map.style.mapStyle,s=i.toJS();if(void 0===s.sources[t]){var l={type:e};e===N?l.data=o:e===G&&(l.tiles=[r],l.tileSize=256),i=i.setIn(["sources",t],Object(f.a)(l))}if(void 0===s.layers.find(function(e){return e.id===t})){var c=e===N?function(e){var t=e.features.map(function(e){var t=e.geometry;return void 0===t?null:t.type}),r=mr.map(function(e){var r=0;return t.forEach(function(t){e.geoJSON.indexOf(t)>-1&&r++}),{gl:e.gl,num:r}}),o="fill",n=0;return r.forEach(function(e){e.num>n&&(o=e.gl,n=e.num)}),o}(o):e,u=Object(f.a)({id:t,source:t,type:c,layout:{},paint:{}}),p=e===G?s.layers.length-1-s.layers.filter(function(e){return"labels"!==e.id}).reverse().findIndex(function(e){return"raster"===e.type}):s.layers.length-1;i=i.set("layers",i.get("layers").splice(p,0,u))}n(Mr(i))}},kr=function(e){return function(t,r){t({type:Ir,payload:e.map(function(e){return e.sourceId})});var o=e.map(function(e){return r=(t=e).sourceId,o=t.sourceCartoSQL,n={layers:[{id:r,options:{sql:o}}]},a=encodeURIComponent(JSON.stringify(n)),i="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG".replace("$MAPCONFIG",a),new Promise(function(e){fetch(i).then(function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(r)),Promise.reject(),null):e.json()}).then(function(t){e({layergroupid:t.layergroupid,sourceId:r})}).catch(function(e){console.warn(e)})});var t,r,o,n,a,i});Promise.all(o.map(function(e){return e.catch(function(e){return e})})).then(function(o){var n=r().map.style.mapStyle,a=n.toJS();o.forEach(function(t){var r="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt".replace("$LAYERGROUPID",t.layergroupid),o="".concat(t.sourceId,"-instanciated");n=(n=n.setIn(["sources",o],Object(f.a)({type:"vector",tiles:[r]}))).deleteIn(["sources",t.sourceId]),a.layers.forEach(function(r,a){if(r.source===t.sourceId){n=(n=n.setIn(["layers",a,"source"],o)).setIn(["layers",a,"metadata","gfw:id"],t.sourceId);var i=e.find(function(e){return e.refLayer.id===t.sourceId}).refLayer;n=Tr(n,r.id,i)}})}),t(Mr(n))}).catch(function(e){console.warn(e)})}},Qr=function(e,t){return function(r,o){r({type:Br,payload:e}),r({type:br,payload:t});var n=[].concat(wr(e),wr(t.map(function(e){return hr({},e,{isBasemap:!0})}))),a=o().map.style.mapStyle.toJS().sources,i=n.filter(function(e){return void 0!==e.gl});i.length&&r(function(e){return function(t,r){var o=r(),n=o.map.style.mapStyle;e.forEach(function(e){var t=e.id,r=e.gl,o=Cr(r.source,e.url),a=(n=n.setIn(["sources",t],Object(f.a)(o))).get("layers").toJS().map(function(e){return e.id});r.layers.filter(function(e,r){var o=e.id||r>0?"".concat(t,"-").concat(r):t;return!a.includes(o)}).forEach(function(e,o){var a=e.id||o>0?"".concat(t,"-").concat(o):t,i=hr({},gr(e),{id:a,source:t});if("vector"===r.source.type){var s=void 0===e["source-layer"]?t:e["source-layer"];i["source-layer"]=s}var l=n.get("layers"),c=i.metadata["mapbox:group"],u=l.findLastIndex(function(e){return c===e.toJS().metadata["mapbox:group"]});n=n.set("layers",l.splice(u,0,Object(f.a)(i)))})}),t(Mr(n)),t(Lr(o.map.module.temporalExtent))}}(i));var s=n.filter(function(e){return!0===e.isCustom&&void 0===a[e.id]});s.length&&s.forEach(function(e){r(Dr(e.subtype,e.id,e.url,e.data))});var l=o().map.style,c=l.mapStyle,u=c.toJS(),p=u.layers,d=u.sources,A=[];e.forEach(function(e){var t=e.id;if(void 0!==a[t]&&!0===e.visible&&(void 0!==e.data&&(c=c.setIn(["sources",t,"data"],Object(f.a)(e.data))),void 0!==e.url)){var r=Cr(a[t],e.url);c=c.setIn(["sources",t],Object(f.a)(r))}});for(var g=function(e){var t=p[e],r=t.source,o=d[r],a=void 0!==t.metadata&&t.metadata["gfw:id"]||r,i=n.find(function(e){return e.id===a});if(void 0===i)return t.type,"continue";var s=void 0!==o.metadata&&o.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var u=l.cartoLayersInstanciated.indexOf(r)>-1;return!0!==i.visible||u||A.find(function(e){return e.sourceId===r})||A.push({sourceId:r,sourceCartoSQL:s,refLayer:i}),"continue"}c=Tr(c,t.id,i)},m=0;m<p.length;m++)g(m);A.length&&r(kr(A)),r(Mr(c))}},jr=r("./node_modules/@turf/bbox/index.js"),Rr=r.n(jr),Fr=r("./node_modules/redux-thunk/es/index.js"),xr=r("./node_modules/react-map-gl/dist/esm/utils/transition/viewport-fly-to-interpolator.js"),Pr=r("./node_modules/d3-ease/src/index.js");function Yr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ur(e,t,r[t])})}return e}function Ur(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Nr={transitionDuration:500,transitionInterpolator:new xr.a,transitionEasing:Pr.a},Gr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800,bounds:{}},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};var Kr=s.d;Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).MAP_REDUX_REMOTE_DEBUG||Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).REACT_APP_MAP_REDUX_REMOTE_DEBUG;var _r=Object(s.e)(function(){},{},Kr(Object(s.a)(Fr.a))),Vr=function(e){var t=_r.getState().map.tracks.data.find(function(t){return t.id===e.toString()});return _r.dispatch(Ze(t.geoBounds)),t.timelineBounds},Jr=_r,Hr="ADD_TRACK",Zr="UPDATE_TRACK",zr=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach(function(e){e.properties&&e.properties.coordinateProperties&&e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach(function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)})}),{geojson:e,timelineBounds:[t.start,t.end]}},qr=function(e){var t=Rr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}},Wr=function e(t){for(var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o={start:1/0,end:0},n={minLat:1/0,maxLat:-1/0,minLng:1/0,maxLng:-1/0},a=0,i=t.datetime.length;a<i;a++){var s=t.datetime[a];s<o.start?o.start=s:s>o.end&&(o.end=s);var l=t.latitude[a];l<n.minLat?n.minLat=l:l>n.maxLat&&(n.maxLat=l);var c=t.longitude[a];!0===r&&c<0&&(c+=360),c<n.minLng?n.minLng=c:c>n.maxLng&&(n.maxLng=c)}return n.maxLng-n.minLng>350&&!1===r?e(t,!0):{time:[o.start,o.end],geo:n}};var Xr=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,r){var o=r().map.tracks.data;e&&e.forEach(function(e){var r,n=e.id,a=o.find(function(e){return e.id===n});void 0===a?t((r=e,function(e,t){var o=r.id,n=r.url,a=r.type,i=r.fitBoundsOnLoad,s=r.layerTemporalExtents,l=r.color,c=r.data,u=t();if(!u.map.tracks.data.find(function(e){return e.id===o})){var p={id:o,url:n,type:a,color:l,fitBoundsOnLoad:i},d=void 0!==r.data&&null!==r.data,A=void 0!==n&&null!==n&&""!==n;if(d&&(p.data=c,p.geoBounds=qr(c)),e({type:Hr,payload:p}),!d&&A){var g=w(e,u);if("geojson"!==a){var f=u.map.module.token,m=ce(n,f,s);Promise.all(m.map(function(e){return e.catch(function(e){return e})})).then(function(t){var r=ue(t);if(r.length){var n=pe(r,["latitude","longitude","datetime","series","weight","sigma"]),a=Ae(n),i=Wr(n);e({type:Zr,payload:{id:o,data:ge(a),geoBounds:i.geo,timelineBounds:i.time}}),e(E(g))}})}else fetch(n).then(function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()}).then(function(t){var r=zr(t),n=r.geojson,a=r.timelineBounds,s=qr(t);e({type:Zr,payload:{id:o,data:n,geoBounds:s,timelineBounds:a}}),i&&Vr(o)}).catch(function(e){return console.warn(e)}).finally(function(){return e(E(g))})}}})):a.color!==e.color&&t({type:Zr,payload:{id:e.id,color:e.color}})}),o.forEach(function(r){e&&e.find(function(e){return e.id===r.id})||t({type:"REMOVE_TRACK",payload:{trackId:r.id}})})}},$r=function(e,t){return function(e){return e}};function eo(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function to(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){ro(e,t,r[t])})}return e}function ro(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var oo={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,cursor:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},no=$r("module",{loaders:d.a.arrayOf(d.a.number),token:d.a.string,temporalExtent:d.a.arrayOf(d.a.instanceOf(Date)),onViewportChange:d.a.func,onHover:d.a.func,onClick:d.a.func,onLoadStart:d.a.func,onLoadComplete:d.a.func,onClosePopup:d.a.func,onAttributionsChange:d.a.func})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:oo,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return to({},e,t.payload);case"SET_TEMPORAL_EXTENT":return to({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return to({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var r=null!==e.loaders?eo(e.loaders):[];return r.push(t.payload),to({},e,{loaders:r});case"COMPLETE_LOADER":var o=eo(e.loaders),n=o.findIndex(function(e){return e===t.payload});return o.splice(n,1),to({},e,{loaders:o});case"SET_MODULE_CURSOR":return to({},e,{cursor:t.payload});default:return e}});function ao(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){io(e,t,r[t])})}return e}function io(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function so(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var lo={data:[]},co=$r("tracks",{data:d.a.arrayOf(d.a.exact(ao({},A,{data:d.a.object,timelineBounds:d.a.array,geoBounds:d.a.exact({minLat:d.a.number,minLng:d.a.number,maxLat:d.a.number,maxLng:d.a.number})})))})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:lo,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Hr:return ao({},e,{data:[].concat(so(e.data),[t.payload])});case Zr:var r=t.payload,o=e.data.map(function(e){return e.id!==r.id?e:ao({},e,r)});return ao({},e,{data:o});case"REMOVE_TRACK":var n=t.payload.trackId,a=e.data.filter(function(e){return e.id!==n});return ao({},e,{data:a});default:return e}});function uo(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function po(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ao(e,t,r[t])})}return e}function Ao(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var go={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function fo(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){mo(e,t,r[t])})}return e}function mo(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ho={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]};function yo(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var wo={cursor:"progress"},Eo=Object(s.c)({module:no,tracks:co,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:go,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case Re:var r=e.heatmapLayers;return r[t.payload.layerId].visibleTemporalExtentsIndices=t.payload.newVisibleTemporalExtentsIndices,r[t.payload.layerId].tiles.forEach(function(e){e.temporalExtentsIndicesLoaded=_()(e.temporalExtentsIndicesLoaded,t.payload.indicesRemoved)}),po({},e,{heatmapLayers:r});case"ADD_HEATMAP_LAYER":var o=Object.assign({},e.heatmapLayers,Ao({},t.payload.id,po({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:o});case"UPDATE_HEATMAP_LAYER_STYLE":var n=t.payload,a=po({},e.heatmapLayers[n.id],n),i=po({},e.heatmapLayers,Ao({},n.id,a));return po({},e,{heatmapLayers:i});case"REMOVE_HEATMAP_LAYER":var s=Object.assign({},e.heatmapLayers);return delete s[t.payload.id],Object.assign({},e,{heatmapLayers:s});case Qe:return Object.assign({},e,{referenceTiles:[].concat(uo(e.referenceTiles),[t.payload])});case Fe:var l=t.payload.layerId,c=t.payload.tile,u=po({},e.heatmapLayers[l]),p=uo(u.tiles),d=p.findIndex(function(e){return e.uid===c.uid});-1===d?p.push(c):p=[].concat(uo(p.slice(0,d)),[c],uo(p.slice(d+1))),u.tiles=p;var A=po({},e.heatmapLayers,Ao({},l,u));return po({},e,{heatmapLayers:A});case"RELEASE_HEATMAP_TILES":var g=t.payload,f=Object.keys(e.heatmapLayers),m=po({},e.heatmapLayers);f.forEach(function(e){var t=po({},m[e]);g.forEach(function(e){var r=t.tiles.findIndex(function(t){return t.uid===e});r>-1&&t.tiles.splice(r,1)})});var h=uo(e.referenceTiles);return g.forEach(function(e){var t=h.findIndex(function(t){return t.uid===e});t>-1&&(h=[].concat(uo(h.slice(0,t)),uo(h.slice(t+1))))}),po({},e,{heatmapLayers:m,referenceTiles:h});case"UPDATE_LOADED_TILES":var y=po({},e.heatmapLayers);return po({},e,{heatmapLayers:y});case je:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return po({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return po({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ho,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":return fo({},e,{currentVisibleTiles:[].concat(t.payload)});case"SET_CURRENTLY_LOADED_TILES":return fo({},e,{currentLoadedTiles:[].concat(t.payload)});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var r=J()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),o=J()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids));return fo({},e,{currentToLoadTileUids:r.filter(function(e){return-1===o.indexOf(e)}),currentToReleaseTileUids:o});case"MARK_TILES_UIDS_AS_LOADED":var n=e.currentToLoadTileUids,a=t.payload;return fo({},e,{currentToLoadTileUids:n.filter(function(e){return-1===a.indexOf(e)})});case"RELEASE_MARKED_TILES_UIDS":return fo({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:fr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Er:var r=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return ur({},e,{mapStyle:r});case vr:return ur({},e,{mapStyle:t.payload});case Br:return ur({},e,{staticLayers:t.payload});case br:return ur({},e,{basemapLayers:t.payload});case Ir:return ur({},e,{cartoLayersInstanciated:[].concat(cr(e.cartoLayersInstanciated),cr(t.payload))});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Gr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return Yr({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"SET_BOUNDS":return Yr({},e,{bounds:t.payload});case"UPDATE_VIEWPORT":var r=Yr({},e.viewport,t.payload);return Yr({},e,{viewport:r,prevZoom:r.zoom});case"SET_ZOOM_INCREMENT":var o=e.viewport.zoom,n=Math.min(e.maxZoom,t.payload.zoom||o+t.payload.increment),a=Yr({},e.viewport,Nr,{zoom:n,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return Yr({},e,{viewport:a,canZoomIn:n<e.maxZoom,canZoomOut:n>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:x});case"SET_MOUSE_LAT_LONG":return Yr({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return Yr({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return Yr({},e,t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:wo,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){yo(e,t,r[t])})}return e}({},e,{cursor:t.payload});default:return e}}});function vo(e){return(vo="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Io(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Bo(e){return(Bo=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function bo(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Co(e,t){return(Co=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Mo=Object(s.c)({map:Eo});Jr.replaceReducer(Mo);var Oo=u()(function(e){Jr.dispatch(Lr(e)),Jr.dispatch(function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}}(e))},16),So=function(e){var t;Jr.dispatch((t={latitude:e.center[0],longitude:e.center[1],zoom:e.zoom},function(e){e({type:"UPDATE_VIEWPORT",payload:t}),e(Se())}))},Lo=function(e){function t(){var e,r,o,n,a,i,s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var l=arguments.length,c=new Array(l),u=0;u<l;u++)c[u]=arguments[u];return o=this,r=!(n=(e=Bo(t)).call.apply(e,[this].concat(c)))||"object"!==vo(n)&&"function"!==typeof n?bo(o):n,a=bo(r),s={initialized:!1,error:null,errorInfo:null},(i="state")in a?Object.defineProperty(a,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):a[i]=s,r}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Co(e,t)}(t,n.a.Component),r=t,(o=[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){var e,t,r;void 0!==this.props.viewport&&So(this.props.viewport),null!==this.props.glyphsPath&&Jr.dispatch((e={glyphsPath:this.props.glyphsPath},t=e.glyphsPath,{type:Er,payload:{glyphsPath:t}})),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(Jr.getState().map.style.attributions),Jr&&void 0===Jr.getState().map.module.token&&Jr.dispatch((r={token:this.props.token,autoClusterZoom:this.props.autoClusterZoom,isCluster:this.props.isCluster,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange},function(e){e({type:"INIT_MODULE",payload:r})})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&Jr.dispatch(I(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&Jr.dispatch(Qr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&Jr.dispatch(Xr(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&Oo(this.props.temporalExtent),this.setState({initialized:!0}),null!==this.props.heatmapLayers&&Jr.dispatch(_e(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){var t;this.props.tracks!==e.tracks&&Jr.dispatch(Xr(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&Jr.dispatch(_e(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&(this.props.basemapLayers===e.basemapLayers&&this.props.staticLayers===e.staticLayers||Jr.dispatch(Qr(this.props.staticLayers||[],this.props.basemapLayers||[]))),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||Jr.dispatch((t=this.props.loadTemporalExtent,function(e,r){var o=r(),n=o.map.heatmap.heatmapLayers,a={};Object.keys(n).forEach(function(r){var o=n[r],i=o.header.temporalExtents,s=o.visibleTemporalExtentsIndices,l=xe(t,i),c=_()(l,s),u=_()(s,l);(c.length||u.length)&&e({type:Re,payload:{layerId:r,newVisibleTemporalExtentsIndices:l,indicesRemoved:u}}),c.length&&(a[r]=c)});var i=Object.keys(a);i.length&&e(Pe(i,o.map.heatmap.referenceTiles,a))}))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||Oo(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||Jr.dispatch(I(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&Jr.dispatch(I(this.props.highlightTemporalExtent));var r,o=Jr.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===Jr.getState().map.viewport.currentTransition&&(o.latitude===this.props.viewport.center[0]&&o.longitude===this.props.viewport.center[1]&&o.zoom===this.props.viewport.zoom||(1===Math.abs(o.zoom-this.props.viewport.zoom)?Jr.dispatch((r=this.props.viewport,function(e){e(Je(null,r.center[0],r.center[1],r.zoom))})):So(this.props.viewport))),this.props.cursor!==e.cursor&&Jr.dispatch({type:"SET_MODULE_CURSOR",payload:this.props.cursor})}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),n.a.createElement("div",null,n.a.createElement("h2",null,"Map component crashed!"),n.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),n.a.createElement("div",null,"Component Stack Error Details:"),n.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:n.a.createElement(l.a,{store:Jr},n.a.createElement(sr,this.props))}}])&&Io(r.prototype,o),a&&Io(r,a),t}();Lo.defaultProps={token:null,glyphsPath:null,autoClusterZoom:!0,isCluster:function(e){return!0===e.isCluster},highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,cursor:null,onViewportChange:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var To=Lo;Lo.__docgenInfo={description:"",methods:[{name:"componentDidCatch",docblock:null,modifiers:[],params:[{name:"error",type:null},{name:"errorInfo",type:null}],returns:null}],displayName:"MapModule",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},glyphsPath:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},autoClusterZoom:{defaultValue:{value:"true",computed:!1},type:{name:"bool"},required:!1,description:""},isCluster:{defaultValue:{value:"(event) => event.isCluster === true",computed:!1},type:{name:"func"},required:!1,description:""},highlightTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},tracks:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"exact",value:"import { trackTypes } from './proptypes/tracks'",computed:!0}},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},heatmapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},temporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},loadTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},basemapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},staticLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},onViewportChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadStart:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadComplete:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onAttributionsChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!0,description:""}}};lr.metadata["gfw:basemap-layers"];function Do(e){return(Do="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ko(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}function Qo(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function jo(e,t){return!t||"object"!==Do(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ro(e){return(Ro=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Fo(e,t){return(Fo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.d(t,"default",function(){return xo});var xo=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=jo(this,Ro(t).call(this,e))).layout=null,r}var r,o,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Fo(e,t)}(t,n.a.Component),r=t,(o=[{key:"render",value:function(){var e=this.props,t=e.components,r=ko(e,["components"]);return n.a.createElement(a.MDXTag,{name:"wrapper",components:t},n.a.createElement(a.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"description"}},"Description"),n.a.createElement(a.MDXTag,{name:"p",components:t},"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),n.a.createElement(a.MDXTag,{name:"ul",components:t},n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}},"Map client")),n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}},"Vessel profiles")),n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}},"Data portal"))),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"available-properties"}},"Available properties"),n.a.createElement(a.MDXTag,{name:"p",components:t},"TODO: fix crash on PropsTable docz component"),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),n.a.createElement(i.e,{__codesandbox:"N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkqiUrGiJkjK8Eq1QyZnWTWWoXY2Hm_To5G67mScAIAlCKRSsDsIxeeHGNjsFU83iWM1g_m6mVsSPMtjgoRg62oqTxb3qiAAlGYjJIzBAiDNKAIpgAlGCuchTMBCIjsToSqXtADc_MFwrFioIABEAPIAWXYMsi8q6koIAFoTkQVWqhSKHJEhah9EbZfKcJJsK5BbBbagzOLzXr9TguhgMgAKdbMNhidYWRh4ADMYkc6pdNE46pF2XYuImPScwJJNQEiCkKfj5gs7EYMzEkYaUyiyRdedc6BYMWo8XYMyEd3GlFSMCmL3Y4cw_VQKXzMASnKkDYTdfTztdkmriekccUZhOvSI-hwaQIAFFYMeaAAhRINdCRzrCAjtbmoTnKhTKb2-mA4TQyB0ahaHoRAVBzKZ9VmN0TXaT04AEchJCiGZJFUbAALgf0BXtTVzVguUFXNdo7Q1dhgHYTQfHkQj5QAARgIgRAGVBAWFGBSIDVBdFRY5TgAL2cAhEmxdhuAo9YogEZ5UCudoAAZ2GTGYsHafcaxmTsWFneSABZVPYAA2VT1PWMAQIAMR9aBEnk_hnEORFHUwdgAAUhH4JZmJ-OAtMRMyawsmhnAgATLnYABGPSNPkcEeOoPiAEE5nE9hI0o8gbCgdBw3YeROXEsR0pjGR2FRUSYG4YBDyEkTsXkbda2ALLoFy4IADIOvGRJ5koZpWpyvLuBG-UwFCHie1Qdp2AAfg2Nrw0jQqrkG9rUDimspBkat3zMWFyMwMAwigKZlqKkqtpSlca0TIMpRwSzMhSa8CCa2s62gmZ2D-GARjw6rMv0DIrgAbQUnAFIAJiMpZIqh5McCMyKAF0lgE4QiCuABWfLaK3VcpHughHue16mqka7drMb8QEQ5DUPQiMNC0CgQP0BgDodSijpOqZaONIjPVQriuamSjIAISxKBvNoMDgJYCFcGSxy-gA1eA4AXfK6PgyRUQ40WsDwijjhgY7QlOkI7CStWkoaAAZJKbwd88AH0byS5xz31JK3OcHXBY9SQPEpVDsJppQ6aQlDZljmYsKA3RQIMcDcPI4ndbNJUyIdDzKBmSxevgXWBwLi0RPmCPUHT7miyIDw0BgcV0FCREBDsAX3QVVu1Nz8X3KEP5p0D7vs8tLpe642upgmIQblgXWoCcfw8EkOeRAIP1-9NtFJW2Iuq9HuDPTLmZK_gdfMh2auZ9NzZolQh3XESDJD_gJZQ61p-X7f4uFfKkrGI5Bn6vwEO_TuutT6DgvnASQUBf4d2npBU2v1_oaggWSAuoRC7_2PkLSQZ9YH6z8JPLiO8vpQKeFARmX0PggVcE3AQyCTbAHWGgF4-onCWxgBpCwWspZMXtPEc8WAU58PKmOAAEhAFIeAoCyMIJYIRwoRFiP0BIgR9g-hwGFLFKhzFW6wBQtw2AOBzSsVvigyiOD0BZDVhAP6eFFaZFQPkKa0sABamN8HByxIzNBeFzFSksSw8ilEOEEGEpVJYnwiAvGibAAAqjMOxtAAGzHJIkZROY1Ep18XrfxccKpmIsYlMJddbFZEsNfbYkCg56z3jfK--84DBKmlY1huRUlZCkRKYgsxQEZAAVU2gQyBAO0oJ2HJwioCiJTvU7unoH4DLQis1C7TQnxTvgbLoVDdmcR3qhFubdhn7IiF0SQk9TlIPirxFsswTntzSp8RuLonnDIylJWYVxjnZBuQrMwBV4oHLDDAckkpm7_PbpGP5rd257QSm42eeB55bxgNdJIMzVFzPUVmCSG8F4wEjJGWguTcUp0KtwYqbCaygpYH5aIWVIyZKxSozIFL9CkvZXk_QnJ3z8Iuf-BlWkCDMoEdijl8yuVktmdKmg_KgVwyMoi-53S0kwAcU4jUT1IgNASvE2c-chwSUjGgT4BQtXoJFFSml6x6W2FFcy1cozNWOOtQQL5t1awIJiAQUImArjmsiJa91QTER6AEODNGq4LDL1nC8ANEVg2GpSFa8NwMo2owkR9DGkQg0GtDdqkUOA81EBzflAV7B3ybTMOQBBcA7BfS4UY7o2BQLoDsMTHA65qCulpYKrIaUB21kiRAeIYVshXGOlALWFaMhCHLOwVAlsoDzoEIu_VFkrgroSBI2tNZPgbhoNqLg9gmV4EjAuvRMIN3Ci3ZQQqI6LC8UoGY5eKQr13oEEsa9AgH1VosBMWwOABHCSyF6j6Fg_1XD_RW6D36H2wcQ6gCyFbgU1gPS-p0faT1cC4RNT1T7VyPHYJZCAHdZ79ExBkcqiQeKouoIMEIITEoEmiOVYYlsch-DmMEQIFk9nInYKhScdBpwkckOwJKKK20YD2M0YDACBEhCNAgucEQQgJFGCJmCU4MgFHih9CAzRSWEhwGfNpgTyIAEJRoTSOk3dAxHvUWFdemnVsp9UWqNYOOAZmQOWZwNZm1q4sO1lI5YXUepVwmfSkpizfnTxJBmHgOAbloj4jsxJXdUAXNQcARxHAIqL3Rlc6OmuUT6rEufQV1IKW0sZYmFcBLQWsS9Ua5l-DUHIvRd1CEOYSR2BJNFA7dVWRzhdFjbWDDBXAP5SM6O0zrWkvUBk2iCAHhwiWPsH4Wc3Rsu5AjJAF0znJLlZWwXNpa2bj9C2x03b7g0iRlBWecDtBlo4A2SU_80QNv3csfN8LFg4svaFewLqhWuinjHO94lnIvuzC-6Y_8ERtjBBGhJBz5snP5agw6xlYrL3TZB5VltPDIN1aA5QdHckCSBaS2jug3WPphAiPYKAeRaACG8fm-nbSgts8oBzrnGReflpJ6OuAIvUQg354lq7OBbAy-5yz2s1APMike_tlr5mgsa7DRqbXaQ1cWGoFI34cvLt3BwOby3P7Jdm9QBz2I2xdcM8V9QF3OxTd7FQJMzs4GRTu4F6t_3Uz0BB4IL76gAf0DrlgLQEPCubex4jwnscvDHd-455QLWblsEzGT_r53y98-F5j6gdbd3tuJWNxFa312q-3c27Xtx9e1ezag0DxbIPlt66SzYORCi5GCPJfKqYh3csQ-6o3_AiiR9KJ5ZymgOBYCzgmHjj6BOnWXoETI4fiix9yrxZ6ufQ_5FH8lbyhVPfuLGdM9NgLofFdfyYoMxBdgp-rpn_LoLb-f4wE2l18UhN92AAAfcAp_OfVEaIWIcZL_UaafSHGAoBeAz_NfOgUAvAebLfWsHfUrSXOJBJarFJDVfzVAuAkBT_CA8A9gUGNGP_JLAAj_IA2g-glGebCwO_WLfvD3G3JpOpdgb_Rcc7ArAgonSMV1GpVpZ_FPNpQQuARVb1YHdgUjAAOR0w2xoyOH8Ho3IBYw6V704D4JfwEOXwn2EKQJ_xQIH0V1lRxQn0wI3xwLEKg0JXRUxWyQsNPzkKCwcKlVPx4O9VI3gAURoCtFsFcA8FgAtBdDEQtHCKpC1G-EoEiPQAtGYkIwtAERyKASZG9QSzA3yMp2M0q3HQUXCnQBa3RCzxUMRQ-lI3WRggQSAN4PizsJt2aJmAQKsJy1XTwMFSKxK0kNdT6UflYM-XP36UAOGUVk6OAIj2vxXwIGUI-k2gsHCyPVwx1C4DIIgwHBgFYGNSULcIsFI0UPaL8MZ1qUQIkkOOOJuNaUGKh2FUdVK2kNuOuPsNuLWJm2MKaJmJaM_yuOmImJ6JoMOweJOPwCBIhKAJeIkOZTGLhIQO-K6NRM_3mP4MWOmR8MpWCMaKkxYO-ik1gOAXYFaOGSuOgIWJwBJN6JEKgF_znwZIwJALAMgNpJxNAzQOoLYKZJZLpPJPQKAOcOwNwLOKW0uip1ZLDkmI7j6P7C6EeNf3lPhLOS5PKyA2FL5MZNGmhKSxFP5OpPKxeKGOhxGOdW1NrGIKq0qn2PSXRLaWNN6MgI4OxLMLaTZLYPdIYK4NrADI2P-Pvwiyk2XjxPH1P1BLpIjPQGWMsMFNsJ5LjITNP3FLANqz7xlLq0NMV1TPxNdEx2XR_y1KpxszzJtwLKjJTgzPxDLLqzn2rJPxTmjRhylgFHhyVMrNxPjMLJoDbLPEsE7POgbIKybKWP7IIFBlRnbOHOPHOihJVJhObMcNPxnJRjnJHIDPNNeOK3eNGJ6TGUQTjzTIWWdLX0nJrL5SDLC0k3GCnJjJ5ICJv0n2sISCFOfKnLrJeNB0lx7JwBfJWPEnfOZLHKgwrOXMZ2_I5PrKgJtLnyAon0HLHHnK7KXKOJhKQvXIUk3KHO3NoMl0QqnI3K3IXMKgwtVPMOvIHNnPwvIum13I8NgC8LPJlTpOwspWm2DM2IBKkwv0X2PzXJTifK9Pn0P1HzYqzCTNnzpIEqvxgqwMzOmz_JtIAvkskqnJAv6I_PAo-kgswsHwXwUpopJlgsIoQrkuMs0tMpQo7PIr6Oz3UusqX1stwrIq7L0trHPxcqEsCNbLotQoIuyycqgsVw0tcpbP0FIvovh0YqlO3yFX3MJ3FWkV8qkrPysoksiuEpvO4rCxhFnW6CzJMI6J5Iir8tfO7LCq6PSqnN3KRL3zSuysqpWIvIqoyr-PWLvNDPOKkxCymAtHKnNW6AGvzGgGZMCHG1oByDQG51QHiCG00wmG6EMR4QrVIxGG6D8FYG6E0yPWVm6BTQKGVKu2HBhCwFsBiFnB-kNwdDQFeKWEcUQHvNdVuuLWlHdGOpuss3YF1HUIdgAE1Sqy09gjgI1udOA7AWAwAwALgaB7yg4VrOBI0FqEgUQhUcg-17yos9QyNLIA5vq5xfVKSWQ4AuMcp2Apr3A9gPB1Atho9l0RAQhzBlZMhEhVw1VegN19BNcpgJJXtYcSiEcNkBrgs7rRAQiySIhvoz5XAUg4CbrXU7Ag59h8hXIRhNhzAy0Tq0AaSLs6SxrDtscTs8wupptBaqsIMRakcxbubwwpZXF3FWJtKSyEhVxfzH8bT7beaJa184D_VXJDs587bM1o0LKqcfaaA-bLyE1A6DtRoQ6_aIaMgNyI66so6CAY7Qbg7Da_ay14qSq-qQafFMBTpXAoblStgaQhtizIp0YfECx8QK6943EXhWJJdQdoIJhzEPB_NM7s6fEhqk6PrS1MYqVRpIpdyLS3iUrL1W7nbqAvFMYLyBquqoNaIFwtYEqoN3MJbdUiBvMQ1fMrtV6JaAzeLyseKFterSqLzubdEjhKKYSH7hRESkqrSmqCBtEO5hR76dE3679L6LB9MBBzpatQcij8icA_0lTcsXjX131KBP0oGsgYHv0Ayuh_UBBzAysqdYxZBs8kwoYxBKFtjMwphyBMhybsgbNKwSGiHvp61_A4B1CfQqp-BJ5xBgBUHaB0HF1PyXToG_1ALKBhIZxP1OR5Blx3o6sCG0wcMKH2BwMdh2Bzxv12BtQxxGFZ0KxdxCGbTEwmGG1WH2G-BBBshuHeH_w_0H16EMx9AVHthpHCFZGPpto4xGKeqiT8xqB2gphQGWbEhgMbqBMOJDDLEUb65j1dj0ACMswdruhAhghtC0guHvUsG-hzBrGldyiJ0qilS0RGQ5o3bmSrg8GoNGB85h5aMDlqoDlGpJdGBKFgAcA2nG98Y3G6xJBqmuAMhZGq1NoD1m0UcU8IFh11gmc6djUIFeSJGJEBqrgZn_5QNeNiUBqIEEdbBxQABHUICjbICRIXFXMXTGJZwcWZrwN9CRZXTnWXJdZZquHAcaHiCRRQ85guWZtml-XUMASMR5-AGBrAc0UlWpTZzkCRbohAj53BJ575xIX5_5i5lZ8m2YYlKFxBcFt5qcmFr5jdH5v5gFtpNAWAniGARF7ULIflSFuq0y3FlZ-FxFol3J0lxEClqliF9YVc_y_QeluF_FhFwl5Fp5klpWMl9l2gal9YH04ZPlwFxloVz5lFtZyMGV8Bf-KVulPUz_OVtpBVpFpVp51F-YMHKg8ZLF9YV-h54VwF1EeZ9YUjXoA2IgBA9YYYXagQAvGYHBXV1ZtFyMIUb12F-ATlw9BRHYL1n1weQ121lVwNnBTZiRdrVLdLTLX1u1goCRA3D6-vX1l58gLN8PQPJWYPaN4NtpfNwtuPDPJPMt2Zyt5kUvV3PNiaAtxti3D1lt15xt6vVvB7PbNILtttmsL3MvGASNovOtlZhtjaeKEZ1tYrc2PmE4iZmsKZndVdJNhrVN5rUpo58IYXO57ncXGoxkG56XI9uXK9XahVC6I4k8W50XI4YsopuoiwDqnFvdyZ24jdvdN1-3Cd39tdS18N7YQDr9msDFoAoD7FuliDuNK8qKmgGD6V9U6F-DwBM1nVjDq1lDkd1APm3N9KW1CiJQRtuPKPcpkj4AMj_D6tp0RPCKc6alUjwt73N3Yji6Gjwtjtq96j2jp3XtgHOvAdpj_jtjsd8D5jmlWjg9MWM2C2K2ednhSOZQemeOfWIVJmNQRObQZODmNOaxaJvPXhHoM0WgYSDiJYVlRIfULgdAWAEYQ6gpa5PuGuFBV4VAXYBpVziuPACabYchdzrpSwUUJKdQ5wBoSwBof6t2bUEbJKaL_6gpNp6hAJP265duCpAeSWaWWWBzOwfwI0F4PLuWTtJKVjVAFxdwRe1Ac8eTLuE-T0IpNCMWspNxILxPYzrWervbduOwCSbYrWfkL2iwANoQRERtGB1AVgHAX2NyN2UUc8eLgADUW59l1EsHdm1HPBvCSQAHF2Cy5Ju2k6BZulukp7BLA3Y_YFv5v1vVv1v9RNvtvduDvCpzbNIJvNZpvZv1Dot3Zzx1C1ZXb2hMBdrl4ZhXouI8cuacMtYAB1PELR1gaWN9AbsTPZg5p8LoZiWgC0Xz8HiIdHt8exoURH5Ho4tH2dS1-HmAXr9wfrl5OnpHiYFH6n_zWrBa48eSShNav0CtM0U6Ts09t92sYYVEbniKdoZeOIKACX18CtPCK4AADgUnV4rSiCwCSkHeUgUgrXJJgDcHKPCiXVNclYugynYDad5KyG8h-VNht8N8RxmCWG6Pkn--u-9lFAaCSgdgaE8WW5mlogKn3RrTuUSimAOReXM6N6FRJXE9Y-6_p9QD68-Rs7s67Ec8OrMwC_5URXk7VRLbPHVk1m1lNS4Go9p-RXGFqTSktrh0-w2UUOK2iFcGedUBJVWIuhJi4Fdq4FEfEYKGWirUasjFy5ljK7gAq6mlBf3hh0n4K-UPWEyZwdr_n5iGPCSPy_liBX2mNnIjVQn5387TSlVan6r61eGIPOZWP6n5n9YnP6X9H6CuPH2AT64_vPbEwByCK-RoXvboshxMldH4FMECAnU5esALGuYEgCUZiuUsRfvLFr6yI0mVxBvsLRd7i1R6mdGQm3SmhwMBiO9MfgAKmj1dHw69YMkoCsBhcIuUXGLuoTi4Jcku6hdgAAGooo4fbiPJ15iWwo-QqVTtHAZhxwSScCDCCzCTjswwIEEE2PtwdhuxnAlgQGq7CgTNcaEccLEHkUqhwIfsWEPxhHxr62x7YTsF2O7E9jex5uAcCSLIPkGKDXYX2bRmklcCgx2gKQMACMEQAklEin-doCjHijcCl2vA6THbEdjOxXYHsL2D7D9jOABB6nRmEQn_gtIb4unNmHoCkF3wiWpcQcBXH_hBdC-kfdfjsHGYSQR0XAdNhtlnBK44AuzfZpPAkR9AoAZQ-1jWEcG-tKAdNBmhIioDLxrWMbIRk0KAzFxWhLoRFs4LSCUBNAfjJYO0HmDqY886kI7I5lOycEJEVJcBFOXuBTt-W7NJljaz1YCsdhvQnACugbgZBNWFgSWCfzgC6gi21RTYYCyubAdZ2qAWmLELjjxCq48CDAoBD06SDU40g8iBkIaRnxshVcXIQfwdBqooOf8I-MUPYS3DmWGbCodsxgBY9ahkzaAPADHAPhGhmbe1G8Avg4jZwCzWwJtlgC-sHhkLRkL62OGBAHcI7fyC8Dsh3C2kNIjIBIkgCnRZWzI8xPsL-argERKrEqk0WKb25-g5QSkogl8DFM4sAiabP5wijMtWRdIgrKRg5Hc41Y8QRkHYFsCqYWAlXZWMkAeqa1Yg-IRUPiHRyGjCuxXTkZkBiLdBIAC4RYNNlIyVAfomokuDqJprwsFMWmZkuT3yB2i3RnOEuJGF1CihrR3OAMqRmeoRiMgGo4MRsMyhZAUgwoJkaDGxhLAjIKMG-gVjVFxj3RGw5lm0PppSh0MVaUNu-wlDTh02go1cOJiFBzVCxuw23O0NLGc10ed4Nhjz25HFiOhq4TivoCbGHD9WzLEcc2KVFnDvK6wh2JrHJHCBHhmxLZlUJRE1DDm7CSNBYl2pzjrme_LgeCMob5C1WRQtwqUO5GIiUgxIgMWSO5EUjdx-_E2GqldKYs8EsImsKeIRHlCUglQ6oQcydE1heseNebuwGe7xdlBDQOwBMA4zf8Ow8mGUSOE1oc0awfwK8QqObG3i6UC4BmlOhvHzjNEmEqUNkEsj9I-g8AGsf61qwOicohIi8auFYAFjfWY4w4eeIrGVoaWLVbCcy3QnvtZEglQicRK6BDjy2frE1hRMcRUSzxn4itHRITEMTeRBrIScxLD5ZsGRIkakaEBOHKiiw3Q6iZomGAjBn4gQXRjhJ3FviNxISLccZIXGxiO4sk7YYqyEmMSFJn4yccri5x85OJuEvER4AJE9jhhfzUGCbScxTCxhEw6aFMOobc4fBLE-oTpPWAtCexrY6POsCxCtDEpsUGITHDiEwIEhqLSeMkOAipC_h6Q3YZkPLiwIwRD4_IfG3LartsMhU6kcWBWEB0k0akjSd-JXG_iVh1AZ4PHVam0j2pqItcU8PvGH98hGzF8W4TLR9S2RlrTNLZIJbyTZmE49Kc8KjivC0ILXSQHQmTiMIXQAgfKfpzSFGddALoKUC5y1AE9_kbnO-JlFj7OB8JFyc6VrFgA5xgu4SQiAACkA4jXIiAKCIDhBoi28N6XXFC6XcAA0s4DdhOxAa54UUG7AaAMDLIoof6td11CWQ3Y-3ZGUkjcgpdPQugSACkGy6mx60JnCdrjJMStoKZPCTZIlCwhEzKIQ5W4okhLg_SPQnoRQokLqSgYHpwoNpJoHpm6YZg-qbnO1xS5MwRZlXGmW4jpk7xKIAiS4UsAER81queA1iGQLFltdKufMzpOREoQNJPQX0ILmqjezas2CpqQ3iR2d7fZqstvYBK6yRR8Qzw4xVZL0XNn5FLZ0DDZN0VhLgl7ZxsrEajXiA_1H6Z_C2RdCtlI45qGQdrh8AAYCA60-QkvijmDnChQ57s8OZ7KRz89_wVrfQXxD8BwBnZsxRUoNzuk8ywG6wUGE7MxJAEY0NYSMFCI7iX8Poq_cwLqESk4ALR_mRuUoTrLsBioCkdYJtHfD-yCAws6OeZJgDjIHwGPKhv0iN7lyKmVcoWlh1rkSINCIgCKJsD2RbVrYDIY8OximCrDGg2oOwGXBqY5Am6ImFHLpiJwEhugsgiUWwUglR8Ka6AB1sSSOpmSYgu1MGkzUZqOIeoMwWIItWSDI0ORzJY-XFgroIJDJT82jDqMOJawEa9cp8QiU_4ZMxwWTTDnbIwKZdiULKcgAW3gUCBm5UGUHDZlWG5MJZP87oO6UoWIJxaKEwqK3JYzkBnRUmBHkiFnQjhv-51LKFsF2AuhZcOQVYdqO_lsBGR-YLWj0DclygsQJCwrnsnPl9N355WUHFQoUXG1jsuOHenGkYVYh_aYpQTOeElCXpIwWIcZE9WZhkKqcpGMRX3LrqV08geYTTHQAZA7yZFWkB2iQsrrSR0cv_cRTQrYDdBd5iTYcNniaKuBf5HGCkHxD7Qo1glv8hkDEUQTzFggAinYHmAlD4gElqgSRa3FAXZ5VKVOD6JoqgBGLhkjiyeunVKXpRLFjC48ErEcFKlApp2X_A0rAT2DmlbfUYW4MQBRzr4tCnwa7VfYX1AyeiqDMbKgDTycgEkTpRkCVw5B3SYg_uewCUjzRigAAEmABUKuA8gC0DsrEHyBig7AK4HsrUV1KLAkocgBZjyCXoFl_6ZzNnmvrrEgyhVbekXTYV3LyakYC5beXKysKblYWJYP6SHlmBVUic1WLMGZkY9zeMAD2Wg2tmVQXezMhOTXxL4wrqsMfeefdJekXIl5mKmYLCqWCMzWksKuuWN1QgkqCh2wWFbYrvo2ZBC9KsTNg3MDUrqscAYwlzT6AO1xk-3IQDggx4cqtB02URl9OWhiqHFeYsBn8pI4VKmlnYNvq0p0WnYAyLvElHlgugKqHBvS9oKhGqCIAUggqmYFFPbE19BCCBfVGoBeS8r9A_Kk1cAX8BjzmYiLUGfYAhlQykoMMuGQjLdhIyUZbsNGRjKxluRCo7AyKMYS64nZ4gX0WFWlBFXYh7BKsfVJGGcG6I-gk3HwdVx2CwrQMTkENquC66Jr4ArswWXmrPBPgxFb4fsbUjzXSrhQpi5lHPx2BWLOADKiwCWrgBlqu1CBFlhkDPy1IrVzMNgZwCWCCwJVlqxBBQPmwxqoAcazlWlDnULqtB3Mz1DL28H29iVnKhAvNlYXLqsVoqzDBCrzlTAzwKc59mZ1xWLzK5Z4ceTgyDlxzSVqsZOXHMpXpRBlaNC9d5FfW_1SFGCh_OlGzkXqCBohEqqwuA1xzvGtYVhZ-sfV_rwVH4dFXxA5XVJKAK7N2Xbz2AjBUAJxEjpTkWY4L_wotP2gNQkRa8T2RGzAWLQo2YxyNaASjRHITg0aGNdGy1nHKuDnq458Klieuyo0bJs5ojWnORsPXXiiVzMnjZC38BFyFSGwguTJo1IdxJN64pJVPMQQzzONAc1TbMv8wWzYokKmvqhFPRz1pYGG9KJ_Xw0jolZEtcpmRsSUTypocOBlZ_Rexjg-akYOzYMva5ObBmeEggJcPKZeAl-AG2sC5vllT8n-8sP4gJ0Fn3r2u5TC-EsF9RJbup46_iR_B6CXsf09WfbrDgLXOab-l6VCHFsq6kpi4SW6IClqJFGh0tACetE-1JVQBctUSfLb5u_Y1dABdXDAFRxC0WAXNJAtWRgBH5DyJOpMwvD1pY61YXNJM8vEG2G2YZ9Nfg_cQpz5hFhUAp0z1N8m3VoaTiImmYMZt3yma_MEKyMF9HfAvDMpccbOVTNKRayDpvwzmMtrVQIyoubsECUkmUESR2gL267u9tdhGxKpNfb2Ndy276g3IYYv3m7HPArctu6hSwGlHaDA63YoO8HWFzkHQ7YdlgAHaNKB3nhruUiBoPtykT-8idIOn2Kjsh0Y6ge8Or7UjoJ1E6SdUiMnWDoh3o6Yd1O7HRCPyEKCkoooa7g7F1BJQdu4Y2nZYF5387BdwuznQeJr72ADQbkV2FtyhmS7YZCOuXWDsV3uwBdQu2GdLrW18Qkdf292PYBGzOAwxCOw3dFg-3G7TdYYiqTjr4iRJyci8U1JZnw0WaQtLm2rD5J-1vardrsJXi_DjJXBLMYfO8fEUB18RYCIoOPLRlNSf1FZ-RFLZ2AyAPgyFRfTsrAUFBpQXQYwSlh9gRyxVJVh6KFXtKyDoBY9TytKHGVT05BtFiwvMJsp2U16nl8gN2Dss37wAlYgoE5WcvGCZ7u9MwOKYVtKJAKIoPOvncrp12ihA9okCPJprL0zVK9D4MPW-NMxMbkcC7NPMW2Vhvkscqq7IHgQ32Cbt9keEtkRkQ0gMsFa_FvQ-HD15Ca-R6RjpXrP636zsLHSMAntHBW0Lek24fXPVH0-T1dCuvHVrpV0z7VwWkOfZ2HOUR5a9q-uqVHvyJpQTZ1tavnxBb0Y9j9ozTA-wlMyUK4DHcPuZDmwNb6bhNbBOvvob1nZaspB6mafooPF7L6cnJ7fkOzYep68Z_LzZVyc2W8v9qB3_XahL019DeKBleQXvQOUNFqocVRgLUzkJwT9BHCWvXkWyg5IBMh3YMWTaWH6pSrcy_frqmBjU5DSK22hLUWzqH94o-7g45qT2rgpp71D1FgMcNloK0KdJdKDDFpi1fUiaTAEsE8N-140PUpNO-osBBb5YVwMWmEc7SuH3A4ufVBEeTqxHMY-qGI6gHFy6hwgCR7AUkciAZGkp3qLIlrGfgEBJkukBw0EkKNqaSjqWoeZwJGlc6RDqFLSqagHG3sP9I6HyUjpR2s6od7OuHRIigPB6HyplRbXuMj1R9mql-Gykh35rpQP2plSzZM0GHKM8dbsencTsJ1M7kd5Ono1Tv6PrBBj8-3wLSxmOjH6jMuviDNvHaF4z-7uwrc-p_0IqQtj45A_MvENxU196UOg2YlHZjag2Kq6g0fvkOb76DpeP4zgiYM30WD4xyRN_Tjln8rWixtdssct2gSbdooM3RAc0hB6jjVrUYxdqEEbS1BrXP2u121kSDCpDAG6fAIVn9gIANQWdNLAR7ChKarM9oANUyIZA4gFyC0GXBLGvhZZ01GAApuHLYgD6fNcmd0UkDdFRT8rLWQLPYN4RODbJ1LtdsE1kmBZ9gB2EkgUGwy3YWphoB6rdieJdQBoeGeoXsBLd9Q1O8mfjNkQzQAJ_WICUbqW0wmkdN4XUEknULahLB8od056e9POA9daqJHWrAaDngEeqOmnX6dWNhmIzUZ4M_kOxnahEu7sOM5GbDHRn2gyZ1M27HTMJnzjBhlY9dxNNmmEZlpn2Dadp2rHSz-oc0xWetNw7EzuO37Z6e9heqJd6hQ7tWdbM6mtdiXZXV2ebN8RQZtA5gVDu9MI7RzkXcc0D21DDmpgSO9QolwaBqw0z4ZjM3zot2rHlz0XNc3mY3MFmxjDuiY_5qn5n8ojpxdo0sfmBXB_TXpn0wMZxMwGqaU_M4xHpPOwmJTpqTzRIuoC8GP9Huv_c0JH3e6UTsZw85mdn1DGyNtR__bvikJHlhTcJWU3AHFMS15tfWkfYqaNyiczUf51AD5vv2sGa-e9D6mfwGqOknjgFwrWQq939jljOZpXfmaguQHnztwyi0hYQPHAR9KJcEqhfQsfVMLahKTJoSmDQTAlqwD8sjQsOqMr5yNCoAfOklaiP5PFgAzha1x4XlCB6Ivk7U63SwuDPEXHhoglF-ok0OezdqTTjrmWdKa6dgKDVst3G56dF0CwxdvPFnjTppus-WatPU7oLRxkquamMs0Bus3h-OqFe6k-GxeuaNjSoW4sua-LqyAS7KHc1_EXNGl7-lpbqMfmGjfEAbUvUoDi4KL59Pg7Rc90j78rqAaWJGFyx-Hk6YdXCnVewFh1s05RjUGPUiDaXXTn5yq-rNNROXd8LlgA2BfcvTm6BsXOc_Fd4tIWRTGItCylYwtpXsLShnNlleIswmy0wsygBrEbQLh7AmaV_c1N8NWWgjx1hy6UwGsXohrCFyq9Va1M6mtucMg00adrP1nfL_R0y1Faq2nXTOZaLq8edyvSgSuiA0_qakvOXWicDxgC0IcQN8Ch0bxx45CbVSsBvoEkC4RFtqyXmwYoMS819jQAOxqtuNw1MUcYI42p-iOLAATYvGvmCuFNkmyEfGroBd2G-_w6PVxBM28AFaTYEfiuAs3SNftbm6PkD1dgCgOMfXnBZAsAHbrlAGq5ZZRv-0zLx1-W4Ea-s_QE4f17Kw_r4hiw2GtC78-lAWp62SrNF5y88fyEy0ZxYAAgG5B8ASRwYSwXCpIdfM3BIgooI_DbbSigxDbISmOuzYmBLBvbu1GOoLcIC-DQyjrJ0OEG6CwArbLNHINRkIAKYwAAiCCSOEwB9gr57gTvWKPHR0hG0jIJ2xbfNgEBmTAgSmvcXpNb0mTLJx8EXats22A7cBIO37WAUMmkkqAPkwzVYjd1-gWAKtGqi8Au2iAbt0fKXfLt0mGTcAau2XcfCD2Igw9921gEbtG3R6rdhcO3c7uVce79J_u_kJjsl2a7zgOXnmAJQFxLbB9me-HSkyB23Uo9OAMfadsJ2L7OUI-_EBPvO357I9wgGPfQBX3l0Td2-44fvtv3Fs9i6IPAhZBUAcGZyQTCJg4RYg2hBRWG0zRFB4AuFfEHLAA5joTRN7Z-M-8XZtu72RD-wPAKYowf_2V7jhnB0IH5Pn8h7X96233aduXnaptYH4Kg53Qag0HXejcgbxIe82SHZD6ctmlXBbVUQnD1B-g-nKNW6xzqgR-EFIfOro0-6RbPRcKLgXruu51c-ufjOsXvUhxl8yVX3s_3X7UA7rE_ZMfH2_xBWS8-hlX2bQCTGnTaToLJP3bKThnLpBOu-m6w_pAMu0UTN0AetPqcEeiAg9DhQBIA5NAoE5yJzxwLQgTgdUTImgQAdmS8FeOTUkDJOdmRM5ivaO7jLw7EGT3JwLM2BYBpYooFIB4HJnbZZ0cTrobzIFk87ou9gL1T6shn2BxduoCc9qHB0IzLASwJp4adaewz2nnT5HY7HPCQy5zvTuHbaeoAEzNTD1s09DJGfyCkkN4RQW5EmdLBrB05tyLzptMqm8ZkfLOzrIdDWCFBSg88FQg0E_ZtBNs0KQLIETjJmZWjRTgQEWQnxNOKK_BftP5k7xMVaAXLZEHfgqDMnMQWp4C9QDAuiA78e3YDcaDqFXt93S559vlC-6UXtg88AuY8uYurn2537X7BsFXOcXvsUUGDP1NjOVnGJm7pDIRk86LTvvLbtqAR1kuKXHTvnV0-peQyvY5phl_YCZdB9CzIZ1Y4M5afcuCXNglc-K-9UjOcX7piIfdwlc9nwh5gol9y6Nn5CBEbzvmBrClDChULCJu1SFALVLAugYAcZEkjLtkK1DxrlrZmtRzFwlS7JhmsKDfC6Hr95gTOo5Adf6GM9YkQbna59dIRUcc1x--bEtdl2Me5ryN8yS0MH6cg80Bgn3tBgxvEEVrqAGHadu57DXfAQonNYBM452lKBOa33IHklMsnaam3mm7AQZuAENvCF_AE4J96a3GQOtyv09dSkbe3r01_2Lms7o_oqFlR8NJysXHxwlWZmWfwZnbsms-IAqJbw6PLGMXRL1F-eCfPQHbhtWZNp1n9sjagUBmqPdCu3WVQ05lUJEwMPcuG6V3WL9d0MZ-zvnHxQtSqBlTP78H3jisKctZ0GzZJKA1gNFFAKXXxAtY6erV68e_2N8baCcH7FyzHCAIT3xhvhiWqdvevsVchlFREAlVEPHZMymgoG55ohQbZYixbF12j2zHu6eAMMGV25RuU8Kr_LslJkijq8FIVaLrsAIkjkfKPDmajzMZip0fzoDHpjw0REtWAdjYXUUIDTNdMRLcpl2jMPWXyKL-wlARsZxjaCU1wlLdAfT6Fd785K6sABWuQEQnF0P0sQI0KnL0-ShkgCIOWNzjsDHyX5fuIbOp_lCd7rV2ALiMg9I-ufbba2oJ-2V-bJ3M88ZTsjJg8jV18g1Abj7lQHLuUi9fxNVOJi8_M8ZuA6vz7DQETZA0KIXroOQBJERfWjwj2j_ZXhxCfYHfy2DxADSgKRlQnAOsPVj7WwVqvEAVgawLwLTLxkKBnD0AVBgQAw7gGixZ18WWKqWl8b6g-wUeXdKlVSsPpe4KAojLg6tRBBiBDQAF2VCxhEpVBhZTfvpYf7zeAB5fa1EOlA3_aUN71WuCZvy-RALk_QBzfE6C32pbWE29ZJtvjGIlHMtGgzpt6kOcbyd6m8uD-lQFS7y9_RTXfsx-3xkJKRKrJxlvSDkMveTixQKIJy-aztZJExc4tMTnRIAEG6BILYPLIBSw890TmBexUoe8oEDiAuKYQZi3xXEHMBOeYacNHxZ3uK6OjzqU1GVZY29Q8r8PBAcjDaPr42y71qANNRuqALzCIAUwmVVFPFXOBIT2ZSMJnV5-Q1iy8DHehvDGC561G36J8DKtR98QpqOPg4OYB0GhTTPRwICiQvkiNbxkSywkmGRE8s6xPEnsTMxF_m-pZPwx2ZAp4bE0AiQb86YDEv73Hgs92npTLp5gD6fDPdv4zwYVgfmeDPMIBKIRjOR2fJgDn5IE5_8adkvP7n20vkNsAziI_HX63z94rpfejvE3xwdN8u_L5yMjokZcWUz_Hhs_nNO14r9TqoxQYUMUH1DQL8WeSmnnkdbzfP0t_ufbfqNF387_d_8_4fvv_NAS-D-E_ly_Aqh7g9mIBEqa5wdWqeoS_oAkUxgl4_l-t_d_pwwZvBdKwCIV1sAMHGe-ytqobOGVHb697Si5OSUb7x4x-4WMhbiiz7qcp_vuPgek9D3yi9GaMZSVR2APSHV4C-Eiz4h7_Zo3ix6qUqznoobdOWAt-EJ91gAMqP_yQCAArDXy8q0WANMpH_YHywDd8ZANwD6qcPTv9v3cZFEQkFcLzcRT3WAEk8LXNJVkVuffbiO8rfdTRsUQtLrlz1J3ND1gBkPINxX8dBDDxl8sPM9SgBQXPDwdoOA63wvgnbHgVOh41WQMcYbZEvyr87nHwSdsS_W1XYDy_Ev3WBlQdNQelsgeYXaAKqcwM3ITFMxRJQfsd-AZVSMM8EkR8VPiWiASJOwFTkrA9ACIkPAgSXNU-IOGn8CS4CSFbco0bZWAAHA4uHkA_A7BngBigXr1z8a-cIIECatEILsBIcYIPiChGE93mhsgzwN5JKoKuWkDi4bMSuAaOQIKmAC5OIM8Cl1WrVA1mSLIIaD69ItzNpuoAoIElgsAsTLd1lKoIGwskZmWlgkoBIFqCBJNKHCDQYaIPmAs3Tn3yFlA-0hd0VtXgVhUpg6rHfgUYEoI2D2CSoLmCa-VYQECn8PQMhxNAv73cFtA7MRODdVX7zO9EAC4LWDn3MoMKh3SXYI-g7_BIAyw5qY1AHVHEDHkogbeBYOZklgG3gODqsYELaZUg7FVUJQcduX5NO5GAEx8WUD4N2lrbQcB-CQ2H8h3pnAkcA3gMQU0Sp9WUEBUDEFFLSDmpTqOEBEhpsWEIZp4QxEMWpPgmgG-CRQX4IRxbA5tSxAGQ1EILgB1RIA7Vkgw9zcD0AeMWKYJIekJRCmQmIHgASgzkIlDEgTYMdtvafIRnQoADQ2FDugUUORCvgtEOZCpQjkPFDtQkSE2DUYIgiqkUQ3UAmQX4fYE9t2gWIGoAciSdAsDbQ1AAtABQeWk4hNyc1E5xygfrxlCDQ3kOzx5oEX32Ac_KnHkhSQmgBDCoMLrj1C5qcjDRo1QzulG5SlGoIaDiyD726BPuOpRs4hgygBGCoAMYJLh5vYpkzDSlbMPWDcw0YJaD3vIDxh85sSZWLofsMTBUxNaYIB-B0gnIJR8dRTAGYZJ4OO2XQYAPEAQVCub9zzDs8NVGFBZENAHiAXnFfwucsXSpSIMTsR8DlVtVJZVdpM6eQMYVK-YwgKxQcCcNkhpwxBEndWg02hoNs8YulgcBJMcCuATgf-TExwwqYCvkFg1f1CUZFY-SK4K6J1nntdMB6nqcjgM-B5Dzwu-iAiX0O103CulY4I6gQItgLkDDA64KcEzgxACiA0ARwG6FfQ7kJFBEgev1GgYwxkL9CgI6eigxcInnynCoANUIst3aQxhmwPlYqmgjiIuMPiByIiSH3DSImcOKCHw80NAR9gTYOIjZQpILqVXlDehoj6wu31D9cQD8l4x5gcwBbDzANsMbDsAK6iiZkaFiLRoFOMdBZAzUboC_CTQMRXGUfGB6lD84gbehUx6I0iPIjNMafFdEtqGXmZJ1ANHzgBtgCAG-gbOQzCoji6YTGeksJdAGlNfKPMEbDYHUP1WEgI0yPjD3RCiKgAXlSXE3oiqO-jLDn3CsPzDUw272KZ3SOKIwCEogsIG5qwoqkIiQoxiLCjRQ79xzC8wzKNGUDveaE8iCJIULCjp0aQ33gEwm0mijPlbPC65VhVCOFAKnDwCH4bqL7UjDdw0zHCD6EboUaDf8QaL_DC3U8MIjkHNqLfQOoypzShSncp0qdIwMaNmjSFICJmjuhTqO6i5wCSEiDNouaPeABAJQGb1EEdqIEBOo08BOjdlM6LWjLojwBOVIoqiLyiyIgqPoIgI_VQvRAoK5XoIXBMcHmFOgwFkol0ABmypxAYqzALFfcC9xgB-oVwK8jyIw7HaBzxPqNKUKoswOqjgxaCN5t0YtULBQIURECfAtlJbkshqXfU11ABdOGVFB9uG8HmEDoi6MqcdoliTqUL4WGOVDVQsKMRjkY6CPyC6onYAaifoiwFqiEgdmODE8YhBAJj2gImPPASY2VyetyYsMUW5qY2mNuitohmOclfcfiI3odw6Uh9CUQhiNejgxCaKcxDvTkP1iEY0CkIj-AlfytiUVdfyF8gIzf03U6vbgLUAyQM0ItDWgcIEa10IikLlCoY-rFNizI90WzxxlQSK7xgGStA7c2VfsJGA0VEdyL5kGLEDU0wEBxADFoAKRTdkYkMTBYCwELgLAQvPEDxr5kJTbHTiRICYIjdGFYuMDEwfboEDCq4v0D712gH4BdAc_VhR0E7Y4Xy39nY_OOZgphVomDCphKuNLisIxgiHiFEESFv98hV1FkF2vTOKYDu4-A2zjxkQuMuMRA-DxfDpfJG3yEUPSqDLUd499BBIawPgL-g0g6D1DI2vF2OwB9Ah2mZk-1JcK89NVeVTXDiyR5TT0nbR5Wvj1A3eIwIlwx-NXC--F-KO8348O36oSRRuHHjI_G2KWCIgTEFgBxkVOJLiIEmqxPiwQpeNYDX4mxVUMBoiuK6VbAG8HVIyo8Hw9do4qBJh8tifIXCDdQFSWSAwgnBMWUC4SUAzj7MBNxKZIoFtzoT9pBhJy9KQkBK0lhQSQC4TGRe1ALAsoepXL8L4Vr0pAxoCanaAKg6bFISc9FBMqhJcNdQ38RfYZHmEME12PlAHwiwIgULQQRJEhs1NBLAQqExhIniVEjuMdjRfPONT1e4nRJRC9EiagMTwgJInic1o4xNWjuhcZVUShfaxI0TbE_9HsTphRxJ38EgdxO6FjE3ZxoFnAfZyW44dAMg8AzQbYGg0X0KRJl4m4WRJ3o4eYaNoSc4xZXGj3Sfr2t8Hww7xKSUQzfybgIkt104J5EpRKWDSEyxIDlO4p2K0TsAKYV0S-4qpMMSR45gPGQzE7hP9CbSXxJaSbEheKCTtEkJLmoLAtxL_DjEv8MSTkk1JNWBt6JGMSAG4N9CyTArUzG-94IspMaV4Iqv3z9oiBcGwiCUO7y-U1UbxXtV1NOAAQTq47PFIT2yNRK7i2kpe3lB-48IAsCx4xkSilQeeuMORFQ_YJOTZ0e5OHjxIJykOoaAaeTuSwExeEhxBo8mlGADJLekITa4-UABSZoeSGbjAUqnAUScsepP_AO47PH8SkEQJK88-4y0K-TB4sBOHjs1FqJBTYUtOIgTJccZVBxEUvSRRTZ0QpguTs8JJIlAUkxqPypysfFJjjmZEZNJTsIclOCTOk5z3bQDE6hM8SOEgZMZEhPPry8TU5E8N0UvlUVKeSrE9RLJTxkilIcTpkqYVoAEiOZMYINU9aKvppsflNcBBU7qilo1GG9iPkaCV0W0i5QMRXGpCwb3zPUYYuUFgROadJJy8kIP0DkSRUwlMUTY46rCaSXVUZICSjUmVNCT5QUNPrQYABVPMTekkxIyAVUixOGT9U15KATk001NTSKMdNLyIhAdHEzTBkpVPySBAPNKGSVKbBPrShozVOYTATSZRyThQH2J5CIU56KO99kiCL2Sy_Yv0OTEI5COdw1o3tMwidAtyJKZdknpRuD-lSdPOiZ0oxM1jQwstLDSM0uZMlxdUwlJGSSUg1KlSk0yZNlS_w9dL9js8a1NZThUmxyWTVvTn3SSIpDIC2S6kmNPXi9U5pMlxJUzROLTz0lNM6BnVDIBrTfk0GJg1lU6hK8Zyse1MdSQyD6AWCI0h9IFToNcLFFSbOGgONgBJegP8xSEvpPQTOAs9OwAhPVhUaT44_IW0htEZ1hnjJRc2XxFytEhRX1cgMuyWBHBCGyygyAwQzcIXjeGxwCJDI-Ng9GwhD2I0kcHQSQ9hDVeO59T4m2XEDi9VS20hyoAtVKoJwE4HgBpoKYAUi-IV-Elo5ffeKJSC1OAFBhVhB8FB8O0toLPC9gqPWUzihMfV5sGM-YBzEdYlJQvhXaE3QUFlnWWMhlnAdZ02dJnBflClESAtVb4lYNKEcECqLeiOp19BzPVDRodzKiw6zblzWcNnQGi2dnAMMBAz_1EqgzUQ3QCgLc7beoU3SlMh1zyzYAUKHCg0oKGGxgjIZZOEyN4_VJyys1CrXziQY8dVlAJVRrIRVT_UMltdpMwjx_jO-YpOnULocbwATRoEzPf1zMyaKlJplGQPKgYstzKWdEsrzOSy_M9LJClCfBdOhUgXANPfhP9NvhWh5s7yWLh-gj-LRt2smX0CtbhCbO6xOs85XU1rHdwmWMsQd-FCsqUggAqCYtD6AfDPsssX6CTMkdTzdxCBbOLJ4szzLadVs1LP8zX0-ORtJ5oaMWaAYcskHCAQgcdxtVYYhtACZMs3xWwBEQc-AlFDJLlSoj9MhcOAIlKfEAtBs8NhMpzicteIPi2iedI74bRP-JY4KlPvkRjYFLehrVGclUmGQPjH6I74MAB-JXDWcwCidcG_GHO5yt0knIcVzKIakjVvUOrPbixwKtSdidBStRPTSePyHDZiUAHO0T9ecZOi1VHEfQv9RNYlB-x_rZDSmBXUUuzqR_IGAFoyzZdKBGBhQO3MhRHc4ZA4zObfjOosYbIs1EMEbCDxg8-BdeI31xMs3MWwXcgQDdzEQD3MXDG1OwMjAo8mPIdyHYZeN60izCJEWB6sHWAkhk8xlFjy08xBH6C51YN2cgBaMcB1deBPVwuRULfr3zUHXJYHzz7cuPJwB6hebCVybZBrMMyxfVrM-kZfUvNa1uVfIS0zrqFIB01-fZRPKx2yVXNF91VOTPVVUIFnOKg2c55Ssy3UoAmGCuwDr1Jymc7nE1VWAsQT5C1UCbOr0tw5ZToJVlctyb1gAfZUOVb85mF70g0JfxblO3GzFHyCgHTVyZ6tb0ImygcebDEUt89AGeYE85tVWEgC6xTUA-Q0jDUy4ADTJCBt8iugZBIAHwAMjNgYrjgFMJV6ACAUcicHEjmSAKPQKLIbTFxAbqPtCJyCsVqMxZcwrsAfAz8sBCAK1wlZRHVr89gEiC78o5UfzTlZ_Omw1UBYPAi49WEzYjYAKvNOh_McApoK183gsTlB018SpwAQgIVOgBCzSV3Drs6gqShaCx7PEIC1Z_O6xVCBsKEyC1LwTAR2AIagWDU7YrJDdOAF_J1jDFTrLFzHMhv12p9XZhF3JHxAtVniGUhgskL01IwtWEzkhYQsySmPvnuzvCjQt_skYvwsQQ50qnEeVfCh12MK307v06zxkYVI4ViueTCgdsvKYAEgXQ5mGkKa-D_NnAy1dXJVzNcgMjVRc9B1TaBUbcZIr89VA1W8AjVE1RiKplfISqLL47zyKLx8gbIwBn4VEGFytVVALqwyMv6GqKcEV2gqUF8-ot-9GirAGaKai1oreULaUQK7yyiruO6K-1bXNiBiUDop7j9ctrMiAJVR5Xz4wsQZiE8wtI9wk0LcqtBc0CAmY3hVMBQTTwDJ4jFTHBz0EUEoBp5ZFEZ5x0WgHzh4kbelNQ5ZAtWYzOsj4oiBnAAAEUxsed2GK1UVCEcBUMWRGHRFFMGCzz5HEN2YyC4DpAqDyoHZgaFLCxEAhKxGGEp1h5AbMWDIES2YCRKCZEbDGwJIKz0wARsQ00UYuUL6X-o5mAoBMxEgWFBpL5nWRDi9t43fVzDm49ZMGAvoDNzSgxXYZxpcOXKLG6cZnSwDFjIUQmPm45ddQkshCdeYURKBSlIHpLSMztw18ASmkBJQBJN9F2oGVOGkkI4gT4qSgxSwo0lLrXMVRWohfFaJDYM89VNtYgEPIH7kJICAOY8RIxBn_AnOHBkjBigOMhOoMcyUWOgMRHIB2VOsh8BOU9I6NkBL_wLoFocUysjNXQooyXFYUug0KVl8ZsefK1pX_A7M9LIM3RCgBdqUfUoLEEY1RqLTxRwQXCGynBC4BfcRMq0KN6IMnVVuTZtQXQ-QxAzfQQy5WCF8By7inOLKAvPx-KeIP4pgASSstT-VP8L3K4zfctwjUcPoHyTZdKXTl1lKeXOlwi4xdRl1TNtQfyxfMHFJfKXKwEeVUYVOyliS7wuaEUoQITSrWAx4Ly2YAPzrykbPeKny7gNZY5yl8t1zp1SQNWBPi58tlAaQdLAgqgS1MppBzEBIHl9fyoAkAq2kS8pmASOBOD7LzFNcq6z-7JCuGQUKwCtXBAKUsvwt_y8vQXLlyispI8V_AQ3hxMBcPOPchA8rC58b41YvQ9KATDxUoZynLwor8K-PIEAm1cxVtKIgdPOGKCsf13gB6S6UrF1mnPcp3KFS6Lldgpnb0yVKVSgmOzxJY6l0xlPTNyAaB5zX3BEqvixhVWFWy4BRsKPoNVJ6wpMLoHxjugBRU6yfU5uhjiiSvalT8KfRtzPkh4VRSppkgEkpZpqAcUt9Lw4aTD0qTQmvn4DQSuZTYKdlIyut9Oyg5VFZfi8vWKBJcTvNtif0qiPiKQ3U9MiqHXUzN9wD_L5U3LljF1xcLvoq5U8qwYTyvpKIM5YptIrKxKlDybZMukzw1EzrNPS4q28qirak2-h8YsoJ7G6BHKh6kWoFPez2c48gXWjOg0gMvXRpFPJIBTFzAdgU5zZ0cZRlyf40AvMVHlaVKgKKyvr3G9HK4si6qulO8pEjBUZqoyr40v9J2r2k-UE6zjEvKqxK18n6PSq1_ZpOuriM95P1V4IiwNuCuAeZP4qG8p6pTLkHcIPoKqlX-JFyV8sFFbSxswbkBq7ymGtSL50urOnii8sBGv9540bOzzwglMsEjFxCcu1jLiggEv9zc6rBnViKrCpJQByisuDKcAUMrHKN0f_PWtPzO0mZkqLOFTQU5iKmjQ4qKk21ICfcshVIxLOITCLAZgZIFhjjSPsJJJFFeoGsAdRHUVAFcgLWByAWAbIqGwPASPwuJ0CshjZKswY0VETqAIbG_4rRQ4muScgRsOJ9dMtSwQsRrcfVFdZKoZ25czy24S5qO4Ka2Gs3Le2uu4zBSIQW5natiw3crgNVkBRMMITxPzcPegid5TZbmpt4Q6jVVVYhi4qCt446uyzwT1SUXkrROQWYOQcNwh2DLzQgn3Kb4xMjQLNzN4hHA6rQHKTC6F8VBT27CEEXsKNFXcgvKSYUcpWoeoVIvsAcrY0yTMfDm6lvPRqzkCSGlVj_WVVWEbyrpS0Ups3HCwTnc_uvdzB6og1go8CUjHCKIJdAoUVvU-Wl2komIyLcqhq5TM9FjgejBsgDCDbLJoC1VcASskLW3Jbq48_zGbyF63dW6zVLJKtnKh0T1IU84sCS2EDnWMtRHrmc1cCvLThbVS3DpcORTRTf8POoLqjMi5TMyqDCzPWAq0W1z_r2ScnNa85FO-M2rPykBvErQtEfSoy5FOPOAb9pFzMYyLlZrMWV6hShv2l2M5muPVz40Dz4y6K4uqg8e6uNCEzVikwyYqYfViq_ilgsQM4qJA9-KO9Z5OnP_AiPXuvqwYGz-II9bYwzPMNhSsCs_xpYfVHIraAT2xzrhPN6kcqZI_sOyAOfQdFwVjFbBvdL60hlXcL8q6KsGiuAK4mgbDMqYJ6qjY4t26hBogFLRTPadKEGiWlLVLVVJlV6qJT3qyIoddT0zsqmFHBYxIP9vGg7IBV-orxo4S28su2cadDS5PaKT4mzNhNRCrOlddwEOa0P92A_OocbOyq1ISb28tKvYq3qq6uCacq-YWKbDiogAlVHqxEHXoI4iOIwxzIVOTK9xwSr0a9avR5TJyXCRr2a9WvGQtnjxkozJ69-gzsqL9uq313XzpGjJqxAYGxxqsbNYiOpayz-RdMm8K6XxvaC6i04L-qQfZ4LoJOy4fJSCOE8GsXDBspOspJn48bIeyrK9lIuaRvCzM8ahsrpVczEYjQ1bKMAd1y-UI7NxGHL6a0cqfBN6yUVgK7w0fPEVfGaPJbr_05eNVBbUliqW8V0WsJvp7yTJV2B4fSUR1EtYAQF2ocgIOBJKm8mwFETjwGrnnB9GnIE0w363io0aJwWAVRAcaPrHYA9ufblWhNgVRmxaTCxWuZpaWv4oRlDuYnimaC1EkuhKGShZpKy9A3ZpyAy_AupmKEI24KMqciAkqWK76cEpFLxWpUnTDf8DVs-KtWmVpeJSMI2sNFmgBH1uoUJPsILk7w5JjpAeKucpyAdMgosuN-KtRrFY6W9-2d5jq4ZDdbkqmalyY1ARFlOrioC0AVy4mipgKw3GuFNizzk4sKgibSGzG9agk9RvaDJcRNv4qp7SgF9b36vhkhqbmipWmbiyO8sLoiCDNtUb7WtBm9ZflEEqsbFZUVs1aYSgjJMLw4hDLaKaAaHx6pVwVGqQtiG-9zqL2ynNJtTL6PA3Sgk2zNuzaPWzEKm0R9flqyBKKoAkQrlGzfKzaK2yVhfrJbBC1NyeGzGq6zdxRx0ZgOZFvlcdvhFIRTgqTDzg8BqgXWHohsGMABDhqgAWWL4j3Ha2elyZA5CC4bpZKSCpYAFCqTZ3iikAI4cmpKAFZQ6iwDMr89VwCOYuwGQhvgC8RsXFAIwCRgg6_2x2laQ3IVog0NkOoFDBcanOBBlMMRCDqedz9SvViQGOTPBf0jnG7RgAqOqWWrhhXfISF1tQZHTC4PVBHUY7mO8GRxcmLd2HdUwZBHW46OOj1RxcrTXUH3NeOhHRE6xOljrBlNXN4tQ6dgCDoywO4d-wsUYYwLLNsLVTslRLSPK4C3RIkRIF_RutdZSczQcc-vMAvvNTsJ9nmWrTwIzO6zoyCQCwSsTzAY4_PyEC5NCgG5JcQGJTx0QzIPjawY9LR86dQtpCoBhQHSCyAJQ34JnwvOwLoAjgu-hDC6pw_4oNDfgvLKD9oum0m864uyUJC7hAAQHC7kujCJy60uwFnMoB5ZtLmN_ADzt3IsulLsBZQu_LqS7x2OroUJM9RzqEqyy2gE71BynWI1QmfRgED8iU8_SmjBu23gdAJIPrs7IXlYSNBxJug-WKhO9abksyfoxbrY9jgLIE70noqnBbbWmyOIYar9aOK3dLO6gArRO9bfin5qqzsjG6QAq7vEx31IZlPVv9GDu2BLhTZuO6PwDTr19zzAlEvbvAVTvGFCfKtFYVasYm2iBg6qflBhkwBm2JsyjS82UdVwLXmKNwegrl4cEe1wEptYeiHq79h3A9FIwtGQ4m5NXFW4lN8ogKYG8V8gWcCtzv9XUByhnuy4UshhQUntfc2-azi7B_PFTDRsawleNngtOuQuX9d9XTuRLKsAzrrEjO8W326izMYVYdO1fGzB7GgIXsZFNedHqR7TCvTuF7NefGzKM1exXrR6MelICuALQbXpEhh3c4U6auuCrwkgDc8ygm62-ELLHAruhrxq8Bux3qa8WvGbPmCNu3nvW6lYO3s71uvTWNm7Peg-QG7Fu0jxeJQ-8_TCyg-tFqaios8zWj61lVbowBw-27vkwberrqm6n0_7I4x0-9vjCsk0f3quISaAbrGE8bf3GiAXiUvtB7ZjX1AiyYojRQ4xioKvuV6K-nemb7KbHPtMtO271Faieo73rz7IreOkL7vUUHG0h2e2Dxri3mqABuoBuwMq-Vp-ucFYEJIZMCMhB5JFqdS-vBfr6aYYsvqptK-nfph7doykkp6VCGbtMwt-pvoP7le2cH37KAOmz76F-tDKrraVMzjzxXy--RZps7LgFzsR2_7vv65wIair7NeucGKhkwbGCUhIcMfrS8J-7KOA9iE7BTPAae-MlqR6exnuiB9spWBcRwfRDSjjsFb3RF56CCPt31FYVPtazVwMYRx74ofNnwFUyWpBbVtgPHFYUSAi9FXKLG_ISzylgahrH1x1F4EuFrhOPBoaMqOrTWi2M5VVohzk_eCmawPFhvmxQcDfRb5myyGu74WOXvje8JISvheI9DLPvmaDHaKquzusahumxEtaQu6FusdGwK5-BiPHQx-gwQikR_ACDuf9akELJ2bp6lxtpVnBxoJsHakOwbgApSrHCSaZW3_HqERoyHGCHEYyMMgZvB-wfLKSqXQY8Hc-6bDiGxhV7oRs6eiLXYzlkr3TszpMbUCY7eOt2I3c9u0EiiG4ABwfoVbB_wAzdNBz12763gve0IN9K_n131K9ZgchsiNWQeWwnXRGLM6_m9Ivx7svcvVpUVaNAaPlkGEz00wpqVqpmolMg-TsRI_OoYtUacDHH40s5UZimZtYq5OgrC6_Ch_ath_zC4GpmQQfWFGq2Cq1h4KqAHG4Q0V8oTr0Ki6EwrSsK9BI5cKkiroAzS1wBGBZTCDp66uaADocGEbDnAlBAOlwuA72afzEyAPhgjoOztYuX0Tbfh23uXqRIrQe27wqviHBHnuv4dSATVCDvl84RzAfeiqIjdUVtOIX3Bl5B-pNAqqqcMHmj6KRurCRiDMeABpGCsdoC2oj8RkagwkY2RCiA2RiwF6qURwwyA6BWNKG0hnu9LCU8ffBDunACgbEbRHakL4b5GabJAQRskBtIYK4GegQFJ6Vo94fRGoRvqvwbPaqiJ8kBO_IchSg6s6usL_Y-KTJVYOjDv3hsR5wouQQRl-CZjSlZIYu6FRztAX5_Ys7qbgAtd0da7jwX3C-zuyyXGm0yOsZEIM_lBoe1AWmvbvWJhIkqmtLkSZ0uGTXSs0o9K8G8Nq6DySX0rEB_SyAIJAhAdXz-hNfRdHdKhGDwKnt20LMs7cCywnyLL6q-QtTGMB1wB67kHBmXe6SBrfh9HzzcQae7ZRtviU6Va5sZTL_ZEGwx4rRl7vSGdRupQ3LKqxizcgUzJXWNH503QeQyBY9sugjLRjsboiYYhWWgjvRl0D3H50oMYKwdu8hVMxzB-WEsHOwEbqfaSa2YBfaFwM1GerSlfGtjG6sD4AeGaaljjpqGar9FIUfEudSSAP-FjlDG_wcMZT0wGW_WjGKBRDR0sKEqT12pnus_kEI09BdxvMIoSTp47pO29wCta1feBX093DaCgCYTT4laQz-HN2J67bZt35qWBwWs-6yelUhFGxDRG0g9AKW4mcGFMxAvkw3qSRrl9KJ54ilIBJpITZDzFYSYYHaa821qQ6CglI-GnB2xuRaa-B4mQn7iJiY4mlBkjlUGyogiZfG-vZSbr4Xm6bK-UXNWgcsNxJmMdj676fSfn5xoqfEHcnBhZMmVZx2UnnHFx7CfBlfcVcbNHTxcSaWV_Yv8IHc5JmyZEGXlTvFibiynAf_Fq6gDu6QjsFxWpbbiA4zUnWkdrsTzrJnYAZUKFcSbsB6FbKcFzlw5QYW67m1Sap55J5zBeIXNXHktxnu8blKn5-DQbQzOBfdrjgpTb2WPbWYAqTPaPHQ6BMwGfBEDyc4IAp1XhdwWGnhoAoHeCyc0nQpzXgsnJJxrgdmO8CmnhprJzvB6ZL9o7Jdhq4Y_h1pgEfcAa84UEdHMfJNixGWe9adlN0Ol-Ew7TpjCXxVHx2dBkx9EfWU9BcO6UxQtIRpWAFl_FWUyShu1OAxyAVTV6f4tS3DU0FNSPEjuiZn9Qg3Jk1TUZhBmAbMdxyGmOqRHPBEuJV1li2O3IbWMUZywDRmfVLjoXHczZGdRn1XWWOJc0XbMwJmldImZxmSZn1TJnsXejoMFMZ4mNhkgeewB46JnDGaY6WZ-JPZnxnf7UZm-IdY0Z1ruNc2cBvYfOoR1hZzY1FnJnCWaDNBZqYF91qZ3GZGcEdZWexnVZjE2E6NufcxVnaZ1XS-0sJrGeJn_a2WPxm3Jk2ZpmzZume6M0dXo0x1IZbXR24mOhGW1BDTSZ37SLACmctn9Zm2b1M7ZynT6NLAJ2ZV1XZ70w9mFZ0dyLMBOv2f5nrnL7VjnNZolyUqGZ6ObVQluV2AiErZ-7lTnfTdoEzmUZ9szjm85i2dzNnZ5bnjn85gTorm8hiZyjmtbKYGlnSdfU394PVSubFmJZqWc2MRZ1ucNMwZDublnzwB2BxctTFGbhlm5rY2esB5pjs7nh5tXSzmJ5nuZlm-59udnmh5kefihjAUwHMAjAJ7vWF7k2AGtUdiuwCGp1wQ6gglOyUOCOB9gWjHbRXQeS3k975n3yrpkFQ3w_7j5B-Akxd59gHohvFH0AsBgAeFlohuWKqh_pGfK-eVg9gKOyOBn53TL3m_55WAAWKIYBZIUhBqwCfnT8V-ddA8fdAv8LzgSCfSgvRQUdhi4FkIBA6BUBBeB7UFgWIKxj5ybh9FkafBaACOUC6gWRD5FT24wqaUamjaigXkDMBqBl2iHID56NvoX4ASMcjJTjNBeOGeM7eLtcJ8KPGr1EOYALso0KLeMf15F0_D6tSaSRZUXAqIr3UXHdDABPnNGrlkxZ1hVKebV8vSApIyM8ovinJFFglBIoFQhYbyspybRfy8NyUEncX5MXMZgj9ABRcj6UCBxcj7GANQJoAJ8MgV_JjFybh-VL0I_MancBtfnyVJucPW3m-FnRYr1MWDEVMLMlwrlp84SfvTMQ-FjJcQXMgOUAohzxEBYezaFqBUuUEF_-YqXgAK2tohG3RwES7DbEuHcIclhroK6S4IOHNcxpvagxFSlxpcAWql4cFpxaFnUm6AXFZhFTtacUZaQWml1Bfy84AMRZxBSW3JUUx0C83zgWVad0BYXXyX31U8cgKahr16l3-bGXKlz8Voh6hOwGmWiluTHQA_Uryt-AfKzWt8AqxMEB_myl5BaAWBWVpfWE6sUathimF6IoIWR4PZdPwKChpeWXAFh4SBXTKbtU1hNyg7wm6_GKjDAURwOMh4tRpiBbEg38aAX8WswJnzgXSl4HsAraIR5dZxThtyo4x8C7habCLSvMD0bG3XTz-m-FvkFQxW2GgYjxzWDEQqYbs9EVgB2lxrs6XQOyZeZxJmdYQ2WJEGxFYyjllYgAQ1lmcUbQb6PHABaqyiRuQYq1fleyWBeJjOzy2lvLr6WVV2VZiXC1T4ykIkmwye1T-xRjCLGxgdRlLHszUbC9AMAV5dpp-TEAWZpolHRkBlugXBZ1FPKscEhW307rOQcZheWjzwUKlifOm9hm1bstDhpVYnwAEfAdFXTVprslWgMC1b1FtpwomnFNYbi3eCjvONYkhAK84YDYFwGNagqtppQkUbgUhgoxFAK6NLpW0xqsstKM8xanGQUKl4bdK0R96ZbGKy80urKasSXAuXZlUIvgM8yrUaHW9C-hoJrQyVhXAKW1rYbSWTADJfJ7k4t-ByWhqbdfyWvl8EieXzqCughREgDQ0ulOwZIEExSenABKXfl65eABqQqUFohB1kQuVVSlZGnBGT1xwWT0f-GEEHCjgJGnQLo1lMTsB60RxCzBU5D8OAk1YSwB6YbwSyB-gcmp5aWXylwBdQWuhOAE7F2GH6Kl4vAnZa0i30dSQYCcfLMDQKqQd4aeX16qCSCBqWkcCmpPQpNFmpsmIgtIj-wG0dUZwsx9fhWKIFpaeWxVs1fHIelrNYlW6IQZfDBnIRt3Q3_l1BehIuN7YAcGNvHEtYh4gQqF_CpE3RAPkyVrBac5CuKADNB0AZIAuXTfHT0bcv3KSIY2dPHjfYAqFzt2fXEpalZpXawc9cvWjN5IGPAVYVWrb4uVgRd5WXabdYFWr_d9ZgBkOrSRw3EgLsVM4TVjpYmwyQZckU2vhtwi64eN5DwA79pgQEOnxx_9sBHMt7Lc1GIRj9aVhbi5VXmUTppWBxG8tgUdBGlgF9ZJgu5eXw7Eot9hj-IYQjuUa32M6pUt68CVhQYJIpqNaS2ytp7pbWhtyrb_WIt3DYDHBNsTfi2q6Y4jG2WxpJfMA3N20d82R3dJZ_mdhkuCGo4yK0S2wGMH0W6IaN2TZWXAVo1YeXplhRHiUzWyURnkOFvhQmHo7P6bM2lMdeE2Bt6TytO3MN87ck3-pw1zqVrtg4ERzzYIZZo34sHJZaUugBWny7sQQjZIVCoez0e3GN57ZT1Llv5aaWBNnN3WFpYOPHShVN3sC1UK6PUTOhT8kNfQKLRQqDBXMFhZAyWUlkuHs8kUrhepo-MCMGs3ui_vr82eVyaCEXv28RYmyAEP7bJYh3GOKEHcdiPDShtDZbtZVsFVoc4z6JvBt4yNGwPOFp_sqMaaGY9CMa_1DeGhpnkAIMUafALQN8HmwE4qZZEynitYaWHb6SERrkh6lYYThvZHuRsG5rO8DGbXgn1AeyK2Uxsr4Kyzytd3EEbrxBjPbG3h7lA9zck8rNYlttLXy1jgijVPdyxfMU_8ySZr5G5cYhHgJIUPYmzNyL-Z-WJK9gdTWYVj_xmMUVxtFI7Z0Kbe6Bex_4LaZU975aOBBItVGCGM923YEA09xZXrExRj51Kz4AbWKF3EQVCwT20xvqeF2MRHrsdZOWrFsUxIdygBLgla-IA82LqRSMZbraygtg92VglBd3EgcZGMyHsmwMGzCp8YDby4a7OKGXZTI_d0nzx9KCZVR9kSK1WgWj9CfA55IdHZX5hPvZgAz9_Zgv2RNpYOKrawT_auA39j_Y3H50tZY2XY9W4QYJAx7PD92t9gPaz24l0lFH2oo-MciVq6xKHv3dV9oAsgHMJ5df3QdqTff2MRc_dDjoRosz2Z6RvsmRWNlr2dKVsd5FfF3OwV2il2gI-aEz3d9phVJF39vNZPmgIwKbF2viiPB32WsrRrz2LVbg8m4GD6Kvp8hliNrqxyD-EEoPi9uVegOiD0A8tXfptHbvTdR5B0bdW14ev1Xm1q_y8KZ1qiMAPVDjESE3s133EOHoD8Q_gBJD33F_23MVjKAi1lr0aLXS9rbrqwTh65Q-C9hhA90Othnw6eXK1pscohJ1h7LNc514rYro4Sv3NlJVDuw40OAN_fRSdZDhI7MQ1D_NeSPsgehB4h0BrI5PnJDlMpTLG3eIf7BlYIowNXiUICNC2sO-dOw2K9_2LMPMjiw9m30kL0aIPbN0pWCOsLfUZW7XJwmeTmFuVOf9ivJpw492Ws2AzR3Zlf2KAwMRf2JPHgxxqJ7Kzi4wkrXFqJEKgAUKhHCbG-QsCfJByOiMegmYxlzS-mMRH6fAOzG0_dLdLyxt00miDz_dOL6iOCa3nN1rbb53cl-WsK5KuSuiYgXgaYb0aK6DX3ZWdReQ8cRCW90C0h1tKMqOAdaG6mRpUIDJe-PxqD8lxWNPReFgdRqzOiGx3G47b4md5uzauW-N5pac2T9gg9lNVMN_ZPWdpDhBuosARIAEgiwMLvyWcgT_a535OQRZZBtt644pOb9kdCYG3_aGylJnJ7ymWN2OnmbZmOZgPUSH2LAA_wP_thY7WP5mgFIU0y1GQcwFHdlvYoL-Qww2ja1Tz_Hu2JIerdpD_MVU-1PWQ0evSOP1d_WKhzT32U_ww9jg-rjkotFsebTMe05dlDTj0YRGSqFzW22zT_U-1OZ5UFRaOYATgiAYoTN48JO95roDiVCDsSCGoUT0WR1F_jm4FZWZFGmg53QTuwCqmCWuiGhOa4MgrhPMYE6kRPZgb7ZQXztz_cvnF4c11yAuACwrjOJQYbl3nuVxubEx4z3N3Sgaz892yHC57OZLn653CZfMaz98w7PXUcA-7PpOdKEXd3LGubDmq598wuJqMNJgzPggGBRxbCuLsDzBU5FTE0wAU_zZ52WQOMjzCBLYUHGQSGtCYFPO3OXe9y6KpwKkxplzOhIVrOD8mpOvt-ZrDOct1ic1O4SGGpuPsQK-pH0AztNSz3mAwC5DZus6E0_NtIA05MLTUVYX_XOqRAMGsGJ6ReRXLmn2WnBAKdYTP9JCO2quB2OuOepcXatcY-gQQtJXSKx0UBVRylYURINrtlj_uhX2F-naUUeFy1qvkaL5klvnBK6MnKwAUoQY2XNNVqjTXD5mAA2XrThDl0WeWEKwnXzF5FcYo7HCW1_6qFdxsn6RTkfVPOEgc849iowf5WgvurBFzzPkLB04QubTr3OutSsQi_YBjZki9liyLnemAP1iex2jOMlyc5PJlF2S4-dclvRt4vButhddABq_bDq0J97UWaBmIPZE8qqWiwvOXOVn-c-WDqCRg_7_Lpn1cQ0gJyuYutKefarETNl7aAEqfKhUrOAV9mhAWvLsBbtcBgi0HZs20LBbBWC3JHfo3zqOMl_RsMsvkuWPw1mhIXFMF3O96e9ts8LMuT8wA8uwEU8nWEJFxQ-ADGB286FOUA-I_9zpB94yLKbdsy7t2N9LU9WuO4foLYugC_3fMvdg1cBNPGtnuVZDTGpPYzGizRuQWjtToQ9r0is-xcwvm9za-wvFlNZedaDgHKHEuhL9Q-uvnrwS6SP3rmOK-ukj-NZEWUJSS4nXyrlYjVw3rs0g2Hpy7I_CL37aQ4IOpLoG-jbvr7I7Vw30IUIxuAbuG91G1UNi_FAXfZG96mZDyXBxvgbqg_UO1cXPWpulD9Q5gyKu_C0Rudz4AvMpmC7I5JvLcDm_QbJlF0W3yNfUzbYvzqfE5xbmgQkLiA7REMdcsDRwY6pnhj2Uu2MHfIOcdmp9F2fNN3Z9mecBPJuU7NHhV-dPpu8bmm6xugI4m8QmhpASLCn70y_dZuT5pG75uXCXch2vJCva9Tos9tKDYvHb226XX7yAM8yvRb-n2z6WsuAFZ48ADZaAK0oI64RD_MV2_CL3bodp1iBd8O8jvJCqdumwXNSXFAuU7vEDTvwixPW4afZVZAAu-T7EEgKijt29gPrymDI36oz7iE22iT8UDZUINrLS8CjgXal2tuUlpSDgMTmAChLGQAQEM84VjDdJP-TWiFENh6dAqlu4CMmnyJvtqINuWnlge4yBkgKe6OosaSW6PXVkEhQpWHNgTYiQ4Ac8EFBjeqGhOZstWwAIwtYc-_HUyuO6YAQbsmjaxF_prnbVQ3YeQ8SAFNNOVwCMRFe6Hui94AK890xv3PWa1r4Ew2uvThnI89z9RLycXTKIB6MyXFos3n8bVOB5mMEHrxakaxFe-9MXQyGO8RDdIwfavPbT93qbXBCsRVuunlAPvP7K46Np5SiE8DRqGn01xamB6Qt_s4PULO8FC9h98vOXvB7xIHP3UKj8qkIfd6lGmwqFTyvymu-G_ZUHHj4_aeOPafoP9XoAQNe7O2HxtA4fN97h6GW98qMGgIZHhbpyXAhktzMQfG1wcMbAyM5qkyHaMfzfLGFGVR1O5fZR9gUMA0t19PAbwIFRBKT0ULokVHu0VQto0cR8_x77hA_n6qLm0k7vnpDYUqjsmru-n5PUTx42nhUFnr4fV7wu5FBjUlB9uqFfUeqUIF1xJcYayHjuHvvxQBkDELLmu5LL5Z0XR4rlvUEhvvuJ6uMSqerMZp96C1-7gmf6XgJGNUx6te5m4Xyfbelhj5aY1Rn98BXBaGqMgD1mGpMAYPLPustV-p8vPwrLX6ewgQZ6OB_pYXkOOUNuJ8CL1nwYBh9zeuACvv5y-Z8EzxwI-5PvI_KgpTjmn0p94FZn7A4wB772epIbKnuJ7uexC7rfWU8CWwGPvz4GhNr4VvTYjP70obB9uf4AXgQGbsCNZSnopSBHPvkhMZRU72vAqZ42eYgLZ7EVSOtuihXCQHp-WfNI_iHgKYnhuhNBRWKsSWBU5E4HgKKqebG1qLgbp6zOsAPHPwE4sSJ-1gYnl2lpOGArM8T9I0axWkUTRFZKOpHwianGAHU7H36AJwnhOMwL2J9kcGgXnWEiy4X8MmCfwXsp58umdymi5fVMCnqTimw-5577EEEp4herYYetVf3nk14-dAn2-k2otImmhcC0XpyMXgvVq-XyB4kBuskR4QVk_NGomRi6Ff7yXeU1eEp_pA4XYNhkCIVNYcaGZI2X5kg_uA7P1cy0n2foJje7Hm54tf1X4LGae1vD09afre0aDn6VKC5_-f5XmPpQPysexWEBdgCYqxPUANsFGeQlbUVP4cRp9i8C2NiZ_xbamPpgqLt4rLWyAcHiSBTeanklFYASOWbj75Z-gMjUNe3oUNzf-br5UfY-n2NrRbgXpV6-VHnmd52fUjhad5KU3pYA81R37mS9e2Uo5_2fz7pdTvvZ3lwhhffbpzPISiny5uNf1Xpg5YT5oGjj71VhR994EFwxbGB6oaP59PuF31XChpjnm-9M8HMe-5ob67wa4C3IHCkFb3fIjd6ifwGZbalIfJSedlnxZ4ed1vA6oY0Csi31SUBforW0lA5A18-6Fi50EFVeP4Zo0Bg_afXyjumD6BTUQPYAP-4M6C9lOAQfpr6OLvPWBuxaYbldoupN389pC7_fLnp6llf7mcT5A-stW-_A_mn3PPYB37_h6Y-Viu3iMHf7_h-6x8vBB8Ufb6dbxlez3muPu99FXBLr1zHi_NU_EPJHEd2EPkJ9PzDsC5Q9pskve0QQMsQoaBy6sY-TtXTsAMNKZs8ci6uVTxChv3G5rZ--nX9pUNbHkuyupTIb3LKhVi-iPupRz2l0KhWS_FjzO7luXJ9y3Q-8zDeew-1KfW9_3VhcL7c-Wr4pXw-Re4nJI-7RMj7me5Xoz5WUT3lxUM_XT33AqpSPrLSDQJPyGiLDEvqDHXeIPqKPyfT-1d4y-ADdNOVgD8KY0IA-35p-Es2mlmoRcKqdjlm-u7rg2zzzr5OrnOIoHL-nnB5zD4dgRzzd1iwuyw282Jxz6AMoY4Pqb94l48UDlW_X2_q3QnkTdyzHnedNY2XmW5vb_XmDvi79ImZrbU4omxirEhJXqjGS9fJ8NfC84z1puHAhUQtUHD2Kh6i2NIftV4FrDL-AdQmLHvUh6kSti5CDfcB_GJldyx-APdSYeI4zYaOIECU9DOkVd62j_PwSYu7x_n-xTNdFeJw-IsBEfgSo67kE_SWGzFdlz42bZJ63wUmWH-bbGaHiKn9iBpyLPauIJfujPM-jWtA8BakGT9HaBtIAoGViWsgMjuKuweC6jBOf2JDtcxrhYyBwy38Nrl-uldxrsnefy37ofIcTn-dOXdV093ITJiPDPO5rNUcvO_88Kb69_yFUmt8rfpAmB_bfy1q8oLAC38WV5ROBmD_I_lKPgoqcCP84TqE6P5t_6E5P7D-xf-x9yeU_63wcfjP1zf9-twiRV_lrf4X-L_l36tAFulf1H4f32gUZA1_dd7PJmgr5MeKMSA7GP_2kAU8ZVFPxyBW_dh7LumdXc9b00YmOfJjv78mgIgFMCmA_6Nv9j5Raf8YV5Rf2J6SF_rpR6T_Yhx9X_FlBx_9jrDEJS3_9pPf92pAxm2_X7W29pqinMtQEdimJoeKcUV1gfB_8xE_0oal_TrpzubVE_tCbwaspjv4rZrmp-OP2n_3KmO9Eqmltz1-YDCABsEzDqe7TWkl2jQgByCuQ0KCqUJ7U6mBnH-EdcFeQTcA-QipDZMrnA_aKCGd0UKHhQtGCemVHRo6vziJkIo2wBYLkPaHEwoBO8AU01ANIBrU3_O9AOBkTczem2ICYBSyGWQcJEBmSVlLcbALvgfNG4BTXDS4ccDFoQgJQQzMlEBQsFUEjMB0EUgJNgJWimgsgLZk4gLQge_2oAYKGIBzCEe6cKBuQzPAbgWAKQBSmhHQ2ciuAhAOwBbzB_YVgFuI1gLdYcJCuAjANMBkLE4BpEnYAs1i4BrgPtQ1WDvM1WAcBSEhs07ABEBPgNMkwSmoAgvQiBqAECBF_38E7zkFk2AIykhJg0BkgEkBpgLccXU3QBUwEsgWKBXa3OCFAvqFTkPnAukqEAtAWIF3AqIC9AcAC-AL00qsaQIloFoDAASQArgaREGUhQOiAbrkFMLZ3nKbwBM8bJnQAyYAtAPQIFk-oD9Ur1ldga5kO-wEiSga3AmB54CmBczmRKhMkFMY1nHMfmSWBpLA-ca0xrA95kDMEiFDMkFj50EiAE6LFmOB6wCR0r1h8slZn2MuwNWMz3D7MHZkHM-3AkQawPoE3TgOBO5hXM-5jOB_Tmw6-sgaBo9Dhmis2oE4XBnM7wPi4YXGYEaUHAGa_Sp6O3EsgSUA-0IOhiS41hYEfPUqs2oD6As9zpwbwNi4kIJXM_1BsBHWimg96g6BFyECmZGDyBZILfQnQLAYvGj0spAn8Aotkp819z6Bw7HgmNfG4ucOFYchGlqw-fUDQ6ygrQKtl6kQoLsMZzGUgFaECAysBZB4vW-yLwCygVwDlBtYD9seACuAjHg14q4BDsH2XYAavGVBoRjdG3HCImnanR6lGl9gcwK8sUMgWBw83o0aRglBYwIYE8wKmBAxhVIlGmTAnQjtcuAlq4eHBguDoGfCQ13hUXtzyYUADhw1nEq4eODgAIiXxAhCimgDhSeMtWD3qHll-BAXwO6eAxUSbTB12kuEI0Mcl0GauBp8cRjpwOYPYsHVjlAA3QjkWAHFweYJyMRADyMVwCLBG7hLBayitkrGkiAauAeIjGmgYYtBcMN71UIiYL2BPphTBMuzX4XymjqanxtIWNgiY2gNzBPYO5UUiVOBRwMsAg4ORsEtFRKo4L4Ydmht49YNxWgkWB66YNtkfXwsAsFjUoroIlBXYNisp41qGtpCkSlwMtB1wMbMi4Oc-Gi258RVnN2Z4MiAgN3OsHHkNQaN3LBlYMlwW4IjwjYPdImdCKs7AgAhnYG_ywVhX2lj0UmfECMMkyjXB_4CPB8hTaYCIKRBDsBRBYILRBauG7BNpAFBlwGzw4EI5uR1hjapTH78nYICMJEL70REIVsX1khu1lkDQhEMlkcQxFBNllAo5ELQYXhjJGrkDrBzEOLBrEN8MN71TBw4L3BmYIieEtCrBdoL1QdOFBoZYMzkFYPPBGdGrBtYPssPiGKgzYKkhEuGPBRxA7BnEPzoikIkqnoMZBrECuAeIIYEfmRwAtZj0Kl4LSS29Et0jwKdgnZnZaO9F_eiEJ_ULimKMpRn16k4NQAFmHYsTmWHaz6W3oZkO6cg4NchGYMACOAmMhkQLIh19F7B14K-Be5h0cm5gfBjD0O61vAihWGk3BfEMKGcUOMISGWmwbcXnuDDQccsAJSBm0lucnKm-cZiFCkFJiyBI6H4AHrHoC_AFV4EiH4A27i5USAHYA_AEIAtwHuAjwHBGp4DZAW2Dxah0hJgnwEkAHATaE8QHIwUTlnACPAvQcTg0EHUNjg9zEkAbsH2A3rAIAkgGAAwUA-c9F2cYO0PSuMAHkAFmA8AYAFmg4I24Ar7C8g6wH4AfkH6AtABah3UJAAvULuADwCuQ7wyGhrwBGhXJl-E9jEmhy8HCcs0JsA80MWhZQNucA4BeAl8CiAa0P2A-sChh6SFuhNYH4ARgS6htWFRhswENUZlU6hg4P4Angm-agqgwAz0Mog_ACl4z0Pxh6pAtAhMLK4_AHyg3WHuhfJBJhL0PJhXUMZhVBDphSx34AQFGZhZMPYYFMJAAPMJAA9MOmw3MMSm6MJZh_MLZhgsPFhIsPKwlMO_gswCaBHEB-a78glhfMOPAAsM8EgmHD8RMLVhAULlhH0Hah_Sk8ERHi6hoMGmwpMJUAasKuA90KyACQGhhXkBehK1QFhbgFoADsKehwsKWOVsNsa0sPYcEwDyIysCdh_ABdh0sM0IqDmUYJbE5h3WB9hNsOdhjKWDhKgCuE58A7oXUNfYhsKgwscIFhxqioIPCE6hSwH4AtgCoSU0Geh6cO9hL0N9htsJAAocAmA6yTHAQ90ThRcJTh1AFLhB3mvoDNmNh5wU5UJMNFhdMHRiPcJtI_AAgUA8LqUQ8OcSf4WehFsMEAlTlcAkYCliMsTpmcugpiisRvADthwA2MG5AIAALh08NDgkYH14-8MUAzHn4ARWXO-kuH4AaaSEC6MOzw58PLSsRDtYSw2quXAAmAk8Khga8OxgdVVrAN8J3SlaQfhE8PNhnDBnhe8MPhwCKPhW8JehMkF3hB8P3hm8I_hFgC_hFaUyALADyAk8MigGYnWUJ8INhp8Plhr0IQ-I8Lqw8CMvhg4KNhOgFvhGaXvh1aT_hYMH4AAAGJYaGABE4dQimPMfDcymf82mm1C6YAo0r4d6g7Ye7Dx4kyAuEQVhuYWG5_4YPDXoTcB3oY8BQCHNYrQCIBqrjXYmgbYBQYSkALQCrwoYAAB2cxBzAPyAiAAGGsASKDrwUL7bQioDbQxtyzQLADVQLADyADqCJAaqCJAKxECQaqACQOKAgAabAQZbmEnZaWEw5ZGGCIwWEYicrL8Iq4BVZWGC9wv7A14EuHSwyhAtKAACVUMAUgkUBV47AH24wgCTiSwBiRcSISRy5mcASUCWACMnPA-3AaASwGUQ-LH1A9cNiAdgAAA7XWAK6KihzYNwBLAuIj-oZIARgM0jTwMkizEBNC5qFAAPVhaBqYm7AdTK9MoAGhBucEQA4AG7Bw4PgBiAFAB2gGIAikSMifREkgtYFIBXABIAkkvGAXEXFZVwGTCuHIHD45AIioMEIigLiIiqcD1CGkR9CpEdiAZEZaAo8jlAFEXNDlEaoiNEZkhtEeNDIgGkD9EZF9vgHAhTEeYjgAJYjrEbYj7EY4jnEa4iGYYLCPEVXCvEVvDe4Y25_Ec9CgkZR9uESAAVqrjCd6Acie9kcj8EWIi-oWcjPKpci5ETPZbkUoiVEeojNEXcAhQC8ivgHoiDEdiAxwJ8jkUdSiYAGYiLEVYibEcAA7ER1AHEcAAnEfwAQUdCjwUeAjMst4j9kb4iyspOg4UdVkEUcQic4cAg84XgjiEWjCiES9ClWiKUVWhFFpYTE8iTkHBpUbEA84dIoLgOVBj7K4htgNwA9IDyir6KCjFAtLD7RsKAzUS5dNkdXDMsHXC0QBzQ9kfKj4InKjhUcqjPiqqjXYcPNzwFdwiTgGpDQDXC8AE6ih7mDQR4J8tMAOfA8ALaiN6Baj-UY1CcmnGisEfKjoTqIBXUZ_CQAAqjJlJ3DEAMq04AASUBYRqi95kGj8wC8tXAG7AfgG7AlYOjgxkVpB84WfCQALcFqpCiiLYVREs4X7CpYRnCqcJ2iq4SMAK0b7Dt4aHCq4QjwenElAT5NHDs8H2iK4W3BUAG7BuTInCR0S9CGgEkh7ACwJz0LQAUxA3CvYY4cK4XHD-AOUBZEG7AsCEuiQUgLCtGPkAUgN7YW4bujp0fuiBYbZU3YIdRXAFOiO0Q-i_YZQAa0eK830XUoZ0ezD_UJ1Ce0XVh_0XTAfSqMjEgLsjgMQVhQMSmJWADWiPEdBjM4R-iq4VEBZwM-iFHL-jSlKBiPWCZgsMb2iUMRXDdEMmBOYZLgislzCwUfMABYdajdkZKis0YKBlYKEAPUXAjs0e6jM0VKj-lAWii0dLCJZv6j4dKWjkZIaAB0VpA3YAJINsFVE3YC4p60f4AhUT4iW0YXg20fejC4QeiQAKzCkMR9BQMcJjGEGrDh0eejpYWOj9nJOi70e-jlMQLCIAHOiF0dEAz0YZIBYauj10Q4BkxKmJ8MSBjCMYej4AMejT0WAiQ4Xpiq4ZejZEDeiAwMZi_0a5iLGDMBn0WaBnMTBiQsdWja0fwj1Mc1AQsdmMgMUscNMYljwMW7BIMZFjkMaZjpYXBiEMVRigsdhiQsWhiUgBhjn4YViCMTliq4bhj6ERViXMVViiMZQASMV7CyMdxQE0QVjqscmj1kXajEUUEABIMxiXoTmivlHmiuMWqiq4bxiA0UZUqgG7AB2itQ3YGMJy0PfJ5sQGk3YFtQPAF5tuTDegxhFLxrYP_Zptu0A-sYgAZoO6QiADJA--EVxodqxAZsdnltsXhsLseCgNQAUAq0ewwphIdjjsXQRTsc8BJLLZVHsehi--GWi-sbJjPUf0pW0ZPDQMWpiKSm1i-UR1iXoTRigcSxjQkX2xU4VXDzwOeBPEBsJpIEwhw_JYhbcDJAU0cBieoYogtYDJj2MYNi2MYqiRsSqjC0WNiXoRNj-MSlotqGAxLsdQAfdvdjngNQBrsWRhBMccY5EMTjG0aIj5MUGw20aBjmcTXB9YVQJQMeDogaPtxYuElkDnElBOYeRj2sQEjYcV1i6MSxiy4LQAqohCgXQBmi8Yaxil0q-jScSxivUREAfUTxi_UQGi95kHBNcV5EdcWOB4cVmjBcUKpJ4UpjrYQLCIcXuiGsfwAtMUOj44TZj9MeOijMfFjAFiFjzMeQB50YuivMUiifMSui10RujHMTuiQ8abBvcSAAj0aVjPMbpiA8b5j3MdeicQVljUsanin0S-iC8QljU8TFif0XViosaniksaXjQ8TXj0sZliq8dlj3cbljfgPli4sSliy8a3jUMU9gysbGjm8YXie8arj-gLVjk8aBjbAE1jSMTaQlcdDiVcUmiXCo7j-AIjjhOIFiq4WDofplcBmkSMAFcFriZqPbiSYLrj8cUGNOGGABmIANjUYeTjc0c2jOMVTjuMeNjLcfDo5sQtj0lMtjIgKtiYAOtiuTHSDYkCKVpsQO1OgGfjKAEdj2CAIAwAFU57sXhAnsQASwCcxAQCe6QwCRATcztjiOcQO1ECbtifscyF0MVLwzXOASucQaBJwEATHcSbiQcQpiwcSFjECdHCU8cPj-AFLjAaDLiGBHLiLuIriocdgjLUZ1jF8d1iZsBWhz4WFjYCZQAL8QbjtmgNiSCe4JRsb6jXYAGjn8QGlX8QtiP8V_ikID_jQKhEB_8dnkB2udjczngSy0baV4QAIA3YHhB4gKJigCW7AbAKJj0UWrg80aDjzYSLjwCVQTJceTF6CbLiVsvLiWCeai58dRi1cRsjEUTERGQCdgjCefjScZfjDcSISlUbfjvUdTiJCXxilsS_joiSti1sRtilCVNiPAJziy0T4Si3P4SBCVwSesT4j2CarjOCeriXoTVlAiUITwssbjQiWIS78TTj7oQ9JNUe6BtgNsA-CSgS3EMQTyiYgArCeiVosT6AjcfTDqCZXCXoXQSGCfJUXCV7DZ8WwTE0SAA4cVkSCceAB4gNsAEEPLAF0YlBJnvnjiiUNim0abi0iBESLcZIT-MfgTDQDOg5iZUBRkbxBlieEiLCTfj3BO0T6CKBio3lABnsZrDd0b0SVMRjAXQHYSQsS-i3YIWjtgEQBXCaeNlcR4T8iV4TiEVZ4k_B3Bn0bYBBCbkSF8Rcgl8SKj0UWDBI9jwSQAPewffG7BInEojISeMTJiRajhEVQjREW9DGkSiSu9rMAIAIuxZuGE54gOiTonBehccSkBpAG3wU7NpxyCuOgvQK6k4EFSTZwAyi4EFyilAL8jeSXYj8cTyMCifwAiSaMiQSZGhMSTDjoSTaioUWwTcSfiNjkViiJEayTBxJojSSeDxksNNCInIojqSUThaSfSSlYIyTVAMyTXACqSffB6sqAKCSuSTtCnEYoA-SXaSBSVMSeRqCi1iQLjSCULjyCaniiSddjfiVrEgSVmjRSfNiKzsUSoSRMSusTiTDkXiTFSQSSPoaKS1SWSTNSeE4OSSkAYnFlB9SY4IjSRgATSWaSPnE8A44J5UbSbyTLEQ6TgUeVg3ESUTfNmUTLCWQTrCSFjvSb7D8oORjhSciS2SfoSNQJKT58WGTOCRGT4SQqTMUTGTHgHGSSSQmSKSdqS7kamSKPMKA6SRmSw1kyThFCyTRSYQgNQNaSeSXaTiyWyjSyQVhyya6TFSc7i7gJ6SaCS2T9AD6SRiT2CkSYGTxSdzg3YDG8OydnD3urCTentzhW4Wexe4Y-SMgNBAFIe-CuoYx5QUaUSKcZRjOyQWFUIvipU4ecTwYpPCmyf6SWMYGSFaGFibySGTxiWZ0HyfM804bURQUW-SBAB-TxcM9Cfyb3C_ydfjQyUBS30CBTb0WBTatBBSzyfajAyXhBryVU9byblj7ybKSfERhTnyX19z4VlosKZjAcKfqCs0fhThsQBSBYURSEgF3ZSKU2jwKebDIKdkSs0eiBYAFtcEKVKTm0YxTfyZWT_yYRT0tMBSRKYFiyKRkEKKawjpiTJThkLyZkXvRSq4UhSmKcKi-KU2i1KSEENKZVwWiUPDyKRJSZwQto7oTHi2iBijAFr3C-iZTCdgKrDYSTuTMUXMUFijggtYVTCaYQ5hBSUhj3EQpTwqcTDzKcQjPknrjr8T8lKQlajeFk6SoqSAAHwiESfKdsBVYdUldkVXDGEXEi9ICv1IqXFCK0CVQa8fbC-Ef5Sr8fxSgqWZVQqYrCZgNTD94H5SMqRRjQyZCjQUZ1li0TVTHYfFSs0YlScqRMTaUiyk0qShJyqQUSqqYeT_YXgAdkXVTgiVWTs0VjCmik1TpYQTD2qXrDyqf8TPEYKihqSxi-qZ-jUHItSpiUGNZqd5SHUbXCmlDuiXSfVSm0Y1STVM1T38K1TYqWrDWCTkTxicPDDqS9DjqVXCQ0WGiXUb1SoimAhQqTdT64cDTe4dlSVqfolKEX2TFSbLgh9L9SPoFPCzwInDo0eVjYES9DqEZFAYAMmA9IEZB2FCjTawBqCeKT4jcaa4AoYGAAjIM1jfcLEjNQVREaEdFAYYNjBsYC0SLAMmAmPL7hmaXEiwAHpAjcb7gAyuTThUYwj0AJFAPAKVSOaewBYQSLTiEYwjXAJFBaaR4Bpaav1GaaPCQAIwjkYJFBkwFDBpaWojuadfDNaQpAuaegAoYILTs8HqC5aVmjGEYx4VeHjTIqc6SxKc4l9gLMk1ogLC0sAgggEesoAAKRwwdXh-07572U8AAu06DL_wlQCRockH8I0FQhwpuBBwkACk2fgAF0BOlLAd0FCg8AJwwSSncE1cCXUlTEMYhGi_UoInCElalPUmorFopmGdUvalVwn6kg031zSw_OkZo2ukhuRIqFUwbHpo4_GVUryl509NFeCQnJLU4un_kv6rdqWPGvsc4ml0kKnqoiumfU4VGhkuADrJLwBqopumIgAWEN02EmdZFukr09umF0tyn7AUanmpS0DAxAWHAAKXjOI84n705WEF0qhEgAUUBtCEQAjgLhBthB2BH4Y-Fn0-VL5AcKDcUyineoXOmb0xjH90yymiI8enI0quHGkXanuE6WE103uH_Utul_07enr0oKL107xRMY86md07BFXUhjHogXulb0f-kqU6_FD0rlKsUselrU-YobUkBlT0twljEhSlz0jZKL0qBmX1RBmwMpekZpBBmoYpBmwkkakrU8-mH06WHH09hin0qynypPaGu46-m30zTAP0kcBP00fAv0gRkJEd-kq4xjxf0jTFd0gWGA47ekBUnxFAM8ukcwyungM6ukTUNen0MquGqMphkb06WGqMmanKMsxkwAXIrIonBlKwUan4MkeloUx6nEM4KnAMv6nkMv4m6Mv6nz0t9AGMuulGM6xn-M5uksMl6HGM3uEcM1SmCMsSQqY3hnHgfhmiIrhkgQYRk30wez30pjDsASRmEAaRmJMt-lio78ntPP0lSUzyloMlTEX4PnF2Mo3H_kzRmT07RnT04hGhkyBnYI6BmE43nEtnYJmIgUxlVw8pntMlBk50yxndMonEtnLBk08NRkPUt0nuCY5LZ4wj5EMmYDYw56m1M4BBgMyhmdk6hkL0jpmdknpkk4kxmhM1plpYXpmgoyJkEU6JmOiI-mi4_ZTB0pJmX096IiMtJnASDJlZMjNEfw7mF5Mj-kFMxRnNQAZngIogljM5anVM1xmkMjxl1MihlfUhSlNMnxEtMwQA_MnZnF5TxE_MixmlMgWHkAPgnQs3uHqM4VE1MshnAsrxkrMgWHgs4VGQs5FkZEjZldMl6FEs_gkd0_pmIszanBiPwkUs35kD06_GYsoFlLMnRm4siBn6MuBmGMl6FpEulmos5pmg0sEA0s3wloAYll9M7-lfM0_HMQEZn84jRnjM3cn9KKZkLgQhkuMuZnrUhZlYs1ln1MrNGz03xm0MgVkBM75kBEmFlg0uFnGsiJnvZPeknMnKBnMh7FYE0rEn0y5mCM5Jnh01Jl30-5mP05-kp0mRmWgORmf0vSkXUyVkgAIon3Uv5lMsgFkasllmxAZZmgszsn4s4hGQskNl0MhIq7M4NmUsiVnUsquFGQGVmVMhxmKs4enTM0emqs-Zll0xZnRstlmxs4tF6sjZkCwpNkGskJmwsrNnsMy1mcM61mxM7niuABJmKkq5lJUqeFussRkPMr1nPMwWGvM-RmFMuu6poz5mZsl6G247XHzEh3EMsgBmKk5lkAY8tnasljGNMzllMMgWGzs_fHzsxunJshtmmsquG7s7IAH49NlKM6dn8AU9kvLfdk5sxdm4M_imOMwtnOMwBkRs0tmastdkgsmenjEtZl-MrlmGs69nzwO3H7sklmpsm9nns7elHM_ilcMmJlH0x1kk0l5kJEIRmus0RnpMz1lSM71m5M2Rn5M9UHjs1tqTskpk-Iq6kHE-YmdoRYluIU4mgUtFnyswKnvsiemfs4mnrsl6Gbs92gAckNx4s2Ylkc44lLE_ForEk1lCs6ulcco4kUcvFp0ScJEIs4jkqY0jkick4l8cqaD3s0NmMsp9n5sghmoUl8lvstVkkMyNmrspjnfshpm_s6tnsc5ekQM4TkLEuTnic6jn1szpmpsmTnmc3jmWc0SnYI6Dk-shRGnMnhm3E-4knQp1nIcl1lX0_tnociRlDs1-k4ct5l4cj5lEc4VFXUwMnJk3NkrU24JCw0XizMktkMcljnL4GNk_shSkXw6OmHskzlGM1smxc4znMMxtkvQhYKwkmGn_k7LkE8TsDmYlFHugptFVc-Gk0IyyDnge2m7cYOlVc8hEZpVUHPQiGAZiBrmkIn-EUI92nSw4qlMeQeSdUyTlRclTEXk3l5Pkh9n2M-Ln_edLnqcg8GDY-jnuMl5nkoDLkGcrLmkImtlmM1smXkoVkCc1uluY95zlclEKjUqrmII2rnPQ-rmiIxrkjcoqnngarJ6QNRHagDrmDcrrmPwjmy9c9eHnEzrlogX-HPcnGnjc9XjTUqCmoow8nHcsEmMIWVmZczsnZcg7lGMubnDIcEkI8hNmCss7lZU4ykLcqpl4M5bnbc1bnnEhLk1-ODnSwlzz5FRDmrUrTluMgWFCw5jnXsq7krUp7ndCAWHUImABvctRE6Ygbnfw27nIIrqEPcxUlVcnpL_cgACcgPO-5wPOrSYvK6h-HN26gbKvZyJLR5cPNsAG0NcSTcFhJoZOR5RXJUZqvNGR8PLA5JXOvZePKU5S7MxRZPOJ5SXPWJRPNmQtfhtZlPKz81PNJ5K6V2ka6X1CRXRdRVcKB5VaV3SI3OS56rI_ZaXOJ5TPKypLPMq5g3Ka5r0LgAXtINyCkEDpCfIdsm8Kl538J-50fM553PN55j3Ol5fvN-55WPVBqfIQRNXMF5VwBqyAbNQZUnJUZrZNgp2vPGJuvO3Zh3MHEQZORpp3IFhZXPx5ebPO81vJmZxbKD5qXK25syB25WaIq51-Ju5JfLq5RfNiIGfMsgLXLURSUAm5U_LIRMvO65T8IHxSoIB5fPIrS6fNB5NCPB5E3Ii50POi5rZLwgdfL25O6RR5YTJP57ZKK5pLPO5fMDi5g9Lt5OKBVZmnJS5m3JHZofP05I_Ij5Y_MG5AvMn5W_On5u_M1pekD0gSUEigN4HF5X3LT5K_Pz56_PWUm_Jz5sArz5GfP35kPOKZR_Jm5R3NV5tFK7ul_JFJOAstJkaDwFz0jP5qzKM55vMfZffO05wfMH5L_Jp5twTucIRJYxPgRYFWaKdCLoSiAaQGEZsPJMJvlEThsPOYRVETfGYcUOZLbP_JnAtdCPArMZqvODpnAsWoowAMSHrAQQ7jJuhFfKpZVfKb5qJL4FMbyrR6klpEBAqPJOgtwF8FKrpPjJoZj_PDZdPMBZ9Ao5Qw_JYxMqmEZBckThfqUWJhGByZPiJc52HIPpFPKrhwADcFxAoIAz6MvaKpAdaXbMxRPbJSZaHOAk2QHMxPxKw53bNHZOFNfhrnMZ4wwBx5c9kiAiRGLsPnMtA_UAC8vbIhgKvCWAFoAhgXfjD5o_Jg58qT8Ay8AKpHtNj53tKT5UUADpKfNc5tQrSIPXK6hetI0FGbK0F-XOb5sFNIFyrL152go-cLfOGF-rMrZ6qMoFNHLDZDVI25DPJW5rvK7hoqjKJrAtwR6wo4FugC4FboWEZQwoqoicNr5CdK8OF4O_5LGO8FipKkF3As7JxwvOJCgpIKygoyAqgtYph_J_pYwtGRQwr0FSoiMFMFNmAkwvIFVbMsFnfJLpiwsp5K3LD5TgvDpLgujxgQus8nguFRlwsiFbbKPpcIsIwIQv5SfwHL0EQpyJzrOuZfbJiFJSKQRCQuHZ59L9Z35NSFPgotA6QplJANM3g2Qv3seQoMS0AyKFOABKFphXKFoxJ8RVQvaF8QDSI0fM9pTQsDpGoJ9pbQqpFHQvgFcKLeFQbOopGoABFowoGFqJJopZgu8Z90NmF2CPRZ8qLBFVcKFhKwruC3cK2FezNu-7ApYx1wr2F4dJophwthFN_IwRu3QnZ2dOc5EguvxZopkFJ7Jv59wp2FigpGATwrLswZNF40ouV5sopFAkwv0FGkl-F1_ODFKovZZIDPVFcrPmFNAvp54Iq_5OLJ8RUIqvpMIu3haIoLp5ZKRFuIuQ5fgpehAQs727gpoAGIrCF2IqZFKHP85hIriF6kgRFeYt9ZuHKiglIqSFCRBpFmQvpFRAByFVtiZFBQtlE5sOKFpQs5FlQt_51QoSIEooFFjQvj5wotaFTIolFXQsCRAYv6FSqMyAMqIuRSREx59GNo5GjO1FPLKphOsI6pYfNDJSRCMF2qN6AhyLb5uWNXFOqIvFvcLTFNzJGgicK2UlqO3hT9JdAO0XrFP_Lmoo1Ldp7PNG5kUDUREARV4pqJp5biTl5iqJYxb-BwpPNLAxV2Enh9tkQFaiNJs7IohgSEtBUkvMQFXfgwRXeNjpLoElF8vPXhS4um52cOvF54vgAinLmFynITFtgodRLVOVh0Ox2pFbMR5QIvWZCopXFucNvF1nOK5x7PYla4vMJd4tHqwjMfF0eOfFHiNfFTcA_FiQsRFTorHFvgvc5_gswAIz3gA8gAAAXZWK_OTcyAubELiRY0AlYOGxPxQmy9WbyZxYkxB9AALCTxTTy_2VAAciAyJKeoaLaJfIyYJQbB9yebDIeksBYQchL_aerwUYNhKQuY2KwuSJEFYY5Kjac5K20W5L2AGhL6CGoi4YFhKhvq5zE8NzgbJYwk7JRvyehSmLhUTyKqRZOKLhtOKvJaKK5xXyL8JRvz-uVSKF6G75J4aG1M6X5KLQBOKQBZ7TZ4blLjICrxE-TgA9IOLyxRa2L8hWHSIJXuLhuN-SnJTLQwpQblWrKDB2RSNKMJbhRsJURLiEVdTbGSCL_mTYKdOQ5KygQeLGJUeLxiT1TcuZ2S5pVNyZpSpiDKXJTG-RCieEIdLVRUiitefNLrBe_yGefOJOoSOLvxStS3EtNN4WC_CqpU2i3EguKbmXvUnYVPDhJTHTFKY3SiMZj8RgC_TCPowRIoADyooFnTCOVgLH0SdKKJVxK4ZbJTNxRuzDOcCLxBZ7EkqbJK3OY7z_BStUcRQSyjJXZVXoOZKLpdVKvRT6KXhSTzXOX2KF2WDADcmUK2RaSK8Rb2yjad9KSaRYBfpeYx_pejTo8bYBgZaDLX2NjSp4Xwj7BWAiCRXcyiRfELj4cLLY6SLJF6ZpLCRYOzMOT5KyMdVLyRVfT2Zf9K_pTczeZdvD-ZX9BBZbURwZWnT4YFyKMWduKMWbuLuYbdKMBQ6LL2cuLOGCdK4AEZTGxEYKDpS7LXloCLpYQ3zoaaOKgBRmkABcIytZQ-LuZbrKF2frLWGIbKU6WDLMxKnTh2aLzupVFAl-UNyM0uBK-ggGz1gGHZSoWpw4AexBlgZkC0AavVBsCAp8BAIgx8kTkOztFxrTP7x1CO7BdTDjIJIFDA9IESdV-q3KlIHvMyacJ42EnMMQQQ6D_VGFxrTFaCuzJYApEG9pfTNXLh5rkibBOeAcZKRge5S_At5v1R5PqAxXIqqJ3QKH5QaLAAIeH2FoiJbhJPIh1lahAJSES-EUaLLhGDrDFuiCCC55vnVFuELpfeHIJMZPfLqdPTNPLGaZR5UtxnAFIhyYiy4JIOXy6XjzVt6AAKnqFIYifKgANakNUrHPxAcNL5UP-gAKjQOaBU5HLxzxYMNxnv31ZROnN8hDfLIZL7U75e7MdTGlAVeGYBoxAUtj1n20G9EMAdMO0AfCRugsIqpg_UqidIFJW96gFN9yHqisaFdfK8vjnMiXC7ARsP6pLuFFgRdIgLUEUZcEZgIrVzFFxAaB98GdCvMpEEkgE5spB4YKIqizNgruFQtx3ZvqAHQftwbuA7A3IFIgJ0Zb1CJdR81ULx1IZHqAQ5q_LXrB_LJnN_KHYL_L2AD0K-5bMD5BG5AfeFtxIZFs44ZNS5KsuDyl5fZohlB3Q2IDZUJ-T6IU3qTQacBMUHqGvZZ0BpBoxNtQdMA3UMrjJZ7vvHYmiZwtKaGz5U5MxsdIHOAU3pwqDvqvMKXFFhXYDQI-Zm5AVuGlAFGcYr8hPdZdTE9Y25hS4rgRaZ3rNGYFcn3LxgZaDJgfPMJIArlSMHMtVgNrQfEBMVlqLi8mTtvKFwJ_BcClMBYCvAUUgKEAkFnoAkQL49YFOCl6rkBdMFTXxzQW_LEstaCJWtFA_FTxtSME_T4kDz1F4JGUbqFidzJFIpvUsMqcQqMrKSPewKlMQqpMDeAEQtQANvludAEKK8RUFSQzlijkr5FQBKjt0Ae7hvK8FqMBaMFvLHlSCDxFWGZFBPJUtlU6Dh5vHMNboK1KlXCCglcoww1tIoOMEG8mVsjQGUHPINGpCqd5ZphcVp5V6mqphm4pER77FgwCiKRgxqKDRlLICwyMFkqeKqZwK6Eyr4dn1zGFZkt7LMpBMrhyqzDBiqmTrDEoYKO0BwuEQ5wKKrR1H1z3wNrUdRNa1idgcwzpLhACIGgqlRD6IvVj8rf4MStyziH5_OK2975M8r-wBkBb1ozwg1kRsBgvesNlSOZ65hrdtlUGpZ-cDpKvEYqQQTKUksvKUunNM5dQH04aDvUjsUY8AjKomTKSTqTZwBOT9SXMtJAJ2BDUFGrgFG8j44LNA7TCkBuAFsp1Sv9QtSvtx5XI7UZXBDlPVVXNFSj6rZnB59_VcqSg1aOTkyeGqpyZk48WlGr0ADGqSSfGrGYFsptKqGp9KoWSdoZYidoXYivsKwABTNUqa-KYrlbn6oA1HDpHVSGpdKgjpZvMoqTFXar6Sm7A65ctxBWjdwkkKPLqdIaZCQeiD5QCcArkfIjkyVxBmpkMjbiJzIXSOXJyTD8J3HNkDiZGXJ8VKnJcAZiJ8VALJhFiMZv9Dd8TKDMZoZijgaOjE8GnNOqoVPJ06kBiMeNBnIi7goN1th2czwMC5QpMxNS5Neob1bU8wOqhRbiPUcxuIoRNJupMrTqShNJnGDQeD0N3wO-BwNWOBINYT4qAblccVFkA8VDk0KmBBr3uiKMJEPQMrzAt10NczlMNT3wPBoa0T1NxAEShkA0gKoEvjNVh66C-EoYH2cOqniVo6pVAIZR1VwQkUFYAFDAgagwsYtGIowYGJrYABDLMXhlDpNTABZNWIo65Bf8j-KPUiNdQA7wGhRjoW90Aeid1TYKR5DOv9MbXPgYzOuwQbMHZ1wYiwojSjmUpGuDEx_O_ZHNbVodAacgSUOz5fArVo0tCEE2BinsqupnoaDh9BaukV0ouiWFItbF0Wugl1xVhF0Wuhl1cxPFrotfV12js10Mtf6MS4LFrawFFqKQql1elk11IuoCxO9FC9CwOV0R-qZh3OpnpFvDXx_NfUEQggvxbqQI8StRKsfNRpUbSOPxR6tkBLDhKtSOnFtaADYs-7HtVdToN0BtXxlCtb51EtX0sytblqJmszBbRUWZbAPqg0KEkRn_J2QptRo0_FqR4WSNtqstXWBGSsTCqIqDg1tVVZOyEkQRuv5qdtZlrhtYCwq2pegOtVSwgIrdqstYtqAjodqHtXjUb0p253tQ9rHHvGjJcJlAPtQiTOxh4Dk3IJFJ3vgZ_NXNrs1piF91H1qAtTpTCbkqFkdQWFpelBgbeIDE1cAtjIaT1KcdYF18dc6jDKmDrrJLkcXtR0c4pceCctYTq2mDNrgumTqHtQtqepfMcg_NOhkdSV0c1nVgu8UsdBIv5rMoggdBdelpIzsJCYBBjryKQtoOCCBUzOh5q9BsRU2mGZ0K0ODFp0LVp5dSb0hweYA5dcjqpynJ1LIKugRRrxqn9hZwb1DWBl5KJdT8A8YDNVVZ7Abld31JF5vLjmo6kCFr85FV04Avl4WSIpQr3tVrRfu50qJkMMWSBxMyuhnK-vDZh3OlpR6FP7rBJtmVKIs7svNoNUsdYOhS2J4sYvHx5nRtBgjOp4t9FmotnRtfQXjFoJHBilN8FNadCFMQpBCD10KFIIRnBs5ro4sCptDv7kMmpEFq9fspnuqlUgUkgZ14r_sRNWaMVmiG4UYGzqxTu5Y_omZqwpJuM2-JzqbRDbqjNZ2RjofQNnBhDrjoRnredSf9jDjZIEadhjoIqeJm9WVN5AG-KEgnMdXKofqfJBkkW4ofqfsmaMPoKfrV-RzYskvXRoIt7NfxW64aiMFNTBtBEu8ZgLe0VvrbhDvr6pugB5AHB0ffMUBD9Z1lj9aVVsudyM6sDKowYJ9EicPMJRhAGlIaSCJ3QqCp2gBYFADa-BGCKPSEFUVRsad9kUQoPqr9ePykEdhArgDFAH9dukK0nMkX9TsA20ioUrlB_r7ZaUoP4W-MINNxq4-FoIy9Ynoz3Mxya2jlVfsmiUOCAbDSftHFmBQw0D3P6kCAK-rR8Bl461IuoYNeRqzdZzKnZCcZgAtbqaNXbrr1g7r5jFItUNXx9QtZWNTKAtFVDd5df8DobgAm09-gtHqb4EXqbDSgRg9eTk1lPhyKFBHqjDVHqqur8QtdX59rdubZZ9Ynq-eolQBejzjpvpbrWyGnqDFsvrxMFcBzDd5dePBEbrBvM07nLYauZCXqn8DcpndZXr8DNXr2Ml4b69fKNDqjFUeGLvrpDTN9kBvvB29ZHRQPF3rs8D3qJjn3rEQAPrL9dkMR9Y85D9fFIZVNPrskH4b9sPPqJttnZBqsvr0pdt1fcIpqN9V_r50iDgf9R3pijQh999XABgDdBFQDfuNSqkkRIDQVgL9RMcr9R9K1-XfrD9Y_qqktQb5QLQjYaGsbgdceMNYp3g8yp24vNjxrOVFwaXwkGQY4a5VExFQJRjVDrdPq_lRDd3DxDb-q5Okbr5DVepFDXBrCVGOADdTpcmZJyoHjCUaZqM90KVHRrmVJCbgjbd9YTZypMpvgYfAiiatBLXrsFAiaj1J8bsFDcaODdiB6BjSoMTXIasTYhpztGVCnHMSZxZA5pWILR1C5UdITYC-jr2re0o1WaABZAMSnCRDl5cZsCxWNsDBTBN94PuxJEPlvRYkNd8EPit8xTcyRKOiwCGfnDNqTJtYaANtYqnvtZI0BrJSTPKZfjQbpVjODo3INjJJXPqbsZKPNF5m7BjTY3L5QG984ZBab5XPcCiXCboMTOboVXPdxHTZiZZOo7IxwMB0JQGDIiAGKrTUFiACwtz1yFgKk_TWiq7NnvMLQEZAiTi-j-vAWFWtZDSQKmar0ztFUX0d8TZNaJVTgG_Ydok-A6ABaAdTPMJKIFrwBQOpInoO1xT0D1INhEpAu8PuoRhjNQ9dZ6aSIo6I4VIGb0tHW0HXOFEbNV8YbMuxD3SIdUFfsq99dEC0_xu0BHANxgswEuFXKnqjzAMvAacCdRYHMDF4dv4V2zcDUBtkWZFzW851IuYAPPhYAbMI5U-zcFk9At588wAeapWuOk9ydhB4GoEVTwtNgk3EVlMSoiAFWlX5W0XOknbNl0ouvMpEoi1r3zf1dVLMaJ3YYpE4sIhEXzYvtUQE9RmgErUgVJRFkHIuawZLHdo7h1tY7nGb0tUVqMQjKpZDpGAJJixwNzUW5OtF88lIO6QcLSdg8LZDUwACQ8yLcVN2ABJMZWkg1G1kEEYmRjxYLbHcE6sDE4LbyF9DXBC3oqxaEQq7RuTYwTnCRdwtsgQBvTa4BfTVDBkLcFq-9D-ajMtxa5Qv0EjoEuoGLZubyiNoDSLeRbgCsftZLcc1SONn04FBN1zYP7Q4FIRaYmWxbVwLuD1FLcJZLW9lDJN1gmVVp8XgNeJ9oiCl5AFcAdlEyqTlN1h8_GgAOOEdBKhG-LtgJ5ajnrtIbwgZbL7rtIEjX7cpGpOkHeXMpVwIuapHuPwSOGABKhNBAHqBpdwKPFbSLUlbKLU3F2GO64MrQxaErWABsrcfsbQtd5jmnFaGLda9f-tFaYmck1pdiaC0ADFaUrTvUl3voYkdc2aGzZIbDPmIkCwo1pmtAXVgzRhSZJvVh4zdJaPgFlofSVI1C2qNbAun1SpGks1Fmk1o8tA64XsFFUQKmXA0ym2tAKh2sWVpJ5-TAypFrSVlz1FlpaAh1pqAOLhm3vcxmMv-MBNX9YKykdbcsidan2DOJolOIthrdnlxeRNK93guhX4QtAhoHQBMjelAF0Gwl3SL9bCIhmUGaPWMCOW21LjNlB1oKVFBuPDbwwAnU1oLahs8GeACwvL54bY1p4zRQ1JWiG5xlOMpR1jWVf9rhC6lGtBwwJlFT_qeNF1u-NWFJtaaQF1bv9JjqAzV-b4go38Vzc010LoDEsddJbONOzaSJEF0cuprq9Nc2aWJjFb_MK2aQglzaEVOZBAuoubFLZ1beEs1pr5BgYIAOjghsLza_UMxVkHLVaWfGjZCrVlaLoMlawrWlbnfvLaWtTrb1Qj-FUADFbn3qN55oKflfkLtJmrUyqf3v9r0tIt8EZsVoCLIZZoga9lPrOFYTrKrZpbTkF-rStbCbZbwofpzYYfsVCuzfhYA7eLlRoO0BINjsBeht6hptJKbRTdKa7psJY73tY9-GjbaNTsiozECWpy6nRbNMq6ksdfhDhQdxCiPqrqPSGubSMLZTWHvJh2HFEBKiPaIGgiecZ_PH4r5VI1M6L34DPApoMRiXbrPv-cfAs88zng8qI_ApoCwi88h7X3bP7nCQIOpUJ_3skBeviM1GtRe9N3rwUjfsvbR7bb0BvvJ9jzRZVawHebJcKtAD7XPbV7cfbd7VE9-gtJbz3nJ84nvhaSmMm5p0A_at6Na9RfoB9BCkvbb7eCQ17WnbtgB196vq6d-gkEKItVLgWvku8oGjfaLPEfafeu18avss80wjWFJcPNBQ2lfawPk89L3tgQi1Ifa4SKzanLt18ZpMi1CMG9kwEIqjTxIA6kHXfafesF8bSGZV5IHH4V7eCQ2RksdpLRFbawEST7OjkEEDuw757aLrm7VJgakNitWVPCBf5IhF_qvUp0gKuL1zna11GidRPVb4pNMDj4O3mDRJwqpFjfJtltwpf99UGrapDO_08CpitQLYzRdEDgbJqPvBzqMNUl_KPJ3sKKRa9AfQOAqQ6JLfEF0bXU8w7ULaqFNK1zPod48bQclDcUckjmvd4fHdDh4vpfVeEq3ac8uBTB7VloY9v1spGotQ3HamFZrRkF2CMk7fDk1pBbV0FRJiSgInWuUEwQL9a9CxMnHSaQnlK468ncSginUJ9iHB2bwlosEDMiE1KHqZkS8ulok9Rb5JlEF9IjtncTVALagncOlDcYE7Aun47x0kAz6UucL1NZjb0tB46SJJzbXKnnrs3r1aULbNqMKR40sQuGRK3tW8kFac9RDpcZEnVsMWJufd5nV0AI7fa5Cbf2sSUBhSeut50NnYNx9nVAbAutA7HnU-wPgMja6AELrYKITUWKkc761ggcMKYBUAyN51_7Zep1BXGNRvuVhQXeQ7L1OmFlkvw7wYsLrRHdADQyBscEKkC69hrsdSKo-crAOgVNaMOVYTD6JwYpXReIH0xewks8k3s6loFLW92wiRJK6JS7JPn_IVqHsgdRJFd6VmAru7SEE6xK6lKhIZ9psIi7vNSHrQbXQRBXQ51tNgQoXOibbAumC6PGnxRZ7X35xbmwQafC0A6rRhScQHiAWaEdhtgD8AYFRqrWYoFrpgBgBF4KH5t5ARCataC9iHeCRMdcY9uoMI6SHS87rPK7RQ2i8R-Ha87TCmG1qIlC6CsG66nXYyVeXUi6S9U1sqHXS6ugD11o1OpS_XaG6c5E673SJ67I2p25oHewJAYmOaUFH8Sg6doM-vL67CMK7RYXiVQxXfEE0oAW7PAr_bYfM6kEeJmcD2OfcirLi019jiE0KZS09sA5xugKDQzXUo8q3VloXwYJ8LdguxjmJ26fEDXF5XbthBFKVQNnZNUbqJ6kwoIGs6vvcxzoLJZ4MsXRIQErUVMCTaS4G68skOdRr2Hyg72Ly7ZXYO75mhhTXlTtQBgJepx7QoZRmGC6t3QqgeXQ-xYXS8gstEe7olCe6VnSygO3U-xxcG80tAVVZk7V9pQHTNBIcPw693c78nJiPphTdCaHvlvR5vrDarvu-6B3TCAA3bVo2yBs6APQh6Mgkh6stCWDZbgAZlTREA7puqb98rXaQ7cHaMKR-6ffui0e-rB4rWEW7UPYI7zKIGE_Um-k-9MT8LXVe7e-He6NLpD54TF9oy0HkVIwqoQe_tkMr3Atw3TWGJusF5M8TMqcoHbzFNDNxUk7Y4UU7X-6hLRB4e3aCZ2OH3oz3SCYfjKgBeOLDk7GtJ76rQgxpPax7Izhhgc5YIIaTbQgkcCgCxoee0TYJnASgSRAd4ICJu4MCJypBQhZgLIIlgJRAJ2EsBoINHlaMHerzQJkQlYViAiZJ9EtOeUCukQyhtoXMVIvR8BG0ALI85n0jRsPOrUce7MuzMurV1XDp11dCDKOkmqiZA_w_gCJBeiKQDNxIyJJAIV7GRH2ouXosp_nOwCXwgcsvnBsgzgHR0HZFMAJ2AjxMgHxhL1JcM7gMGbwjiRDvrKrZKbczhMtCZwbwOEAIgFVwc8GOwFPpZgUPrIcqmIXggnkSNqoPhDBIgJCqoLsp67Q3sx2BN6XbKgBqoFcZ9vVN7BIr8YtYNVBzvd5zysO2LzGFkKEhdNhaZQgIZgNVBQ2gpBBIui9_EdVA9ILt6TONcJ2ONVB0wtfQumC1BPnU8J3GD0xC8E1BsrB16uvXCAxmBNIR0PhDppIf9lxINJHspt6UfQNJVxI9kRvdMxxxMWBsfZ1IQOON7JvTFCPJG-gifWiJ8OLngtYEOwVpGYBYfZkhFlAsEzNCOgrvRNoZOAz6eICYxgJDBBn5qfxu0L2glGCOh7kOiAXCr17TiLQYcEFGA3dA6sQMAHkd6JUZdQJ2xe-cw9vKOZgxkfyUaALtIMgOKBmgLZY1zeQx9AKeg4mNZ5kPix6EsFr6ZgEiUlYEwh9fY0Fw-uZg4yO3IxOVGAxdXfQEsFiBKEMmQxKOFoCuAZ7HwXxBKIFWjTOJ8SxgL2MvffOokcGeBLhNDaYCGOA4_TqkuHFcBQ_QrY1cBmpd2OH70_ZLgxHDqDs_Qv01cC2d8_S6A18ESJfnXXdyEg4waAEjwEgO3YsiDQALfX14rfTV6Lou5jwoK77JniA0SqC36GEPb72_eSw-6F37aGrYATpFDaTPcR4I8J36O3peo9CDxBOON_9TMAXMB_dP6PWDNAjRMaSxgBg6cokH6WwDfJRQk5wJwDPAceAP6DEkP6Z_UZSkgBAopclBhSCicAd8aU9J0Kv7BCoJpH_R37z_VM8TsaMwyuer6dSCBgKOXb69pG_7B_W77L1Br5gA8_6wGAlgm3bAAIAx_7ThPL62kAAHdfW365GZAGWxG765CNb7bfSgH9feu132JUBYAyv74Az179AEe8OLQPBVQW7wBwqPgFPmQHfgkh7fhOKASfPM1KIHZprNORZI_QsQX3aqClSGLReA-6RtQXwGBbDQHCAIiQ3NBhYRwW0xkIXVgqA5LhtQcN9K_YtgMrJwYfzBJD_Fd5o5rij9GJldh9bCPQPUPrR1jX5gY6PhDhA6PRTA15RLMCYH67WYHHDJt78_lYH9ISaBDsG-C5QJYHjA37RpQclcXA54GJQMld3A7oGW7AqCssKNAxaMAoicE58e_cKQJA0JZfzNECnNE_1QyNQAvoCoCXaKagiSYrBi4Ayo58L7bogdadjBuVh-HQv1ijKj1Cg7y7ig9EB4emUGTwODEtPuZgsQANbonZZU1zXbgpnukHXUtkHzMMkHZgKkGIvBkH5QO6wI1i0Gm2LIZgbR0GM8glhug0LICLKx6phH-78A9_oHfaahzXGib4ms0AmSE76QMN76YIHkl2yF9B4_fUHlrZc7eHlH66EG9hgsm8ha7IcGztIkGdplx7ZzlDRtQM9BZIHOA4jtoHiZPCYuAziQ7Glx7kfmlDsFLYAng8M8TqIGEc4Ze0Nfo3EwQ3x6zLYm6oNAw12tG4hb1tUIu9GfwuBuaUHXI4EKA7vArdgp9G8KCQcQzJRmVhiGf3fKBZTP-7uoPUJEcJIQkvXOqF1el7tFUiCsvc04N1fygXIQ5tJcDFIWMlZICsMl9ExNJgFHBOEBIDiD5IK8rDqEcAZoOwIpmEhi8ofCGawKAwm_RNqSqDIGPoLRpWwdNhDUH-CLsNFCutNF9y1GCFHvWCZZtDghusKA6fPXKIAOBXg5RNJptTt1h_FHMRZPfSbdqDpp0MM_5uA7fQmBtNgCGJ3QeAJjDkaUQQTGNFt6mJyoXeKwbakcAAzGq2N5cNgG-_UAHzYOXF6EY1E3xskH9nq9bdqNVAZzr_siiEtcizfs8VfXLgdWmeNNiEmHUAMc96uNzh0w5GGsw4jYcwy4o8w0ugy4aHFBIl0xEwF9BZBNOibeANQ3xlfowANVAvfWOB9fV2H1-IiHGesiHUQL2HzMAvQkQyuIu9IOGl6NqGyBL2H5wxgBZw9p77cOOGQMK0GMgCuGAfTwwugyMHnGBjb3inHJ1w20guNH-pBwyWpqoCWoLw6aDMYFeHbw5EALwy2CiAFeHnwyuHCOKJwTw7bgVrBwZROIOGj_jusnlHABqoABGdNIOHQHaKAJ-d963xs2HmoPJpAfodgdWpDhGAJV7ivTQQtwIOGWoKBwyZLa7MtK7gcI-xDIcGjd3GEz7uvdBF8IUd7sI4XhaIfHRBw2Up67ZRH8I9RHNvXRHiPqT6DvdBErvZd7DQ9cYg2KxHYIzBjTQ9RGxoaxGpAKRG4QAJHq0JhGcmMr62g66czDRaH_jLhHBg56wbjISHiI7WAlvUGxOvcz7YcrUsSIdVAVIxOwaI0mhWIwhwGIVt6jI8xGdvdBFjvWT7DvbtCawvxHoIsAArI0Gw8jinBRI5D7tI3D7-mCHFMI3aHFSDJQgIoFHKtfiBy3PlqqcKFGE6oFGnqJD8JjZ9BlYOjgjgBaIQI9UtVvcABAoyZHMAGVcLI_eH_PftIWI5JGYMVlGRI9BEpAH57ko8VHq0FIwmmFtIPPQ7BYIwQxMtCwxAw4vdV1CmJkGHAlkGJQBOmJ6H9GAMwqPmYA6EGfBjxB0YrdrFIggR9RUpHCFkROj69tMzIZozSE5ozj7OhFRGg2EtG2xJBxFI1GwixGlJvkJ-SsYNyIlRFT6rbnA5NIVj6Vo8T6MJFnRggcyx82KdHHsv77wjNyIZ2CaDpg9ED6fY2xafbxHdo82I3o0OHauGQIvo4egONBJJ-hNMBC5NqdtxGzk0fatHvkAVHBJHiw7JLIcBRORIVvVFZLo3DHro5QV67VjGfxNT7RDinAGpIJCXjjWAWJKBHPdvNJBWItIUWOrFw9HQhWfX5hWHHxparCBwmIxtGMOG5Go2GzGawLkH6TTFCMwzForvVJxxOAiGgY0Z0hYx6C_1HhwTQYjHZYxoHJ5DpoFY89HO0FcApdtz74gatovoMkCNOPKaBAUmp2pnVC0AXfBG3FQApng0h6IHMUGUe4kPWNpw3PDvBMAGEZnIA0ghphk4nY3LBxpvV7vPcMh5gJPISkYoSLkBKY2TByYEiTyZcHALIYVZIr4Vc4rEVXIJU5iiquzIUi7Vc7MHVWjICaHjolgQs5ZZGdMlTnKHMJJSAh3G6x6PlU9GPnCQ6hEhYpznNZHpksh-ARshgQTarFzKsZHTfElLAEDQDzJFwTBFXNJXC3HqdO3GwzJ3GwhKXM3Vc3GRsK3H247XNu4yq5e43DoJ44udh443GPLDPG241IrnAAjxbuJXME40kh9KvnMkdMvH242vGN43XMwhNvGfTKS5edEUrZ1TvHaXBrdluKy4L4_mrT4_uVb4_OYQQQOd2zGy5N41fGfTBJ0_UdnNP48fHJnH0id40FxSMGJj-gGdIzY_bhT1sNRZwIvBiVcqyMVZaSMlVpE5FJOhrNris4dn_J2XWbA7fQB5PzqPJZTObGMgMcqXgHCoBqB-7eArB5PwZlgPgBKqPNBLRQIVYAU45Lo0406q8dCx419nNYkoMsrp3W1brVqDRioFHG4VUlkEVZ0rdlcirnZoK08COdZhE1IrRE7HHxE1MDJE5LpBWn25sQDwmA1tXEcDa2cI4uZaVQ6Kz7DOTbawFrw3YEYmDITRtNE348mAkNG2vWph7lOU4C41rBpziuUFdiA9-PsXalriBUcBAIdpkBiIkkI2cmhlZ8Hdu4CQup6DfE0F5kkI2dVLHTVa_oa597M1cjjPMIfE6eR_E42dPwM_1DXM5xmzpSBoBENggTtJY0iGSqC3OEpiLTQxRFBHhXIsXRQ_CGsRwO4p6XTUCXwPiBkJPMrmSJVYsfAQAtqMEAEEzTxrVom1wk6kmokz6c53lA7PQXNZHE_GcAk6DZ7doz9ZgAPsfE-KAuzmknO0Bi10Dir8nwG2EcE9FdSVVYNOzi2cTqMkmxk9iAJkz0Cpk0oREWohkR9DknnE3k0cBOMnKAIsnTk-kn5sAJ6fJO_H3YAAnH4zvG_siVCdTQ8ho8t9McjtFVmPjAAzk5ZdyrP0ch9RFBtyjSHr47y5a5o5dG3GcnuLHft1k0inGzlMJSkxwhyk5ksNfhkmN2qVhmgQ4mHk04mEzuItLcnYmiU-TRZTDyDTUIJhEQHHgCgHmEvrvlkdE2uUePm4nZFiIZFrqxNhAtz4WUwG4Zk_h0k1APQMbmG4Z7Z5VJDrg8dDvcnHk5SAzk7g9f-vSmp5JUnZwMymxUwG5gPRmt7DhEnZGrdGUJKhYh5Gb8JtUPa_pt2d1rqEnY5Nz4q4-sqR_A7QBU0DFTGoJcDHk5dTMKam0dgPsNJqxrP9q7RnU2Ygnjg7bXmpMpJUxEmEDn6m5bQGyrKu6mf-J6mzrmamXU9slR2na4HU3_8htCxqVBuftJivGn_U6I8BzV8oQ03KmtYGcmhHdmn_wAo9I00b7fDccmIkwqmN9tWm48AnUD9iTBy08XRYk5gdlU7indIADFhQAynVUykB1Uwam5rFWhUUzqtVfpilDfvymNU4Cwl8vzQipk8dh09X8MDqr84yPMIQ03HgwUzEm1k6OmT_fGdV07KnSUxunL_m2nVfhaBT00bshPGunAIQU6QUwVoADDyd7jpOUCUwRcvaneZR46KBx4_In548OccPriZk01OnJVhf8-jrbUX00vGx433HV4-vG3IFs5AE8AnHzD-nDHOp960xHhkU4hmdU4WnQUxim6MYBmbah8RK46Wn_MEtYADFSm8ACcnC43k0KU2_cPY62xCJHcw8ALSnzNGVZhii5piMzSnhaJwI-Cp_jPYzRn7lPRmqM2SxIwG7A-M4iBfArRnQwTLTIAn8mhTF4D4AIJYPUGfxlU4ym1UwkAU04B4d_R_oY7Sh1Yfh91hivC8DItqHFZI5FvoOcq6Sdcmqk8J5IsqpZsMMJSzpKNVorg9QBqJZnyoG9b75IGkRwL85r7ZOnB0-sri6N_VmaPCdvIcRnswMeAWAPbCtak-dSqApm-0wOnODtIFxU8XQPoC4ForkHBRU15n-rvFmaIo5mENacr-lu6AUs5o9vM8J4VQ-K8zYOXRMrtGmMvHFnCs7WBEswW4g4GXQlYKwJMs3smpEkln3QPVnXADTl0sxUBf5Jph3M6D8VMxaBioOVnIk2lnhPHFh_MyFbnY3mBAs5pholEp4cgGijyoFpAHvVFaHxiuDafgXpqNEKrkHPBDUIDHQHM7wlbwnPsSCkEwT1m9RW4Mld2k0mnufENgTWqpDOrH-bGENKBU5MjRgBGCtdltqHEkzThUcm1YHQK6JcVqT1WoAidKsxQp-A2vz7NWLQhAydi1s9gIjISSCXaBsH4BjgwxHWfL3WnOVVMGNRaWntQRwC4FfUBA4YBO6AaVUEBsmAXAHlVbZiSJ2LJwEfg_Rsw4p-PrZjSr7Gu7LtQA45tiBAO5o16LTmA_XbZVwJeZsHB3YaHFDaEJbhRnRrzm_aNQ5xhILmwcxzYmrI4ZtQcsIs5ZXb6CDhpf0HABu_JeYnbKDARgIrJf0AHZu_JrnUAMo4YQEZlWrFKFGrPmADc6jAkggPYp-AXgFqnXgPtYqmsHgKAyE_GsMRMQmJkM7mPnAwnR6H9ZVLp7nWuhoneEy6dOejFEsgj2mVUzVylM2RF_0_Q94wTCG2VGubQcN0BioPEiCLXQQxgAN1Q2mrwV6lJh07MyR5LNPd22l5tv-jTR3EPMr8BJ8ttijcAyzugUWHIUDEgItVElDiFervXnFqkDq1UCMA2EoyUYXmrwSmGMAt8aOoV-vhz4vF3mooL3mhqBDB1ePG6izCMB_TR661eP0FNNUW6e8xsoYQLksh833o0WpeZbcw3n7c4DqEDqDBD853ndc6CoYAAJrUAKTYz84rJSbMfnyoDfnz8z5Leqh9Bt82-hd8-3gPtQfmj839aL86fnv85fm_rarnQVLPnr80AW_8z5LBmMamDQQVwd823m7tQLh7lGmoj8yfn6CKZwf8ygWQC0rmMC5rndc-AXK028UTQAEbmjfqBeBBAAYC5MJ2xIDrkevLAyC-_nAdcO5VLOO6NMG7n7cA8Z2AAycmTuyteloVwcQAuBmSEVw9mJ2ALRCjQ1ACGIpeGyc--LiE5EB_1MkCBUNmHNYhNhjwoEx6xu9lLaZCZSR_c7IWJaKhYEHltqXpPbgA2tgBxFjESFECcqG1lI1w0xjxknesA5C9iAFC0Q8uC3FGsQz6mB3loW5rBg9JmvM1zrFwXJ_FcRBE03KXiBYXQnkRQ2jpQWRIvMVmTvl1EHtjSmRN4WRHFRF7DN4XsejTqqcJ_tFA-f8Lipl8oU6-nruPvGpFQPGGgF3G85o5cLC6vonbJfd9nhW6ggFABxcCdQJIHtmW7CeDnA6EGnAz8SesqZhyiy4pKiwuAaiz1FYBnHnM7SPoWM34iSiJFnI8_2nlM_-notJAWzYFNmRMzxmSiBZpbEx2cP7gpp-3qO1TVuat4HszBgHgxnsAg-cQtH0rPtswWpnppgXAprQOMOysBC-gALRJk4--PjCFwN1IgMSMrsfJ3t34gGksdSfqMDTSMqdZDquC7HQfrENrIi9lHwzqLb8hOdYNPazZnDFxTeEi4Eri0IWAojksOMC-cek5MrWHjwp-wooggtMlcek5KsSFUK9QfvdmvUo8rwdta0lara1MlnmAnWlI0azp7YXDISXclndafEBGpNYgnUBICRxttu7nSE17m2S_NgE6iYWyEw8c9C8oWxBEYW1C_yWPnOvQE6iKWGNcIXDC1EXw6vkIP7ljru3BsWK0GOcUc8enIwB_d8U0BnSsBVQGPrKAmPnG92PvoBOPk1NqTYzAXpmUC_wmerT2mgCM5r0jzQZVk2aVT05FR8nZgWlAh81T1nAGrA3tB6WelRDz-1XxBVFW6WDyg2ZqdJDJ1CEkhDQMv02EqRgN81JgQy_Iqwyy0rIy9GWGS_wg_fM8AA_HrCSyGGLF40mWgE3eCqzMpA25VJhIwIWWUyzcCLFVGXDQPLlEUEcrl7SHhK6HdmzXWZsDqDEBwElIor5IcRgvVpyqaK4gGLvPVUlovGl4QrFQy6w5VEDrgxQZpAzRIEiWxS0BeC6MAy-cqClJXTgVeCVLQjE_YBVMTn1QXpBNy-oXR8DeBgxOqDVERIg0iYEiV-gMY-gIcdAkcBKBjN5argMmB4YNz7SMFqUVuNaZdMNHkLqOSBYgNDChsEVx2HfUBh3aoxRqnkA3Qm0gQQWeA2LXeAmIvjs6aH4Z3RGQouuAJJAhIb6awCad6A-ItixG_9ufmQH2LYv7gbTQAh7mnRiyEyrnNU-8Ttc6jS3TWaaxpa8N1jGdHQMl4RQIesqYjeA-Eh3cwoppgpED6XgK9QAmoS7Rb1pbBX0T_MlVOfBps-6A3obGTfIbiBDM3EL2-FWrZKxABJADxXfS3-FPifblrVUScfpvvIS4NlpqbK6IICXsgavaxsP-ipgEJVVl34XHYMlq3IhgNrm-whwBKNkS6EJbOQH1kScMdrWB1CAYLaMJOA6sNYBkiDkBxou7beNhhsLAF5WNJGB0_KxvUugBko1okGIgXiPdkFuwBwq7SJQjFFWkmIbEgq8HFflqwppMIKM6lP5XPAT6X7wleEdfSXCBrovGIEdLApEHAAOAKahRMUsB5sY1WPAMGbL1KJi1CA4qXSwta0oPNiOq5ZXmHD1WqnFJh-q4U8UNOj00oF-D0eitFSVJ_AQKoagJq7QnvwfpXZq7M9Y0eYWE1Oj1Fc9FUteLktDUE7ZhVONXiyKvmlIDeEOq1rwXnjtXiyIag8CPiBLesJ4zFLKAOYZhhpi5GDgg0Bp0eoZ6gFS9QbSLdX6lLksWqx1WcgOwILFLV4qnPNBozUqDxlHBleClIl9evIGLzLkt_1LnnR1GlK6sNDWWKlIkPAN9WqcL9WVorksUgIVBka-wJTUeODH0gVgCoT9XKvDZDfAGoQ_5Wua-tt7kAEKwBs5X4qEnCxWpRKZxjEdiCpoElp1JFOEyWKetzABAjvVgzQQQWlhUeA8n5oqag8AG7BFZLLWfoG7BgzbjWG5G7B2AD7TPAfIq_SytxCaxUdlOrkCpkJ6g3S1rXWQ3vNy-R556-KrXiyD6Wta6wk-9C9hVa-rXra-aCda9ut9a-gMna7MDZC2lB4Ma7QPaxUr5oGwlbNA7XlGL6Xnax1XXaxGRPUH7WFS1yCFqz3RmgXl0G5EmaForksIAG-bva0SdIwNTlyoCBVUnAO9M69nXmgHvMzCzocM63vMs67ksK60NRirUScS60WZDEF7c1a8ZBH7J7ZWAEsAdmGSBO6-MA_DJsFDEFbnE5J7ZGaG3WfoO3Wu6zMBe604B-6zXwqnHbZtPCH4_DAvX2ADswJ6yDEPbelCl0Bx49YXjW95mxXja6SpLAbQmt63OAd646XPa5_AD6z3Qt61U4T6zeBja1B8MVbZWtXcLXzxJldnwlzXrxSyB_s3zWFqALXOVVT15REtEPAFk04VPKISOOLXAGw3Iz2OJmvJSRNPzAA3Ja11FPxGfxQG-hdhaxntGQIA3gG5A2I0-Lq2ChAi54cAAIEWGAqBDsoiGykASG4Q3KnPSQCoO3rfQQjMqq5QA-kFgAdomfwIEbEhG0MGa7WNaFmEMFILAh4A1Wqja9sC6AoANFtXOo_ohGwuA4KxAjQYMFdhG9Fsisl1xZGwuBxGC8gJGwbFGQIPxPxFnWVUCzclG-o3ugAN0laW4U1Gyo29ogpBYqiY20QI9E9Kbg29G-IxlThRd1AAbs0DRtbzXPSYXkOqsjPoGFqEVil5QApA3OLg3IgocQUCvIAEylY3aG5Jn4G51EmGyw3pa1A2Wva1WpaxzXMG4oUvc6A2UPgw2Ym1o22Gz0AOG8zarjKiAUq4IVZbBpJDpqSopkEnV1gEqJDpl1qCFA8QJ0_-oP9Bx5oiP3ReVPjWKm4VABus02-6LVMOAIAMOmyUx7aFJaVSMvxF4_A2fo6iBzosg2iEsMVQcFH8z7ewR5m8j9WFMwdB7WtEpEIyA1QhjxH_pGAxyxPNky5B4SUJTsLoHs21jMmXQYBaIn80WYCm1IaRQmN7XygQAim2Aw_whs3NUJDEOa0D1O3NBWEQrBX3RLs35Yvs3tnPc2u9K83NbJd8vlmU4EG8g3bFvCUEJpRW1CAAA9ahGzQNNQdZ-hG8AEGLAAKGAFQVFtNA3gAYtlGBYtnFugwNFv4tzFvYtzkBbKdCBAsLYANyEjIZN-iveoV955lEPRAq4WRljXgS8OKKAqoPHWst5Trst1CunQSfzKoQY1U0PltawAVuWvSHrgynls3vIDjM2hhudRVwCxNrxqVOCl7UJEjjFACBGzw0htUN46JLAXVvvAchsGtyhvvAB6ImtnpI0NyJsYNhBvKtpBtxN0zg9JRJsz15JsINrBvpN_OPRxRVszwnM05Np1ve2y67YAQBsV0aWu3VJ1uoNpJuLRBBt0tphyet7BTet0OC-ttVt7ADVsBtyESMgbzBQQ6qt3N7BuZt0yVtGYqDyiPNuvQIk6Vlt6zVl61vv7RhsZtoyz5t2YzYNrx0WATetUebBsdVofOFQcutlt4stw6NMt1ljgSwNhFwjALr2vN6ZtrlKP7q1r0tBl6oKMgc0LnRaqvYAKZumoP8Ju8GZt-5OZvFMQ1pI52nw2t6JvYAHM1L_Qj4LB1hQTwp4QHq_OVbA20uoAqQQdnaJJgguJIllzoCAIqBGHwzkDwuBGYhQjYF89WszyQWsyBQOhtFmNmYBmR6z5zerhBCjRKSZm8CigHUxjy-JLC6JdWruVhz_cUUC-wB2BKgiRB7cNPLewGGSBIzWPgtyDvQdh1Wwd2GTwdrFysOMLjuzSHRPy92bU6NDvrAAVyigMeaF8tNv5CPi1DEwS1faVjtMElGZvtosxg5ZbIQ5HzIpZNLKsOMzryQHoYSIGHLyQSXIrSM9vOOG2S_OJk1FSIzheOApC-OJWD-OCabzTJaYZOWaY7wOcL4uAEGVQrQTVQ_8CPOHON3AwlwLcIf7rAbcp5quXEHlflyCuU8oQgJFyWd-mafAr3jZqvcoed1Vx-1bzv_A2uMuObU2cayjIt4VfEY8StwP_RC2IhfTt2CDqq8ly8qdZNi0kcWLvngOTVShJLsIhTcgr4tvC8l9C1rWh1yWyZTLsapDRTtoQpHharDANw6xflWZs0PLpSJUwNNGTItQmVd7LDoSgSqXRhSlJM-14EKhRddnS0S9BvrDO7ZqNd-1aGvIbvDefrsRxEhXt0fJjDLA-Q6-BEvHgBRE2iad18TO-jjOkJ2IRWbxXmsZTvBoCj22nc2THQbznm5_kcoGK0BFVZtU4QMIVawfQoxQWIkKJ81bd8nl1-TWJUKHXx22NX4JAeA3TI1dPPdnKAO2UmztARgC_d8lAxWpYBfWiHuQ9iHuqy2UNy-DbvbNZwSTOq81S7HrvBOhHvhe9_n1-OVLkoHPzhYUjAqYUarepCyLM0dxq45cFAb5M5CwgcNj_lzzZJRjsB2Adxqf6VJuAK16nINOruLKRKnOncFKIxTFKo9-rvvZLnsQJBHQ4pXHsofIKIUZRozNOqrtzxYp2-AlFQNqd_6J7Pn7zXZ5wVdyqBYN8eoS2XBtnxTkFGLGbshgsDzmAs3LToC7KuaKXupN_zCpdycRjtCdoOtcHW-A1eRciSA6ocFqnocZ3s1gHLsdIXDsmwf0G0fQMHqDYMFiZ9rgRgqMFELSWQSJGbJSJZdxWdrFxLgtJojAUmpBJ0TI8NCVIuCbdjGJGiEdQ2dyYMBzbqanXZ6hyqCBTRPsyht4IJQtzuruMKG59tyEF968REQg2H56svtSuOSrcuSvvpQ6vtu1DYR19kvtXguyGrGX2pazZwCt9vAZ59wAIh1XiGxg3Qb194NLb0WztUuZwkOdo8oCuE8px9x_QZtW3uDDO2yIQz8ZLtH1qrtQ5jqaoiFFZcKH7g3_E79juDr96Ybd9vrSpN7GtQYIqFZAKj5ntl6ZQuGFzvwRTuGAcR24vGpzXKyt6FcKYDAuDkosCEl2uiR-vI0Q4jWgfmv-pSICQ0sfSPdNbKe2dYDTuNh2ZJZ9RCNf6gwG_fU7RCwLEF4XiYDz8QjKGLRID6RJfd1AeADmA00F7AckFigeUleVb1YeSAQG0gdm6dQjkDzvaUD4XhfFmgdmAWYJaxwIT_dQAdC1NA7WZtEvMkMYSAD0cAmgINIpOhIAADpgfHiUQdMDgR2FBS8pSu_n74FuUBo2YnWIG51FXEBbEjdvxr_BtfjMe-0WsKBbFxglS5Hp4ikM0PMupV2GIk6r16wKx-S6DyQfIOY4R3gWQRzZNbKNprIMZ5PgLqSKmveoVJ0wxQAf1sUxryDlGTeDi66QMYuAL8QAcGFrACIsMIdw6bwchtPN37pdSTNeHsEiG4fspSMfTJYAOx-DygRCeZwKwebW14IAvPbURRC0YIIWzPF7Li5YgdTImoelBeYAfk_wcc_dSRuDjCHRD69MH7CBjLYI4R-DpvpNDmAAfkyvpDD5_zJYabC1D5oeHVw_bHCAp4ofKYcFEMz3rScFzQAPDruAte3Weh7TdTB0DesD8iux9JxrwPYcND-r2TTA4fTTTJzzTImT7yRabnD4aY3DrCKCmCoMICH-wFIUOPf48OMC516R3wNmvBOIiChOIGEhq8cngwpWG_DomRbYNqBkCBhUAgiEc5QKEesDpz01rcDYu4V0CkAhRAeAQhBIjvPAojiMJuXH-a5aRfQM7dAr0lCwq4rGN4v9Hu4wbNDa7zBe4TLSL5Slcci7LQxEs94bCjYBe6rLYFY5Op-6zwGnaDiBe4CbRpaXbKnDD0EItJa9JDNl7ZOibQHXpQOkvvJXkL1AWv3MkZ8KaYKBEZLFzbTLOTym3E-bynDNiQJu5WYiE0svzNi573Fu4UQQ6bObWhbELdmjzI0bDDDM3y4vGTYVVwhPL4WUwkj1ENl2GZBu-AB7eXABCCjtrvBm-5aO5iwDKgR3XHLLJ25YTghEPOBaja13XW5MuxKdH0B_Ba-hJ5rBaEhwUe4XZFZqrO4iHtnej1CBMcjI67poUBoBm6Ntb56YlBwLaNC7HLNpm6HM0BkPMfLLU7gYAIsclj2SaaMCDAVj1GBVj4se6gWsfLJUHDpj2LZijj0olUesflLNpDeeAceijs1Y4ALADTYUceJjnAAAvSceZrffPzDP_bxjhseloNKDLj-cof5guiZuibVN7Kmj7MOEeerTvZJrT0dYaeccjI9045kfA1jjjMfF7LMeQNLygVkTceFHBhaWB98dJHOIeIsI_JrKHB3eoF4j3LBA5lNdX20V6OL3LBisZLe6T2VJozkoV0e2jrSv8LRePbbGPYgpgRAZuRWBW7b0fHLN2Jjj_0foXRm3v9aiZO2QMepDF0f-J20cYTscBYTw0cfOfCeJjqtCleLrj1CWB7p063pchsKPVeNicjqZ3rk5Hidl2LzzDNKUjETx7UIFhnOzCC9hQbIjAtiQAOymJNZGZXidqALA1W7I3LLrTtxiTonL_t0eS7TIEYOjEDqsN6I5hbcspiPOUPGTte35dmjGHTUd41bF-CO-vEfaV6GjKqRlafAL-So-TZ6LweFh2ACutwgUKoNAJev8PSQCvwKBZfwEBTo0CFj3yOt6uKFHYiYdg08YC4BuVxKtygCb76Tg6aGTq0f2T2GJW1CDYxhk6gV0N2sEAXWmHTMzZmibZ6vtMZZLlRmjxoJvKiBkmBtMShbEnDDZdCUjbr1boBdyc6jAKVRhoK6yeGTqqdVaWqdH4X9BioRqf0QR-s00K2praQAP5TqkEG14qeCjWBxlTv2ANAdbiWAEbB1ypjoDzYGj9TqyyDToWwwgEaccncFvgdYbZVbPaZ2To6ZaSVqfBmibsHXKRoRAPSX5bEDoziK94C0doe8lVKdPT2rZELEjgD9CyM_kRXPvaznBEABgKDcEjYgzv_7Malqcgz1YNnTtKdZbEDrh0SHCfTi6dRFmRvgzi_N6DlJrOtYc0gtUoAYz9gCxVDGe0QRBSlV8dwkKNvb7SRo4tbA-T3YO8IGRSHZt8YoA596OLwu3_1eGiF1FDIKDI61CKtToh7HNvBqV-S5ttrQqfzT9mikoEQCMRVGcvTiUjmDjhqUMO1yHTWZ5HgYSszUcfo-XS3qK55n1PPAsRn8AWfzXIWdZdtdT5NB2iHTC5tZdw34bPcvTqzuuvhYFifleQHIcTxw2PO6rbAjEDp1kRrx8Th5WDNWUtYAEScJgxWeCjF2fnTt2egjbrzLayq02ifrUYzr3aK9x7ziYLZsm7dSSqz7IA2ztgRNOmpubeusjtWztw8bXHrvHIk5IlIJx2ATLZ5V60ctKTTAXTC9a2O5M19hA5DaiUYaQCAR7IndAotKO1htwQt2eiLq7WjkUtnLZIAaeA-TJOABRIgIl2wxL1b3scNG9yn-YonM2rfcDR43UJGm-iUYBnyRTadT1ojlQZiAiAeRD9ztqf9hE7gGiHzzDISJiuiNudFMKUANJ2DwhUn-ZdhBJTUAZyAsoK2y0YdlbWtcksXLShbfbCufoFRyotKMJisu5mAnUKNEvwazhE-RKRTT3aRVJvea5LDlWobSMCizqGA2T0qdU-ZL7dPaGd2tD_qJg2GJuQLEe1nNLOQLoaiZTiWrNAL1ZkhGSxSJTBdIbE7YhVgBbUz6LboLmOfYLaDZtvdBVjgNjKZ4dUbGxT5aRfI9bTgWFZNTgBaDj4TZyj9GDfbBTaXTNbahZCafNw1SIPEAYB5AIbCmbXQ6LbchbWjpPKZnEWzA5g-RL6o6cwmNCdKL-PQpPGhcvYmbZ0F-bZVzq6YlbdC6KLsRcKdYbaiL6uc2L0LILNu83DNzCiLbRXPnWARcI6_cfIOMtDWQFwqQRkg1JeXzxngcXB-Li5ABL2rmRgX3NSNXxeIKi6IT8iUYGYWcAtoG22_D9sihLuJcRLvICJLiRgpLqJfj0J2yxLlwqNpIJcpeEJeYwMJfCgRtL5Lh7O8JaPijVZx7Tu1BfcFkWtnSLuTIeehfFCKkrbxGOcgjBC1whRraGL48C72YGduIEEb2FtgajLozLkAbvycz7DMR2KZdLZ6ugOiPue-KZL5XTiGezPA5Dx4TpccEPI7cmJrZTLkEZs99YtTL0DCcjENvAe7Ze8ziGcIHYDIkGm_1qGGOf01OqebO65fPLp7VPgHpKPLt1PPL-wMcertqY0G5fSyT5fMjGuwrcG_0z0HZdnL0FfXI9ACA0G_3BkJ5dnL4_a7d2gxArj5cIFukZevRFfP9ENCGGXWf2eRlZTUScOM9PMC_zpJgDhBeeY0NefWL3YAtKAl4k0QbMwtHKCA0BdNp-Uqg2AHc504dOHNA-WiV0FTAsgZL7GBR2JEjGZL12iwJzdd0L2Ft9CwzoZcwAdGeZuLGcX5SbY0zhVddCbPb2cDHBapxIaroMHAcQaFetTsvYme9lfxADHxnyH_BXoqIB9hFkZSMzSB6r95dTLqYRWr1wAWBW1eEAG_2Or1qeS7eab6ryeDArswvZudSQYGjHjNlfCHZz0aviWP6Blm9LpdLwuzO8kQuWFpIL2ztHJXxS3pJaZ2d5lkNeezm1T8Tn2diCf2dEOsnqd7NrvtiI5cboCZcVlP1IyN7vyV-GZfhzlSeSe-ZpU81B4bL6WQtr7AC3mxTxzUErpeeabCrQfitlLscDqzirPHgLLxheR_h-pX3qdkKypvlhoAfl88DNl3FVkl4FUJKPRq8hs2A9hUJTgryQDA0IaiMqZpf01cFfb2viCa58FdN5GuyA0bvzPD6ew5QNNRTrzb1YIHtf4Q8GXzYKddwripV55cFeQGTvZHrmezA0L9f_rl92Hrl1cvEKdfwKsGfMVkmAur8pwT8tG5Trl1c4QipeZLhJfiYJJcpAFJdIbyICVL-JckG2u4w25Fd8z91fd8WIa_rnpKlLktDEb6WDVL99d1Tkl5EAHDeNpD32Eb25c-7Ujc9rvFofm7ter4EX5lusPW56GNdShDtdYAZtw9-hNdylr7VN-TBKwQz6h4bONflYL1e3L69OoLu53lLdVcYzvXPVr1Bcw92m0fpQTdGZYTfd-GUD8wxSbXUBV67dI_hqb6NL6b0GCGbwFcGrgNcyr0Zd8hYzfHgRVekbTcifLrTcabum149qTBATNj5UAcWouVVzcM7fUd7AD1i2Z0bZ0rhwZW1VSyhbrypHEWRex8yzyXUVEAnUNsvEroNYesIdsAnOgDoiKTeJroh7Cb7IPRb-xdKbXpSGb6zdqbgzfibkTda9jmdlb8xciVnSeUZaDq3EENc5LqUanTnI1MZ23o1BUNVH9bJ399P9c5QT9ex7ZoS29OFcAbibcdNI4BdNX2eVeDNevTkbfEbj2eLbvNfYEHNfYAQtfzNM9cz2FbgXr_9fXr4orRAW9ePgUGBhr-u0Nr7ACMEMNckQm7cib19dX1Kbfgrx7fd-D9cvbn3rTb97dpQabdfb9vgDbu5G_b3PovLo_C_b33VOZVhR5zxyd7zCdHruhRArLlDYdwF2i2DvnZmL8RcV0AKKJTH-ZFzgdQlz1DYlTiucjgDHeqMWueRgKcnuAdBOwKuYanEV0T1zzgCNzopRULuUC9T60cKWZTI_z82DhMMQQAL5IBTzuzbtnY6eIatDp6L9KBs7p0ZETsXdWFoKBm9B2etrq3qZriXcCPTjeldAScbb72dbb32e7b0X5Sr72sXT6ddubsQRrNXw2FbtNeHzktCIDFkWjrjFCohCdcReKVe3jyMAVkRba2bureibwG6hbrp0WAD9dgwZXejb9AArcd7cfw6bd-7g3c_b43cfw1XcbCDwwG76PfB7tXBA7pRFh70OcvwfAD-AEGEFABPdCQzjYxbyrfu7pdRqbgopmbmPol5Kzf3EV3d2b71ChbgPcrcMNPh7t7fG72dRqbgPeA0evep7gR4R75bXN79hiHvVLqfL_3fx7pvdxWlvdJ7goDt7gyfs0dPdoWQbfvbyNZeG1bYOLlreSZmN5uw2wAOiGfc2iOFShb0bU8DG0SJz9C7GI9fe_BWx79LmkKNbGVSJzmBgesXkq9ax0Swz0LegwYGLI9hNyK_HTzAxX1asPIPOLwYNa2eRhR4unUQquySLBAEarmAbIAZXRMHlAKhibYCx4-MM13RG05GSI4aEAwqaHAwwbcLQ2JzWlhRD6AdCD52S-BGQZGDUI-kCMgOJD6AC0DJgAmltSoyCE06AWAqf7WYO9mdI6_fcFiJ_cxMj0KuqP5iP75_dz7gCeeuiCfYKI_dwADfe2PZm2r7uAhCH34IlRbP50ptTe776yQyl0X1aucQ8b7qQ9b7xS1b74ir5dmuvYWvyHqrLe3EVCV1-a0eq2Tru5r7iQ8yZ3J7j8WQ--zvffc4Gp6Jzz5uiG5Q-SH0YK5PZjuNGW6bNPGTAoTedapPf-6YcDJ72JLJ7vJHJ5b74M1hK0ieRr02Afro7esr7CeyU81VZL9ZaoAH-zt2F3OR-jT6r3RbApro0Aa7F1RqAarzNAAbrBHwo867ibVe7utMmTqbxgAah7pQCo8DmqHyotOK1y77pqW9XpoDdGvcfr9beu9BrV8QEYDeeTo-N7-675CEYAAvQY__r4fos3SXDO70I82ePuTukMQ8xAcw_T8Vw9b7qw9GL8Xyg_Wx6shyKMqgnwB-LD9e5LCIAJHslhJH_VCpHyrB-dXP0-AMJYsrwPejqY4_RyU48T884812NI8-XXY8-75IAHHy9dHH4cqDl5uAvHlI9vHy4-pa2QPJAW4_Tbh4__HxI9Ani49kJktod6_kZrfeTeS4HZuhb3CuJ5fWciRGN7mzuUKF79hh4nzYIeF7brjKGN69rx2cJhqnCDvAfdVPMj3tduNtr8PJUbbHeYEaqQ1XUZBgYbFozVx8kK0Lr7TEb91zDFVLbDbT84UXdC3r7Qx5mIDzYJdj8oSnp5acTafJL5Co_FQR_dnweRv8oC5P99JdS-oUCBaMcFDDjTU-B9Jh0jJ-ZpvIUNeIwQkAwJcpafYOeDwAYYA5QfzCDAkioCSe0-R4KgA3ATkAGn_oLeeJ0_AOOBJx0-kHFYSIC7SNNQG5J09a8VVgksNjIXQJ24SkSMdz6hCXgDTgianocqZHQNaRn6WToWt5AXQN5A_kBOpvIMRt6-NAB2cbc3HARGDfggs-iMSZDH2HM1Fm9HolmhjcBK6gAVmshOBIytApnibVvIFocTdcs9TVys-Zmms9aNus-XUf6SNn8s2ThD5xtngqAdn3BtfKY6FgwLs9oAT-DFn9HqbkJxtoAJ8CAAYz-3wGrhr5hsJDpqdpD61R4sABmefyPyh9dhuf2gIAAI0h3PaQ6OjuZ5-dV9A7PBUB1LUJkRaKE7PbMMwXYCna2HF6uKkvQlKkrVLc99Xqbo2APGYpAJemoF9MBECB2BFgAxc_ujXcFwNWMgczZ0mOh87OXxQvDsz8sFwLF0k-grmWJgsAwBk10t8YIvuLgQv-plt0WJgBm6pmC7VPW5Bhva5YhBg2EvMepwtOHVjCblg4MxjBgGvjLHWdfF5BtMinPF-to76hiNr5AVjuHAw4KgdE47F-oMPHHtwMl4syEnGbY15qCk5HAjwlHBUvp2CrY6eDDGEUA1j30ck442k0vZ0Zuw_2Dbw0uGkvxl7_Euvb39raGoBmGgE-9F6w0wfa_8ofZjBDJoj7CYKj7rnb90aJiH7IkOGSmUJG1e4KIh1kIPHtkO6AXRlE8atxo7bIcO6okNsMCFE_YoV-cp0_civqxgwv0V9QvsV4MH5gCkDJ_fkDJhrEvPkL8hG7jCvTqTSvyjFwvEumn0K_YwMTF6T7l5Egm2Y-nwSbi37mBnKCE29xjzV4QOREJZnw_er7mBin71uykSRF9AMJF7qvow2avweyCvOq2avwx_2CDQ0dnmBnymgxXlUrtD6v4jyYvoGF_LBMVv09iSnohUKr7s1__WZyBlDlV9RM1ugovTptFA_l7yvI_aw0El6771NYprCbq-ND_d-TIXcM0KODGjjF-av1MYOEQkmWkkzAmj4MdxEa7E_Yo4jkkzLCxzErC6yhbA_Dg1RBjTuB09yN5m9yl_ujrbG0vO-lLYmN-7YdHB0v4E1QkhwgBjIsaMveN-HYgnDC75l6I4FN-97h0GZ7UF90BECCfA2ch1KP141YsKBRw2AKpNucpSBtAOL1GQN_PWQP_PNUiBEWQmAv1JkEI4zEo67wkvgihCJkTN5uQ4F54Bqw9qcSt_bgMF-2QRnHY6-Q2GwlM3cmHqiWAxs3E6AMyPatF7sTTl4E-I6Hik7vZsvQw3svfGr4yVt_ZV4YNcvb1fcv2gM8vlV91v0nUmvWp837s14X1JV90GR_eOvJ_a1P516Ch3QCNGft939tKgxGREMBuE3ed4zZTuOtSCBt8-vZyt3kx3Nvg5ntSCuN8V6oiDblqQvuBLvmO8uNV9H6vw4IevI2sjv1NcTBJt7jvkPgQmpNzKNOwBGtNENQm59r4Kw21Tvx9ow1Fep74ZUyVIJl3bv2wGASb14GvJ1_rv4V-WCp0Fv7-JrX4hvFsTullaQv18m3SsABvfIm9QzLG9AUoFrK6mulv_8G6w8Uj2j_JnstXY0PGboyhv7NG6wrowK4vrH3vnqC-U1fRR9auEP6798lwiPTl6iom8r9BqKzevS_vVd5-T3BHpvfoMZveIDAv_8CfACt-d1U9k5vihB5vuscZg-sY2QP546mNnp2H0yvJuBB207a8BRu_U1gviLle0A_xGcJwINvaiuVumF72MFisnjbs0jmEiGIuSt1Iu6wCTmps2Vu1nZrAdlxYfDl3WAEp2lirMwtM0p0QvNYHYf1s3jmEiHeTVD6KL6wBy-2Coofls0njsj5rAu3waV-3wlmEiGtN0io2MX33UfP300fAXa-cbUwtvRN0D7DF8v-SqrOkl8sKW3qUwtPFp1EdS3ZXZU65eJ1Am2Bwx5P_1y1HI5crEm1xeN68mlo4TBgUikTWVJcBxOyQHcaTlaROl_wmAJnBDNe881gB86BO6i7nAwJyx-kok0wOrp0wfr2iuyOyZWFyw7cPDzJTMe5Evtn2aeeJV-elz0zqMWh8CudqqePoOUVvvePOQvkV9Lt7DBU0BD7Ht5jk3t-jvJD_x0vD7acd17-oHchYY_mIygVAnz7lEB7k4_YZNk_Zba8UO3o4j61mKtwp02V57bL8a1ukc39vPckavTu3Kwoexoh8By8fjN2yOMDtZwOULjIRwj-gDN2ACyR-yO2sRdE6JbzOutB-uTdAeoZU8dHKoikw6vxuoN85dAIQEfnZvhyWiqvPntFwKf-z5uuhz_YOkj26HCaeCLmRySO4BzCyuD_6mGkbKOH49LUf019wNEItubd60Oum7oPbfZnvOz6jvpfe3ozD44f1Lm2fgP2NOIz40e16PGfhdz4YPci89v6RxfIMR6lVVSbtxd7aYKV8aiaRaXvbcjpfV6KF83HCI0Xnu3ueP3fGgULJfMd8ofZD7hkFffjvnPyFGFz4jwgNy8-jvCDvoewd-XAEYINvBVfDezc6NL61f-4NmTimgAQXtnH-er_C-mCK8N1ewjvJL4bvUiR4flL9li1L78fZ-4egoz4ZfYr-d4J10zumEg0aBz7VfEEL1fR1-jiJpx9for4mfgASmfgP3mfs4PJfzM0EfvMxEfQz6jf9L5jfTL9M4lEG_OSmqDv353afsz_YslJVt8EV_1vvsyVuqc39vp-VFCob-IhLWUBuObhyW9b4n7xYM-f0Ht8UtmS37bB2EOdr-ueu60FToMEouHzTmsC17ysGInYnq6yTU98WZgXfCw1zhaD-RWzLTBjvDajblgeo0Bddkyhnf4k9-ULb9gA7ym9dnn2qOlhezwo76HftrB1y3tI3fNil9wB77W5FgAvfuTSTUsfJ2KIKcS8EalFb0MqO7EX1ZTu76B1yDh2fPb-1fNofoIWe1tfO4PDv-fadfc98bvf8eLm1b_rm_t5pLbb5LfG7gefNlUtulC4OdFPaAjXr4a2SFv9fFp0BuwH9NfxH89fG3vj216c2-XaSqkhf32u6mr7fd1ztfbmEbOxW-WTkYbVQ1yYqzR80dnifxULq1_nfN6Z74cjzUGTyymTKZSea8ZxGziXhSHI3RHTl5FV-pmdnAmv0Xi6KecwM59zIDH9eupbm2KBMR4_sn4Ovv2pWOvzvSKJl3JO_Uxw_UYVg835xmvZr-_ORWRrOHH6GT3wwQmMn_19spnYn35yE_agGkeh79E_OafE_Gn7ZS2CQ8_5sC8_LBQ9dENoVOI-2HfQEWrcsX_72en-vfBuUM_nn6nfd74S_EISS_xT9Aw17_S_EX8y_Nqi_fGsRYRBL4jf098dfYH7s_pL577cr6UfX6eUq_t9z04AL-Ctd__AsH6nvNd-r70z5jibX-GvlV_kfeXwzfwr7Gffr7jfSJqPwEHqMkXffLf-JbUf_cw0fw8yGfDr5g_UppSVd0xmfU4P8hdX4rf2j8W_a81y-B31W_HX7d4G39dwM36A4g38ztN_cq_y9-KhzBhQfLUz4BwqcBYGD-NjzJvIgZw_ychw8uHKTmIfe8bAzs8byLxY4KLQ8e_TFneuvH6Y2fKj4sAQP_fT4GfkEkGegzyKqfjEiBhT38efjCKfWA0j8-TsKbgzG0CoQb371Ypj-nK-vfozovr_TqWZKf0sb5U-Gft7oMe58kh1dHjZ0Z_oEWZ_JKaWTQydp_AbaafpWlaf5j-cvbt6s0bl-6f3g68vvfZyLwP5XjHcfB_Ij8H78d7yz_j1ZTDBH2X6A02vhL6q_-feV_rjzEge3_xLCP5h_yj-Q_Sv6N--Gc0a6v89Qmv-6_91-r7w2cNcBv77Bb6Zh_h8agzX8ZPjO8f9vKSaWIyyYi7vq_KaaDB9_fiZ5_Vv89vvkLiGl6c7Ah6bmwgNwWTpKdZ_0yci7NpC9a4SfQzif9y6-R2t_Db5ULpGaLT6Sfw3_VRimOycYO0V1CftGyjX2QFiuyRBk_zb8HcESdQstadB-LP79_Q72mPIX4ug8f-5_GGY9GYgkRYHf-LIgE9j_Wv56_M9-D_I2bOTfBwb_c1mRTzf65_PQIz_N39lfMwPJcXyZ9MN8drm3v4GTvv55_jV_H_Gf8BuGn6Ct_nvQAlxxe2aH52_GH5k3McXAW-gBb_u_6ad9_57_kM_3y7f84_gX-f_lUeyAZ_7R2v47-YA_63fafMOnhH_O38x_23_EP9n_0CmW_8aACf_BVMnfxdfBD93S3JcD38gEyfjU797fzT_BP8_fwRJJf9QtDu_EACiNEf7C0t1BFpNL91amz-cTB9thxAAR0wZgRxkI3RnfGk8Al06zlMBQUwhPWuvTEwxZDIAhuMzHwp_Cx8Of0foMMIhABGeBL1wH2mVZnsAwUF_XgDhfw6fNwhXqzvkcP84wUkSKX8_S2E9Si90ALAAmWMQ712_TIZ8ANt_QgDPr0_PT9VBNG_VIgxhbzQBNk8X3AcvNcpvjFRwR8gyuxUNFqhLAKdvbjIbAPEoEI0MqGe_NCAyvREgCr0rlTQjMUhW_Xf7bB9iZGoADbRzpCC9PAEhTWvVVDY71RieAJxB1wdAS2Ny1UG3Cck6nASAvtVqTB1sLBwVwUo6TaRNZA6QR9V4JykWBwD3AK0oSjovz2pkEwCznCmAVCNq7hgcWuNagIQIAWQVizhIHB45TVe_S1NFTSM4fuUkZCSgIeVXYBHlMeV9QG8cUgF8vUe6auRPXysAxFRgk3Nfc197ZCp6CYDIHmGQH6YSpwUNU3VgTVvUaRBtTm0NC04sQxDbYZ8BlyQtE64pSxIeQ-8Q9huuPV8yxFpeRdN1kyW2TBQ69UpNcYCRdxsNKYDgNRmA0DV7GS-vRs0RRnDuDEYTdQXkDYDzdQnGQAt1gHo1WMchhl-AkU8cdwKwId500yKmT5oU7Vw1MVR8uybTNjUFfnjzHE1biEhAz4DL6AkNfeYti0TXMjV1gMo1TYDQjX0AB3U8AixDUjwPOkH0Z_xnFkK8XPVF8ybHTTxs9HY8RaspqyMGEigc9W3ILT56QI8oc6B2BB6AweUtdCB4fbhR5XHlD40JtQH8Vtc0lyt3QoUbd3HXHLx6AlNYEUAaQK08ep1tbCFyR2dZQOHXa3cgvDHXO3clQMf4cTA1QMFALIc1-DWCXfRMni1AxtcfjS-AyQ1oTQyoHQs1gIBAkkCgQMmMQSgMqG0NIq8ViFhnOUQfQMsIBZsvKFEvYChlfFLIeP4IKBDApwhHz0sqOK9sFCMHGG1eMlVAlkDaiijAnCgGQO3IJkD9QK70LTxjDUcArkCMwIYoRI0YHm1A9IDUvHlA7MDFQNy8Fp9z9FNA9CoswPYnHUCCABHXSsDDQOrAq9BmQKD8QfRzQPMAS0DAj20SYI8kgmHkfQEsVB20ZmNXgOvMSDgynzieIfwi7hs-UU1BvinAnO1Nv3qfIVNJ7Qu_LJQZTWJEaaMZk0hLZxB1gHsMPmxR6FcDNwE_HxEuNr8VgIFYZTQ12FsBYEDsQNnhPTQYPCtsSxw37FdqYEwvDGLsF8CzHBX4I_AvwOwkI8DHDAscQ-wrHE4vQB5tiw2EJ9V0HnAg68DuJHzAgkC5S3PAgMDT8AQea8DdNXyEIzRCtCO0M6h49H_8UYBcND8wPs4WgPBIe-5ymAcLeidOPgzyFzQiINWQe-4mthZOXCcViDNLY0Efyw1AXWwfbGCBb3MPUFvTBCwsgMocPCBOILwgaLQ_vgZvBIEx_QPvLbQ4cCwgu4A9tAO0C9ApIKJyT09GgOXKTwDUgWa9RtBPvz-EF3g3CHu9JUFNT21BPDkE-U1PfexdIIOMPPBOtDrBPugSNloATU8n7BMgtdgC4Dsgn3c1-QMgn2lNT1yKMQQcYERaA9AjVEBHZkgXeGqADQQpQDLsRIgeo3XKR1BWiE4cF0AvILeOdyAbjBQnMwAfIK1Ja3g5ig0EaqR3EkKkbSDtqTK4SKCDsBngLOxNTy0gFJ8lQWEIPKCaAGig7iBEoPCcZKDiGVSgwvBqRQYwYUBqYUpzfyDvAFqgoNgK4CciDSBKoL7AFqCsADagnBB6oKygRqD7vQJ4anNeoP6goC9OoISg0clqoK05CaDBoIyFJqCh7G7FKYBxoOslNKD0Xm0gsLpQMhloAqkrgGoRKGBJaTAAcXlkwBKgyCB8oPD0bqC_IJSg9aC6oPbFVoFvoDWgoyl2oPReLqCZoKegtKD7oN2gp-xZoICg26CXoKmguSB3oJug56CBoK-g8uAEkw-guqDNoJHQLwB8ulAyEaCApnYAA6CjoJOgs6CDCTKgy6DgYJqg_6CwYIaggQAVoN-g1qDcYMmg76BYYO2ggmCn7D2g5GDDoL0gY6DToJswUqCCAHKg6aDfIKJgvqCSYIWgxqCfoKhggGCyYOlYCmCVoOpglGC6YLRgxmDzoMxgkdwroPZg-aCrjGpheyNJpDyKNQB1QRsgnmx581UgTU8ZaECRDWDUOF8pPWFhYLoRTU84YOnAarkSDTFsVyD2NE0Ahj0BAE1PbVUmRDQANxIYiFOAbYA9ILqnQJEFIB1gzSAzIKmgCyCqyijsTWCnaFvWF_U3EDd8SMALQHAGQOlw4IT5V89VQXdgz2CrM2FAfaCoYHF5MAU1eAKgn59lER0ghxV44PULPCV9IPWUTU89oXtCcKB1QRMgLAAWYKBgtmDeYIGguWD7sCm9RAAVI0ygvWCyuANg2GgK4Olg6uDWqVrg-yNEAAsgJ1g3CFdpJuAcoIrg4wAItwXQPpg-fX7LR-QvpFPlWbMoAHNXFTwxgAOoM6RGwhQnDuCQYKCg6yUV8TcIQqCclQeg7WCfAHFgjGDmYIOMDOCloPnsA-D0YI1AC6C-Y2VgWSBioMY8QyBH4J8AZ-Cr4JFAG-Dw_m9gkyFOzgAcdOCUn1Gg0fBAkQMgQ-CmYKNgrKCHMFbg9YNQEIFg-GDKYIn5J8sn4KhgRBDDIBUgcuDrC3GpRkRojS1XVAA3IKVg7AArgAh7duDsYLmg6yVN4OpFMLsG4OgTEdAUqSZEAFIiEKrgjeC0QC3gihDEAFcAQF8uU2JjeUB_QH4AxODuN25wAqCv4JihFpsrIJgAI2DOxUcgqnNAEILg3WC8qX1g6QU9LzLsJ8AWhHkQ_WBWABSAVgQsABIAZUABqmU6AgBuAHCAMAAVEUUAH2lkwHsAWqsUgB9pWJE0EFlgLAATEO1ASxCDaUsQgOlYkViRJxDXEPURJxDNEOn6OAA7EIcQt6ETEKSgSxDLICCQ7fF6akRgKckgkIZpBPkoYEsgcxCHEJMQ88AfaQUgexCFIECQhSBxeRMQ-wBRUDwAJxCIFF8QjxCEYAoPIpDkwHiQ2JF9EgMpfJC1ERRJJwB0AFKQhSBakOTAexD1EX1APSBLEPsARjxXACMgNpCukIZpJxDIoDaQ6JC4kShgAZDOkO6QpxDBkP6QqGB7AEGQ0NphkKmQwZD9QAyQqZC1EUVpNpDJkOcQuJEBkLcQkZDJkPaQ8ZC-kK2Q2JELQDmQ6ZCnEMWQtZCFIFWQqZD1kImQtZDtkPmQqABokPsAZMArkL2Q3pDYkV2Q9ZDjkMOQtREnEKCQhJCkkJSQwJDTEKCQuJDkwGxcV893qWpg7VtIwEsrJYA4UM6rNBFZVU1PWOCHFWAQ12C1YOblHODqgGLglkFjYIRg7wBNTxoQhIwUJDEQ2BDTYNq5dUEkELQQkdwrY3krA1EYq1ZoeTBYUDQAeAUrgDURIyAVeFUgPHB14Jxg-JwmEPIQ_7AJEF5QkhD-UOCglfFEAFYQ9hDp2m1yF-Bh4LUIPeYKfE97VHdLVQsgTeQjgBQnJ79uIFaRLqMVUxTEHeDBEMLBSyDOcGsgp8CdQWxgbFDxEJlpHODUUIIPHOD84JhgHOCJL2tgsBDm4IgQ-RD1Y0UQktVGkXGRFIBjSABhVCAOREvgEklyD3QgG4U4EE6jJOI9IBMJF5ZSSRmAVT9IUPAQjABi4Iigd3NyoKf7CFw4EFhHdAB4Rx7XMwCvvwdAWVA3fHwfdeAhEDd8HJwy0MUNavNZwEa9IiA3YzXgItCq0IrlHjtnwgvHStC672vHBQ8ZVl9AJtCCgGJYSOlaQQE-HaFwwwthXgAuVF4AZwAUYFYEWaApGHkAJ4AyJw9HdtDdx0FAOMo6QJ7Qj7B6hEvHSVgUPk3QpdD1wDjKJNZ8xzMLZYc85XRHTEcpJxxHEmB80L-EUeCwiDmoalVp3Xig-r0MsDJ3WuMX0MC4O5BefSwXC9DsDyzARQ9kUHF9AlQ8CASwX2B8kRacOXRdQDBkcMxJ1SIAAgAAm3I9M3BvJF2kBScDhjUnLdsXKh2tabAAwVXdfa0GaCYoczAugHIOchwEwPXfYuBYYg_LB2ApEHERUcM3yHlAKXYM7WZiAjDpw2Iw4sYKMKow24AaMOhtFd4YokzDR1Z5QDYw6jDmMPOeNSxA1mu8cr9GyCYwztYbbVXdIigmMJ9WWhJ-TFkwkDBCMK1EEmBuQiF8doB9uDx0eYQDhgW8RMJ4sDQw3jDlMKEwtdQaMMpnJ8AkoAFDfoAhQymgeYRigFFDLoAjgA70K3ZkynEwxkdjMKIwkmABJGdAZxM6hzV-AVgtsHxWO7t5cBUwrvRvw1xWAlBzMBgDKo92-EuDZ_BxlASwULDUQG_DWBhIsJAwaLC17TiwpTAEsKYwzzDuZCG0eBhuKHpITvhssMlA8LAMsLb4BUNDwSgWZ6QDfX5wK4gmVFyw1TDqhgTzdmdIGHMwP9AWsMxA8zcEMJ1iRLCTMI82WlN_SiNaPeYmdEsAHGRMCQ1eNuATuAFVBxV1eBwUPIA5anY2Z1554FOAPxltSEmwokBpsNRWK-RTeDv6TwFLAHGwrXU7AD2w3bEkCnAxEnAgQDM2QTBG4G5XV_p1VmtAHeoksK72EnAByWkAR5UMImRwASAJqAUrGSBJAHq4SQAFkSexATCOMKEwwXdpsDokI4Bw3hmwtLC2kGew22RfSlGgBml2CDkIWwBefFBTfoBBGDBQPLCksRAoDN1w2j3NbbCOG2DTSTCWVllsRcBC7yyYVK8WPUawjzDVMLBQbRFKOS6w5HN2Z0hwzXdCwFhw7HD6cO8wpYl6SGCYKeRyclokKBYecMo5V0M6cLCwkXDdE1rANnDHBCtQUsc2-CtQMsYfMIjTIvpHDQG6FuVia2Zw2-hkx3X0BcBkrWS-F6c8cJV8JUMoFlC6RyIbbXfQnkR2aAm9fFZpYF9beABlcPy_d98Dcj0gGMYnlznNBOh5cFAwoZwIMKgw88B8MOMw2hxNKjHNSmglalxWCUNXDnMwYIZGs3nSGaBW4GxzFGgsiisHINCSemiAPisPcJgNNgRI8JAwM3DAFBjwn6IfBGCw4m0yfj9JC2g9cJeuCZBlhllw91BnkhoAXWlIwBigQ9ttYlqw23AWRTSgDXDwAj7Hc_o1cNcCZK0nvVHUFvCDcMBtOMCWcPtFChRB8Lr2cCRwDnEDCJwK8LSgWIdt1jRuS3D4WBtwhnw7cOybB3DecLffAmIW8Ke9RWRy8P7w9gQJ8MgmF6cYxgDIFvDCxkNwzWcFN3Lw5L4hoki2Pk9Ju36-Tpo2cK6ELgBvPCq8LSR38Nq8Y_CcLmw2dbc38PQAP2c3ei-UV_C30Hr4W_C69nvwxVd38IwRLoQllG88QAjZxxT_SAjIJnvwivZFVyOEdhhu_C6EE0Ipin_gP2M0oEtwi-ANkE1qKXhMCIvgEQ47bngIx15fy1owOzArLygaSn15qwYIlHsgymYItK0tJDL6Ik4aCJILOgi9I151fTDDl1bwwoUrCEYI5GcOCPMAVgjX93YIhVROCJoIh6h2BHgIp703MOoI5gi-COwPJ-gEGlPCJgiFVHGraQjO0l_2GgiZh2MInwA95l4IzydHEAEIs4UqcGRXEQiVMAMIoIoJCL0Iw-DtCNG7Cm1mCJMIzwifACUIyn0VCKFSBvUL8ORSYIAl-i4I2BA_Y3OXD-kbG17w-wjYPFCI3_CSE3y3XUZV6m3yMAcM4POoF0AL5imAPSBqYX5wpqCHMANEMvDZ8MPw01AW5SGoVzRZ8KHw8wB1a1dwwqAaiObw1AjpwCnw8_9CPhZuBIjOEnhAMqsEcy-0QsZcQC1gckMYiLvwicJ9ABxBMQjU7QxnPojOIAaocvC_0EUzT9Bf9mGIroiYoXaI3HEZJxxBaw4xGE_EadA_exG6D0MEo1HNU5Y7wnDwrPCEowSwaPDoIjjw4phNMAmgBkA5gA1AabMclkWItAhtAT-oTojniLpwCPDTiK6DN4jRiPzwgWJ4IGUYHBA8IF3OH4jcSknAUYBJiLL2UjZJiJwAYLDmgxEFGm0Rik7cTmcKr3LeKTAN7SeWRPRSc3J6cfcWbj3NcvDL8OHwr5QW8J7WP6YuMPzvHrDFeTQERoj6ElBItIMeiIhImkAGMKgwNnDBW1mMd3ZItU6aarxd8Lbwo_CCSOCI8wBbj0d6IIj2bGAI3chWSJ0weTcwYhfw03C30G_wto8v8KAIn_CaSKpndHgACLlIoAiyj2pPWUi43EGIqAjsNhgIoAiVtTZw6SQo-iVgK1AKCIIIrYB2yG5wFGAKiL7wlkUsBhwbUpRCxkwIqXhu_GkkGo0D8N5IsGd8CKrgCIi_WQCIuxQySH5I_SQySMLGfFMrjXVeN0jsCImCUYAc9zkGUMj5SIrySoioCPceG0h8e3Lw0ki0dmWgLT8__Thw-AAycLZIo98eMMlwTMjZ8JrhLKArjlfPe0VLJkTI1Mi0CKeI0YiFPQmIpkiAix1IrZtwoghw4XDLXlLXdRRu8J91FMiHSNEIvkiGyJwucyhi61DI0_DJlFK8MAiFECVIhUikCOVIsciCkjVIx3okCK1IurA5yIgIlcjVSNnQQ0j6twb1KzNOyNbHa9h4gGEI8IjrSPhYflANIyv0RnCzhm3w83JvSMKFffDiiN5IsIirSNuUORla6xVIgGcqIhTKHkiRyKHIivC-5HMIyn1LyK_IsVEjyP1eIVt4CPdI5nh9G0A_Pjc6sHLI5K1syJ_4XMilMILIqTCOW1OgYvDo4hRImG0GT3_bZ8Jv0NrWS9CVIMgvKB9oLxWYa9DbPQBEEqRxbzKkHIRHug1vDIAMhFNQHAlyQggQI-xNgCiAfDRfnATtY7gfuDO4HAB_uB24CcwQeAb8cHgHiyh4fQBmSNwbeFRi32oAQs8AmF7I2hJdASUonyEAyGZYTFoiWF69HiiBFCiASTx1XnCkUwF5hCl4E4Z8ykZbJQNGTyFrFgCR3B4HK2A2KM9YXYQVIO8AgEAlILFIOijggOJgCV8yzRegV0BAvW-HFBA95iK4PSoVuACnIER6TFJJOr1RbxVvOCBXPRYo72NWWkpAW30hAFlNLOBSgRC9E4dqTBvXSgBXhxDjRoEw40agiONzO3fYWqtAG0pEKtttokkkN1ga2znkV6Bs2zF4IdtZgFebCRAu22aVaste2xrjMQErS1BHNaJqgLcIVRVcFXI7VdF8vgsAEMslbl4VOGREQSu4UT1-Hyu4CRU4VRy-N0sOqK4VOOYNFS0VHRU9FWyRdYBVFTGoyjsxqJflVdwHVWsVL-Uf5XWogpVp5mR0cmJYZHC4MpVDtyMfOQF85Wzjer1wATBcKUxwAUoBW4h2vFIBDmQRRnGQD01X5FOWBZFATxCzJrRbuSLtM_h7rRY4WSEQgS4VQ6jH5WOo0dVTqKsVKRBP5VsVT7kG7mJIE8dT-BbodtAGk0RhO08ggBl0aacT-lIwde5JXxggRsJNRghozEYauT5QY1UqaOy5WeDU_B1EO_4OMAvwCFUfEHGVXpNKaI_6ahVV0C1gV-AZoEbCO_5FpwN5Y1UiuC2oD8hYNn1dZoB5RDtHSnxREhGqBxUWXGNUAfhjVX8rab07s3_4Qmi9kC93WFA7T2GwNWBTiDZdJwATMAhOM2ArNijKJhcUS2NVDupYELvCTTBwlF6zLYBY-CWzR6F-rlHkO6ZlEDEQel1lgwn5T-BOcAEAHDdgzVuAKABz0Bm4IrgMViPAE8B_gMvAOttH9ncAOiRsIBAqSOj7ADgw5_xyQGjotOj2yFt9dtAnwChgcq0lAnHQJpRBCngVPeZUazVQWst6Zl9MEjE12Fzo1Oj_AHpqcHMJunLothciTjro1dwA4GBrHuisXADgesthPH7o6Mt66IZLTkAWsH-AJOwVMECATpNicwcVN0B2GB1OTOiW6LaQIQMO6PYYSGg95k6o8Mt1n1rLUdRd6NTLedVoy2yPFo8Oa2LbIsgC4Ivo2tsS2wG6I-juqJPo_UBqvCLbW-j9AE3ItVAAXhCzCuiNUJvoxqjXQHYEV-j_6LTdCbVEgHw9QQpkgHYEIOUbXn4oQpYz4jKUWDxvPGgY0X4c4RYAK-jM6Lgwj4BY-AiXeIABVEZoxv1psCXsabAwGMzQcxwQlT3mGhUcN26wIhjysBIYvl5CoQn5SUCgPzubIBis22rbdFgGqKghDUCAmDViZK50Gxqo3hjh-A9bBLMoaNXwKjI1oks4GYBvaQgRRmIrHh4YjwA8jEEKcBto21aomYBXm1bbdgQuaUinNXgYG3IGURiSYHEY7oRJGKzrJYAtW0ARQ1tFGP2kfVtCZ1NbSxirohNbCBE7GPNbb55mZ2MIDBjcAAgUNIJUGJknfsRc6MwYiBRmA09QA3I2Pm_othc2Mk7oyMR5XVZo-BjawB8Izeif6NHUOMspMGuoQhdRCLnorpNzADFVBLdfGKjozBjAgFkgWdwiyncYnkRyAEjAOUdwGOy0YBV06TFVPeYOPD0qcdQuehyYrOiPGImoNIIZGM_EJpj_GImoeTJnUi2wBIARaKGqdhpYmPTnHiwt6NowCNROmNwAfJi0AEKY-bBimOVgUpjymNIYycByGMQFRvCDchqYvn0e6HqYtlM5mL8YlpiEgDaYwRiT-k3KfZimcguGPZjcmKmY7HFcNEywIpizmIWYspilgDoYoD4q6MQFcXkkUPhQok46mIKRXZjJmLXwJuAkeA5sSpV_mK65I5jEGwkYUFiV-UhMcLBWFFXomOjtJ0_QlhhpMD8AuoDFSAF9OwB8EmvuECAMqNkAvgDXNhiooMBjNnI-MXgq_RiYU314mCIwVD5NfWzQopjzMGKICDBYhkJY3K4beTJjGV9jOAoYRUd6_XN9YDDNfXKAYHleSgWDY30a_QmoZgMBwl2oE4hkEjEQPDRqWJ5IXiD2IKEsXv09ADEQJwxBIJfdOpJpWKSwKXNCwFzoHkhtWLgoDViuQhtwSHNXl11YsSgTWOfpICdVfE19MiwPUH8RKVijWKswP2gqA37CTVjFcAtY0fAJ_VDIN2BaWJPXSgM1-WoDanMvg3NYoVVEAwswGKjtrXnXBoAcAExQUuVH-BKoOQMIXyGnIwYnaGuSZDg1fQKwLOwKiHHQDYQi2TJjMNjQGEEKVrAYqLBQRDpc9g19HPC16LFwgXAS2LQQMNiafHzonQRyeE60BHRhEJNQwFJ62JjDRZRtZ3jweG05CAbY_wArKlQYDK5OcNbsUklYCB4FHw1p60LjA2j5yirYhGw_aNnYissuFVGo--UdTCWAKaiOHxmo_hV5qNFAOZjzMDfwf2jC3QrWKNicACPYoW1BYDzo_wBVWBnYgOiugCvYwNdCiCiwuEhwMBHYjDDT2JwDJhA6WIV9JWA0gHMQLsBdsDagOQhuiFfYlXCn2MCwEtjgEGSjf9irg3_9JehXcAWDQTMu9CEAQVjZWJrYy6hF2HvhQVi1zUkxJCw-aHtYgaggWP9sX7MpDTqnXljjMLLYqxiB_QEgjUAiOO9yAag-kCPwBYMYEiTiUe0_pGH4FgAiAB-eUwhzX1A45VctcK7whjN1Bx1XA2h0sJIdMYsjHRDzKXDdumgDF9jf2N-wQZE_AGRfYTj4HXmgTdiJHy2opdU_eF2ovvQ-D2UDKqw2gCygRxYxg23dQitnd34dCIA24A-2DO4QAOWSBLAP7gULVj1RGCs403NNyEg2fQBDt3g9E8BLOIEUKIsJrRknNldhg2OeLhBf5HaDUzj5rns4_h5HOLddX9CCAE84mLiAuIWDBziNiyeYloAc8x5qaABSqFGqJV0zkGc4fc5eFDtCACNRKHkIOYCMCAnnW_d82moUR0NKDEPbATi4P3z2Mahg2JwAAAN20H6CYzJ67Qq0IkYPSLFzfnMJcwPvUGA5R15GCj1Hwl8jCvQbA30OCyMriFUY-YAxuIsjFfMXiGm47IAvISisUwpl-lX6Ovpt6FBwRbjZuJ-sWrws8wLecrBtuOW4-OgRmMnbVEjRfn23MbdYj3hXE7ceiheHGuw01CO4jrig7WCMOGAo03NsGE9njxINV48Z7HePDHgb5UKVW6iSlQeo92BylQ6rMWg_TwKIMNigsGogvbM5vktheiEfrC3xUbjjuKTQNXBa7Vz9c9dMeP_XGG5PuMRAM49gT1-4y489CjqDL8h4IJqAIHVEOPg40YMMw2K47ohrIByVSTj5I199Xjj5OPgqVLAK6EMbTYMkA3p4lPQ0AGEgfU8vWPWAT4lz9HntPnihfHI49ejxOMZ40s9CKNk4611xeKjwOsCfV2oMHDjeeMwAfnjaACkY7jiyqCl4hXiNeMIsWsCUwP4461ixOP14qlcleON4iSAyxyOEUYAiynz1U3d6eFUFFWoz-Bt43V1zoCnuM3jVkAZ4i3ijeK7A9UCOqzJpItctMA546tjWeLdCdnilOOBrbOt5eNWQUDjI-OHWPeZO9EvAWYAVaiuIeIBQ-L8WVIcbvUU4_YCgAPlwdXiCgEk4tlM7OOfY8Eh4-Iz4pTiNQg54lHN3y0_LUm5-FC7YgQBZoGF4koDBKGxGKe1mnnO_ZcDLvy3A6miLXz9Yjms0oDkTHR9e5jdLYPiKqHGQDEYrsnkgN2BR-JXmN2A2Rin-DNioMBX-ZOU5RCpEaTAlqNhVKRVVqPkVXh15Zym_UfBT90iPQwMoME74nZ5bXX9AhcDc3klEK_j9n2nAqJ4QClftKJ56rTBPD6AL-Kf4yp9i3l6-SINAbhSKOjJ--Lvif_5_4nE_T_it6AXCG3xr-JCNKfjhtimfXyhYBLxGJ3gPCklEQSIKqBP4o_jSjRCeE-037UvKGN4-zh5DDTkwYlHqLZsepWj3MPcu7j73JtxO8AXWU34lXjmbDcCAlDumR3147wAE8y4e5AStSrjj9lqfFcDKBP-UaATBKEQE_YD4BJaoIQSpNTYEgL0BBKPwDAT20XGNJL4iBNKUS_d6JDNGcgT6CB4E3vi7piWUbGk-dW6wSPYMQICvHkMEBMQQZDVz-N8oWx5eHWDIMwlEOiqwzPJpsGMTD_ibQ05A8niC1kMEuCCoIMTXbrBwBJiVKQSZDTu-DQSqni0-W4hQrE_A4CDXwPMcX8DQhO_A0_pR2OO0VgMSONxDTX19ODEQfoJKIDHYoljkgCa4le8p2KQMK0DHZ20-cCDS3WQcYI810PcEuUtMHlF-FxQcGMho_BjmnXr4N-QwaKqEvBi0GLkaK_xolyuILwTiWAq-WPNueNEYWBJTLlWQU9AiAFTQUFhsBjaw2rVH-IgE7_iy4iM-ew0UpjzeHrZTeKQDUjwxeIN4-3jiuMLYo4AWeI2E5LAscO2EwxQzwBdWdtI3CP0HQG4F0DD4vYSKlAOErXwYdWBtDdAlSEDKTUtxynq4mvgRBJgE4wSUnnQE7P4muOWxdk8WqGxGHwSsBK74gESZqDqfLu5PBO1OXT59BNwYT0MZACuNHsNwwxWDcbV8yI8jFAN4wyiiN8YfsEBgRTxvQXlANtio7GD4YsNguMtwL8NkwxcUELjrvSpwAqwrOKjwEkSDOOpE8_QmwxB1NITSNRmE7qANI0YAAKjyYCAiVyNtTj5LZXs7xyuURgBwAQoNVKMbolM-MyNf3zW9RBAJRPOEXJ4pRK6UPP4_SBRgGUSSOOqgTsMKDWlA7AAgw1yEtQAVROCPaqBgjxVEw9jZ2K_DY0S72IpE6ZYhABEAUDivwxA4-TiVRMqEmrlcGP0Y5mRqoEdEiGimhJknZmQVRM9SLrdZwFdE4AAaOBVEgahz7DW9EISZ7FMcbIBgxIloBhxqoCAgiMSrHAlEgmB50n5QViNdwx_Yt0I3-KIjcqNhRISjCwBUoyNFab8PqTzEkhRDIyMEsBAIOhVEhx4yxJaoWx5oxI-oNUSJaBVEzUSfkRbEvUSbQK1E4ABDRIoNM0T4glNE29j4ghVEq0SraDSAW0S5OLdCB0StYEaEl0TqsDdEqcSnROqE5oTmnR9EuRQ_RJSAAMSeYFSbRtJC-XnvKJBJ0HVBPGAKDRDE4uwwxOfAyISoxKPEmMSj8DjEiISExNfApMTqo1qjedJ0xPLGDK5cI1vIzSNAaOLyEsTFCEXDVpB6xI9QRsSPqBVEstBHEUxgZsSSwLUAbUT-wOwAdsT0AC88A0SOxMsRCg00wI4-cCCaxNKA5wS4ACHEl8AbRJfE23g0gAfEgiJBwykATkT9AFgjJ8SCsA8YAxh4SK1QswAvKKqUUaNEfQPAiUE_7w0kU8ClgPX1W-8gF27Q0oSKeOpjNiRMJL4kjwFuJMq-WCCQjRm_JGMVmCtqQSTbvlBE56RNo3yMIDBbAVEkiRBYeIfGcp9XoyxvdYB5WObsHcC6bzNQv8D4RHHEf-8JO1vEl-wrHGAfA9AGJKIMJISpYGYkqaMPUEUk0QDdxJRYn-QqvUPiM9sz0MtwnyjqAL3mO9CIiAZQR9DuVjZwsgi5NzcIAJMaABV4AL45GSuASKSCABV4GpsbwEBodxVzTT1MP1F7wQrQeFh5IDgXQ6YaRjPAbnAxO1onOagVeBpGcuU5cDpGAgB4pNKk_dAJEGFkaKSpSFik-XoEpKSklKSgE08VKHRXYEyk1cBspPlAXKSBWHykscBCpPlAM8BqpLKkoaSKpMwnEqSKqhi0eKSlaRik_cThsDmoJWlWpNSkjqSMpOwvAIcBWBykyOsxZxfgQaT0ziXQP6IqpOWkoyBxpMOk-SAppJoAJWkZpLqk66SjIAWkkuDmpJWkgVgcAGSktaT0pK6kzaTWcG2kvqTdpPgXAaSK0AKkiqTBfAIAG6SDeAmko6S7YjBks6TapLYfOahdaUekiKB4pL2kgR53pPakz6Tqyyyk36T2gH6k9mgDpOGk46SUZKhgc6TCZKukoqcSZLhkmsBhZERkxqTFpJpkgGSp93RkjxVMZO6kraT2aB2kuadGZP2koGTIZKKkl1QKZNJkyaStNF1pW6T1gDgXJGSrgDxktPdmZLSkuGQNpNuBH6SOZL-krmS8pN5ki6SRpNBNf6ShZKhkrWSuZLFkmsBCp2oPSWTZp2iAag9VpIxk-WSvpMVk2sBepNxkyOtzZMBk8gY-ZM1knnwHZL0gHWTLpL1ks2SPZKpkg9A2cNy3CzhPxGGCAVhV8MEKCQC0QHSeRmhxMEmVMABY5LD6E8RTMDY8Y4TsZ29QNbo7WAjXCOI5Bkj6PNNAV130VocTOlMwQLD9tVzk71Bi5JzkgI9ramDIWcioFgt6SuT2j0X8IZoQCJ5zUIAwAG68XJZ9tXYEcuTd9GSKNEAPnWVgRwBMABkwM1APuHWULABYaFsTNnDzxBDk63DW5IZ8JdQ_eztYKOSrNTxwKeS9cOrYl55k5KsvPAh05L7kmMDC5KdvcboU5IatSuSC5ODIVkjC6g18aqSOcC08b_8rwOAEIagw-nWAQOS4-AkYGeSX4DDksBgl5MrkqzUTKOT5BltvSDnkn5Z_ZKgWFfCgFPAQTYi-GJo-Zp9VWFbkrj5sFB2iZ5hZQEewAQBB5N-wb9xycLssK-SSpIPPQLCKUzZw_yBNDGgU0rQIKMQrYMQktABOWABxMFzsVeTQFKDnFypDpk_ksrR_SOtIuRkq0CEvc0j3UBZQAVhOQFs3T8i11FtI72k7LXULIlBqFPcARw9sFDAU23DIFOH4a8jw9DZw99CWY2LgVCAAvjCk7sQ1FKI-TWpepKNBFylsTB2AVlsfcHWAKRS18JkUsoxjFLfgUxSaJC1YN-TcwlDk8BSh_BsUxhTwFIkQF-SdonfkxIBP5OR46GE3FNsU2eT8VhWkGuSjgB2xB6hiCOUUpHANFNoUqHDCCIrWDfgwlITgDRSvbGwI-1AIiJ2xTBxNYRrAUJT5gFIIxIB4WCmCCIj4WGSKP2M-f2Z7d9CVIK-olvYggMvVez0x4C1AImRnPUSoiW9kqLvgH79Bpj-_XTt6vTCouwAIqKiolz0S2Lioozg4V1M0SuxuUiKoj6hOTEDjUqivhwyAozh8Oy_ldbhvTGI7DL0h_lZaKDs5lNesIjsfeCWU0js8vROcH3wBZEWPY_cLDzUPSjoXpje_QjoGARfYt4A_qNrjBTRnACuU6Io_FRROI-pjoD6eASsWQFhiQZT0NGGUiv89gFMLOkxIbGlo2CRr0Q4gBntdZxA2VahogF7sUN5jK0SgK6h9AFroDOVHxEqVQPijFQ7zGuwhlMnsUKA_wDP4IRcRMGDNMABvPDsAcusiAHDoPeYfCJEwUGA9IGzEPeZIGIpUs2UkzQBeIlSgNHTEalSWgFHUElSdaSubPrYCVPHUOS144l59D6iMWNsuLUAe0D1qcWBaeGr9WJhKWJsEq31fWMrTSVSuWNQABv0qWO90PljkOMoAbDjYew5Yk309iCQsGVTNfUngcEYYWMUaBVTRWK2AcVjstTuAB1iZWN6HA2x20BhId0SKiE9E6GizWJK4x1TnRJqE5mQehPlkdEByaHFwNcSJNHiIR1i28nnEj0SZxJ4NcCdFsB9YvGibBLVQAb1c4nBI60T5OM4GUNSnVPDU-eJfRLQ3CRhJ3Ca4-b1wOJdIe5Sncg5IkLCs1IKAQ4JysFS-OvZf8ErUtAjV5RuoJ21F_igIutS5wGvtZ1gA1J7qMNifVPuUdtTKoDkIZtTxUgtyTtTE_V9UvAB_VNLU_0TqsCkIVNSPVKXEr1S3GPpY-TjI2Mio0VSdfS_YqyphxIr4gDi-2OHY50jwsC7U8mge1Kv8OrJZlJg7OcxFlO0VVdwxKLDEFDsdeOYUmGJmgGEyFO1kYh6EpJJu1PHU9cSV_BPU-ZS4Oy2Uq5wHgkyOSgAUkDhAc9AtYGWgSPZpi2RE19SD1PfUmTIp8ntFK3191LwAQ9SJLnnfBYNENLHUxDoy1MnU91TFxK9E8mo0OPpIEdSMNMlGCdT4PDnHadTcNOho_d0ruxWUgjt1lLPUzZSL1PnCJGiQ1GflOHRcHS_U-jSFlMY0-mYe0AaABjtXYDDYz4lh1LfUzDTSNL4_Pz9EOMQ05DSH4nS4u7MkOxQ7Act7lAa9ebI7iL9BFF8swFBoMQ1RfjiAPjB0AGI09Ddy1Pcw70gR1OQ012gv1I2UkjsrnCvU5Ds_eBKYBLAoNNHUzGAzNKVBfoJSEnYnBzTTNJg07FQlCOZ9fTTnNO80uDSdYnc0wHJE6CYwsTSP1MqgAuIR8O1wgtjAtIk083cQtLUAQ64O5E5VOQgUlF3UIh4MtP5E7LJC1MWUARAZNPnffrCItOZkAuIHG16wswlcoHeGWNT89h3-Fntz2POdXxRc1NiEs_iylHl-Wyx8_i8-AJ0vKAkefLJutIjAtrSQ_k4OV2g2Z1jAqIMMxL_Y9S4S-Ns4ue8d1Md-G205eIXUiPjK-P2AqhQxeWyE7LNU3l0_ArNkHAWCEdszXi6UeUQlHgSAV5tM2hyXM595DyzEjoJcnkzkurB8gjcPedJSMAbRbUQiQDrdQj5YFQ6NE1QH-DYwPRocUkYWZbCbPGZ8B08gIjxLcBRR6kxGGooBVyBI-4jVl3BWEwpeQwS_LQ9srWe07oSEv2UHfDR9cJFCAJ1AwgUgXxtMdNRwSxSR-HGUMGA9tI0bSEotG2zqUZMbs0SAMGj0AFO0gj9TTnS0vLSm5HldFwJsuK1ECl5KaFdEXPRjtKgAenSt3i2OU7THE0Q6MP9wn1p007TRm05I-bdzeh6aJ3pfRFO07o9NyOYYm21FqFO04fpw2lV0rURhdJwuPv8_mBQbQf9s-ODIu8IWQA18JWiQrUY4I7Jxe1lINVSsOLuUjwBLziKIZnSjMnlEK5tyayDfNyoFfSd00GAXdPCqEvcEyLdTO1wkgHF0rUQ__wbbZ11DdJQo6-xmaHeUtTwtRFWgT2iUlCt0iTDPdPt0x04XdLD4hdE7pDeAVYQb2OcTWdjPSFLYkjTItIS095JhGKKZdwh6WK90l3SJrT8DZwBiaMlY-b8KFE10tDMs1MR1EvD5jlnfUxp7jl92TX0wMCd0uvTvaJOINUYFJ2MmCfV5Tz_WO89bHkn1OY9YKDVwUnS-vnmfKypm9LO01vTr0yibLNS-Qkd01PSuvHX0xDpNyHlDXzco1L707fThkAH06GEh9INcQVYeYBSeY4RzBN3Ekdt53FtU53ccjVyvBu989hbEqzVjUjs0OrTjxKtsGXM8IAYcBITvg1voHI9hNzyPLzxqvDAM4o8kJMgMurcldPXNcvd--jd3M3dDyLxIjE8ppw7aXUYcj1WUdNdvZwJPY8Ba926PL2d18G23MUid31g8I7SbSFBwPP4gwLoIGzAHHhs4-QSbbXn01QipdMtdIGxZdMgAWrxb9NyeQo8ej3YIxrVwdMNtLfdWDxW1UHADlOWPWx51j2m2MQRbD23-EgSCxFZDCY55m2skfABKSLRrMmtXxhYRMsio9JR8Z7SPAVDgaAAhCKWbY-TCIkaPdQz2WK-ffMAuvTuPCpU9GgYVKhg3-iJHWkAv-hCzNiANUBPFDMipMDhXPhC7AH1QoOAlIE0wbGB4YCWw_VFeWnzAeydNMEwAYZEm4FKoQ48dRDQVH3EhADslaZ4K_mLod7MXDNn1EvNzADsiPXw8rjnNG6gOMBdzJlVncky3TV08c3jQSloVXQR3fIzdgA4wC0BJABa8HQy8XQuAHWEqjKdAZzgJwGeLEjjungSTVOQfoKiMA0RWF1tosgppInZoiDZA9LXHHxhuYXQKH6D1aDixDIzP-iyMtwyJ1lg8Q49zsl73D9d3tyEI3_SpgAijbqBDjwG6XYzCIk2ocFdK6HuLUGF9YV2MklpBXnJaBgIj_TsAfgA0FSfsOmFFjKzY4vMVjKoiQ49QiOCM1GtTxhBeGjiY9GLsWrwIBgOMs4y7TivEz1iRIkOPC0AJIF-M7QykTwNRV8Dxt0OPPeYIeIfsREzIePhXfAyQykvXX7c0TL9oSHj5Rlgw7zwwg2GU_OB-TG7sSFT6TFIONVABuOeY0Hxs8DJMu-QjqxYOO48MVK3oLFTDjhewKxxPOKxMp3wSTJBqPvRPlLcgb5S01CxMvkyrHCvXbyA4MOCOUHB9jw9dUEy2C1q8fVjEmKVM749FTN_wCE8SONhIanMI1AO4xjCU9IQIb3TGQE83HjN69L8wD8SaGJ-iMSSrlBr3cjd8ghb3HpJft2TwftSWqi3E6hIN_hb3eBVHTN73AAUXTJLUkrT3TPecWFF_yNYM4a92WMz03FRs9MQQXPSuDnNEg-Ui9NK0-xIUGxKdEQxmdLbWW5TmdOtOXsSFnSOvIMyotN7iDfi-vk800TSkzNQ8UaALNIY0qzS7BAw7fOpzwBhkJhj5cAnY37At1KA47LSTqnk4nsCjsmRqSMz-WJQ4mwSTTjS0rfTMtIKdK31-zI1Uu3TrfCywwkB16Dm0iczeSkygMH1qn24Y02AN1MXU5rS4JQyYXCS2eJMuQDi71x3UxDiFzKnM2MyOzO79TtTdzMtufczHwDPM0houzK7aZnTMOIFY41SNJ2sE3rYXNWgte-twAQR9GEQUtkQQZySV-B3Mt0IALMck5XgEpAvvB3sYJPCLNiTaRAkQYI9gH1lErfcBJJd7eMz4ghAstzAKNOdUloTibyEkLiRZFDbU-LScLNmYGST0EI-oc-wELJI4hhwrJMafZntcxLPbAGjfqMYUXyTR4Jmg7pTwcPq9aYQ-lKGo6pS4IHHgOpTGKJc9RpTQREFMEUzvlLeHYqiPh0mUvrjplJC4aTozFU24bzIsXDOojGibFR_lLON7TCRY9VYvxJMKIVShfTFU2RZJVIpYnliCNOjUoDihWLFU030qLH1U__1DVOq0xDjfWPeDPN8gLIyuTcz9yXzUgiSbbWNKU9i8GNSwMpFv2NfE_8Ab7DmNEt4zLWcs1sze2KA4w8yjfTg-ayyArJr05WAXzOF42yyRgBq0l4Shhno3KOTrQPgklMykILQkwkDXLKJyetiYrI6GK_YW-HTI23839Jr4e3B9UH1QPaQLtNQk00twINdoEjCoMHmgS7s6sCjJK5RJqxPPD_TMBLJAmgAMHmFzf2IvwQ3PYI9u-KEksCDE1w3IUVshSXmae3BAwLHgoJJarNowSHBqrNQAZays0GzEIag1rI2s8OhWCh2s9bRaMAUvG81b6D4CSrxzMzffQKSoiDtERIhYjJ-AC0Bb_hVqC0BIcMKs-ZoqtJGATPdZwHsAUhEMeEETUEEPVHksixU0aMtBc6isaJLyQbdvrJ3SKoQQlR6VUdQalzlAJM45LLi4BSzLFRBslSyLqLsVDttEBXZpN6zwRjrDFSZFrMTIAJ1VrI9YZChcKCcNX_B5rPXIVGAnDTcY9SYu9IzvCsolqk5wwTMZRksMUfSt73cGCfSU_0gk9pJJcDGskMZwRk-slIBIbPTSHnVItQhsn6ykjzzBNaIrgGKAfxtpjVf1YUBQMDeAO1gs6ykYBY08ISbgeWodgGEUDYR79S1s4YRqEiY7Ku9MP00YH9ZkaAqoRazmLjr4NlZ0Cn6VFSMUXifndAo0KGvmFm53rPxsgyYROLxSEZjxzLZsnYBD70QyMfTsjWumGL5ebPCLBqyBrIKEmRwqIngsvqynQIKEuIsZxiFsyWyobMKqVOyxbOlsscJZbL8bLABZ-XzsyyBTjSSIHWydXVnEBxURjSbgbcT1-NM_CtMYGKHNdZMPwE1PPHsC5wsAPeYgQxGAK0RdXhNdOvg_lFiM9gRXlkAwQk5W7L4XOUAK5zr4LVVlVAeoaYRV51vWGaACXkp3GuACmEAXTHxB7JHswK4swGjHKJg5hmELHg5boGSnGejcfFAXVx9fn1QwEcA95RRyGSxKrjLzUYjFjNEwOzQ7_n2oSOwNGiJzWKsWTgTAfez3rOFs0WyxIBbCFl1zqHes4rg7kR6AH6y_5FAEd-y17OTJb-z4ACSPFZjAl0WM5MlgHKhs8ByPKxPbWsB97OLs0lpS7MbQZByxliSIRtIcHPhWOFd1ZwPs2eARwAp8IE4X-kcM3axd5w8M2IyCXl-M09ZECkkQXQBL5Brsc6hv1iY49-zuVgsAVmytRjoGKbRQ7P56KCz50CQkitBP7Izs8u5KrTuRKBzobJINVwwQph76bWzMHL1s4UFK7M9M0Rwa7GIc9NdajEcs-ISCrKjUWDxSz3w5LrgHiHukL15g-IeIH-wVuAsclUgf7EBoORjEHPTSENcunXCLd3sCsDTEBmxVCHsUWIzgMF1s1FYFamBUxupZIgAca-RXIGRAc1ctKwrYuKykiAk0DBzXcBUcjisKFKNsrNIrKlS2HBBw2CyAV4cpOKh46vdz6LAM4wwoLNgMlAzavBKPQbphJ2bk6_8KjyQMqvc0DLU3QqBzDJyc3MRz6LrkxXdSzxr3aPduj1q8EgzOAHgM3Oog3HpGRi0W9yH3KgiPoFQADIcG9TRUg7ccTNr3f3pR1CIclkV5RihPDYyCDIj3EZyJtXpMloAPt3RUr5TJ7A0jS7j7jwJMu-xj7Gu44GhDnKAcY-xsaTJMhkwKTM0pbexkCKpwOUzTMFMcgZylSG9cAZzCIjm00m5qrDlHEg4G9VIwLZM9sFUwAABeu48fRGi9c1VuFnnolJgW82ReGPh2HgROVud7YS15KgynnNscs4zIcG6bB-ozjP3WNFyDt0KgYqAgkROM7wzNHLbwo6tTCgW6XF5ydntECjBJ31mGf2ysWnx-YSlz7T68eZzRCKOrBT8QyNYeNTB-V32oUap3rOQmbeoRqlkwRfx_tOe2AuAgIlbgXa9MnLYc_hMBIlIOYugXAmBoH4s9USiuOvhBlC1gKUANXULAWhzXiWJyULsyxySIOxztx1xc1lc4bKhPHFyjiDscnWtHFSoiTahNgD_sxQh7sPf6HVyBpjlAPP1zqGL9bOyuQTDuLvRpYCEcP7dsXPm2KxyQTPlcmfNwV20WVlyVMGBrBhyJ80hgcblDrz1cmvgP12M4yNyHcWgo4ocpgAqVZVzqFMKM6ZUkXN1cjwia-GiAA1ym4DIEYNz1Bh9crx5KAH9c-aAP13VkLfFwVyjwUNyM3PYALNyjtVI8fKc83IAtAtzSlDv8HUB83Lj4XfRy3KhoKRw_XOdUPvNG3Mj6BtyDtzIEUNy6TKwAATVEgBpswDdaeh2cyD0HYmLcgdyy3LOMs5ygkEh46zh-3O7cmAAjXN3c9qxIeLwNHUzolRucrexqTPucno5oDiW0v9ji7JlsBdznmITcwtzT1ywAP61EgC78ANyZ7A5M2dAPxJJbQ9yFwAklc_Rg3NPcktB93NRyEtyXQBPcnUzz3P9iK5yFwGvcqaA7nJDiB9yJtOI0aqYX3O_coTUETOt0rDyAWJdAb5znmMec8zQU7OkckBysglH3DPdZ9x68TZ0jCNIRENcZxwQOWNsKbWY85F5FxwQOIZJkRgb1SxyzjJXcwPc_fktc348hPPsc7SFWADMcrjc3nPMczOU9PlMwcRyqPKhs71S2eJicydSj4VE4uKzpmLttbpjl2w4ELDDmnKW3RxzsQBlnDnCTPOuMRsRWPJd6WrxsuRRWfNdenObMtnj3rKgc-XxOPKs8rAB_eliQdzyffEXHLzzAHKURGRykjzI9ZESWzKW6XnwLmOprWbp0nNLlY9yZXO9sqDATAnDgl8sZaTNlIh4nvR66P2y-HPZs7PBU3J1BPfDs8G5ssOydRL5s2OzRHMK8yjzAvJ-s9OzlPMzs4Ojs7Lf1KiI4nL8czw4mvLUcrNJESIbGGG0yMnprLNSbBNj1CKJPrzMAbSzFlCYk38yR0HsMGCyKHRAYMKz0LJI4ubyWxIosuOypvM0kSOz8jwQg7kR4WGJBG-BkLMco5bRnwhG82HIz23KU8vjHzOYsveZWLKjY9iy74E4sjDj-lK6QeBtXm0vokKwEaIO-SGRQy3Lbe8Fe22qcTNC0gO6EIajKIBGo7OYxqPXYmYE1uFiSNxVLZNlKdSyVgWo-Z8JmGHVWLMyT9KOAf9D25wl9XMzGtLdMwsztEgPbFxRw4U7tY8txMBSXVTM4BlqweVUArKXU6NjP2L2kTCjnUmRoJTpgEEzWVdS6rOeU7HI3lKJ8S1U2LIehaGEwFyYQC8zMxNbHbpS_IWZCMWycAAZ82IAmfMADKMAtlQh8qLgofNIuIgRj7FZYzNjc-OV8qDBm2J9glfiPoFCAVgBc2NfZLry5fDx8tAYoAEJ8jABifO39UnyjBkfc_8A7RDN84sAiCNPYkwRvTF8vfzJnAArMIHhqayKIYmjRRnAI0_j5mm4uBrSYAEE3SnycAECYp7AjDnKwEWkRaSB89swQfIDgaujusBj892A4_KJOP4zq0DDYydJF2PNEkPzA_LjMwPzrFH17QPzBN33Y__0JUFnYwTd3SgLMkvSV2zA4zcpzMGFNM_TCuitUoVi4Pkb8y1SCMwI07nz0kDZ9QhjKQWlk3koZfNcVOXyWZK8VWWJl9SZEDXx-_NO0ZxVZfI-k0fyfVGX1VwA-_P-kg89B_Mh8kfzZSmX1Zi9ixin8tfzh_LlkzfyD-ObM73yTiFTdWYxCmXCwJ7U2_MlY3FTIOhzrTvyT_KSwTzyvfO9outY7gDP87vw73NC8x_zFcESAWzd6WJ_89_zrPG78NccX_OhhN_y9WH_8hX1AAulwYAKhRk7UmALQMCgCl0gYAo_8-vgEAtf80_zrPHGc9liCtMIsh-IsfJL0yXjmuLL880SK_MIClDSoCjXNBczYrJ2vTAL5xC7I9yywvJoCpczFoDoAFczm7Rbsok4Oag_6SdIHyGz8r3d-8M0wJFIxgEIfLMBHNJU010QlaPAc2WBCwDvg9i4U2ymgeIBwLT9wI6gvAhOVGagEtiS3ZjASjI5otPi97N_mO0ST3AeEPVEHXLIc7ehjtktqKHCNSIs8l8JkHKj-DVUo_hKM9JiF6KUgV0QzuNbs7hzFPlIC-IJyAvwCx2darCH4xyw9u3L8xAyEsEz8qp5A_KQU3vcSZBdAHpivSir8ygKr4kRzIUQpMASUUJjIaElDaej-8JcC4IAsmJq3TkCyApb3bzwk_LwVcajU_KJOCgLP3zEwRIK-1znvddsauONw8R4KDM4YutsFohtbJ7y36Mb9MvS-vFYYtoLiyAfor7yn6InoyZQ-gpLba_CbCPcIUILe9wBeMYLXQB3oldjgfLXY-PyHFRZuOYKswAHkJihpgoIMyBj-GOe86CEqSNvocILdpCz8-IJogoPkJxYigpM3OvyQMAiCru4ogtdQRKz84zfM94NjhDM0MALu_L8wM_y4tLkZNvyffMi8kAyjPIVIirwBujeCvzAm5N6PKPhiaLD4sLy8fXV0rt9FCwACzAKjSHhC7fBiaLXUL0Fb1nS0xALPPJ68AvSu_PgAGEg__LxC8qBFZHPw9EKVtJhCxAKnBBJPZCiXB3UkP4KYQrZ4vH1btNN6aXTyvAssIgATiAbk44Q_gohC1gToQs5w2EKwfVRC_Ah0Qu88N718OQZPDtxfgpP8-cRUrL4gMELsIOP85EKrsG-CnQYVSHCrRkKhQuZCsH1WQqLMdrNOQpXYC1zWAC1C73zVk2V-bdMHiDNC1_yphEGzCyjg1z8wKYQSsy3veYR2s0jIlj1DQszzNqUvrTf3AkKYrlZ8ZIg273qAbUA7lQ4wMuBhAPyACHhkgD5KF-D8xlmzVgB5s2GwAKdZeAXdCbUIgB5uULitmIo8b8ENQVKFd0L0ik1LBUAXfAOTbCdMwoRULT9sDNl0kELhwHLC_kL802t8sFBSbmvM4eTNPMmCywy76ENCzYL47wiAcIo46xzCqatZaVYXcugoxBuA7dM1fhSfeUBsJ3CKGsionOa47SA_golnGcLbgxrAZ9EuwEXC44Q8CCrC4ELuDPUkesLAbnJHQXzT2Lb8uQg7guekQPyAyHJPdsUZxxdVHGyCsCvC_GDFx1vC9IpxfLFs6nzaMAhaZd1odIdAebS62kpaXIy9_R6zL-doQqtCRYyDs3vCqp4bwokgSUL0inJPW3yzfVcgE9jl1Kd8pjoQJFd893z1CC0_elVIIurEzmUvLOXUhgzjyz6AMfws6314RjxKdK08jyyYOOvMjzQ6T0SDMz1CFIj42qFz1XqhVylWYR95YsBiQCqAbwBQMl_AQ44hUSTRFHdb0SrhSfNIYAEitPF4AGgPKRcBYXh3XCBF4D4ixeBo0WXgV-A2Tl1eMTAgvSBALiLQQF2RdhFJ0jMxZmAsIHEi6NE0N1nKXskMYQsYc0ABYQRbJWk2RSRgIHEgOWYoquArItQRJGAcAD1pIalOGCukKyK9IEhgHABI1A8iiyKpQEukXuArIuxgPyK_IvsipFFDh28ivyKNER1pSKLfOE84FJJpYQRbWTVEYEX5e1Eqpnx4QngjiGJ4UZkq4QRbPrk_IrrZYhErwnxUGKLJ80iitTtA1gqiyGACeFuUJRUAoveHCZSCYNwcKyKjIHCi_yKkSQBHLUkK1RBHLuD0gOzhYaFEAFQPGaF0D36i9KCgnEiim9o-gDvaX7pZxxSijqKIYC6izKLsqNapLEAYoohlFaLEUUGBYYFKQGci3yL2aQCimaKwCQ5NCUB2ot8i7aKtRQi9DaKUor65RGAroqzRK2NiGRtjd3MrIvSityLIorHYwyKUop8iuKKEoouka0BnIo6ilXg7Iq4JIZgXhBBAbwA8jgJkXQRnhBYitAE2EE_5CFBPYReoHQBY-CvWIKLMkH4AeQAFAHkAeQAgAA",__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:r,Map:To}},n.a.createElement(To,{viewport:{center:[.026,123.61],zoom:5}})))}}])&&Qo(r.prototype,o),s&&Qo(r,s),t}();xo.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-map-map.6d332527b24515ec2403.js.map