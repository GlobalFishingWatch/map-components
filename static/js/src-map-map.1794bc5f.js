(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports={version:8,glyphs:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true",sprite:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites",metadata:{"mapbox:groups":{"basemap-background":{name:"basemap-background"},static:{name:"static"},temporal:{name:"temporal"},tracks:{name:"tracks"},"basemap-foreground":{name:"basemap-foreground"}},"gfw:basemap-layers":[{id:"satellite",label:"Satellite"},{id:"north-star",label:"North Star"},{id:"labels",isOption:!0},{id:"graticules",isOption:!0},{id:"bathymetry",isOption:!0}],"gfw:styles":{selected:{fill:{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},circle:{"circle-stroke-width":[2,.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},highlighted:{circle:{"circle-stroke-color":["#fff","#000"]}}}},sources:{6:{metadata:{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{id:"nama"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},satellite:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256,attribution:"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href='https://www.google.com/intl/en-GB_US/help/terms_maps.html'>Terms of Use</a><br>"},"north-star":{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},labels:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},graticules:{metadata:{"gfw:carto-sql":"select * from graticules where scalerank=4"},type:"vector"},bathymetry:{metadata:{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},type:"vector"},mpant:{metadata:{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},mparu:{metadata:{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},eez:{metadata:{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, 'eez:' || mrgid as region_id, geoname as reporting_name, 'eez:' || mrgid as reporting_id FROM eez","gfw:popups":[{id:"name"}]},type:"vector",attribution:"EEZs: marineregions.org"},highseas:{metadata:{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{id:"regionid"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},protectedplanet:{metadata:{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector",attribution:"MPAs: www.protectedplanet.net"},rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, 'rfmo:' || rfb as reporting_id, 'rfmo:' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{id:"rfb"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},falklands_conservation:{metadata:{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{id:"full_name"},{id:"zone"},{id:"area_sqkm"}]},type:"vector"},events_fishing:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},events_encounter:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_gap:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_port:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/port/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_encounter_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_gap_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_port_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}}},layers:[{id:"background",metadata:{"mapbox:group":"basemap-background"},type:"background",layout:{visibility:"visible"},paint:{"background-color":"#001436"}},{id:"satellite",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"satellite",layout:{visibility:"visible"}},{id:"north-star",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"north-star"},{id:"bathymetry",metadata:{"mapbox:group":"basemap-background"},type:"fill",source:"bathymetry","source-layer":"bathymetry",paint:{"fill-color":["step",["get","depth"],"#1e346c",1e3,"#1a2f63",2e3,"#142655",3e3,"#101f4a",4e3,"#0d1b43",5e3,"#0a163b",6e3,"#061132",7e3,"#030d2a",8e3,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{id:"mpant",metadata:{"mapbox:group":"static"},type:"fill",source:"mpant","source-layer":"mpant"},{id:"mpant-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mpant","source-layer":"mpant",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"mparu",metadata:{"mapbox:group":"static"},type:"fill",source:"mparu","source-layer":"mparu"},{id:"mparu-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mparu","source-layer":"mparu",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"eez",metadata:{"mapbox:group":"static"},type:"fill",source:"eez","source-layer":"eez"},{id:"eez-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"eez","source-layer":"eez",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"highseas",metadata:{"mapbox:group":"static"},type:"fill",source:"highseas","source-layer":"highseas"},{id:"highseas-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"highseas","source-layer":"highseas",layout:{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"rfmo","source-layer":"rfmo"},{id:"rfmo-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"rfmo","source-layer":"rfmo",layout:{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"6",metadata:{"mapbox:group":"static"},type:"fill",source:"6","source-layer":"6"},{id:"6-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"6","source-layer":"6",layout:{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"protectedplanet",metadata:{"mapbox:group":"static"},type:"fill",source:"protectedplanet","source-layer":"protectedplanet"},{id:"protectedplanet-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"protectedplanet","source-layer":"protectedplanet",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"falklands_conservation",metadata:{"mapbox:group":"static"},type:"fill",source:"falklands_conservation","source-layer":"falklands_conservation"},{id:"falklands_conservation-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"falklands_conservation","source-layer":"falklands_conservation",layout:{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"events_fishing",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_fishing","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_encounter","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_gap",type:"circle",source:"events_gap","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_port",type:"circle",source:"events_port","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter_vessel",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["encounter_highlight","encounter"]}}},layout:{"icon-image":"encounter","icon-allow-overlap":!0}},{id:"events_encounter_vessel_number",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_gap_vessel",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["gap_highlight","gap"]}}},layout:{"icon-image":"gap","icon-allow-overlap":!0}},{id:"events_gap_vessel_number",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_port_vessel",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["port_highlight","port"]}}},layout:{"icon-image":"port","icon-allow-overlap":!0}},{id:"events_port_vessel_number",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"graticules-lines",metadata:{"mapbox:group":"basemap-foreground"},type:"line",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],paint:{"line-color":"#174084","line-opacity":{base:1,stops:[[0,.7],[8,.7],[9,.2]]},"line-width":.5}},{id:"graticules-labels",metadata:{"mapbox:group":"basemap-foreground"},type:"symbol",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],layout:{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{base:1,stops:[[3,500],[8,1e3]]},"text-size":{base:1,stops:[[3,7],[7,12]]},"text-letter-spacing":.2},paint:{"text-color":"hsl(0, 0%, 100%)","text-halo-width":.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{base:1,stops:[[0,1],[8,1],[9,0]]}}},{id:"labels",metadata:{"mapbox:group":"basemap-foreground"},type:"raster",source:"labels"}]}},"./src/map/glmap/map.css":function(e,t,r){e.exports={map:"map_map__1TLha",googleLogo:"map_googleLogo__3lQ1y"}},"./src/map/lib/Pack.js":function(e,t,r){"use strict";var a={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},o=function(e,t,r,a,o){void 0==r&&(r=e.length),void 0==t&&(t=0),void 0==o&&(o=t);for(var n=t;n<r;n++)a[n-t+o]=255&e.charCodeAt(n)},n=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},i={typemap:{byname:a,byarray:{}},pack:function(e,t,r){var a=new ArrayBuffer(e.size);return new DataView(a)[e.setter](0,t,r),n(a)},arrayBufferToString:n,stringToArrayBuffer:function(e,t,r){void 0==r&&(r=e.length),void 0==t&&(t=0);var a=new Uint8ClampedArray(r-t);return o(e,t,r,a,0),a.buffer},writeStringToArrayBuffer:o};for(var s in i.typemap.byname){var l=i.typemap.byname[s];l.name=s,i.typemap.byarray[l.array]=l}t.a=i},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Pack__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/map/lib/Pack.js");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PelagosClient=function(){function PelagosClient(){_classCallCheck(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return _createClass(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(r,a){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=r,this.reject=a,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient},"./src/map/map.mdx":function(e,t,r){"use strict";r.r(t);var a=r("./node_modules/react/index.js"),o=r.n(a),n=r("./node_modules/@mdx-js/tag/dist/index.js"),i=r("./node_modules/docz/dist/index.m.js"),s=r("./node_modules/redux/es/redux.js"),l=r("./node_modules/react-redux/es/index.js"),u=r("./node_modules/lodash/throttle.js"),c=r.n(u),p=r("./node_modules/prop-types/index.js"),d=r.n(p),A={id:d.a.string.isRequired,url:d.a.string,data:d.a.object,color:d.a.string,type:d.a.oneOf(["geojson",void 0]),layerTemporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),fitBoundsOnLoad:d.a.bool},g=(d.a.string.isRequired,d.a.string,d.a.string,d.a.bool,d.a.number,d.a.number,d.a.arrayOf(d.a.shape({hue:d.a.number,filterValues:d.a.object})),d.a.shape({endpoints:d.a.object,isPBF:d.a.bool,colsByName:d.a.object,temporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),temporalExtentsLess:d.a.bool}).isRequired,d.a.bool,d.a.string,d.a.bool,d.a.string.isRequired,d.a.bool,d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.number,d.a.string,d.a.bool,d.a.bool,d.a.arrayOf(d.a.arrayOf(d.a.string)),d.a.bool,d.a.oneOf([void 0,"geojson","raster"]),d.a.string,d.a.object,d.a.object,d.a.node,d.a.number.isRequired,d.a.number.isRequired,d.a.number,d.a.arrayOf(d.a.number),r("./node_modules/reselect/es/index.js")),m=r("./node_modules/immutable/dist/immutable.es.js"),h=8,f=2e5,y="dot-world-fishing",b=function(e,t,r){var a=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==r?"".concat(r,"_").concat(a):a}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),r},E=function(e){return function(t,r){t({type:"COMPLETE_LOADER",payload:e});var a=r();a.map.module.loaders.length||void 0===a.map.module.onLoadComplete||a.map.module.onLoadComplete()}},v=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}},w=function(e){return e.map.module.temporalExtent},B=function(e){return e.map.module.highlightTemporalExtent};function C(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function S(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){I(e,t,r[t])})}return e}function I(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var x=Object(g.a)(function(e){return e.map.tracks.data},function(e){return e.filter(function(e){return"geojson"===e.type})}),R=Object(g.a)(x,function(e){return e.filter(function(e){return void 0!==e.data})}),O=function(e,t){return{sources:S({},e.sources,t.sources),layers:[].concat(C(e.layers),C(t.layers))}},L=function(e,t){var r=t.start,a=t.end;if(!e||!e.features)return null;var o=e.features.reduce(function(e,t){if(t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var o=t.geometry.coordinates.reduce(function(e,o,n){var i=t.properties.coordinateProperties.times[n];return i>=r&&i<=a&&(e.coordinates.push(o),e.times.push(i)),e},{coordinates:[],times:[]});if(!o.coordinates.length)return e;var n=S({},t,{geometry:S({},t.geometry,{coordinates:o.coordinates}),properties:S({},t.properties,{coordinateProperties:{times:o.times}})});e.push(n)}return e},[]);return S({},e,{features:o})},Q=Object(g.a)([w,R],function(e,t){var r=e&&e.length>0,a=t&&t.length>0;if(!r||!a)return null;var o={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"Track"),a={sources:I({},r,{type:"geojson",data:L(t.data,o)}),layers:[{id:"".concat(t.id,"Lines"),source:r,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:r,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return O(e,a)},{sources:{},layers:[]})}),k=Object(g.a)([B,R],function(e,t){var r=e&&e.length>0,a=t&&t.length>0;if(!r||!a)return null;var o={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"HighlightedTrack"),a={sources:I({},r,{type:"geojson",data:L(t.data,o)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:r,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return O(e,a)},{sources:{},layers:[]})}),T=Object(g.a)([Q,k],function(e,t){return t?O(e,t):e}),_=r("./node_modules/@turf/area/index.js"),Y=r.n(_),G="ZOOM",D={NORMAL:0,BULLSEYE:2},P=0,M=1,j="geojson",F="raster",W=r("./node_modules/lodash/difference.js"),H=r.n(W),U=r("./node_modules/lodash/uniq.js"),K=r.n(U),q=r("./node_modules/lodash/uniqBy.js"),Z=r.n(q),J=r("./node_modules/lodash/pull.js"),V=r.n(J),z=r("./node_modules/lodash/sumBy.js"),N=r.n(z),X=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),$=r("./node_modules/@globalfishingwatch/map-convert/index.js"),ee=r.n($),te=r("./node_modules/lodash/template.js"),re=r.n(te),ae=r("./node_modules/lodash/templateSettings.js"),oe=r.n(ae),ne=r("./src/map/lib/pelagosClient.js"),ie=r("./node_modules/pbf/index.js"),se=r.n(ie),le=r("./node_modules/@mapbox/vector-tile/index.js"),ue=function(e,t){return fetch(e,{headers:t?{Authorization:"Bearer ".concat(t)}:{}}).then(function(t){if(!t.ok)throw new Error("could not load tile ".concat(e));return t.blob().then(function(e){var t=new FileReader;return new Promise(function(r){t.addEventListener("loadend",function(){var e=new se.a(t.result),a=new le.VectorTile(e);return r(a)}),t.readAsArrayBuffer(e)})})}).catch(function(e){console.warn(e)})};function ce(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,o=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){o=!0,n=l}finally{try{a||null==s.return||s.return()}finally{if(o)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var pe=function(e,t,r){var a=[];return(t||[null]).forEach(function(t,o){var n={id:r.seriesgroup};null!==t&&!0!==r.temporalExtentsLess&&(n.startTimeISO=new Date(t[0]).toISOString(),n.endTimeISO=new Date(t[1]).toISOString()),r.tileCoordinates&&(n.x=r.tileCoordinates.x,n.y=r.tileCoordinates.y,n.z=r.tileCoordinates.zoom);var i=function(e,t){return oe.a.interpolate=/{{([\s\S]+?)}}/g,re()(e)(t)}(e,n);(!0===r.temporalExtentsLess||!r.temporalExtentsIndices||r.temporalExtentsIndices.indexOf(o)>-1)&&a.push(i)}),a},de=function(e,t,r,a){for(var o=[],n=pe(e,r,a),i=0,s=n.length;i<s;i++)!0===a.isPBF?o.push(ue(n[i],t)):o.push((new ne.a).obtainTile(n[i],t));return o},Ae=function(e){return e.filter(function(e){return null!==e})},ge=function(e,t){var r,a={},o=N()(e,function(e){return e.longitude.length}),n=t.filter(function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)});n.forEach(function(e){a[e]=new Float32Array(o)});for(var i=0,s=function(e){a[e].set(r[e],i)},l=0,u=e.length;l<u;l++)r=e[l],n.forEach(s),i+=r.longitude.length;return a},me=function(e,t,r,a,o){var n=void 0===o?[]:o,i=r.zoom,s=ee.a.getZoomFactorRadius(i),l=ee.a.getZoomFactorRadiusRenderingMode(i),u=ee.a.getZoomFactorOpacity(i),c={},p=Object.keys(t);p.forEach(function(e){c[e]=!0});var d=[].concat(p);!0===c.sigma&&d.push("radius"),!0===c.weight&&d.push("opacity"),!0===c.longitude&&(d.push("worldX"),d.push("worldY")),!0===c.id&&d.push("series"),["latitude","longitude","datetime"].forEach(function(e){void 0!==t[e]&&!0!==t[e].hidden||V()(d,e)}),V()(d,"sigma","weight"),d=K()(d);for(var A=function(t,o){var A=void 0;if(!0===a){var g=e.feature(t);A=g.properties;var m=g.toGeoJSON(r.x,r.y,i).geometry.coordinates;A.longitude=m[0],A.latitude=m[1]}else A={},p.forEach(function(r){A[r]=e[r][t]});var h=c.timeIndex?A.timeIndex:ee.a.getOffsetedTimeAtPrecision(A.datetime),f=ce(Object(X.g)([A.longitude,A.latitude],1),2),y=f[0],b=f[1];if(A.worldX=y,A.worldY=b,c.sigma&&(A.radius=ee.a.sigmaToRadius(A.sigma,l,s)),c.weight&&(A.opacity=ee.a.weightToOpacity(A.weight,u)),c.id&&(A.series=A.id),!n[h]){var E={};return d.forEach(function(e){E[e]=[A[e]]}),n[h]=E,"continue"}var v=n[h];d.forEach(function(e){v[e].push(A[e])})},g=0,m=!0===a?e.length:e.latitude.length;g<m;g++)A(g);return n},he=function(e){e.hasFishing=[],e.worldX=[],e.worldY=[];for(var t=0,r=e.weight.length;t<r;t++){var a=ce(Object(X.g)([e.longitude[t],e.latitude[t]],1),2),o=a[0],n=a[1];e.worldX[t]=o,e.worldY[t]=n,e.hasFishing[t]=e.weight[t]>0}return e},fe=function(e){for(var t=[],r=0,a=e.series.length;r<a;r++){var o=e.datetime[r],n=ee.a.getOffsetedTimeAtPrecision(o);if(t[n]){var i=t[n];i.worldX.push(e.worldX[r]),i.worldY.push(e.worldY[r]),i.series.push(e.series[r]),i.hasFishing.push(e.hasFishing[r])}else{var s={worldX:[e.worldX[r]],worldY:[e.worldY[r]],series:[e.series[r]],hasFishing:[e.hasFishing[r]]};t[n]=s}}return t},ye=function(e,t,r){return Object.keys(r).every(function(a){return void 0!==e[a]&&r[a].indexOf(e[a][t])>-1})},be=function(e,t,r,a,o){for(var n=[],i=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,u=function(t){var r=e[t];if(void 0===r)return"continue";for(var a=function(e){var t=r.worldX[e],a=r.worldY[e];if((!o.length||function(e,t,r){return r.filter(function(e){return!0!==e.pass}).some(function(r){return ye(e,t,r.filterValues)})}(r,e,o))&&t>=i-l&&t<=i+l&&a>=s-l&&a<=s+l){var u={};Object.keys(r).forEach(function(t){u[t]=r[t][e]}),n.push(u)}},u=0;u<r.worldX.length;u++)a(u)},c=r;c<a;c++)u(c);return n},Ee=r("./node_modules/@mapbox/tile-cover/index.js"),ve=r.n(Ee),we=r("./node_modules/lodash/debounce.js"),Be=r.n(we),Ce=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function Se(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Ie=function(e){var t=Math.ceil(e+.5),r=!0;return t>10&&(t=10,r=!1),{min_zoom:t,max_zoom:t,tilesAvailable:r}},xe=function(){return function(e,t){var r=t();if(!r.map.heatmapTiles.currentToLoadTileUids.length){var a=r.map.heatmapTiles.currentToReleaseTileUids;e(We(a)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},Re=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(xe())}},Oe=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var a=r(),o=a.map.heatmapTiles.currentVisibleTiles,n=[],i=[];if(!0===e)n=o;else{var s=a.map.heatmapTiles.currentLoadedTiles;o.forEach(function(e){void 0===s.find(function(t){return t.uid===e.uid})&&n.push(e)}),s.forEach(function(e){void 0===o.find(function(t){return t.uid===e.uid})&&i.push(e.uid)})}var l=n.map(function(e){return e.uid});n.forEach(function(e){var r;t((r=e,function(e,t){e({type:Ge,payload:r});var a=t().map.heatmap.heatmapLayers,o=Object.keys(a).filter(function(e){return!0===a[e].visible});o.length&&e(Fe(o,[r]))}))}),t({type:"SET_CURRENTLY_LOADED_TILES",payload:o}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:i}}),t(He()),t(xe())}},Le=Be()(function(e){e(Oe())},500),Qe=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var a=r().map.viewport,o=a.viewport;if(null===a.currentTransition){var n=new Ce.a(o),i=[n.unproject([0,0]),n.unproject([o.width,o.height])],s=i[0],l=i[1],u=[s[0],l[1],l[0],s[1]],c=u[0],p=u[1],d=u[2],A=u[3],g=[],m=Ie(o.zoom);if(!1!==m.tilesAvailable||!0===e){if(d>180||c<-180){var h=d>180?c:c+360,f=d>180?d-360:d;g.push([[[h,A],[179.999,A],[179.999,p],[h,p],[h,A]]]),g.push([[[-180,A],[f,A],[f,p],[-180,p],[-180,A]]])}else g.push([[[c,A],[d,A],[d,p],[c,p],[c,A]]]);var y={type:"MultiPolygon",coordinates:g},b=ve.a.tiles(y,m),E=ve.a.indexes(y,m),v=[];b.forEach(function(e,t){var r=E[t];e[2]>=2&&v.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:r})}),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:v}),!1===(a.prevZoom!==o.zoom)?t(Oe(e)):Le(t)}}}},ke=function(e,t){return function(r,a){var o={type:"Point",coordinates:[e.longitude,e.latitude]},n=a().map.viewport.viewport.zoom,i=[n,n-1,n+1].map(function(e){return Ie(e)}).map(function(e){return ve.a.indexes(o,e)}).map(function(e){return e[0]});r(function(e,t){return function(r,a){var o=a(),n=Ke(o,e,t),i=n.layer,s=n.isEmpty,l=n.isCluster,u=n.isMouseCluster,c=n.foundVessels;void 0!==i.id||o.map.heatmap.highlightedVessels.layerId!==i.id?r({type:De,payload:{layer:{id:i.id,tilesetId:i.tilesetId,subtype:i.subtype,header:i.header},isEmpty:s,clickableCluster:!0===l||!0===u,highlightableCluster:!0!==l,foundVessels:c}}):r(qe())}}(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Se(e,t,r[t])})}return e}({},e,{uids:i}),t))}};function Te(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){_e(e,t,r[t])})}return e}function _e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ye(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Ge="ADD_REFERENCE_TILE",De="HIGHLIGHT_VESSELS",Pe="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",Me="UPDATE_HEATMAP_TILE";function je(e,t){var r=e[0].getTime(),a=e[1].getTime(),o=[];return t.forEach(function(e,t){var n=e[0];e[1]>=r&&n<=a&&o.push(t)}),o}function Fe(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(a,o){var n=o(),i=b(a,n,e.join("-")),s=n.map.module.token,l=n.map.heatmap.heatmapLayers,u={};e.forEach(function(e){u[e]=Ye(l[e].tiles)});var c=[];e.forEach(function(e){var o=l[e].header,n=Te({},o),i=n.temporalExtents,p=n.temporalExtentsLess,d=n.isPBF,A=n.colsByName,g=o.endpoints.tiles;t.forEach(function(t){var o=u[e].find(function(e){return e.uid===t.uid});o||(o={uid:t.uid,temporalExtentsIndicesLoaded:[]},u[e].push(o));var n=void 0===r?l[e].visibleTemporalExtentsIndices:r[e],m=H()(n,o.temporalExtentsIndicesLoaded),h=function(e,t,r,a,o){var n=o.url,i=o.temporalExtents,s=o.temporalExtentsLess,l=o.isPBF;if(void 0===n)throw new Error("URL/endpoints object is not available on this tilesets header");var u=de(n,r,i,{tileCoordinates:t,temporalExtentsIndices:a,temporalExtentsLess:s,isPBF:l}),c=Promise.all(u);return new Promise(function(t){c.then(function(r){t({loadedLayerId:e,rawTileData:r})})})}(e,t.tileCoordinates,s,m,{url:g,temporalExtents:i,temporalExtentsLess:p,isPBF:d});c.push(h),h.then(function(e){var r=e.loadedLayerId,n=e.rawTileData;o.temporalExtentsIndicesLoaded=K()(o.temporalExtentsIndicesLoaded.concat(m)),o.data=function(e,t,r,a,o){var n;if(!0===r){if(void 0===e||!e.length||void 0===e[0]||!Object.keys(e[0].layers).length)return[];n=e[0].layers.points}else{var i=Ae(e);if(n=ge(i,Object.keys(t)),0===Object.keys(n).length)return[]}return me(n,t,a,r,o)}(n,A,d,t.tileCoordinates,o.data),a({type:Me,payload:{layerId:r,tile:o}})})})}),Promise.all(c).then(function(){a(E(i)),a(Re(t.map(function(e){return e.uid})))})}}var We=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}},He=function(){return{type:"UPDATE_LOADED_TILES"}};function Ue(e){return function(t,r){var a=r().map.heatmap.referenceTiles;t(Fe([e],a))}}var Ke=function(e,t,r){var a=e.map.heatmap.heatmapLayers,o=r[0],n=r[1],i=[];Object.keys(a).forEach(function(e){var r=a[e],s=t.uids.map(function(e){return r.tiles.find(function(t){return t.uid===e})}).filter(function(e){return void 0!==e&&void 0!==e.data}),l=r.filters;if(s.length){var u=s[0];i.push({layer:r,vessels:be(u.data,t,o,n,l)})}});var s,l,u,c,p,d=i.filter(function(e){return e.vessels.length>0}),A=d.filter(function(e){return"Encounters"===e.layer.subtype}).length>0;if(0===d.length)u=!0;else if(d.length>1&&!A)s=!0;else{var g=(c=A?d.find(function(e){return"Encounters"===e.layer.subtype}):d[0]).vessels;if(0===g.length)u=!0;else g.filter(function(e){return e.seriesgroup<0}).length?s=!0:l=(p=Z()(g,function(e){return e.series})).length>1}return{isEmpty:u,isCluster:s,isMouseCluster:l,foundVessels:p,layer:void 0===c?{}:c.layer}};function qe(){return{type:De,payload:{isEmpty:!0,clickableCluster:!1}}}var Ze=function(e,t){return function(r,a){if(null!==e){var o=a().map.heatmap.heatmapLayers;e.forEach(function(e){var a,n,i=e.id,s=o[i];void 0===s?r((a=e,n=t,function(e){var t=a.header.temporalExtents;e({type:"ADD_HEATMAP_LAYER",payload:Te({},a,{visibleTemporalExtentsIndices:je(n,t)})}),!0===a.visible&&e(Ue(a.id))})):(s.visible!==e.visible&&!0===e.visible&&r(Ue(i)),s.visible===e.visible&&s.hue===e.hue&&s.opacity===e.opacity&&s.filters===e.filters&&s.interactive===e.interactive||r({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))}),Object.keys(o).forEach(function(t){var a;e.find(function(e){return e.id===t})||r((a=t,function(e){e({type:"REMOVE_HEATMAP_LAYER",payload:{id:a}})}))})}else console.warn("New layers in updateHeatmapLayers can't be null")}},Je=r("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js"),Ve=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(o){o({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:r,zoom:a}}),o(Qe()),o(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var o=r.map.viewport;void 0!==o.bounds&&a({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})}};function ze(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Ne(e,t,r[t])})}return e}function Ne(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Xe=function(e,t,r){var a=t.style.mapStyle.toJS().sources[e];return void 0===a&&console.warn("Couldnt find source when looking for fields of layer",e),"geojson"!==a.type?void 0===a.metadata||void 0===a.metadata["gfw:popups"]?null:a.metadata["gfw:popups"]:0===Object.keys(r.properties).length?null:Object.keys(r.properties).map(function(e){return{id:e}})},$e=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source},et=function(e){if(void 0!==e&&e.length)for(var t=0;t<e.length;t++){var r=e[t],a=$e(r);if(void 0!==a)return{feature:r,staticLayerId:a}}},tt=function(e,t,r,a){return function(o,n){var i=n().map;o({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s=i.heatmap.highlightedVessels,l=s.layer,u=s.isEmpty,c=s.clickableCluster,p=s.foundVessels,d={type:null};if(!0===u){var A=et(r);if(void 0!==A){var g,m=Xe(A.staticLayerId,i,A.feature),h=A.feature.properties;null!==m&&(g=m.map(function(e){var t,r=e.id||e,a="POLYGON_LAYERS_AREA"===r?(t=A.feature,(Math.pow(10,-6)*Y()(t.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})):h[r];return{title:e.label||e.id,isLink:e.isLink,value:a}})),d.type="static",d.cluster=a,d.layer={id:A.staticLayerId},d.target={fields:g,properties:h}}}else d.type="activity",d.layer=l,!0===c?(o(function(e,t){return function(r){r(Ve(1,e,t))}}(e,t)),o(qe()),d.target={isCluster:!0}):d.target=p[0];i.module.onClick&&i.module.onClick(ze({},d,{latitude:e,longitude:t}))}},rt=r("./node_modules/react-map-gl/dist/esm/index.js"),at=(r("./node_modules/mapbox-gl/dist/mapbox-gl.css"),r("./node_modules/pixi.js/lib/index.js")),ot=function(e,t,r){var a=e%360/parseFloat(360)*6,o=100===t?1:t%100/parseFloat(100),n=100===r?1:r%100/parseFloat(100),i=Math.floor(a),s=a-i,l=n*(1-o),u=n*(1-s*o),c=n*(1-(1-s)*o),p=i%6,d=[n,u,l,l,c,n][p],A=[c,n,n,u,l,l][p],g=[l,l,c,n,n,u][p];return{r:Math.round(255*d),g:Math.round(255*A),b:Math.round(255*g)}},nt=function(e){return ot(e,50,100)},it=function(e){var t=nt(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")},st=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},lt=function(e){return 12*e},ut=function(e){return e%360};function ct(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var pt=function(){function e(t,r,a){var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.stage=new PIXI.particles.ParticleContainer(f,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===o&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var n=new PIXI.Rectangle(0,0,2*h,2*h);this.mainVesselTexture=new PIXI.Texture(t,n),this._setTextureFrame(r,a),this.clearSpriteProps()}var t,r,a;return t=e,(r=[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(f),y:new Float32Array(f),a:new Float32Array(f),s:new Float32Array(f)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,r,a){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=r,this.spritesProps.s[this.spritesPropsCount]=a,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.mainVesselTexture.frame.clone();if(null!==e&&(r.x=2*h*e+e),null!==t){var a=function(e){return Math.round(e/360*30)}(t);30===a&&(a=0),r.y=a*h*2,a>0&&(r.y+=a)}this.mainVesselTexture.frame=r,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var r=this.stage.children[t],a=this.spritesProps.s[t];r.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],a,a),r.alpha=this.spritesProps.a[t]}for(var o=this.stage.children.length,n=e;n<o;n++){this.stage.children[n].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),r=0;r<t;r++)this.stage.removeChildAt(0);if(e>0){var a=Math.max(5e3,e);this._addSprites(a)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var r=new PIXI.Sprite(this.mainVesselTexture);r.anchor.x=.5,r.anchor.y=.5,r.x=-100,this.stage.addChild(r)}}}])&&ct(t.prototype,r),a&&ct(t,a),e}();function dt(e){return(dt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function At(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,o=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){o=!0,n=l}finally{try{a||null==s.return||s.return()}finally{if(o)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function gt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function mt(e,t){return!t||"object"!==dt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ht(e){return(ht=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ft(e,t){return(ft=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}pt.__docgenInfo={description:"",methods:[{name:"clearSpriteProps",docblock:null,modifiers:[],params:[],returns:null},{name:"pushSpriteProps",docblock:null,modifiers:[],params:[{name:"x",type:null},{name:"y",type:null},{name:"a",type:null},{name:"s",type:null}],returns:null},{name:"setRenderingStyleIndex",docblock:null,modifiers:[],params:[{name:"renderingStyleIndex",type:null}],returns:null},{name:"destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_setTextureFrame",docblock:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used\n@heatmapStyle bool whether to use heatmap style or solid circle style\n@hue number hue value between 0 and 360",modifiers:[],params:[{name:"renderingStyleIndex"},{name:"hue"}],returns:null,description:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used"},{name:"resizeSpritesPool",docblock:null,modifiers:[],params:[],returns:null},{name:"_addSprites",docblock:null,modifiers:[],params:[{name:"num",type:null}],returns:null}],displayName:"HeatmapSubLayer"};var yt=function(e,t,r){return[1/1.5*(r[0]*e+r[4]*t+r[12]),1/1.5*(r[5]*t+r[13])]},bt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),mt(this,ht(t).apply(this,arguments))}var r,a,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ft(e,t)}(t,o.a.Component),r=t,(a=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,r=e.rootStage,a=e.useRadialGradientStyle,o=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:o,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(a),this.stage=new at.Container,r.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:D.NORMAL;this.brushRenderingStyle="string"===typeof e?D[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?P:M,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===D.NORMAL?this.brushZoomRenderingStyle:0,r=this.brushRenderingStyle+t;r!==this.renderingStyleIndex&&(this.renderingStyleIndex=r,Object.values(this.subLayers).forEach(function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)}))}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.filters,a=t.baseTexture,o=t.layer;if(null!==o&&void 0!==o&&void 0!==o.tiles&&!1!==o.visible){this.stage.visible=!0,this.stage.alpha=o.opacity;for(var n=o.tiles,i=o.hue,s=void 0!==r&&r.length?r.filter(function(e){return!0!==e.pass}).map(function(e){return void 0===e.hue?"0":e.hue.toString()}):[i.toString()],l=Object.keys(this.subLayers),u=K()(s.concat(l)),c=0;c<u.length;c++){var p=u[c];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(a,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(n.forEach(function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:r.length,defaultHue:i})}),s.forEach(function(t){e.subLayers[t].render()}))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,r=e.numFilters,a=e.defaultHue;if(t)for(var o=this.props,n=o.startIndex,i=o.endIndex,s=o.viewport,l=o.filters,u=o.viewportLeft,c=o.viewportRight,p=n;p<i;p++){var d=t[p];if(d)for(var A=0,g=d.worldX.length;A<g;A++){var m=void 0;void 0!==l&&l.length||(m=a);for(var h=0;h<r;h++){var f=l[h];if(ye(d,A,f.filterValues)){m=f.hue;break}}if(void 0!==m){var y=d.worldX[A];u>0&&y<u?y+=512:u<0&&y>c&&(y-=512);var b=y*s.scale,E=d.worldY[A]*s.scale,v=s.pixelProjectionMatrix,w=At(0===s.pitch?yt(b,E,v):Object(X.k)([b,E],v),2),B=w[0],C=w[1];B>-10&&B<s.width+10&&C>-10&&C<s.height+10&&this.subLayers[m].pushSpriteProps(B,C,d.opacity?d.opacity[A]:this.renderingStyle.defaultOpacity,d.radius?d.radius[A]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,r){var a=new pt(e,t,r,this.brushRenderingStyle===D.BULLSEYE);return this.stage.addChild(a.stage),a}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}])&&gt(r.prototype,a),n&&gt(r,n),t}(),Et=bt;function vt(e){return(vt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function wt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,o=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){o=!0,n=l}finally{try{a||null==s.return||s.return()}finally{if(o)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Bt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Ct(e,t){return!t||"object"!==vt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function St(e){return(St=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function It(e,t){return(It=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}bt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"setBrushRenderingStyle",docblock:null,modifiers:[],params:[{name:"style",type:null}],returns:null},{name:"setBrushZoomRenderingStyle",docblock:null,modifiers:[],params:[{name:"useRadialGradientStyle",type:null}],returns:null},{name:"_setBrushRenderingStyleIndex",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_setSubLayersSpritePropsForTile",docblock:null,modifiers:[],params:[{name:"{ data, numFilters, defaultHue }",type:null}],returns:null},{name:"_createSublayer",docblock:null,modifiers:[],params:[{name:"baseTexture",type:null},{name:"renderingStyleIndex",type:null},{name:"hue",type:null}],returns:null},{name:"_destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_destroySubLayer",docblock:null,modifiers:[],params:[{name:"subLayer",type:null}],returns:null}],displayName:"HeatmapLayer",props:{layer:{type:{name:"object"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},filters:{type:{name:"array"},required:!1,description:""},baseTexture:{type:{name:"object"},required:!1,description:""},useRadialGradientStyle:{type:{name:"bool"},required:!1,description:""},customRenderingStyle:{type:{name:"object"},required:!1,description:""},viewportLeft:{type:{name:"number"},required:!1,description:""},viewportRight:{type:{name:"number"},required:!1,description:""}}};var xt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Ct(this,St(t).apply(this,arguments))}var r,a,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&It(e,t)}(t,o.a.Component),r=t,(a=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"_build",value:function(){var e=this.props.rootStage;this.stage=new PIXI.Graphics,this.stage.nativeLines=!0,e.addChild(this.stage)}},{key:"clear",value:function(){this.stage.clear()}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.tracks,a=t.zoom,o=t.startIndex,n=t.endIndex,i=t.highlightTemporalExtentIndexes;if(this.clear(),r.length){var s=null===i?void 0:[Math.max(o,i[0]),Math.min(n,i[1])],l=s&&s[1]-s[0]>0?s:void 0,u=a>2,c=1+.5*(a-2),p=void 0!==l&&l[0]>0&&l[1]>0;r.forEach(function(t){e._drawTrack({data:t.data,startIndex:o,endIndex:n,drawFishingCircles:u,fishingCirclesRadius:c,color:"0x".concat(t.color.substr(1)),lineThickness:1,lineOpacity:1}),!0===p&&e._drawTrack({data:t.data,startIndex:i[0],endIndex:i[1],drawFishingCircles:u,fishingCirclesRadius:c,color:"0xFFFFFF",lineThickness:2,lineOpacity:1})})}}},{key:"_drawTrack",value:function(e){var t,r,a,o=this,n=e.data,i=e.startIndex,s=e.endIndex,l=e.drawFishingCircles,u=e.fishingCirclesRadius,c=e.color,p=e.lineThickness,d=e.lineOpacity,A=e.worldOffset,g=void 0===A?0:A,m=this.props.viewport,h=0,f={x:[],y:[]};this.stage.lineStyle(p,c,d);for(var y=!1,b=i;b<s;b++){var E=n[b];if(E)for(var v=0,w=E.series.length;v<w;v++){var B=E.series[v];h++;var C=E.worldX[v]+g,S=E.worldY[v],I=wt(Object(X.k)([C*m.scale,S*m.scale],m.pixelProjectionMatrix),2),x=I[0],R=I[1];if(t!==B&&this.stage.moveTo(x,R),r&&Math.abs(C-r)>256){0===g&&(y=!0);var O=a+(S-a)/2,L=C-r<0,Q=g+(512-1e-6),k=L?Q:g,T=L?g:Q,_=wt(Object(X.k)([k*m.scale,O*m.scale],m.pixelProjectionMatrix),2),Y=_[0],G=_[1];this.stage.lineTo(Y,G);var D=wt(Object(X.k)([T*m.scale,O*m.scale],m.pixelProjectionMatrix),2),P=D[0],M=D[1];this.stage.moveTo(P,M)}this.stage.lineTo(x,R),l&&!0===E.hasFishing[v]&&(f.x.push(x),f.y.push(R)),r=C,a=S,t=B}}if(l){this.stage.lineStyle(0),this.stage.beginFill(c,1);for(var j=0,F=f.x.length;j<F;j++)this.stage.drawCircle(f.x[j],f.y[j],u);this.stage.endFill()}return!0===y&&[-512,512].forEach(function(e){o._drawTrack({worldOffset:e,data:n,startIndex:i,endIndex:s,drawFishingCircles:l,fishingCirclesRadius:u,color:c,lineThickness:p,lineOpacity:d})}),h}},{key:"render",value:function(){return null}}])&&Bt(r.prototype,a),n&&Bt(r,n),t}(),Rt=xt;function Ot(e){return(Ot="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Lt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Gt(e,t,r[t])})}return e}function Qt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,o=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){o=!0,n=l}finally{try{a||null==s.return||s.return()}finally{if(o)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function kt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Tt(e){return(Tt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _t(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Yt(e,t){return(Yt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Gt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}xt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"clear",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_drawTrack",docblock:"Draws a single track (line + points)\n\n@param data track points data in 'playback form' (ie organized by days)\n@param extent extent, in day indices\n@param offset object containing info about the current situation of the map viewport, used to compute screen coords\n@param drawFishingCircles whether to draw fishing circles or not\n@param fishingCirclesRadius radius of the fishing circles\n@param color\n@param lineThickness\n@param lineOpacity\n@param worldOffset offset to use when a track crosses the dateline (ie 512 to add a second world to the right)",modifiers:[],params:[{name:"{\n  data,\n  startIndex,\n  endIndex,\n  drawFishingCircles,\n  fishingCirclesRadius,\n  color,\n  lineThickness,\n  lineOpacity,\n  worldOffset = 0,\n}"}],returns:null,description:"Draws a single track (line + points)"}],displayName:"TracksLayer",props:{zoom:{type:{name:"number"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},highlightTemporalExtentIndexes:{type:{name:"array"},required:!1,description:""},tracks:{type:{name:"array"},required:!1,description:""}}};var Dt=function(e){function t(){var e,r,a,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var n=arguments.length,i=new Array(n),s=0;s<n;s++)i[s]=arguments[s];return a=this,o=(e=Tt(t)).call.apply(e,[this].concat(i)),r=!o||"object"!==Ot(o)&&"function"!==typeof o?_t(a):o,Gt(_t(r),"state",{pixiReady:!1}),Gt(_t(r),"onTouchStart",function(e){e.touches.length&&r.queryCoords(e.touches[0].clientX,e.touches[0].clientY)}),Gt(_t(r),"onMouseMove",function(e){r.queryCoords(e.clientX,e.clientY)}),Gt(_t(r),"_onTick",function(){!0===r.heatmapFadingIn&&r.heatmapStage.alpha<1&&r._heatmapFadeinStep()}),r}var r,n,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Yt(e,t)}(t,rt["a"]),r=t,(n=[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,r=e.height;this.pixi=new at.Application({width:t,height:r,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var a=function(e,t){var r=document.createElement("canvas"),a=r.getContext("2d"),o=2*e;r.width=3*o+2,r.height=31*o+31;for(var n=0;n<31;n++){var i=o*n+n,s=i+e,l=e,u=a.createRadialGradient(l,s,e*t,l,s,e),c=lt(n),p=it(c);u.addColorStop(0,p);var d=ot(ut(c+30),80,100);u.addColorStop(1,"rgba(".concat(d.r,", ").concat(d.g,", ").concat(d.b,", 0)")),a.fillStyle=u,a.fillRect(0,i,o,o),l+=o+1,a.beginPath(),a.arc(l,s,e,0,2*Math.PI,!1),a.fillStyle=p,a.fill(),l+=o+1,a.beginPath(),a.arc(l,s,.4*e,0,2*Math.PI,!1),a.fillStyle=p,a.fill(),a.beginPath(),a.arc(l,s,.95*e,0,2*Math.PI,!1),a.lineWidth=1,a.strokeStyle=p,a.stroke()}return r}(h,.15);this.baseTexture=at.Texture.fromCanvas(a),this.heatmapStage=new at.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every(function(e){return!0!==e.interactive})){var r=this._context.viewport,a=Qt(r.unproject([e,t]),2),o=a[0],n=a[1],i=o;i>180?i-=360:i<-180&&(i+=360);var s=Qt(Object(X.g)([i,n],1),2),l=s[0],u=s[1],c=10/r.scale;this.props.queryHeatmapVessels({longitude:i,latitude:n,worldX:l,worldY:u,toleranceRadiusInWorldUnits:c},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,r){var a={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},o=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)a=Lt({highlightLayerData:a},r.find(function(t){return t.id===e.layer.id})),o=e.foundVessels.map(function(e){return{hue:312,filterValues:{series:[e.series]}}});else if(null!==t){a=Lt({highlightLayerData:a},r.find(function(e){return e.id===t.layer.id})),o=[{hue:312,filterValues:{series:[t.seriesgroup]}}]}return{highlightLayerData:a,highlightFilters:o}}},{key:"_render",value:function(){var e=this,t=this.props,r=t.zoom,n=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightTemporalExtentIndexes,l=t.highlightedVessels,u=t.highlightedClickedVessel,c=t.tracks,p=t.leftWorldScaled,d=t.rightWorldScaled,A=this._context.viewport,g=this.state.pixiReady,m=i[0],h=i[1],f=function(e){return e<6}(r);if(!0!==l.isEmpty&&this.toggleHeatmapDimming(!0),!0===l.isEmpty&&0===c.length&&this._startHeatmapFadein(),this.renderer){var y=this.renderer.gl.getError();0!==y&&console.log(y)}var b=this._getHighlightData(l,u,n),E=b.highlightLayerData,v=b.highlightFilters;return o.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===g&&o.a.createElement(a.Fragment,null,n.map(function(t){return o.a.createElement(Et,{key:t.id,layer:t,filters:t.filters||[],viewport:A,startIndex:m,endIndex:h,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:f,customRenderingStyle:{},viewportLeft:p,viewportRight:d})}),void 0!==this.stage&&o.a.createElement(Et,{key:"highlighted",layer:E,filters:v,viewport:A,startIndex:m,endIndex:h,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:f,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:p,viewportRight:d}),void 0!==this.stage&&o.a.createElement(Rt,{tracks:c,viewport:A,zoom:r,startIndex:m,endIndex:h,highlightTemporalExtentIndexes:s,rootStage:this.stage})))}}])&&kt(r.prototype,n),i&&kt(r,i),t}();Dt.propTypes={zoom:d.a.number,heatmapLayers:d.a.array,temporalExtentIndexes:d.a.array,highlightTemporalExtentIndexes:d.a.array,highlightedVessels:d.a.object,highlightedClickedVessel:d.a.object,tracks:d.a.array,queryHeatmapVessels:d.a.func,exportNativeViewport:d.a.func,leftWorldScaled:d.a.number,rightWorldScaled:d.a.number},Dt.contextTypes={viewport:d.a.object};var Pt=Dt;function Mt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var jt=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).map(function(t){return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Mt(e,t,r[t])})}return e}({},e[t])})}),Ft=Object(g.a)([function(e){return e.map.tracks.data}],function(e){return e.filter(function(e){return"geojson"!==e.type}).filter(function(e){return void 0!==e.data})}),Wt=Object(g.a)([w],function(e){var t=e[0].getTime(),r=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Ht=Object(g.a)([B],function(e){if(void 0===e||null===e||!e.length)return null;var t=e[0].getTime(),r=e[1].getTime();return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Ut=Object(l.b)(function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:jt(e),tracks:Ft(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:Wt(e),highlightTemporalExtentIndexes:Ht(e)}},function(e,t){return{queryHeatmapVessels:function(t,r){e(ke(t,r))},exportNativeViewport:function(t){var r;e((r=t,function(e){var t=[0,0],a=[r.width,r.height],o=Object(X.h)(t,r.pixelUnprojectionMatrix),n=Object(X.h)(a,r.pixelUnprojectionMatrix),i=o[0]/r.scale,s=n[0]/r.scale,l=r.unproject(t),u=r.unproject(a);e({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:i,rightWorldScaled:s,bounds:{north:l[1],south:u[1],west:l[0],east:u[0]}}})}))}}})(Pt),Kt=r("./src/map/glmap/map.css"),qt=r.n(Kt);function Zt(e){return(Zt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Jt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Vt(e){return(Vt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function zt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Nt(e,t){return(Nt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Xt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var $t=function(e){var t=e.latitude,r=e.longitude,a=e.children,n=e.closeButton,i=e.onClose;return o.a.createElement(rt.b,{latitude:t,longitude:r,closeButton:n,onClose:i,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},a)};$t.defaultProps={onClose:function(){}};var er=function(e){function t(e){var r,a,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),a=this,o=Vt(t).call(this,e),r=!o||"object"!==Zt(o)&&"function"!==typeof o?zt(a):o,Xt(zt(r),"_resize",function(){if(null!==r._mapContainerRef){var e=window.getComputedStyle(r._mapContainerRef),t=parseInt(e.width,10),a=parseInt(e.height,10)+1;t===r.props.viewport.width&&a===r.props.viewport.height||r.props.setViewport(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Xt(e,t,r[t])})}return e}({},r.props.viewport,{width:t,height:a}))}else console.warn("Cant set viewport on a map that hasnt finished intanciating yet")}),Xt(zt(r),"onViewportChange",function(e){r.props.setViewport(e)}),Xt(zt(r),"onMapInteraction",function(e,t){var a="hover"===t?r.props.mapHover:r.props.mapClick;if(void 0!==r.glMap&&void 0!==e.features&&e.features.length){var o=e.features[0];if(!0===o.properties.cluster){var n=o.properties.cluster_id,i=o.source,s=r.glMap.getSource(i);return void s.getClusterExpansionZoom(n,function(t,r){s.getClusterLeaves(n,99,0,function(o,n){t||o||a(e.lngLat[1],e.lngLat[0],e.features,{zoom:r,children:n})})})}}a(e.lngLat[1],e.lngLat[0],e.features)}),Xt(zt(r),"onHover",function(e){r.onMapInteraction(e,"hover")}),Xt(zt(r),"onClick",function(e){r.onMapInteraction(e,"click")}),Xt(zt(r),"getRef",function(e){null!==e&&(r.glMap=e.getMap())}),Xt(zt(r),"getCursor",function(e){var t=e.isDragging,a=r.props.cursor;return null===a?t?"grabbing":"grab":a}),Xt(zt(r),"transformRequest",function(e,t){var a=r.props.token;if(null!==a&&"Tile"===t&&e.match(y))return{url:e,headers:{Authorization:"Bearer "+a}}}),r.state={mouseOver:!0},r._mapContainerRef=null,r}var r,a,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Nt(e,t)}(t,o.a.Component),r=t,(a=[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("resize",this._resize),this._resize(),window.setTimeout(function(){return e._resize()},1),window.setTimeout(function(){return e._resize()},1e4)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this._resize)}},{key:"render",value:function(){var e=this,t=this.props,r=t.viewport,a=t.maxZoom,n=t.minZoom,i=t.transitionEnd,s=t.mapStyle,l=t.onClosePopup,u=t.clickPopup,c=t.hoverPopup,p=t.interactiveLayerIds;return o.a.createElement("div",{id:"map",className:qt.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},o.a.createElement(rt.c,Object.assign({ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:i,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:s},r,{maxZoom:a,minZoom:n,onViewportChange:this.onViewportChange,interactiveLayerIds:p}),o.a.createElement(Ut,null),void 0!==u&&null!==u&&o.a.createElement($t,{latitude:u.latitude,longitude:u.longitude,closeButton:!0,onClose:l},u.content),!0===this.state.mouseOver&&void 0!==c&&null!==c&&o.a.createElement($t,{latitude:c.latitude,longitude:c.longitude,closeButton:!1},c.content)),o.a.createElement("div",{className:qt.a.googleLogo}))}}])&&Jt(r.prototype,a),n&&Jt(r,n),t}();er.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapHover:function(){},mapClick:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,interactiveLayerIds:null};var tr=er;er.__docgenInfo={description:"",methods:[{name:"_resize",docblock:null,modifiers:[],params:[],returns:null},{name:"onViewportChange",docblock:null,modifiers:[],params:[{name:"viewport",type:null}],returns:null},{name:"onMapInteraction",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"type",type:null}],returns:null},{name:"onHover",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"onClick",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"getRef",docblock:null,modifiers:[],params:[{name:"ref",type:null}],returns:null},{name:"getCursor",docblock:null,modifiers:[],params:[{name:"{ isDragging }",type:null}],returns:null},{name:"transformRequest",docblock:null,modifiers:[],params:[{name:"url",type:null},{name:"resourceType",type:null}],returns:null}],displayName:"Map",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},mapHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},mapClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},transitionEnd:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},interactiveLayerIds:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:""},viewport:{type:{name:"object"},required:!0,description:""},mapStyle:{type:{name:"object"},required:!0,description:""},maxZoom:{type:{name:"number"},required:!0,description:""},minZoom:{type:{name:"number"},required:!0,description:""},setViewport:{type:{name:"func"},required:!0,description:""}}};var rr=Object(g.a)([function(e){return e.map.style.staticLayers}],function(e){return e.filter(function(e){return!0===e.interactive&&!0===e.visible}).map(function(e){return e.id})}),ar=Object(g.a)([function(e){return e.map.style.mapStyle},T],function(e,t){if(!t)return e;var r=e.toJS().layers.filter(function(e){return void 0!==e.metadata}).map(function(e){return e.metadata["mapbox:group"]}).lastIndexOf("static")+1,a=e.mergeIn(["sources"],t.sources),o=e.get("layers");return t.layers.forEach(function(e,t){o=o.insert(r+t,Object(m.a)(e))}),a=a.set("layers",o)}),or=Object(l.b)(function(e,t){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,cursor:e.map.interaction.cursor,token:e.map.module.token,mapStyle:ar(e),interactiveLayerIds:rr(e)}},function(e){return{setViewport:function(t){e(function(e){return function(t){t({type:"SET_VIEWPORT",payload:e}),t(Qe()),t(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var o=r.map.viewport;void 0!==o.bounds&&a({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})}}(t))},mapHover:function(t,r,a,o){e(function(e,t,r,a){return function(o,n){var i=n().map,s=i.heatmap.highlightedVessels,l=s.layer,u=s.isEmpty,c=s.foundVessels,p=null,d={type:null};if(!0===u){var A=et(r);if(void 0!==A){var g=Xe(A.staticLayerId,i,A.feature);if(null!==g){var m=A.feature.properties,h=(g.find(function(e){return e.id&&"name"===e.id.toLowerCase()})||g.find(function(e){return e.id&&"id"===e.id.toLowerCase()})||g.find(function(e){return e.id&&null!==m[e.id]&&"null"!==m[e.id]&&void 0!==m[e.id]})).id,f=m[h];d.type="static",d.cluster=a,d.layer={id:A.staticLayerId},d.target={featureTitle:f,properties:m},p="pointer"}}}else if(!0!==u){var y=void 0===c||c.length>1;p=y?"zoom-in":"pointer",d.type="activity",d.layer=l,d.target={objects:c,isCluster:y}}p!==i.interaction.cursor&&o({type:"SET_MAP_CURSOR",payload:p}),i.module.onHover&&i.module.onHover(ze({},d,{latitude:e,longitude:t}))}}(t,r,a,o))},mapClick:function(t,r,a,o){e(tt(t,r,a,o))},transitionEnd:function(){e(function(e){e({type:"TRANSITION_END"}),e(Qe()),e(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var o=r.map.viewport;void 0!==o.bounds&&a({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})})},onClosePopup:function(){e(function(e,t){var r=t();void 0!==r.map.module.onClosePopup&&r.map.module.onClosePopup()})}}})(tr),nr=r("./src/map/glmap/gl-styles/style.json"),ir=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function sr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function lr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){ur(e,t,r[t])})}return e}function ur(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var cr=function(e){return{type:"SET_MAP_STYLE",payload:e}},pr=function(e,t,r){var a=e.toJS().layers,o=e,n=a.findIndex(function(e){return e.id===t}),i=a.find(function(e){return e.id===t});if(o=function(e,t,r){var a=!0===t.visible?"visible":"none";return e.setIn(["layers",r,"layout","visibility"],a)}(o,r,n),!0===r.isBasemap)return o;var s=nr.layers.find(function(e){return e.id===t}),l=void 0===r.opacity?1:r.opacity;switch(i.type){case"fill":o=o.setIn(["layers",n,"paint","fill-opacity"],l).setIn(["layers",n,"paint","fill-outline-color"],r.color).setIn(["layers",n,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":o=o.setIn(["layers",n,"paint","line-opacity"],l).setIn(["layers",n,"paint","line-color"],r.color);break;case"symbol":if(i.metadata&&!0===i.metadata["gfw:isLabel"]){var u="visible"===o.getIn(["layers",n,"layout","visibility"])&&!0===r.showLabels?"visible":"none";if(o=o.setIn(["layers",n,"layout","visibility"],u),!0!==r.showLabels)break}o=o.setIn(["layers",n,"paint","text-opacity"],l),void 0!==r.color&&(o=o.setIn(["layers",n,"paint","text-color"],r.color));break;case"circle":o=o.setIn(["layers",n,"paint","circle-opacity"],l).setIn(["layers",n,"paint","circle-radius"],s.paint["circle-radius"]).setIn(["layers",n,"paint","circle-stroke-color"],s.paint["circle-stroke-color"]||"#000").setIn(["layers",n,"paint","circle-stroke-width"],s.paint["circle-stroke-width"]||1),void 0!==r.color&&(o=o.setIn(["layers",n,"paint","circle-color"],r.color));break;case"raster":o=o.setIn(["layers",n,"paint","raster-opacity"],l)}return o=function(e,t,r,a){var o=e,n=e.toJS(),i=r.type,s=n.metadata["gfw:styles"],l=r.metadata;return["selected","highlighted"].forEach(function(e){var n=t["".concat(e,"Features")],u=null!==n&&void 0!==n&&n.values.length>0,c=t[e],p=lr({},s[e][i]||{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{});Object.keys(p).length&&Object.keys(p).forEach(function(e){var i,s=p[e][0],l=p[e][1],d=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===u&&!0!==c&&!1!==c){var A=nr.layers.find(function(e){return e.id===r.id});i=void 0!==A?A[d][e]:null}else if(!0===c||!1===c)i=!0===c?s:l;else{var g="";if(null!==t.color&&void 0!==t.color){var m=st(t.color);g="".concat(m.r,",").concat(m.g,",").concat(m.b)}i=["match",["get",n.field],n.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",g),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",g)]}void 0!==i&&null!==i&&(o=o.setIn(["layers",a,d,e],i))})}),o}(o,r,i,n)},dr=function(e,t,r,a){return function(o,n){var i=n().map.style.mapStyle,s=i.toJS();if(void 0===s.sources[t]){var l={type:e};e===j?l.data=a:e===F&&(l.tiles=[r],l.tileSize=256),i=i.setIn(["sources",t],Object(m.a)(l))}if(void 0===s.layers.find(function(e){return e.id===t})){var u=e===j?function(e){var t=e.features.map(function(e){var t=e.geometry;return void 0===t?null:t.type}),r=ir.map(function(e){var r=0;return t.forEach(function(t){e.geoJSON.indexOf(t)>-1&&r++}),{gl:e.gl,num:r}}),a="fill",o=0;return r.forEach(function(e){e.num>o&&(a=e.gl,o=e.num)}),a}(a):e,c=Object(m.a)({id:t,source:t,type:u,layout:{},paint:{}}),p=e===F?s.layers.length-1-s.layers.filter(function(e){return"labels"!==e.id}).reverse().findIndex(function(e){return"raster"===e.type}):s.layers.length-1;i=i.set("layers",i.get("layers").splice(p,0,c))}o(cr(i))}},Ar=function(e){return function(t,r){t({type:"MARK_CARTO_LAYERS_AS_INSTANCIATED",payload:e.map(function(e){return e.sourceId})});var a=e.map(function(e){return r=(t=e).sourceId,a=t.sourceCartoSQL,o={layers:[{id:r,options:{sql:a}}]},n=encodeURIComponent(JSON.stringify(o)),i="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG".replace("$MAPCONFIG",n),new Promise(function(e){fetch(i).then(function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(r)),Promise.reject(),null):e.json()}).then(function(t){e({layergroupid:t.layergroupid,sourceId:r})}).catch(function(e){console.warn(e)})});var t,r,a,o,n,i});Promise.all(a.map(function(e){return e.catch(function(e){return e})})).then(function(a){var o=r().map.style.mapStyle,n=o.toJS();a.forEach(function(t){var r="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt".replace("$LAYERGROUPID",t.layergroupid),a="".concat(t.sourceId,"-instanciated");o=o.setIn(["sources",a],Object(m.a)({type:"vector",tiles:[r]})),n.layers.forEach(function(r,n){if(r.source===t.sourceId){o=(o=o.setIn(["layers",n,"source"],a)).setIn(["layers",n,"metadata","gfw:id"],t.sourceId);var i=e.find(function(e){return e.refLayer.id===t.sourceId}).refLayer;o=pr(o,r.id,i)}})}),t(cr(o))}).catch(function(e){console.warn(e)})}},gr=function(e,t){return function(r,a){r({type:"SET_STATIC_LAYERS",payload:e}),r({type:"SET_BASEMAP_LAYERS",payload:t});var o=[].concat(sr(e),sr(t.map(function(e){return lr({},e,{isBasemap:!0})}))),n=a().map.style.mapStyle.toJS().sources,i=o.filter(function(e){return void 0!==e.gl&&void 0===n[e.id]});i.length&&r(function(e){return function(t,r){var a=r().map.style.mapStyle;e.forEach(function(e){var t=e.id,r=e.gl,o=Object(m.a)(r.source);a=a.setIn(["sources",t],o);var n=[];r.layers.forEach(function(e){var r=lr({},e,{source:t,"source-layer":t});n.push(r)});var i=Object(m.a)(n);a=a.set("layers",a.get("layers").concat(i))}),t(cr(a))}}(i));var s=o.filter(function(e){return!0===e.isCustom&&void 0===n[e.id]});s.length&&s.forEach(function(e){r(dr(e.subtype,e.id,e.url,e.data))});var l=a().map.style,u=l.mapStyle,c=u.toJS(),p=c.layers,d=c.sources,A=[];e.forEach(function(e){var t=e.id;if(void 0!==n[t]&&(void 0!==e.data&&(u=u.setIn(["sources",t,"data"],Object(m.a)(e.data))),void 0!==e.url)){var r=n[t].tiles,a=void 0!==r&&r.length>0?K()([e.url].concat(sr(r))):[e.url];u=u.setIn(["sources",t,"tiles"],Object(m.a)(a))}});for(var g=function(e){var t=p[e],r=t.source,a=d[r],n=void 0!==t.metadata&&t.metadata["gfw:id"]||r,i=o.find(function(e){return e.id===n});if(void 0===i)return t.type,"continue";var s=void 0!==a.metadata&&a.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var c=l.cartoLayersInstanciated.indexOf(r)>-1;return!0!==i.visible||c||A.find(function(e){return e.sourceId===r})||A.push({sourceId:r,sourceCartoSQL:s,refLayer:i}),"continue"}u=pr(u,t.id,i)},h=0;h<p.length;h++)g(h);A.length&&r(Ar(A)),r(cr(u))}},mr=r("./node_modules/@turf/bbox/index.js"),hr=r.n(mr),fr=r("./node_modules/redux-thunk/es/index.js");var yr=s.d;Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).MAP_REDUX_REMOTE_DEBUG||Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).REACT_APP_MAP_REDUX_REMOTE_DEBUG;var br=Object(s.e)(function(){},{},yr(Object(s.a)(fr.a))),Er=function(e){var t,r=br.getState().map.tracks.data.find(function(t){return t.id===e.toString()});return br.dispatch((t=r.geoBounds,function(e,r){var a=r(),o=Object(Je.a)({bounds:[[t.minLng,t.minLat],[t.maxLng,t.maxLat]],width:a.map.viewport.viewport.width,height:a.map.viewport.viewport.height,padding:50});e(Ve(null,o.latitude,o.longitude,o.zoom))})),r.timelineBounds},vr=br,wr="ADD_TRACK",Br="UPDATE_TRACK",Cr=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach(function(e){e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach(function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)})}),{geojson:e,timelineBounds:[t.start,t.end]}},Sr=function(e){var t=hr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}},Ir=function e(t){for(var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a={start:1/0,end:0},o={minLat:1/0,maxLat:-1/0,minLng:1/0,maxLng:-1/0},n=0,i=t.datetime.length;n<i;n++){var s=t.datetime[n];s<a.start?a.start=s:s>a.end&&(a.end=s);var l=t.latitude[n];l<o.minLat?o.minLat=l:l>o.maxLat&&(o.maxLat=l);var u=t.longitude[n];!0===r&&u<0&&(u+=360),u<o.minLng?o.minLng=u:u>o.maxLng&&(o.maxLng=u)}return o.maxLng-o.minLng>350&&!1===r?e(t,!0):{time:[a.start,a.end],geo:o}};var xr=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,r){var a=r().map.tracks.data;e&&e.forEach(function(e){var r,o=e.id,n=a.find(function(e){return e.id===o});void 0===n?t((r=e,function(e,t){var a=r.id,o=r.url,n=r.type,i=r.fitBoundsOnLoad,s=r.layerTemporalExtents,l=r.color,u=r.data,c=t();if(!c.map.tracks.data.find(function(e){return e.id===a})){var p={id:a,url:o,type:n,color:l,fitBoundsOnLoad:i},d=void 0!==r.data&&null!==r.data,A=void 0!==o&&null!==o&&""!==o;if(d&&(p.data=u,p.geoBounds=Sr(u)),e({type:wr,payload:p}),!d&&A){var g=b(e,c);if("geojson"!==n){var m=c.map.module.token,h=de(o,m,s,{seriesgroup:a});Promise.all(h.map(function(e){return e.catch(function(e){return e})})).then(function(t){var r=Ae(t);if(r.length){var o=ge(r,["latitude","longitude","datetime","series","weight","sigma"]),n=he(o),i=Ir(o);e({type:Br,payload:{id:a,data:fe(n),geoBounds:i.geo,timelineBounds:i.time}}),e(E(g))}})}else fetch(o).then(function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()}).then(function(t){var r=Cr(t),o=r.geojson,n=r.timelineBounds,s=Sr(t);e({type:Br,payload:{id:a,data:o,geoBounds:s,timelineBounds:n}}),i&&Er(a)}).catch(function(e){return console.warn(e)}).finally(function(){return e(E(g))})}}})):n.color!==e.color&&t({type:Br,payload:{id:e.id,color:e.color}})}),a.forEach(function(r){e&&e.find(function(e){return e.id===r.id})||t({type:"REMOVE_TRACK",payload:{trackId:r.id}})})}},Rr=function(e,t){return function(e){return e}};function Or(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Lr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Qr(e,t,r[t])})}return e}function Qr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var kr={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},Tr=Rr("module",{loaders:d.a.arrayOf(d.a.number),token:d.a.string,temporalExtent:d.a.arrayOf(d.a.instanceOf(Date)),onViewportChange:d.a.func,onHover:d.a.func,onClick:d.a.func,onLoadStart:d.a.func,onLoadComplete:d.a.func,onClosePopup:d.a.func,onAttributionsChange:d.a.func})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:kr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return Lr({},e,t.payload);case"SET_TEMPORAL_EXTENT":return Lr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return Lr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var r=null!==e.loaders?Or(e.loaders):[];return r.push(t.payload),Lr({},e,{loaders:r});case"COMPLETE_LOADER":var a=Or(e.loaders),o=a.findIndex(function(e){return e===t.payload});return a.splice(o,1),Lr({},e,{loaders:a});default:return e}});function _r(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Yr(e,t,r[t])})}return e}function Yr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Gr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Dr={data:[]},Pr=Rr("tracks",{data:d.a.arrayOf(d.a.exact(_r({},A,{data:d.a.object,timelineBounds:d.a.array,geoBounds:d.a.exact({minLat:d.a.number,minLng:d.a.number,maxLat:d.a.number,maxLng:d.a.number})})))})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Dr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case wr:return _r({},e,{data:[].concat(Gr(e.data),[t.payload])});case Br:var r=t.payload,a=e.data.map(function(e){return e.id!==r.id?e:_r({},e,r)});return _r({},e,{data:a});case"REMOVE_TRACK":var o=t.payload.trackId,n=e.data.filter(function(e){return e.id!==o});return _r({},e,{data:n});default:return e}});function Mr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function jr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Fr(e,t,r[t])})}return e}function Fr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Wr={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function Hr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Ur(e,t,r[t])})}return e}function Ur(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Kr={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]},qr=r("./node_modules/react-map-gl/dist/es5/utils/transition/viewport-fly-to-interpolator.js"),Zr=r.n(qr),Jr=r("./node_modules/d3-ease/src/index.js");function Vr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){zr(e,t,r[t])})}return e}function zr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Nr={transitionDuration:500,transitionInterpolator:new Zr.a,transitionEasing:Jr.a},Xr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};function $r(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function ea(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){ta(e,t,r[t])})}return e}function ta(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ra,aa=K()(Object.keys(nr.sources).map(function(e){return nr.sources[e].attribution}).filter(function(e){return void 0!==e})),oa={mapStyle:Object(m.a)((ra=nr,ra.layers.forEach(function(e){void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),e.metadata&&!0===e.metadata["gfw:temporal"]&&(e.filter=["all",[">","timestamp",0],["<","timestamp",999999999999]]),"visible"!==e.layout.visibility&&(e.layout.visibility="none")}),ra)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:aa};function na(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ia={cursor:"progress"},sa=Object(s.c)({module:Tr,tracks:Pr,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Wr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case Pe:var r=e.heatmapLayers,a=r[t.payload.layerId].visibleTemporalExtentsIndices;return a=K()(a.concat(t.payload.indicesAdded)),r[t.payload.layerId].visibleTemporalExtentsIndices=a,Object.assign({},e,r);case"ADD_HEATMAP_LAYER":var o=Object.assign({},e.heatmapLayers,Fr({},t.payload.id,jr({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:o});case"UPDATE_HEATMAP_LAYER_STYLE":var n=t.payload,i=jr({},e.heatmapLayers[n.id],n),s=jr({},e.heatmapLayers,Fr({},n.id,i));return jr({},e,{heatmapLayers:s});case"REMOVE_HEATMAP_LAYER":var l=Object.assign({},e.heatmapLayers);return delete l[t.payload.layerId],Object.assign({},e,{heatmapLayers:l});case Ge:return Object.assign({},e,{referenceTiles:[].concat(Mr(e.referenceTiles),[t.payload])});case Me:var u=t.payload.layerId,c=t.payload.tile,p=jr({},e.heatmapLayers[u]),d=Mr(p.tiles),A=d.findIndex(function(e){return e.uid===c.uid});-1===A?d.push(c):d=[d.slice(0,A),c,d.slice(A+1)],p.tiles=d;var g=jr({},e.heatmapLayers,Fr({},u,p));return jr({},e,{heatmapLayers:g});case"RELEASE_HEATMAP_TILES":var m=t.payload,h=Object.keys(e.heatmapLayers),f=jr({},e.heatmapLayers);h.forEach(function(e){var t=jr({},f[e]);m.forEach(function(e){var r=t.tiles.findIndex(function(t){return t.uid===e});r>-1&&t.tiles.splice(r,1)})});var y=Mr(e.referenceTiles);return m.forEach(function(e){var t=y.findIndex(function(t){return t.uid===e});t>-1&&(y=[].concat(Mr(y.slice(0,t)),Mr(y.slice(t+1))))}),jr({},e,{heatmapLayers:f,referenceTiles:y});case"UPDATE_LOADED_TILES":var b=jr({},e.heatmapLayers);return jr({},e,{heatmapLayers:b});case De:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return jr({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return jr({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Kr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":return Hr({},e,{currentVisibleTiles:[].concat(t.payload)});case"SET_CURRENTLY_LOADED_TILES":return Hr({},e,{currentLoadedTiles:[].concat(t.payload)});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var r=K()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),a=K()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids));return Hr({},e,{currentToLoadTileUids:r.filter(function(e){return-1===a.indexOf(e)}),currentToReleaseTileUids:a});case"MARK_TILES_UIDS_AS_LOADED":var o=e.currentToLoadTileUids,n=t.payload;return Hr({},e,{currentToLoadTileUids:o.filter(function(e){return-1===n.indexOf(e)})});case"RELEASE_MARKED_TILES_UIDS":return Hr({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:oa,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MAP_STYLE":var r=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return ea({},e,{mapStyle:r});case"SET_MAP_STYLE":return ea({},e,{mapStyle:t.payload});case"SET_STATIC_LAYERS":return ea({},e,{staticLayers:t.payload});case"SET_BASEMAP_LAYERS":return ea({},e,{basemapLayers:t.payload});case"MARK_CARTO_LAYERS_AS_INSTANCIATED":return ea({},e,{cartoLayersInstanciated:[].concat($r(e.cartoLayersInstanciated),$r(t.payload))});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return Vr({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"UPDATE_VIEWPORT":var r=Vr({},e.viewport,t.payload);return Vr({},e,{viewport:r,prevZoom:r.zoom});case"SET_ZOOM_INCREMENT":var a=e.viewport.zoom,o=Math.min(e.maxZoom,t.payload.zoom||a+t.payload.increment),n=Vr({},e.viewport,Nr,{zoom:o,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return Vr({},e,{viewport:n,canZoomIn:o<e.maxZoom,canZoomOut:o>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:G});case"SET_MOUSE_LAT_LONG":return Vr({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return Vr({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return Vr({},e,t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ia,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){na(e,t,r[t])})}return e}({},e,{cursor:t.payload});default:return e}}});function la(e){return(la="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ua(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function ca(e){return(ca=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function pa(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function da(e,t){return(da=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Aa=Object(s.c)({map:sa});vr.replaceReducer(Aa);var ga=c()(function(e){vr.dispatch(function(e){return function(t,r){for(var a=r().map.style.mapStyle,o=a.toJS().layers,n=Math.round(e[0].getTime()/1e3),i=Math.round(e[1].getTime()/1e3),s=0;s<o.length;s++){var l=o[s];if(void 0!==l.metadata&&!0===l.metadata["gfw:temporal"]){var u=a.getIn(["layers",s,"filter"]).toJS();if(null===u)throw new Error("filter must be preset on style.json for temporal layer: ",l.id);u[1][2]=n,u[2][2]=i,a=a.setIn(["layers",s,"filter"],Object(m.a)(u))}}t(cr(a))}}(e)),vr.dispatch(function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}}(e))},16),ma=function(e){var t;vr.dispatch((t={latitude:e.center[0],longitude:e.center[1],zoom:e.zoom},function(e){e({type:"UPDATE_VIEWPORT",payload:t}),e(Qe()),e(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var o=r.map.viewport;void 0!==o.bounds&&a({zoom:o.viewport.zoom,center:[o.viewport.latitude,o.viewport.longitude],bounds:o.bounds,canZoomIn:o.canZoomIn,canZoomOut:o.canZoomOut,mouseLatLong:o.mouseLatLong})}})}))},ha=function(e){function t(){var e,r,a,o,n,i,s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var l=arguments.length,u=new Array(l),c=0;c<l;c++)u[c]=arguments[c];return a=this,r=!(o=(e=ca(t)).call.apply(e,[this].concat(u)))||"object"!==la(o)&&"function"!==typeof o?pa(a):o,n=pa(r),s={initialized:!1,error:null,errorInfo:null},(i="state")in n?Object.defineProperty(n,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[i]=s,r}var r,a,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&da(e,t)}(t,o.a.Component),r=t,(a=[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){var e;void 0!==this.props.viewport&&ma(this.props.viewport),null!==this.props.glyphsPath&&vr.dispatch({type:"INIT_MAP_STYLE",payload:{glyphsPath:{glyphsPath:this.props.glyphsPath}.glyphsPath}}),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(vr.getState().map.style.attributions),vr&&void 0===vr.getState().map.module.token&&vr.dispatch((e={token:this.props.token,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange},function(t){t({type:"INIT_MODULE",payload:e})})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&vr.dispatch(v(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&vr.dispatch(gr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&vr.dispatch(xr(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&ga(this.props.temporalExtent),this.setState({initialized:!0}),null!==this.props.heatmapLayers&&vr.dispatch(Ze(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){var t;this.props.tracks!==e.tracks&&vr.dispatch(xr(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&vr.dispatch(Ze(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&vr.dispatch(gr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||vr.dispatch((t=this.props.loadTemporalExtent,function(e,r){var a=r(),o=a.map.heatmap.heatmapLayers,n={};Object.keys(o).forEach(function(r){var a=o[r],i=a.header.temporalExtents,s=a.visibleTemporalExtentsIndices,l=je(t,i),u=H()(l,s);u.length&&(n[r]=u,e({type:Pe,payload:{layerId:r,indicesAdded:u}}))});var i=Object.keys(n);i.length&&e(Fe(i,a.map.heatmap.referenceTiles,n))}))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||ga(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||vr.dispatch(v(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&vr.dispatch(v(this.props.highlightTemporalExtent));var r,a=vr.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===vr.getState().map.viewport.currentTransition&&(a.latitude===this.props.viewport.center[0]&&a.longitude===this.props.viewport.center[1]&&a.zoom===this.props.viewport.zoom||(1===Math.abs(a.zoom-this.props.viewport.zoom)?vr.dispatch((r=this.props.viewport.zoom,function(e){e(Ve(null,null,null,r))})):ma(this.props.viewport)))}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),o.a.createElement("div",null,o.a.createElement("h2",null,"Map component crashed!"),o.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),o.a.createElement("div",null,"Component Stack Error Details:"),o.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:o.a.createElement(l.a,{store:vr},o.a.createElement(or,this.props))}}])&&ua(r.prototype,a),n&&ua(r,n),t}();ha.defaultProps={token:null,glyphsPath:null,highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,onViewportChange:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var fa=ha;ha.__docgenInfo={description:"",methods:[{name:"componentDidCatch",docblock:null,modifiers:[],params:[{name:"error",type:null},{name:"errorInfo",type:null}],returns:null}],displayName:"MapModule",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},glyphsPath:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},highlightTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},tracks:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"exact",value:"import { trackTypes } from './proptypes/tracks'",computed:!0}},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},heatmapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},temporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},loadTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},basemapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},staticLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},onViewportChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadStart:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadComplete:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onAttributionsChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!0,description:""}}};nr.metadata["gfw:basemap-layers"];function ya(e){return(ya="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ba(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Ea(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function va(e,t){return!t||"object"!==ya(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function wa(e){return(wa=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ba(e,t){return(Ba=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.d(t,"default",function(){return Ca});var Ca=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=va(this,wa(t).call(this,e))).layout=null,r}var r,a,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ba(e,t)}(t,o.a.Component),r=t,(a=[{key:"render",value:function(){var e=this.props,t=e.components,r=ba(e,["components"]);return o.a.createElement(n.MDXTag,{name:"wrapper",components:t},o.a.createElement(n.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),o.a.createElement(n.MDXTag,{name:"h2",components:t,props:{id:"description"}},"Description"),o.a.createElement(n.MDXTag,{name:"p",components:t},"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),o.a.createElement(n.MDXTag,{name:"ul",components:t},o.a.createElement(n.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(n.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}},"Map client")),o.a.createElement(n.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(n.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}},"Vessel profiles")),o.a.createElement(n.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(n.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}},"Data portal"))),o.a.createElement(n.MDXTag,{name:"h2",components:t,props:{id:"available-properties"}},"Available properties"),o.a.createElement(n.MDXTag,{name:"p",components:t},"TODO: fix crash on PropsTable docz component"),o.a.createElement(n.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),o.a.createElement(i.e,{__codesandbox:"",__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:r,Map:fa}},o.a.createElement(fa,{viewport:{center:[.026,123.61],zoom:5}})))}}])&&Ea(r.prototype,a),s&&Ea(r,s),t}();Ca.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-map-map.43e1f722cda4c4afec59.js.map