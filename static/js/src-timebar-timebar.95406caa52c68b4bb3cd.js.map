{"version":3,"sources":["webpack:///./src/timebar/charts/events.module.css","webpack:///./src/timebar/components/bookmark.module.css","webpack:///./src/timebar/components/date-selector.module.css","webpack:///./src/timebar/components/playback.module.css","webpack:///./src/timebar/components/timeline-handler.module.css","webpack:///./src/timebar/components/timeline-units.module.css","webpack:///./src/timebar/components/timeline.module.css","webpack:///./src/timebar/components/timerange-selector.module.css","webpack:///./src/timebar/immediateContext.js","webpack:///./src/timebar/utils.js","webpack:///./src/timebar/icons/arrowUp.svg","webpack:///./src/timebar/icons/arrowDown.svg","webpack:///./src/timebar/components/date-selector.js","webpack:///./src/timebar/components/timerange-selector.js","webpack:///./src/timebar/icons/bookmarkFilled.svg","webpack:///./src/timebar/icons/delete.svg","webpack:///./src/timebar/icons/arrow.svg","webpack:///./src/timebar/components/bookmark.js","webpack:///./src/timebar/layouts/index.js","webpack:///./src/timebar/components/timeline-units.js","webpack:///./src/timebar/icons/drag.svg","webpack:///./src/timebar/components/timeline-handler.js","webpack:///./src/timebar/components/timeline.js","webpack:///./src/timebar/icons/loop.svg","webpack:///./src/timebar/icons/back.svg","webpack:///./src/timebar/icons/play.svg","webpack:///./src/timebar/icons/pause.svg","webpack:///./src/timebar/icons/forward.svg","webpack:///./src/timebar/components/playback.js","webpack:///./src/timebar/icons/timeRange.svg","webpack:///./src/timebar/icons/bookmark.svg","webpack:///./src/timebar/icons/minus.svg","webpack:///./src/timebar/icons/plus.svg","webpack:///./src/timebar/timebar.js","webpack:///./src/timebar/charts/Events.js","webpack:///./src/timebar/timebar.mdx","webpack:///./src/timebar/timebar.module.css"],"names":["module","exports","fishing","port","encounter","unregistered","gap","Bookmark","_immediate","main","_compact","_overflowingRight","_overflowingLeft","delete","title","leftArrow","rightArrow","icon","_point","DateSelector","arrowButton","value","playbackActions","secondary","playbackActionsActive","secondaryActive","buttonBigger","loop","speed","handler","unit","Timeline","graphContainer","graph","veil","veilLeft","veilRight","absoluteEnd","lastUpdate","lastUpdateLabel","TimeRangeSelector","inner","selectorsContainer","selectorGroup","selectorLabel","actions","cta","errorMessage","ImmediateContext","React","createContext","getTime","dateISO","Date","clampToAbsoluteBoundaries","start","end","desiredDeltaMs","absoluteStart","clamped","startMs","endMs","absoluteStartMs","absoluteEndMs","newStartClamped","newEndClamped","toISOString","getDeltaMs","getDeltaDays","isMoreThanADay","stickToClosestUnit","date","mDate","dayjs","mStartOf","startOf","mEndOf","endOf","valueOf","getHumanizedDates","format","humanizedStart","humanizedEnd","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","react_default","a","createElement","stroke","strokeWidth","d","fill","arrowUp_SvgArrowUp","props","width","height","viewBox","__webpack_require__","p","arrowDown_extends","arrowDown_ref","arrowDown_SvgArrowDown","_this","pressingInterval","window","setInterval","onInterval","onChange","pressing","clear","Component","increment","pressingTimeout","setTimeout","startTimeout","addEventListener","onMouseUp","clearInterval","clearTimeout","removeEventListener","_this2","_this$props","canIncrement","canDecrement","className","styles","type","disabled","onMouseDown","ONE_DAY_MS","timerange_selector_classCallCheck","timerange_selector_getPrototypeOf","timerange_selector_assertThisInitialized","onSubmit","subtract","state","startCanIncrement","startCanDecrement","endCanIncrement","endCanDecrement","_this$props2","setState","which","allBounds","offset","prevDate","newDate","add","bounds","newDateMs","toDate","Math","min","max","_this$state","_this$props3","undefined","mStart","mEnd","onClick","onDiscard","date_selector","setUnit","year","classNames","last30days","submit","bookmarkFilled_extends","bookmarkFilled_ref","fillRule","strokeLinejoin","bookmarkFilled_SvgBookmarkFilled","delete_extends","delete_ref","delete_SvgDelete","arrow_extends","arrow_ref","arrow_SvgArrow","_classNames","overflowing","overflowingLeft","overflowingRight","scale","bookmarkStart","bookmarkEnd","minX","maxX","onSelect","immediate","context","x","_getHumanizedDates","label","join","renderedX","renderedWidth","minWidth","compact","point","bookmark_defineProperty","style","left","onDelete","getUnitLabel","mUnit","baseUnit","availableWidth","getWeekFmt","isFirst","mWeekEnd","concat","unitFormat","formats","month","fm","week","day","hour","finalFormat","TimelineUnits","outerScale","outerStart","outerEnd","innerDays","units","mOuterStart","mOuterEnd","numUnitsOffset","numUnits","diff","ui","mUnitNext","xNext","id","hoverLabel","Infinity","push","getUnitsPositions","renderprops","native","items","keys","map","from","opacity","leave","enter","update","s","div","button","zoomToUnit","drag_extends","drag_ref","drag_SvgDrag","Handler","onTouchStart","timeline_handler_defineProperty","dragging","mouseX","defaultProps","DRAG_INNER","DRAG_START","DRAG_END","timeline_classCallCheck","timeline_getPrototypeOf","timeline_defineProperty","timeline_assertThisInitialized","graphStyle","getComputedStyle","outerX","parseFloat","getBoundingClientRect","outerWidth","outerHeight","innerStartPx","innerEndPx","innerWidth","timestamp","frameTimestamp","progress","outerDrag","handlerMouseX","deltaPxRatio","offsetMs","innerScale","invert","newStart","newEnd","_clampToAbsoluteBound","requestAnimationFrame","onEnterFrame","event","clientX","changedTouches","lastX","toggleImmediate","throttle","isDay","onMouseMove","onMouseLeave","_this$state2","node","contains","isMovingInside","throttledMouseMove","currentDeltaMs","movementX","_clampToAbsoluteBound2","isHandlerZoomInValid","isValid","isHandlerZoomOutValid","_this$state3","isZoomIn","clampedX","stickUnit","onWindowResize","cancelAnimationFrame","_this$state4","_this$state5","_this$props4","onBookmarkChange","_this$state6","scaleTime","domain","range","lastUpdatePosition","ref","bookmark","timeline_units","children","_objectSpread","graphHeight","tooltipContainer","el","cx","timeline_handler","to","loop_extends","loop_ref","loop_SvgLoop","back_extends","back_ref","back_SvgBack","play_extends","play_ref","play_SvgPlay","pause_extends","pause_ref","pause_SvgPause","forward_extends","forward_ref","forward_SvgForward","BASE_STEP","SPEED_STEPS","FAST_FORWARD_REWIND_MULTIPLICATOR","Playback","playback_classCallCheck","playback_getPrototypeOf","playback_defineProperty","playback_assertThisInitialized","memoize","speedStep","baseStepWithSpeed","scaleLinear","deltaMultiplicatorMs","onTick","deltaMs","getStep","newStartMs","newEndMs","currentStartEndDeltaMs","togglePlay","elapsedMs","lastUpdateMs","progressRatio","requireNextTick","tick","force","playing","playingNext","prevState","nextStep","toggleLoop","uiStyles","uiButton","onBackwardClick","back","onPlayToggleClick","play","onForwardClick","forward","onSpeedClick","timeRange_extends","timeRange_ref","timeRange_SvgTimeRange","bookmark_extends","bookmark_ref","bookmark_SvgBookmark","minus_extends","minus_ref","rx","transform","strokeLinecap","minus_SvgMinus","plus_extends","plus_ref","y","plus_SvgPlus","extend","relativeTime","Timebar","timebar_classCallCheck","timebar_getPrototypeOf","timebar_defineProperty","timebar_assertThisInitialized","showTimeRangeSelector","notifyChange","zoom","steps","nextDelta","delta","round","nextUnit","step","unitOffsetMs","mNewStart","interval","enablePlayback","canZoomIn","canZoomOut","hasBookmark","bookmarkDisabled","immediateContext","Provider","playback","onPlaybackTick","timeActions","timerange_selector","onTimeRangeSelectorSubmit","toggleTimeRangeSelector","timeRangeContainer","timeRange","setBookmark","timeScale","out","in","timeline","Events","events","showFishing","_events$series","series","labels","counts","fishingIndex","indexOf","_toConsumableArray","slice","mCurrentStart","clone","allValues","maxValue","_loop","dateIndex","valuesAtDateSum","valuesAtDate","forEach","keyIndex","k","filter","v","console","warn","allRatios","ratiosAtDate","Events_objectSpread","stack","order","stackOrderNone","stackOffsetSilhouette","stackLayout","finalEvents","getFinalEvents","finalHeight","middle","areaGenerator","area","data","y0","y1","curve","curveStepAfter","eventsForKey","MDXContent","timebar_timebar_classCallCheck","timebar_timebar_possibleConstructorReturn","timebar_timebar_getPrototypeOf","layout","components","_objectWithoutProperties","dist","name","parentName","href","index_m","of","__codesandbox","__position","__code","__scope","TimebarEvents","eventsMock","timebar","log","charts_Events"],"mappings":"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","file":"static/js/src-timebar-timebar.12b732bf.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fishing\":\"events_fishing__2rScz\",\"port\":\"events_port__3Rq7E\",\"encounter\":\"events_encounter__1iDlJ\",\"unregistered\":\"events_unregistered__ldz0B\",\"gap\":\"events_gap__1s5sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bookmark\":\"bookmark_Bookmark__2e_Fm\",\"_immediate\":\"bookmark__immediate__3UwDX\",\"main\":\"bookmark_main__zAN8v\",\"_compact\":\"bookmark__compact__17r0_\",\"_overflowingRight\":\"bookmark__overflowingRight__V6d18\",\"_overflowingLeft\":\"bookmark__overflowingLeft__N_yd0\",\"delete\":\"bookmark_delete__omE6s\",\"title\":\"bookmark_title__fgJiS\",\"leftArrow\":\"bookmark_leftArrow__1srpm\",\"rightArrow\":\"bookmark_rightArrow__3FUyh\",\"icon\":\"bookmark_icon__23RCn\",\"_point\":\"bookmark__point__38Se1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateSelector\":\"date-selector_DateSelector__21IPK\",\"arrowButton\":\"date-selector_arrowButton__gD06u\",\"value\":\"date-selector_value__1JK9u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playbackActions\":\"playback_playbackActions__2_yJM\",\"secondary\":\"playback_secondary__1Ify_\",\"playbackActionsActive\":\"playback_playbackActionsActive__3r5jo\",\"secondaryActive\":\"playback_secondaryActive__1F80I\",\"buttonBigger\":\"playback_buttonBigger__aL1ns\",\"loop\":\"playback_loop__1XKk9\",\"speed\":\"playback_speed__1OhxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"timeline-handler_handler__21dks\",\"_immediate\":\"timeline-handler__immediate__2e6ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"timeline-units_unit__11WRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timeline\":\"timeline_Timeline__wZxDm\",\"graphContainer\":\"timeline_graphContainer__6Np1L\",\"graph\":\"timeline_graph__mYQfr\",\"veil\":\"timeline_veil__1P6IK\",\"veilLeft\":\"timeline_veilLeft__3hdXF\",\"veilRight\":\"timeline_veilRight__1eSAB\",\"_immediate\":\"timeline__immediate__1igre\",\"absoluteEnd\":\"timeline_absoluteEnd__2oI9J\",\"lastUpdate\":\"timeline_lastUpdate__3Bteo\",\"lastUpdateLabel\":\"timeline_lastUpdateLabel__1dwiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRangeSelector\":\"timerange-selector_TimeRangeSelector__1BK5p\",\"veil\":\"timerange-selector_veil__2nCw3\",\"inner\":\"timerange-selector_inner__1biJD\",\"selectorsContainer\":\"timerange-selector_selectorsContainer__fpVeo\",\"selectorGroup\":\"timerange-selector_selectorGroup__1wIwR\",\"selectorLabel\":\"timerange-selector_selectorLabel__vcLPV\",\"actions\":\"timerange-selector_actions__3KYCM\",\"cta\":\"timerange-selector_cta__1qLr_\",\"secondary\":\"timerange-selector_secondary__2xxi5\",\"errorMessage\":\"timerange-selector_errorMessage__2HlmD\"};","import React from 'react'\nconst ImmediateContext = React.createContext(false)\nexport default ImmediateContext\n","import dayjs from 'dayjs'\n\nexport const getTime = (dateISO) => new Date(dateISO).getTime()\n\nexport const clampToAbsoluteBoundaries = (\n  start,\n  end,\n  desiredDeltaMs,\n  absoluteStart,\n  absoluteEnd\n) => {\n  const startMs = getTime(start)\n  const endMs = getTime(end)\n  const absoluteStartMs = getTime(absoluteStart)\n  const absoluteEndMs = getTime(absoluteEnd)\n  let newStartClamped = start\n  let newEndClamped = end\n  let clamped\n\n  // newStart is before absolute start: use abs start as new start and keep the existing duration to get to new end\n  if (startMs < absoluteStartMs) {\n    newStartClamped = absoluteStart\n    newEndClamped = new Date(absoluteStartMs + desiredDeltaMs).toISOString()\n    clamped = 'start'\n    // newEnd is after absolute end: use abs end as new end and keep the existing duration to get back to new start\n  } else if (endMs > absoluteEndMs) {\n    newEndClamped = absoluteEnd\n    newStartClamped = new Date(absoluteEndMs - desiredDeltaMs).toISOString()\n    clamped = 'end'\n  }\n  return { newStartClamped, newEndClamped, clamped }\n}\n\nexport const getDeltaMs = (start, end) => getTime(end) - getTime(start)\nexport const getDeltaDays = (start, end) => getDeltaMs(start, end) / 1000 / 60 / 60 / 24\nexport const isMoreThanADay = (start, end) => getDeltaDays(start, end) >= 1\n\nexport const stickToClosestUnit = (date, unit) => {\n  const mDate = dayjs(date)\n  const mStartOf = mDate.startOf(unit)\n  const mEndOf = mDate.endOf(unit)\n  const startDeltaMs = getTime(date) - mStartOf.valueOf()\n  const endDeltaMs = mEndOf.valueOf() - getTime(date)\n  const mClosest = startDeltaMs > endDeltaMs ? mEndOf : mStartOf\n  return mClosest.toISOString()\n}\n\nexport const getHumanizedDates = (start, end) => {\n  const format = isMoreThanADay(start, end) ? 'MMM D YYYY' : 'MMM D YYYY HH[h]'\n  const humanizedStart = dayjs(start).format(format)\n  const humanizedEnd = dayjs(end).format(format)\n  return { humanizedStart, humanizedEnd }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 6l4-4 4 4\",\n  fill: \"none\"\n});\n\nvar SvgArrowUp = function SvgArrowUp(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowUp.1cbc9b80.svg\";\nexport { SvgArrowUp as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 1l4 4 4-4\",\n  fill: \"none\"\n});\n\nvar SvgArrowDown = function SvgArrowDown(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowDown.743b8d09.svg\";\nexport { SvgArrowDown as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './date-selector.module.css'\nimport { ReactComponent as IconArrowUp } from '../icons/arrowUp.svg'\nimport { ReactComponent as IconArrowDown } from '../icons/arrowDown.svg'\n\nclass DateSelector extends Component {\n  pressing = 0\n  pressingInterval = null\n  pressingTimeout = null\n\n  onMouseDown(increment) {\n    this.clear()\n    const { onChange } = this.props\n    this.pressing = increment\n    onChange(this.pressing)\n    this.pressingTimeout = window.setTimeout(this.startTimeout, 800)\n    window.addEventListener('mouseup', this.onMouseUp)\n  }\n\n  startTimeout = () => {\n    this.pressingInterval = window.setInterval(this.onInterval, 80)\n  }\n\n  onInterval = () => {\n    const { onChange } = this.props\n    onChange(this.pressing)\n  }\n\n  onMouseUp = () => {\n    this.clear()\n    this.pressing = 0\n  }\n\n  clear() {\n    window.clearInterval(this.pressingInterval)\n    window.clearTimeout(this.pressingTimeout)\n    window.removeEventListener('mouseup', this.onMouseUp)\n  }\n\n  componentWillUnmount() {\n    this.clear()\n  }\n\n  render() {\n    const { onChange, value, canIncrement, canDecrement } = this.props\n    return (\n      <div className={styles.DateSelector}>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canIncrement}\n          onMouseDown={() => {\n            this.onMouseDown(+1)\n          }}\n        >\n          <IconArrowUp />\n        </button>\n        <span className={styles.value}>{value}</span>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canDecrement}\n          onMouseDown={() => {\n            this.onMouseDown(-1)\n          }}\n        >\n          <IconArrowDown />\n        </button>\n      </div>\n    )\n  }\n}\n\nDateSelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  canIncrement: PropTypes.bool.isRequired,\n  canDecrement: PropTypes.bool.isRequired,\n}\n\nexport default DateSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport classNames from 'classnames'\nimport { getTime } from '../utils'\nimport DateSelector from './date-selector'\nimport styles from './timerange-selector.module.css'\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24 - 1\n\nclass TimeRangeSelector extends Component {\n  constructor(props) {\n    super(props)\n    const { start, end, absoluteStart, absoluteEnd } = props\n    this.state = {\n      startCanIncrement: start < end,\n      startCanDecrement: start > absoluteStart,\n      endCanIncrement: getTime(end) + ONE_DAY_MS < getTime(absoluteEnd),\n      endCanDecrement: end > start,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n    this.setState({\n      start,\n      end,\n    })\n  }\n\n  submit(start, end) {\n    const { onSubmit } = this.props\n\n    // on release, \"stick\" to day/hour\n    const newStart = dayjs(start)\n      .startOf('day')\n      .toISOString()\n    const newEnd = dayjs(end)\n      .startOf('day')\n      .toISOString()\n    onSubmit(newStart, newEnd)\n  }\n\n  setUnit(which, allBounds, unit, offset) {\n    const prevDate = this.state[which]\n    const newDate = dayjs(prevDate).add(offset, unit)\n\n    const bounds = allBounds[which]\n    let newDateMs = newDate.toDate().getTime()\n    newDateMs = Math.min(bounds.max, Math.max(bounds.min, newDateMs))\n\n    if (which === 'start') {\n      this.setState({\n        start: new Date(newDateMs),\n        startCanIncrement: newDateMs !== bounds.max,\n        startCanDecrement: newDateMs !== bounds.min,\n        endCanDecrement: newDateMs !== bounds.max,\n      })\n    } else {\n      this.setState({\n        end: new Date(newDateMs),\n        endCanIncrement: newDateMs !== bounds.max,\n        endCanDecrement: newDateMs !== bounds.min,\n        startCanIncrement: newDateMs !== bounds.min,\n      })\n    }\n  }\n\n  last30days = () => {\n    const { absoluteEnd, onSubmit } = this.props\n    onSubmit(\n      dayjs(absoluteEnd)\n        .subtract(30, 'day')\n        .toISOString(),\n      absoluteEnd\n    )\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      startCanIncrement,\n      startCanDecrement,\n      endCanIncrement,\n      endCanDecrement,\n    } = this.state\n    const { absoluteStart, absoluteEnd } = this.props\n\n    if (start === undefined) {\n      return null\n    }\n\n    const bounds = {\n      start: {\n        min: getTime(absoluteStart),\n        max: getTime(end) - ONE_DAY_MS,\n      },\n      end: {\n        min: getTime(start) + ONE_DAY_MS,\n        max: getTime(absoluteEnd),\n      },\n    }\n    const mStart = dayjs(start)\n    const mEnd = dayjs(end)\n\n    let errorMessage = ''\n    if (!startCanDecrement)\n      errorMessage = 'Your start date is the earliest date with data available'\n    if (!endCanIncrement) errorMessage = 'Your end date is the latest date with data available'\n    if (!startCanIncrement && !endCanDecrement)\n      errorMessage = 'Your start and end date must be at least one day apart'\n    if (!startCanDecrement && !endCanIncrement)\n      errorMessage = 'Your time range is the maximum range with data available'\n\n    return (\n      <div className={styles.TimeRangeSelector}>\n        <div className={styles.veil} onClick={this.props.onDiscard} />\n        <div className={styles.inner}>\n          <h2>Select a time range</h2>\n          <div className={styles.selectorsContainer}>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>START</span>\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'day', offset)\n                }}\n                value={mStart.date()}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'month', offset)\n                }}\n                value={mStart.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'year', offset)\n                }}\n                value={mStart.year()}\n              />\n            </div>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>END</span>\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'day', offset)\n                }}\n                value={mEnd.date()}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'month', offset)\n                }}\n                value={mEnd.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'year', offset)\n                }}\n                value={mEnd.year()}\n              />\n            </div>\n          </div>\n          <span className={styles.errorMessage}>{errorMessage}</span>\n          <div className={styles.actions}>\n            <button\n              type=\"button\"\n              className={classNames(styles.cta, styles.secondary)}\n              onClick={this.last30days}\n            >\n              LAST 30 DAYS\n            </button>\n            <button\n              type=\"button\"\n              className={styles.cta}\n              onClick={() => {\n                this.submit(start, end)\n              }}\n            >\n              DONE\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nTimeRangeSelector.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onDiscard: PropTypes.func.isRequired,\n}\n\nexport default TimeRangeSelector\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"#FFF\",\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fillRule: \"evenodd\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmarkFilled = function SvgBookmarkFilled(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmarkFilled.9c323b67.svg\";\nexport { SvgBookmarkFilled as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M10.477.738V2.25H0V.738h2.602L3.375 0h3.727l.773.738h2.602zM.738 11.988v-9h9v9c0 .399-.152.75-.457 1.055-.304.305-.656.457-1.054.457H2.25c-.398 0-.75-.152-1.055-.457-.304-.305-.457-.656-.457-1.055z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgDelete = function SvgDelete(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/delete.c8ee873a.svg\";\nexport { SvgDelete as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M5 1L1 5l4 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgArrow = function SvgArrow(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 10,\n    viewBox: \"0 0 6 10\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrow.7f32b3d1.svg\";\nexport { SvgArrow as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { getHumanizedDates } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport styles from './bookmark.module.css'\nimport { ReactComponent as IconBookmarkFilled } from '../icons/bookmarkFilled.svg'\nimport { ReactComponent as IconDelete } from '../icons/delete.svg'\nimport { ReactComponent as Arrow } from '../icons/arrow.svg'\n\nconst MIN_WIDTH = 32\nconst MIN_WIDTH_WITH_OVERFLOW_ARROWS = 52\nconst COMPACT_MAX_WIDTH = 240\n\nclass Bookmark extends Component {\n  static contextType = ImmediateContext\n  render() {\n    const { scale, bookmarkStart, bookmarkEnd, minX, maxX, onSelect } = this.props\n    const { immediate } = this.context\n\n    const x = scale(new Date(bookmarkStart))\n    const width = scale(new Date(bookmarkEnd)) - x\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(bookmarkStart, bookmarkEnd)\n    const label = [humanizedStart, humanizedEnd].join(' - ')\n\n    let overflowing\n    let overflowingLeft\n    let overflowingRight\n    let renderedX = x\n    let renderedWidth = width\n\n    if (x < minX) {\n      renderedX = minX\n      renderedWidth = x + renderedWidth\n      overflowing = true\n      overflowingLeft = true\n    }\n    if (renderedX + width > maxX) {\n      renderedX = Math.min(renderedX, maxX - MIN_WIDTH_WITH_OVERFLOW_ARROWS)\n      renderedWidth = maxX - renderedX\n      overflowing = true\n      overflowingRight = true\n    }\n\n    const minWidth = overflowing === true ? MIN_WIDTH_WITH_OVERFLOW_ARROWS : MIN_WIDTH\n    renderedWidth = Math.max(minWidth, renderedWidth)\n    const compact = renderedWidth < COMPACT_MAX_WIDTH\n    const point = renderedWidth <= MIN_WIDTH\n\n    return (\n      <div\n        className={classNames(styles.Bookmark, {\n          [styles._overflowingLeft]: overflowingLeft,\n          [styles._overflowingRight]: overflowingRight,\n          [styles._compact]: compact,\n          [styles._point]: point,\n          [styles._immediate]: immediate,\n        })}\n        style={{ left: renderedX, width: renderedWidth }}\n      >\n        <button\n          type=\"button\"\n          title=\"Go to time range bookmark\"\n          className={styles.main}\n          onClick={onSelect}\n        >\n          {overflowingLeft && <Arrow className={styles.leftArrow} />}\n          <IconBookmarkFilled className={styles.icon} />\n          {compact === false && <span className={styles.title}>{label}</span>}\n          {overflowingRight && <Arrow className={styles.rightArrow} />}\n        </button>\n        {compact === false && (\n          <button\n            type=\"button\"\n            title=\"Delete time range bookmark\"\n            className={styles.delete}\n            onClick={this.props.onDelete}\n          >\n            <IconDelete />\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\nBookmark.propTypes = {\n  bookmarkStart: PropTypes.string.isRequired,\n  bookmarkEnd: PropTypes.string.isRequired,\n  scale: PropTypes.func.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  immediate: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n\nexport default Bookmark\n","import dayjs from 'dayjs'\nimport { getTime } from '../utils'\n\nconst getUnitLabel = (mUnit, baseUnit, availableWidth) => {\n  /* eslint key-spacing: 0, no-multi-spaces: 0 */\n\n  const getWeekFmt = (mUnit, isFirst = false) => {\n    const mWeekEnd = mUnit.add(6, 'day')\n    return `${mUnit.format('MMM')} ${mUnit.format('D')}-${mWeekEnd.format('D')} ${\n      isFirst ? mUnit.format('YYYY') : ''\n    }`\n  }\n\n  const FORMATS = {\n    year: { isFirst: () => false, formats: [[0, 'YYYY']] },\n    month: {\n      isFirst: (fm) => fm.month() === 0,\n      formats: [[200, 'MMMM YYYY'], [100, 'MMMM', 'MMM YYYY'], [0, 'MMM', 'MMM YY']],\n    },\n    week: {\n      isFirst: (fm) => {\n        return fm.date() === 1\n      },\n      formats: [\n        [\n          0,\n          (mUnit) => {\n            return getWeekFmt(mUnit)\n          },\n          (mUnit) => {\n            return getWeekFmt(mUnit, true)\n          },\n        ],\n      ],\n    },\n    day: {\n      isFirst: (fm) => fm.date() === 1,\n      formats: [\n        [999, 'ddd D MMMM YYYY'],\n        [200, 'ddd D MMMM'],\n        [70, 'ddd D', 'MMM 1'],\n        [0, 'D', 'MMM'],\n      ],\n    },\n    hour: {\n      isFirst: (fm) => fm.hour() === 0,\n      formats: [[999, 'ddd D MMMM YYYY H[H]'], [0, 'H[H]', 'ddd D']],\n    },\n  }\n  const unitFormat = FORMATS[baseUnit]\n  let format\n  for (let i = 0; i < unitFormat.formats.length; i += 1) {\n    const formatMinWidth = unitFormat.formats[i][0]\n    if (availableWidth > formatMinWidth) {\n      format = unitFormat.formats[i]\n      break\n    }\n  }\n\n  const isFirst = unitFormat.isFirst(mUnit)\n  const finalFormat = isFirst && format[2] ? format[2] : format[1]\n  return typeof finalFormat === 'function' ? finalFormat(mUnit) : mUnit.format(finalFormat)\n}\n\nexport const getUnitsPositions = (\n  outerScale,\n  outerStart,\n  outerEnd,\n  absoluteStart,\n  absoluteEnd,\n  baseUnit\n) => {\n  const startMs = Math.max(getTime(outerStart), getTime(absoluteStart))\n  const endMs = Math.min(getTime(outerEnd), getTime(absoluteEnd))\n\n  // BUFFER ??\n  const mOuterStart = dayjs(startMs).startOf(baseUnit)\n  const mOuterEnd = dayjs(endMs).endOf(baseUnit)\n\n  const units = []\n  const numUnitsOffset = getTime(outerEnd) > getTime(absoluteEnd) ? 0 : 1\n  const numUnits = mOuterEnd.diff(mOuterStart, baseUnit) + numUnitsOffset\n\n  let mUnit = mOuterStart\n  let x = outerScale(mUnit)\n\n  for (let ui = 0; ui <= numUnits; ui += 1) {\n    const mUnitNext = mUnit.add(1, baseUnit)\n    const xNext = outerScale(mUnitNext)\n\n    const id = mUnit.format(\n      {\n        year: 'YYYY',\n        month: 'YYYY-MM',\n        week: 'YYYY-MM-DD',\n        day: 'YYYY-MM-DD',\n        hour: 'YYYY-MM-DD-HH',\n      }[baseUnit]\n    )\n\n    const width = xNext - x\n    const unit = {\n      id,\n      x,\n      width,\n      label: getUnitLabel(mUnit, baseUnit, width),\n      hoverLabel: `${getUnitLabel(mUnit, baseUnit, Infinity)} - Zoom to ${baseUnit}`,\n      start: mUnit.toISOString(),\n      end: mUnitNext.subtract(1, 'hour').toISOString(), // this avoids being stuck when clicking on a day unit\n    }\n    units.push(unit)\n    mUnit = mUnitNext\n    x = xNext\n  }\n\n  return units\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated, Transition } from 'react-spring/renderprops'\nimport { getDeltaDays } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport styles from './timeline-units.module.css'\nimport { getUnitsPositions } from '../layouts'\n\nclass TimelineUnits extends Component {\n  static contextType = ImmediateContext\n  zoomToUnit({ start, end }) {\n    this.props.onChange(start, end)\n  }\n\n  render() {\n    const { start, end, absoluteStart, absoluteEnd, outerScale, outerStart, outerEnd } = this.props\n    const { immediate } = this.context\n    const innerDays = getDeltaDays(start, end)\n\n    let baseUnit = 'day'\n    if (innerDays > 366) baseUnit = 'year'\n    else if (innerDays > 31) baseUnit = 'month'\n    else if (innerDays < 1) baseUnit = 'hour'\n\n    const units = getUnitsPositions(\n      outerScale,\n      outerStart,\n      outerEnd,\n      absoluteStart,\n      absoluteEnd,\n      baseUnit\n    )\n\n    return (\n      <div>\n        <Transition\n          native\n          immediate={immediate}\n          items={units}\n          keys={units.map((d) => d.id)}\n          from={{ opacity: 0 }}\n          leave={{ opacity: 0 }}\n          enter={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n          update={(d) => ({ left: d.x, width: d.width, opacity: 1 })}\n        >\n          {(d) => (s) => (\n            <animated.div style={s} className={styles.unit}>\n              {baseUnit === 'hour' ? (\n                <animated.div>{d.label}</animated.div>\n              ) : (\n                <animated.button\n                  type=\"button\"\n                  onClick={() => {\n                    this.zoomToUnit(d)\n                  }}\n                  title={d.hoverLabel}\n                >\n                  {d.label}\n                </animated.button>\n              )}\n            </animated.div>\n          )}\n        </Transition>\n      </div>\n    )\n  }\n}\n\nTimelineUnits.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  outerStart: PropTypes.string.isRequired,\n  outerEnd: PropTypes.string.isRequired,\n  outerScale: PropTypes.func.isRequired,\n}\n\nexport default TimelineUnits\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M4 1L1 5l3 4m3-8l3 4-3 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgDrag = function SvgDrag(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 10\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/drag.ff1ecd52.svg\";\nexport { SvgDrag as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport styles from './timeline-handler.module.css'\nimport { ReactComponent as IconDrag } from '../icons/drag.svg'\n\nconst Handler = (props) => (\n  <button\n    onMouseDown={props.onMouseDown}\n    onTouchStart={props.onMouseDown}\n    type=\"button\"\n    title=\"Drag to change the time range\"\n    className={classNames(styles.handler, {\n      [styles._immediate]: props.dragging === true,\n    })}\n    style={{ left: props.dragging === true ? props.mouseX : props.x }}\n  >\n    <IconDrag />\n  </button>\n)\n\nHandler.propTypes = {\n  onMouseDown: PropTypes.func.isRequired,\n  dragging: PropTypes.bool.isRequired,\n  x: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n}\n\nHandler.defaultProps = {\n  mouseX: 0,\n}\n\nexport default Handler\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport { scaleTime } from 'd3-scale'\nimport dayjs from 'dayjs'\nimport throttle from 'lodash/throttle'\nimport ImmediateContext from '../immediateContext'\nimport { animated, Spring } from 'react-spring/renderprops'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaMs,\n  isMoreThanADay,\n  stickToClosestUnit,\n} from '../utils'\nimport Bookmark from './bookmark'\nimport TimelineUnits from './timeline-units'\nimport Handler from './timeline-handler'\nimport styles from './timeline.module.css'\n\nconst DRAG_INNER = 'DRAG_INNER'\nconst DRAG_START = 'DRAG_START'\nconst DRAG_END = 'DRAG_END'\n\nclass Timeline extends Component {\n  static contextType = ImmediateContext\n  constructor() {\n    super()\n    this.state = {\n      innerStartPx: 0,\n      innerEndPx: 0,\n      innerWidth: 50,\n      outerWidth: 100,\n      outerHeight: 50,\n      dragging: null,\n    }\n    this.graphContainer = null\n    this.isMovingInside = false\n  }\n\n  componentDidMount() {\n    // wait for end of call stack to get rendered CSS\n    window.setTimeout(this.onWindowResize, 10)\n    window.addEventListener('resize', this.onWindowResize)\n    window.addEventListener('mousemove', this.onMouseMove)\n    window.addEventListener('touchmove', this.onMouseMove)\n    window.addEventListener('mouseup', this.onMouseUp)\n    window.addEventListener('touchend', this.onMouseUp)\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n    window.removeEventListener('mousemove', this.onMouseMove)\n    window.removeEventListener('touchmove', this.onMouseMove)\n    window.removeEventListener('mouseup', this.onMouseUp)\n    window.removeEventListener('touchend', this.onMouseUp)\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onWindowResize = () => {\n    if (this.graphContainer !== null) {\n      const graphStyle = window.getComputedStyle(this.graphContainer)\n      const outerX = parseFloat(this.graphContainer.getBoundingClientRect().left)\n      const outerWidth = parseFloat(graphStyle.width)\n      const outerHeight = parseFloat(graphStyle.height)\n      const innerStartPx = outerWidth * 0.15\n      const innerEndPx = outerWidth * 0.85\n      const innerWidth = outerWidth * 0.7\n      this.setState({\n        outerX,\n        innerStartPx,\n        innerEndPx,\n        innerWidth,\n        outerWidth,\n        outerHeight,\n      })\n    }\n  }\n\n  isHandlerZoomInValid(x) {\n    const { dragging, innerStartPx, innerEndPx } = this.state\n    const isZoomIn =\n      (dragging === DRAG_START && x > innerStartPx) || (dragging === DRAG_END && x < innerEndPx)\n\n    // check that start handler doesn't go after end handler or end handler before start handler\n    const isValid =\n      isZoomIn &&\n      ((dragging === DRAG_START && x < innerEndPx - 20) ||\n        (dragging === DRAG_END && x > innerStartPx + 20))\n    const clampedX =\n      dragging === DRAG_START ? Math.min(x, innerEndPx - 20) : Math.max(x, innerStartPx + 20)\n    return { isZoomIn, isValid, clampedX }\n  }\n\n  isHandlerZoomOutValid(x) {\n    const { dragging, innerStartPx, innerEndPx, outerWidth } = this.state\n    return (\n      (dragging === DRAG_START && x < innerStartPx && x > 0) ||\n      (dragging === DRAG_END && x > innerEndPx && x < outerWidth)\n    )\n  }\n\n  onEnterFrame = (timestamp) => {\n    if (this.frameTimestamp === undefined) {\n      this.frameTimestamp = timestamp\n    }\n    const progress = timestamp - this.frameTimestamp\n    this.frameTimestamp = timestamp\n\n    if (this.state.outerDrag === true) {\n      const { dragging, innerStartPx, innerEndPx, outerWidth, handlerMouseX } = this.state\n      const { start, end, absoluteStart, absoluteEnd, onChange } = this.props\n      // console.log(progress);\n      const deltaPxRatio =\n        dragging === DRAG_START\n          ? (innerStartPx - handlerMouseX) / innerStartPx\n          : (handlerMouseX - innerEndPx) / (outerWidth - innerEndPx)\n\n      const offsetMs =\n        (this.innerScale.invert(0.6).getTime() - this.innerScale.invert(0).getTime()) *\n        progress *\n        deltaPxRatio\n      let newStart = start\n      let newEnd = end\n\n      if (dragging === DRAG_START) {\n        newStart = new Date(getTime(start) - offsetMs).toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = new Date(getTime(end) + offsetMs).toISOString()\n      }\n\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart,\n        newEnd,\n        getDeltaMs(start, end),\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    }\n\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  onMouseDown = (event, dragging) => {\n    const { outerX } = this.state\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    this.lastX = clientX\n    const x = clientX - outerX\n    this.context.toggleImmediate(true)\n    this.setState({\n      dragging,\n      handlerMouseX: x,\n    })\n  }\n\n  throttledMouseMove = throttle((clientX, scale, isDay) => {\n    this.props.onMouseMove(clientX, scale, isDay)\n  }, 16)\n\n  onMouseMove = (event) => {\n    const { start, end, absoluteStart, absoluteEnd, onChange, onMouseLeave } = this.props\n    const { dragging, outerX, innerStartPx, innerEndPx } = this.state\n    const clientX = event.clientX || (event.changedTouches && event.changedTouches[0].clientX)\n    if (clientX === undefined) {\n      return\n    }\n    const x = clientX - outerX\n    const isMovingInside = this.node.contains(event.target) && x > innerStartPx && x < innerEndPx\n    if (isMovingInside) {\n      this.isMovingInside = true\n      const isDay = !isMoreThanADay(start, end)\n      this.throttledMouseMove(x, this.outerScale.invert, isDay)\n    } else if (this.isMovingInside === true) {\n      this.isMovingInside = false\n      onMouseLeave()\n    }\n    if (dragging === DRAG_INNER) {\n      const currentDeltaMs = getDeltaMs(start, end)\n      // Calculates x movement from last event since TouchEvent doesn't have the movementX property\n      const movementX = clientX - this.lastX\n      this.lastX = event.clientX || event.changedTouches[0].clientX\n      const newStart = this.innerScale.invert(-movementX)\n      const newEnd = new Date(newStart.getTime() + currentDeltaMs)\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart.toISOString(),\n        newEnd.toISOString(),\n        currentDeltaMs,\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped)\n    } else if (this.isHandlerZoomInValid(x).isValid === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: false,\n      })\n    } else if (this.isHandlerZoomOutValid(x) === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: true,\n      })\n    }\n  }\n\n  onMouseUp = (event) => {\n    const { start, end, onChange } = this.props\n    const { dragging, outerX, innerStartPx } = this.state\n\n    if (dragging === null) {\n      return\n    }\n\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    const x = clientX - outerX\n\n    const isHandlerZoomInValid = this.isHandlerZoomInValid(x)\n\n    this.context.toggleImmediate(false)\n    this.setState({\n      dragging: null,\n      handlerMouseX: null,\n      outerDrag: false,\n    })\n\n    let newStart = start\n    let newEnd = end\n\n    if (isHandlerZoomInValid.isZoomIn) {\n      if (dragging === DRAG_START) {\n        newStart = this.innerScale\n          .invert(isHandlerZoomInValid.clampedX - innerStartPx)\n          .toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = this.innerScale.invert(isHandlerZoomInValid.clampedX - innerStartPx).toISOString()\n      }\n    }\n    // on release, \"stick\" to day/hour\n    const stickUnit = isMoreThanADay(newStart, newEnd) ? 'day' : 'hour'\n    newStart = stickToClosestUnit(newStart, stickUnit)\n    newEnd = stickToClosestUnit(newEnd, stickUnit)\n\n    onChange(newStart, newEnd)\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      absoluteEnd,\n      bookmarkStart,\n      bookmarkEnd,\n      onChange,\n      onBookmarkChange,\n    } = this.props\n    const {\n      dragging,\n      handlerMouseX,\n      innerStartPx,\n      innerEndPx,\n      innerWidth,\n      outerX,\n      outerWidth,\n      outerHeight,\n    } = this.state\n    const { immediate } = this.context\n\n    this.innerScale = scaleTime()\n      .domain([new Date(start), new Date(end)])\n      .range([0, innerWidth])\n    const outerStart = this.innerScale.invert(-innerStartPx).toISOString()\n    const outerEnd = this.innerScale.invert(outerWidth - innerStartPx).toISOString()\n\n    this.outerScale = scaleTime()\n      .domain([new Date(outerStart), new Date(outerEnd)])\n      .range([0, this.state.outerWidth])\n\n    const lastUpdatePosition = this.outerScale(new Date(absoluteEnd))\n\n    return (\n      <div ref={(node) => (this.node = node)} className={styles.Timeline}>\n        {bookmarkStart !== undefined && bookmarkStart !== null && (\n          <Bookmark\n            scale={this.outerScale}\n            bookmarkStart={bookmarkStart}\n            bookmarkEnd={bookmarkEnd}\n            minX={-outerX}\n            maxX={outerWidth}\n            onDelete={() => {\n              onBookmarkChange(null, null)\n            }}\n            onSelect={() => {\n              onChange(bookmarkStart, bookmarkEnd)\n            }}\n          />\n        )}\n        <div\n          className={styles.graphContainer}\n          ref={(ref) => {\n            this.graphContainer = ref\n          }}\n        >\n          {/* // TODO separated drag area? */}\n          <div\n            className={styles.graph}\n            onMouseDown={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n            onTouchStart={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n          >\n            <TimelineUnits\n              {...this.props}\n              outerScale={this.outerScale}\n              outerStart={outerStart}\n              outerEnd={outerEnd}\n            />\n            {this.props.children &&\n              this.props.children({\n                outerScale: this.outerScale,\n                outerStart,\n                outerEnd,\n                outerWidth,\n                outerHeight,\n                graphHeight: outerHeight,\n                tooltipContainer: this.tooltipContainer,\n                ...this.props,\n              })}\n          </div>\n        </div>\n        <div\n          ref={(el) => {\n            this.tooltipContainer = el\n          }}\n        />\n        <div\n          className={cx(styles.veilLeft, styles.veil, {\n            [styles._immediate]: dragging === DRAG_START,\n          })}\n          style={{\n            width: dragging === DRAG_START ? handlerMouseX : innerStartPx,\n          }}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          dragging={this.state.dragging === DRAG_START}\n          x={innerStartPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          dragging={this.state.dragging === DRAG_END}\n          x={innerEndPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <div\n          className={cx(styles.veilRight, styles.veil, {\n            [styles._immediate]: dragging === DRAG_END,\n          })}\n          style={{\n            left: dragging === DRAG_END ? handlerMouseX : innerEndPx,\n            width: dragging === DRAG_END ? outerWidth - handlerMouseX : outerWidth - innerEndPx,\n          }}\n        />\n        {lastUpdatePosition <= outerWidth && (\n          <Spring native immediate={immediate} to={{ left: lastUpdatePosition }}>\n            {(style) => (\n              <animated.div className={styles.absoluteEnd} style={style}>\n                <div className={cx(styles.lastUpdate, styles.lastUpdateLabel)}>Last Update</div>\n                <div className={styles.lastUpdate}>{dayjs(absoluteEnd).format('MMMM D YYYY')}</div>\n              </animated.div>\n            )}\n          </Spring>\n        )}\n      </div>\n    )\n  }\n}\n\nTimeline.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onBookmarkChange: PropTypes.func,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n}\n\nTimeline.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  onBookmarkChange: () => {},\n  onMouseLeave: () => {},\n  onMouseMove: () => {},\n}\n\nexport default Timeline\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M6 12v-2l2.66 2.66L6 15.34v-2a5.14 5.14 0 0 1-3.77-1.57A5.14 5.14 0 0 1 .66 8c0-1.04.28-1.99.84-2.84l.97.96A3.8 3.8 0 0 0 2 8c0 1.1.4 2.05 1.17 2.83A3.85 3.85 0 0 0 6 12zm0-9.34c1.46 0 2.71.52 3.77 1.57A5.14 5.14 0 0 1 11.34 8c0 1.04-.28 1.99-.84 2.84l-.97-.96A3.8 3.8 0 0 0 10 8c0-1.1-.4-2.05-1.17-2.83A3.85 3.85 0 0 0 6 4v2L3.34 3.34 6 .66v2z\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgLoop = function SvgLoop(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 16\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/loop.238142cc.svg\";\nexport { SvgLoop as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M7 0v7L2 3.5 7 0zM1 0v7H0V0h1z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgBack = function SvgBack(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/back.92029460.svg\";\nexport { SvgBack as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M.5 1.79v12.42a.5.5 0 0 0 .762.426l10.092-6.21a.5.5 0 0 0 0-.852L1.262 1.364A.5.5 0 0 0 .5 1.79z\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgPlay = function SvgPlay(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 16,\n    viewBox: \"0 0 13 16\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/play.df4d1e51.svg\";\nexport { SvgPlay as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0h3.077v11H0V0zm6.923 0H10v11H6.923V0z\",\n  fill: \"#FFF\"\n});\n\nvar SvgPause = function SvgPause(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 11\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/pause.ef441981.svg\";\nexport { SvgPause as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0l5 3.5L0 7V0zm6 0h1v7H6V0z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgForward = function SvgForward(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/forward.a29c1440.svg\";\nexport { SvgForward as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport memoize from 'memoize-one'\nimport { scaleLinear } from 'd3-scale'\nimport { clampToAbsoluteBoundaries } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport { ReactComponent as IconLoop } from '../icons/loop.svg'\nimport { ReactComponent as IconBack } from '../icons/back.svg'\nimport { ReactComponent as IconPlay } from '../icons/play.svg'\nimport { ReactComponent as IconPause } from '../icons/pause.svg'\nimport { ReactComponent as IconForward } from '../icons/forward.svg'\nimport styles from './playback.module.css'\nimport uiStyles from '../timebar.module.css'\n\nconst BASE_STEP = 0.001\nconst SPEED_STEPS = [1, 2, 3, 5, 10]\nconst FAST_FORWARD_REWIND_MULTIPLICATOR = 100\n\nclass Playback extends Component {\n  static contextType = ImmediateContext\n  lastUpdateMs = null\n  constructor() {\n    super()\n    this.state = {\n      playing: false,\n      speedStep: 0,\n      loop: false,\n    }\n  }\n\n  getStep = memoize((start, end, speedStep) => {\n    const baseStepWithSpeed = BASE_STEP * SPEED_STEPS[speedStep]\n    const startMs = new Date(start).getTime()\n    const endMs = new Date(end).getTime()\n    const scale = scaleLinear()\n      .range([0, 1])\n      .domain([startMs, endMs])\n    const step = scale.invert(baseStepWithSpeed) - startMs\n    return step\n  })\n\n  update = (deltaMultiplicatorMs) => {\n    const { onTick, start, end, absoluteStart, absoluteEnd } = this.props\n    const { speedStep, loop } = this.state\n    const deltaMs = this.getStep(start, end, speedStep) * deltaMultiplicatorMs\n\n    const newStartMs = new Date(start).getTime() + deltaMs\n    const newEndMs = new Date(end).getTime() + deltaMs\n\n    const currentStartEndDeltaMs = newEndMs - newStartMs\n\n    const newStart = new Date(newStartMs).toISOString()\n    const newEnd = new Date(newEndMs).toISOString()\n\n    const { newStartClamped, newEndClamped, clamped } = clampToAbsoluteBoundaries(\n      newStart,\n      newEnd,\n      currentStartEndDeltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    onTick(newStartClamped, newEndClamped)\n\n    if (clamped === 'end') {\n      if (loop === true) {\n        // start again from absoluteStart\n        const newEnd = new Date(\n          new Date(absoluteStart).getTime() + currentStartEndDeltaMs\n        ).toISOString()\n        onTick(absoluteStart, newEnd)\n      } else {\n        this.togglePlay(false)\n      }\n    }\n    if (clamped !== 'end' || loop === true) {\n      return true\n    }\n  }\n\n  tick = (elapsedMs) => {\n    if (this.lastUpdateMs === null) {\n      this.lastUpdateMs = elapsedMs\n    }\n    // \"compare\" elapsed with theoretical 60 fps frame\n    const progressRatio = (elapsedMs - this.lastUpdateMs) / (1000 / 60)\n\n    const requireNextTick = this.update(progressRatio)\n\n    this.lastUpdateMs = elapsedMs\n\n    if (requireNextTick === true) {\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    }\n  }\n\n  togglePlay = (force) => {\n    const { playing } = this.state\n\n    const playingNext = force === undefined ? !playing : force\n\n    if (playingNext) {\n      this.context.toggleImmediate(true)\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    } else {\n      this.context.toggleImmediate(false)\n      this.lastUpdateMs = null\n      window.cancelAnimationFrame(this.requestAnimationFrame)\n    }\n\n    this.setState({\n      playing: playingNext,\n    })\n  }\n\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onPlayToggleClick = () => {\n    this.togglePlay()\n  }\n\n  toggleLoop = () => {\n    this.setState((prevState) => ({\n      loop: !prevState.loop,\n    }))\n  }\n\n  onForwardClick = () => {\n    this.update(FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onBackwardClick = () => {\n    this.update(-FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onSpeedClick = () => {\n    const { speedStep } = this.state\n    const nextStep = speedStep === SPEED_STEPS.length - 1 ? 0 : speedStep + 1\n    this.setState({ speedStep: nextStep })\n  }\n\n  render() {\n    const { playing, loop, speedStep } = this.state\n\n    return (\n      <div\n        className={cx(styles.playbackActions, {\n          [styles.playbackActionsActive]: playing,\n        })}\n      >\n        <button\n          type=\"button\"\n          title=\"Toggle animation looping\"\n          onClick={this.toggleLoop}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.loop, {\n            [styles.secondaryActive]: loop,\n          })}\n        >\n          <IconLoop />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move back\"\n          onClick={this.onBackwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.back)}\n        >\n          <IconBack />\n        </button>\n        <button\n          type=\"button\"\n          title={`${playing === true ? 'Pause' : 'Play'} animation`}\n          onClick={this.onPlayToggleClick}\n          className={cx(uiStyles.uiButton, styles.buttonBigger, styles.play)}\n        >\n          {playing === true ? <IconPause /> : <IconPlay />}\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move forward\"\n          onClick={this.onForwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.forward)}\n        >\n          <IconForward />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Change animation speed\"\n          onClick={this.onSpeedClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.speed)}\n        >\n          {SPEED_STEPS[speedStep]}x\n        </button>\n      </div>\n    )\n  }\n}\n\nPlayback.propTypes = {\n  onTick: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n}\n\nexport default Playback\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M1.06 5v8a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1V5h-13zm14-2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2V3c0-1.1.9-2 2-2v.5a1.5 1.5 0 0 0 3 0V1h5v.5a1.5 1.5 0 0 0 3 0V1a2 2 0 0 1 2 2zm-9 4v5l-3-2.5 3-2.5zm3 0v5l3-2.5-3-2.5zm-5.5-7a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 1 0v-1a.5.5 0 0 0-.5-.5zm8 0a.5.5 0 0 0-.5.5v1a.5.5 0 1 0 1 0v-1a.5.5 0 0 0-.5-.5z\"\n});\n\nvar SvgTimeRange = function SvgTimeRange(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 15\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/timeRange.cb0de496.svg\";\nexport { SvgTimeRange as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fill: \"none\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmark = function SvgBookmark(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmark.d1725b51.svg\";\nexport { SvgBookmark as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  width: 7,\n  height: 1,\n  rx: 0.5,\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgMinus = function SvgMinus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 3,\n    viewBox: \"0 0 9 3\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/minus.cd2a0a55.svg\";\nexport { SvgMinus as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, React.createElement(\"rect\", {\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}), React.createElement(\"rect\", {\n  transform: \"rotate(90 3.5 3.5)\",\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}));\n\nvar SvgPlus = function SvgPlus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 9,\n    viewBox: \"0 0 9 9\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/plus.16944dd2.svg\";\nexport { SvgPlus as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport dayjs from 'dayjs'\nimport ImmediateContext from './immediateContext'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaDays,\n  isMoreThanADay,\n  getHumanizedDates,\n} from './utils'\nimport './timebar-settings.module.css'\nimport styles from './timebar.module.css'\nimport TimeRangeSelector from './components/timerange-selector'\nimport Timeline from './components/timeline'\nimport Playback from './components/playback'\nimport { ReactComponent as IconTimeRange } from './icons/timeRange.svg'\nimport { ReactComponent as IconBookmark } from './icons/bookmark.svg'\nimport { ReactComponent as IconBookmarkFilled } from './icons/bookmarkFilled.svg'\nimport { ReactComponent as IconMinus } from './icons/minus.svg'\nimport { ReactComponent as IconPlus } from './icons/plus.svg'\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime)\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24\n\nclass Timebar extends Component {\n  constructor() {\n    super()\n    this.toggleImmediate = (immediate) => {\n      this.setState((state) => ({\n        immediate,\n      }))\n    }\n    this.interval = null\n    this.state = {\n      immediate: false,\n      showTimeRangeSelector: false,\n      absoluteEnd: null,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n\n    // TODO stick to day/hour here too\n    this.notifyChange(start, end)\n  }\n\n  static getDerivedStateFromProps(props) {\n    // let absolute end run through the end of the day\n    const absoluteEnd = dayjs(props.absoluteEnd)\n      .endOf('day')\n      .toISOString()\n    return {\n      absoluteEnd,\n    }\n  }\n\n  toggleTimeRangeSelector = () => {\n    this.setState((prevState) => ({\n      showTimeRangeSelector: !prevState.showTimeRangeSelector,\n    }))\n  }\n\n  setBookmark = () => {\n    const { start, end, onBookmarkChange } = this.props\n    onBookmarkChange !== null && onBookmarkChange(start, end)\n  }\n\n  onTimeRangeSelectorSubmit = (start, end) => {\n    this.notifyChange(start, end)\n    this.setState({\n      showTimeRangeSelector: false,\n    })\n  }\n\n  zoom = (zoom) => {\n    const { start, end, absoluteStart, absoluteEnd } = this.props\n    const delta = Math.round(getDeltaDays(start, end))\n\n    let steps\n    let nextDelta\n    let nextUnit = 'day'\n\n    if (zoom === 'in') {\n      steps = [365, 32, 30, 7, 1]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        if (delta > step) {\n          nextDelta = step\n          break\n        }\n      }\n      // sub-day situation\n      if (nextDelta === undefined) {\n        nextDelta = 23.9\n        nextUnit = 'hour'\n      }\n    } else if (zoom === 'out') {\n      steps = [1, 7, 30, 32, 365]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        // if (delta > step) {\n        if (delta < step) {\n          nextDelta = step\n          break\n        }\n      }\n\n      // more than 1 year situation\n      if (nextDelta === undefined) {\n        this.notifyChange(absoluteStart, absoluteEnd)\n        return\n      }\n    }\n\n    const unitOffsetMs = nextUnit === 'hour' ? ONE_DAY_MS / 24 : ONE_DAY_MS\n    const middleMs = getTime(start) + (getTime(end) - getTime(start)) / 2\n    const offsetMs = (nextDelta * unitOffsetMs) / 2\n    const newStartMs = middleMs - offsetMs\n    const mNewStart = dayjs(newStartMs).startOf(nextUnit)\n    const newEnd = mNewStart.add(nextDelta, nextUnit).toISOString()\n\n    const deltaMs = nextDelta * unitOffsetMs\n    const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n      mNewStart.toISOString(),\n      newEnd,\n      deltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    this.notifyChange(newStartClamped, newEndClamped)\n  }\n\n  notifyChange = (start, end) => {\n    const { onChange } = this.props\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(start, end)\n    onChange(start, end, humanizedStart, humanizedEnd)\n  }\n\n  onPlaybackTick = (newStart, newEnd) => {\n    this.notifyChange(newStart, newEnd)\n  }\n\n  render() {\n    const { start, end, absoluteStart, bookmarkStart, bookmarkEnd, enablePlayback } = this.props\n    const { immediate } = this.state\n\n    // state.absoluteEnd overrides the value set in props.absoluteEnd - see getDerivedStateFromProps\n    const { showTimeRangeSelector, absoluteEnd } = this.state\n\n    const canZoomIn = isMoreThanADay(start, end)\n    const deltaDays = getDeltaDays(start, end)\n    const absoluteDeltaDays = getDeltaDays(absoluteStart, absoluteEnd)\n    const canZoomOut = deltaDays <= absoluteDeltaDays - 1\n\n    const hasBookmark =\n      bookmarkStart !== undefined &&\n      bookmarkStart !== null &&\n      bookmarkEnd !== undefined &&\n      bookmarkEnd !== null\n    const bookmarkDisabled =\n      hasBookmark &&\n      getTime(bookmarkStart) === getTime(start) &&\n      getTime(bookmarkEnd) === getTime(end)\n\n    return (\n      <ImmediateContext.Provider value={{ immediate, toggleImmediate: this.toggleImmediate }}>\n        <div className={styles.Timebar}>\n          {enablePlayback && (\n            <Playback\n              start={start}\n              end={end}\n              absoluteStart={absoluteStart}\n              absoluteEnd={absoluteEnd}\n              onTick={this.onPlaybackTick}\n            />\n          )}\n\n          <div className={styles.timeActions}>\n            {showTimeRangeSelector && (\n              <TimeRangeSelector\n                {...this.props}\n                absoluteEnd={absoluteEnd}\n                onSubmit={this.onTimeRangeSelectorSubmit}\n                onDiscard={this.toggleTimeRangeSelector}\n              />\n            )}\n            <div className={styles.timeRangeContainer}>\n              <button\n                type=\"button\"\n                title=\"Select a time range\"\n                className={cx(styles.uiButton, styles.timeRange)}\n                onClick={this.toggleTimeRangeSelector}\n              >\n                <IconTimeRange />\n              </button>\n            </div>\n            <button\n              type=\"button\"\n              title=\"Bookmark current time range\"\n              className={cx(styles.uiButton, styles.bookmark)}\n              onClick={this.setBookmark}\n              disabled={bookmarkDisabled === true}\n            >\n              {hasBookmark ? <IconBookmarkFilled /> : <IconBookmark />}\n            </button>\n            <div className={styles.timeScale}>\n              <button\n                type=\"button\"\n                title=\"Zoom out\"\n                disabled={canZoomOut === false}\n                onClick={() => {\n                  this.zoom('out')\n                }}\n                className={cx(styles.uiButton, styles.out)}\n              >\n                <IconMinus />\n              </button>\n              <button\n                type=\"button\"\n                title=\"Zoom in\"\n                disabled={canZoomIn === false}\n                onClick={() => {\n                  this.zoom('in')\n                }}\n                className={cx(styles.uiButton, styles.in)}\n              >\n                <IconPlus />\n              </button>\n            </div>\n          </div>\n\n          <Timeline {...this.props} onChange={this.notifyChange} absoluteEnd={absoluteEnd} />\n        </div>\n      </ImmediateContext.Provider>\n    )\n  }\n}\n\nTimebar.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n  onBookmarkChange: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  enablePlayback: PropTypes.bool,\n}\n\nTimebar.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  enablePlayback: false,\n  onBookmarkChange: () => {},\n}\n\nexport default Timebar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { stack, stackOrderNone, stackOffsetSilhouette, area, curveStepAfter } from 'd3-shape'\nimport dayjs from 'dayjs'\nimport styles from './events.module.css'\n\nconst TOP_MARGIN = 5\nconst BOTTOM_MARGIN = 20\n\nclass Events extends Component {\n  getFinalEvents = memoize(\n    (events, showFishing) => {\n      let { labels, counts } = events.series\n\n      if (showFishing !== true) {\n        const fishingIndex = labels.indexOf('fishing')\n        labels = [...labels.slice(0, fishingIndex), ...labels.slice(fishingIndex + 1)]\n        counts = [...counts.slice(0, fishingIndex), ...counts.slice(fishingIndex + 1)]\n      }\n\n      const baseUnit = events.offset\n      const mStart = dayjs(events.start)\n      const mEnd = dayjs(events.end)\n      let mCurrentStart = mStart.clone()\n      const numUnits = mEnd.diff(mStart, baseUnit)\n\n      const allValues = []\n      let maxValue = 0\n\n      for (let dateIndex = 0; dateIndex < numUnits + 1; dateIndex += 1) {\n        let valuesAtDateSum = 0\n        const valuesAtDate = {\n          date: mCurrentStart.toDate(),\n        }\n        labels.forEach((key, keyIndex) => {\n          const value = counts[keyIndex][dateIndex]\n          valuesAtDate[key] = value\n          valuesAtDateSum += value\n        })\n\n        if (\n          labels.map((k) => valuesAtDate[k]).filter((v) => v === undefined).length === labels.length\n        ) {\n          console.warn('there are no values after this date, aborting rendering', valuesAtDate)\n          break\n        }\n\n        if (valuesAtDateSum > maxValue) {\n          maxValue = valuesAtDateSum\n        }\n\n        mCurrentStart = mCurrentStart.add(1, baseUnit)\n        allValues.push(valuesAtDate)\n      }\n\n      const allRatios = []\n      allValues.forEach((valuesAtDate) => {\n        const ratiosAtDate = { ...valuesAtDate }\n        labels.forEach((key) => {\n          ratiosAtDate[key] = valuesAtDate[key] / maxValue\n        })\n        allRatios.push(ratiosAtDate)\n      })\n      // need to pad with the last value to allow the curveStepAfter line generator to extend\n      allRatios.push({\n        ...allRatios[allRatios.length - 1],\n        date: mCurrentStart.toDate(),\n      })\n\n      const stackLayout = stack()\n        .keys(labels)\n        .order(stackOrderNone)\n        .offset(stackOffsetSilhouette)\n\n      return stackLayout(allRatios)\n    }\n    // TODO need custom equality comparator?\n    // (a: mixed, b: mixed) => boolean\n    // () => { return true; }\n  )\n\n  render() {\n    const { events, outerScale, outerWidth, graphHeight, showFishing } = this.props\n    // Calculate the latest derived data. If original events data hasn't changed\n    // since the last render, `memoize-one` will reuse the last return value.\n    // TODO this probably won't work correctly with Redux immutable state as nextProps.events !== props.events?\n    const finalEvents = this.getFinalEvents(events, showFishing)\n\n    const finalHeight = graphHeight - TOP_MARGIN - BOTTOM_MARGIN\n    const middle = TOP_MARGIN + finalHeight / 2\n\n    const areaGenerator = area()\n      .x((d) => outerScale(d.data.date))\n      .y0((d) => middle + finalHeight * d[0])\n      .y1((d) => middle + finalHeight * d[1])\n      .curve(curveStepAfter)\n    return (\n      <svg width={outerWidth} height={graphHeight} className={styles.Events}>\n        {finalEvents.map((eventsForKey, i) => (\n          <path\n            key={eventsForKey.key + i}\n            d={areaGenerator(eventsForKey)}\n            className={styles[eventsForKey.key]}\n          />\n        ))}\n      </svg>\n    )\n  }\n}\n\nEvents.propTypes = {\n  events: PropTypes.shape({\n    start: PropTypes.string,\n    end: PropTypes.string,\n    offset: PropTypes.string,\n    series: PropTypes.shape({\n      labels: PropTypes.arrayOf(PropTypes.string),\n      counts: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    }),\n  }).isRequired,\n  outerScale: PropTypes.func.isRequired,\n  outerWidth: PropTypes.number.isRequired,\n  graphHeight: PropTypes.number.isRequired,\n  showFishing: PropTypes.bool,\n}\n\nEvents.defaultProps = {\n  showFishing: false,\n}\n\nexport default Events\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport Timebar from './timebar'\nimport TimebarEvents from './charts/Events.js'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"timebar\"}}>{`Timebar`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"description\"}}>{`Description`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Visualize time-based data and allows users to filter it by a custom time range.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Currently used in:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/data-portal/blob/64aa2982d2159fbcf13ef58d25ea0ae3e01e0af9/src/timebar/TimebarWrapper.jsx#L2\"}}>{`Data portal`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"available-properties\"}}>{`Available properties`}</MDXTag>\n<PropsTable of={Timebar} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkqiUrGiJkjK8Eq1QyZnWTWWoXY2Hm_To5G67mScAIAlCKRSsDsIxeeHGNjsFU83iWM1g_m6mVsSPMtjgoRg62oqTxb3qiAAlGYjJIzBAiDNKAIpgAlGCuchTMBCIjsToSqXtADc_MFwrFioIABEAPIAWXYMsi8q6koIAFoTkQVWqhSKHJEhah9EbZfKcJJsK5BbBbagzOLzXr9TguhgMgAKdbMNhidYWRh4ADMYkc6pdNE46pF2XYuImPScwJJNQEiCkKfj5gs7EYMzEkYaUyiyRdedc6BYMWo8XYMyEd3GlFSMCmL3Y4cw_VQKXzMASnKkDYTdfTztdkmriekccUZhOvSI-hwaQIAFFYMeaAAhRINdCRzrCAjtbmoTnKhTKb2-mA4TQyB0ahaHoRAVBzKZLAFGAPFcI5jTldpPTgARyEkGJjzggQMJg7D_QFe0oLw-Dz1YfQ7EQj1JFQ9DMNg-DAT8EU4EkMiKIAuACMg9ggylN0TQVc12jtDV2GAdhNB8eQBKQgABGAiBEAZUEBYUYBEgNUF0VFjlOAAvZwCESbF2G4cT1iiARnlQK52gABnYZMZiwdp9xrGZOxYWc7IAFhc9gADYXLc9YwBAgAxH1oESOz-GcQ5EUdTB2AABSEfgliUn44E8xFQprcKaGcCB9MudgAEZfPc-RwW06hdIAQTmMz2EjCTyBsKB0HDdh5E5MyxDamMZHYVETJgbhgEPQzjOxeRt1rYBOugHrggAMnW8ZEnmShmhW7reu4Y75TAUJtJ7VB2nYAB-DZVvDSMBquA61tQWqaykGRq3fMxYTEzAwDCKApiewbhs-5qVxrCxgDB7ghuAVcLB0qYYHImg4H1U5dnMpGYdrCxUXggg7IAJnsqqLUp6mKssez7MQBmmfsnAGfsgAtArCcJuh0HJymAA4LQqsmLTJgB2enGeZhm2YZrn3J52s9rAOAxzs9BXESbnlbGjIIHgK58b12soFcQIoHudgAG12gRNo9AENzTtsGxZxd9oUlmT2iPaABdJXTaLc6CGtm3kb1iOCeDpzAqD2OLGTePI9NsnqtTvWKpTmPg-zhPE8FgvY7Jsni-Dsmi8z5XS_LtOc8T2tk7rvXkzL6uecCqvc9N3z7Jb5Xk37jvCbbgeed8jOe71gBWdvp-VmeG8byru5Xpyp_Xofx9H-et73lf0532syeXxvk03w_L_P6_E-3kfa0Cg_z7PxPT-PpO18P1-S5_vPb9_h_dg78H4WApkAseoC45AN8s_O-f805wNjpAhePMUFbwAcHdBK9kxf3Pngt-SCK4EJLkQ02osgFVUoZg8hNCs4IL1uAqBFVh6oMJhVEhxDqFAMrjA1h-8gFzx4XQweIieZHygRfYRECxGE1rlAkBbCT6cPIWQ-hPCGHKw4ZQtRWjZHKIgbo8RmjxEqKzvopOFjKpWKoQo_hh8jHsJMU4yhziT6OIMXYjRPD7GN0UQIqBM8rG4J8RAsxNcPFgN8YXVxsSoHhInkAhJ7DImVVSfnZhbiwE2OSbWChXiFGpPkUopOWT2B91CVA2BlDckWAySU4BZTeGSNqY0nhrT8kNI6dE2OrSOllPqevQZV9KkNKYWMsprSJENJYXEhp2C_GpKaT0vO_TuEKKscU9e0ztnpIGTYzZUyVlpxsfs0ZGDvGSL2eclewzFnrJmZsopmzjlZ1eVo9JBzpGSOCakhZd81kFLGU8y5Yz0nvJ5towpOjvmPIedsqZZT75jKmZstFlCIUuMyUkuZ2yXkQMxXk65kjlk8PSUUwlScimtP-bHKF8zUmtKaWchRRyalkvZdi5hXyoEDKmZ8jFnKZlsu5TcvxAymkUsFcwylwDZW2LGfKgZsr_G3I6fi5hRTqW4ocaCoZWqYWiqBUMmxxK4VcpmeS-FOCilIuZWKxOk8OWsudcCoV-rpVuuNTaw1YL3XfxkXqtVOrxW-qGQM8Frqhk0pVdq5hIqZkspmfKxl1rG6dKGfKlNOLNVpsTvS7ZKrUVhP9X42VEq82x1JbynNiba14sMRA6tXq_UkqbXwjtPzG0uq7T2-Z6LAmyolrKoJMDm3r18mUipLSYHBJpa06dirYXhoJYI1Jo7e0NOqW2jZy7D4jqRSO2VyLdlBvPiq2VGq61GqXbm6Fm6LkPpwceqdUrvXpoFe-mJd7r1dLPW_cdIyv0lxVacktwG86RpvdG-th9K3B1aVmoBfLS35uzTK5D8He6oZA3uvxOSo26p_evMpkyeFAMveRqpVHk1hpXguzD8TGN_prdRtjtGMPsfXvywj6b0PCqw3rMplHWMcYaWR4j9GaMrsk43TZnqSMUbo43dV0nbkgotQ2-NDrkEodk2h2D6bhNKagSq5j2zzMrysUyyzcnbNvxgSZ8T9nY5WIk2JxT-m6XKsc6JizTHTMueDlYmx8rAXmuc4FgLYzDP5tNQplePnOOWp03nJpfTlPfq3WpvxQXTYMeixOnLjqnNFYUcVkuFXg4iey359TsW6XpMRThvOYWEvpp5RFsrMXytcbg31xuU68uMNTYVoDXXEsNYQ1N_LgnlZ6YE5pn1u7AlNZa7NgbDmou1Z6x5-rdWjNzc7utvW8XkvcZm1nUbLHIt7fTd04bHzHuQpCyGgzm3GtHZSbxt-8qCMQY2yl7TB2SvnduUqr7eS3OQ7qdD3rd383Xe6xdkHlXUcV2e4TQ57XEepdNie8bWmGWrvvb-7ZC2YMrYm2Wknrabvrwh6TynCOS5gY-9NrzrWcd0tlRlgH5iTs1wHSi2nhbO3zKReuspG7xMHvaW9kuMafukJh0FVJi6J1LKZXL3lvzBHHs60TsXVOt4LqWZe6X6u_lFsy951XWzbkRsF2g8LW9QMK4rkh6D-35nHsZ771XM8R1LLc6RqxMuJ0hct2uwNVS_ftr7Y-unSfje3rT6e4HZPn0e5OfLpnhOcEhfXeW9XUfZ2x_T8t4n_Oa4JtTwEyvH6c_qJN5NzPGeJnN6e_nvjzvR6tJngukLw_y-t_u6rjNtyrVg_HzPt-hvg09_e43_NHSbNL9wwopLLaEV4bvm5mlcad-L4D1crvkLnnK655z_H6WY-J5955lnHOs-95v63Q_FejeHwXXa7t8y18r9yFVMa9xE2cV8ec88t0_lD08cs5mslt8M4DB4B91cDcx0YFL8qkmVzcgEJZYCd1q9oD_8J0lcz8qk_kDVQD2E51xcG8J1JdMCgDW53cx875L1NkkUpl18t1Y0SCf9-C5MQt519cgEABOYvcDLdIvZgweY9P5YJKxCWdXUjG3KpJQspCWVpZQ5DctbQygvfRXKQ-gqzBQ4wqzDTU_EXagk-YXGTTvB_Q7RAgDe3IfGBBdGlRgqpJpK9evfdQwrBAfVg4g7wgI3uTg5AtBf3ZnXfDfT3PvJuV9Jgp9QbHXBpCPANVbOgiw8Q8tTQ7QkdJle1Cg8wxuQfShBVfVclWVMQodP5PpctEvQRAfMg8TaXX_L_FeIPf9VzLw3gno1ZWQnmMQvpdJAtR3dJAnRuMQ01BowRKxWoyhEJblP7BYjpbolYyhDYxNAZcYj9DpSfaY0jW1BPRbcTGAvAqdcPPXQg2Ihw6w4_GnOI1RKA7_DrMI1uG4ogt3Uo9g0XAvJ4iAiuI_ewu4lPTI5_QHE1c_LFZPfwsbUNdvAE1fBIupM1GIqvdebYhg-Y345BGlCI54xhPo8nf4-5d_LROvKfV48HCfJNUEk_N43HLfQQ-fXQ3I5DddMw8gx45koHSExhL3enIjfkjvPwlTCfaIx_aUt_UUmU0HanN-Dw5IkI745EulBfCUufXpVEuVMkuLbnSDGEzxe4jE2UhkwEs0vk8U_NCtHk03UQ24qzT_e0qzdAlk5wjUjAuPdw23eI73ckuExEqwpkz7dQ04kw8-Lk30n07ApJGo1QvAtzK3AY_HQAlIx1YJP_D0_tfUr07UwYgMlEpEuzCkyFKkpAxwu-SQ3lRlVJLQvA9dFo5DVpRY3lHjV0wMzXIYuRTQy9dXBdfsiM7PTsg0mdcc6Q70yckoqBfAvApouM-JbHGc3MlcyPPE4OJeTkpJaXY4jk3XPA0Yx09I8PC3FUrEqdUjZVXnULUjAfLg4cys_owdTop8kjZU2M9I49JlcPGsiXbIsopZRlKdZs0IxcgA5o5DWgwJYQj42vOCtBKdKUqM1klXJ0so8PPs7c8Cn4mC0fIE3uUvAC-BY80M4LEPXEz8sUzEiEyMx1aM-JIdX8vMzcs3V8xOHQ3lMPFsxs3ig85hZYx5A5fZJVCNAZKRZhPY_NKYwuddZMqC-cnirI0cowvC2sxS2cvpA_Si3k1zb84iwBNcnBbMrdBA2XBS3lS9DowJbQvpJlAfGQriqch0_i58iC9C6s_CzNA5YSjFctYJYI9c9s88-jeSmygyiucA6it8kch46KgFY02HSIuRKKxkx3THPJV3dU_0uKkUui2ODIxuTihpMQ_I5DZVBi3K4Mi0kinMsil4kswhXUu5MctU806kz0l_aEss9hEA1c_qrEpQ_ypS9I-ox8lwlSrBNbDy5BTU1q3Cgiz4w8li8hQDJvOqjqoM37VCnK0k-JO8ka98wRXc1M07a4nSidNIsE0wkKsol9CK02coyawi3UjXQvDc3uJFazXnYCyC1y9eBs_6qzEC-_EMt0iyrpbXUim6icreNav4oym-ca1ndi3oi6ro-PNS6crpSZBYsq8Kgmty0gj6oTJipJUPUG7s8M562eSq4mxGxOQKI9GM8Tay8ypy4KqBCQ8Q5Vb6jFULPmzmr8jS9Iq8465GiuEk2Km0vS5y4yrymi89Gkl-BWwCy41G4LEdcPAo9kzSiGoK0y26ia0a7C843W9yrdPcsCgagQmarhIkxeJCv6m2oQ8WrGkjTQps9GuTK6nBF01U66n26Gy0-EtqhKjapGiO2qgOro5iwJO_Gw7JCW3uLW9W92nI2Gro6XQlQOB-aOBnUrFeWVYuwuxuEu7bAuiuou0uxOcuhpOuyu-umu2OBu6uqusu5u6rTu02Vuju9u2u7uvWXuge_uluwe5WYese0eru6enu8enmSemepu2eoe-ewmReueleiete2sDe1ereheneiwPe7eg-9eo-9gE-w-s-3ei-q-8-m-4-u-5-x-y-l-5ej-xur-tuz-n-7-vu3-gB_-kewBkB4Bqe0BiB8Bpe6BzeyBmBv-xBoBpBsBlBqBtBhB5BrB1B7B9B3BzBnBwhvBohgh4hsh0hihuB2B_e-BqhjBuh_Bhhkhph8hlhyhmh6h0-2hjh-hnhxhvh5hgR1hoR9hrhzh6-7hsR3hqR_hmRwRuR4RhR0RiR8Rh-yRlR6RjR2RrR-RnRxRvR5RtR1R2-1---kx9RoxzRyx7R6x3R2x_R-xwx8x4xp-0x9-lxt-txrxix5xqx3xmx_xuxwJhx4Jpx1xnx8JjxsxyJvxmJgJuJoJhJkJpJsJzxiJtJqJ9x2JjJ7J6JnJ-J_JxJwp5J4p1JvJ8prJgpip7xzJmp3Jypop6p9Jpp2p5phpkplp-pupqp9psp3pthgZkRwZpR4Zgx0Zxx8Z0JyZlJ6Z0p2Zzpnp7pxp_poZ1ZkZtZsZjZiZrZqZnZmZvZuZg5hZ5ZpZjplZ9Zi5zZy57Z653Z25_Z-5w5x545s505vpt5-Z85q575m5n5u5v5h5gFp5oFl595tpj5o5r5356F_5mFwFuF4FhF0Fz5iF55qF2FjF-FzFxF7F5FyF1FkF9FrF4lnFklvFtFglpFol0lml8lwlyl3F6lulqlhlslpl9l1l2ljl8Fnl1pvlrp3lgV_lxZwVkV4Vk50ViV8V15yVmV6VsF-VlF2VhVoV1VsVtVqVjVuVrVlV9VvVzV_V7Vw13Vg101o1s1k181q1y1m1pVxV_F5Vu1nVp141l1i1t161j121h1-1ilx1n151gN11oN91kNz1sN71v131-l_1qNwNuN4NhN0NpN8NlNyNmN6Nll2NjN-NnNxNvN5Ngt1Not9NrNzNxlzl5lit7Nst3N2t_N-twtxt4t5t0t6t8ttlyt7ljtrlrtvtmt9tutwdht4dpt0dlt8dttztgd6dntqt2dodhdkdpdsdldidtdqd3tmdrdud7txdnd_d-dg95d491d099d89zdo969vdk9m9_t3dh9w929s9-97dt9x999l9i9j959p9u979q9wDr1kDiN0DtN8DktyD1t6Dyd2Djd-Dy9xD39gD_9194DsDzDiDrDqDnDmDvDuDgjhDojpDkjlD9DtDn9jD7Dmj3D2j_D-jwjxj4j5j0j1j8jqjyjoDrj5D6juj_jhjgTpjoTljkTtjsTjj7jr9njsjvjwT-T4ThT0TpT8TlTyT3jmT9juTxTnT5T3T1T_T9T2TzTiT7TvT8zgzizozrTkztTszyzhz6z0z2zwz-zpzuzlzqztz7zzzxznz6TgLz9oLv9wLkL4L1D0LiL8LijyLmL6Lzj2LhL-LqT5LjTxLlLsLzLqLrLuLnLpLvLjL7Lor3L4r_L0rwrkryrsrqrir6rur2rhrtL1L4z9Lprgrtr8rjrmrrr-rnrxr8xSo25C-ZMJYwWGeahCWCqahJ1blCWCWJYsmKblY8bgSwWEb1b9VVVDrJ6mZGeQb9NIPGxOeeb5hPbk73bsQsQrYiqdbx5QWAZIPFNXyc7k1ZMFb3b576hEYpYwGx5eyF79TXyW7oZXBJbv7sHkHmeAHjrfbtDMQ4H8HeyazGeK7rmiWVHkqiWBHvjQS9eEY97zNFHiowq6S-yfZNbrY-yDHk1QWdJY7rYsQiHx3Fq7zf7rYwWJng7oH6hQKan9TGebHuLCqPn9NZMbmlYwXulAXyXtLRb1xMmAnx3AX1xHb8NBX1xNnzJLb20iSxNZMaH_NKHmX8hIJfZYqk1LHynznw3yWdnpVW35hdH63ulQWGYyheH43wUm7slc3w-fX1FdXhRUHnhNuKZYbslCnwpb75hEYkX1fJ-GpPbyhCWLc-NCqZ3vOfHslb3wpbdMZZMFniufXlVIeRXvxAv_lbnoP-yAPsvt-XBOvkuAXzZFHg3pv4dDRHZQ-QfNvyWoRLfAvnhYdOP3-QfrfEn3-DnjRCWFvyb4RMf4FWH1nSP4FGb_P33_DWnkPubslB3sZCqbEw-FhTZA_-VS7kfiuKqRv4Etf3ZQWMPrfhRIPKZFHjPtOOeJpHvjRHPsZL_rfWZf_tf3f73ceEg-N_owih6cEpKTfQKJ_0f4TJce38S7tP3SwzwgBjCDnkUkm4X964IAp_mgJD7NIwUyvBRBwhwGClYBPiQKOgJrgH9lkc5UgQQNIEMD9-MlEDL5A6S1FPelJDvvGjz5DJ0eHSbAa4l-5q9yBWiJ-NwJexT9uUk6DXuAK0St92e_SZMFIPYSD51igseVHPD-xQ8JuNAl7CQMeQAC_u4gyFG9wMHsJk4ZgmgqVVcTQC0s9_ZPiwOjQMwakP_aNG7xj4787EvkGwSfHshkx_BUSJmj4ngHbID-_KGvmSiYH59tepCXyJYJPgVQN-b8U_j7xP4J87ERAoZCMT5Rjdk-dg-NEEJqT8C1UgUBQeWV4EzIJCRyBwWnHshsC84WPNQXkhT45JAhNSQKDkmbjxpuhNSAoTHxKHxoXBtyWoukgkLBDKo8PCYf3xqHxDM-lMGpOMmjRE9HegUVoXUjm699VqRQxNAfw14Pcshu3LuFsWOFDI0BUw7OOny2KfdTuK_cNHINO5GCTUTw3bofwO79DTujPLYj4Iu6bDKog-Onvr2T6a8ZkyhFQZUPYRY8JUXg8EWTABEpCwR4aLQcnw8G3JlCdPP4RcJkG7dEBB3fEYbw2EM8rhAvPZG4MySF9aEVfcEUj1cRi9k-lAx3mIR2HwEU-ywpIXUnu5Qi8ktRHJE4Jj4L9chcI4UayJrgMwjkdwxVL0JqFCi1ULI0oWKPLIT9VkuI6NG8PDQfDbSe_C4ecNuRkitiMoi4an124O5PhpyEURiIFE1C9BdiMnjwmF4l8l-RfaIbn3yE8iuRoQ-NHSNIFyi_E2cJUXInsiq8j-Kwo_iqOALEj40gw4VD8Jj5ai6UXA5wUINtGJpUhUvBUadwqH2D0kk3D0ZVHR5hZYhuQsofdmtHRpsRYwrvmWiaF9c6xLXZrjZ1a4Nj2uBHXOkonzqtimxjY5zs2O7FdjexPYjzn2MHEDjhxQ41zr53c6TiRx44scTOInFecpx_nRcX52XHrjZxC4-cUuM3E7jVx04vcduLXG7jjx-4lcUeIPGniLx54zri2NvH9j7xo4x8XOOfFbjXxh498VeM_GXifxN47rneP_EPjAJT44CS-NAlvjwJH4yCV-Ogm_iNxZ4-CdeMQnfi_xvXACWhKAkYSQJWEsCThIgl4SoJBEmCURLgknjSJCEsiahP66YTqJ2E2ibhPon4TGJhE5icRNYnkSkJlE5CbBKon1iaJfEuiQJIYlCSmJIkliWJLYkSSOJKE7iSRN4noT2J8k_iQpKklKTBJKkjScpK0nqTtJwkzSTpIMl6TdJok_SUZMMkmTjJ4k0yRZPMlWTLJkk6yXZNskOT7J0knibJMUkeTVJXkxyS5OcluS5JPk1yWpLMmhSbJYUpyRFL8lRSApnkrifFIomJTOJSUmSQlOSnpTUpKU9yWlMykZTspWUwKTlPyl5TCpBUuKWVO8lFTSpJU8qTVMqkVTfJsU-qXVMakhTwp7UyKR1OildSmprUoKf5LamdShp3U4ab1OCn9SYpg0kadNLGkDSJpPUqabNMmnzTRpi0taStJmnrSqptU3KbtOKl7TqpB0naftJOmHTTpx0s6ZdIunXTmpR026edPulXTHpN0vqdtOenvTXpDU8aW9M-ktTvpX0uaT9P-l_TAZAM5aUDNBkgzwZYMhaRtKWmwyIZ0MqGQjJhmrS4ZW01GZtPRnYzEZKM5GWjNxkEzMZ8MomfjKxmEzyZxMjGWTJJmUyaZ1Mu6b9MZnAzmZkM1mUjPZl4zOZpM7mXTN5m0yBZDMh6UzOFkszRZbMs9maPr49km4BJGWXUimFSy0KNQlaoKT9LkJAx7id3s1UVlFIARwwsZJrLARUEqqxZcEQhXYRXCW-hpDWerOJIh9k-2stgk3yH6OyFERs4BPrJVScinIJfV2U_2Vp3x8xuvfKhXA9mqDA5yCPWQ6MjnAkIE-s_MXL3iQ-zHRFRKYX6LvgeyQxovH2b5HzF5y5a58cOT7J1E4J05-Y9PvnJLnhyR0WcpZNLh9m0osE-cgEW9XwQwJg56cplI3KmEajEsucqYeyN5QtyHqescXukR9l6i5M-YoeWbUCQzz9ZpYx1FOnzFJ8Xy6dMolnPznR5raWJfMVGK3QAiIxH-QRD7MrFyYj5rc1sqnWHmCIARtY2eACPR7u9tahcxmiFizmYUjaVaIcjhRwRZzW5q8n2XMMuowJ756ckuffJLnFpSBECTufLKcj6zWi9VVuF7NOrwUFEisxOSXOPThz75TSROSIUkRQKYEjc--QuirlgK35umUeTXEVm9zAFECD2UvOQTpze5fyRueHOCTALyFECCBfHJJqLwPZqI3eRjWDqOpL0uc1-bfMCS9zYKVFKzD3MEVoIv51Nf8jTWVh-DlFWOVeZekoWiLp5384LOHmYXhzukucrOVvKoWBJ8FpCwRL3Mnk61AkzCqYSaNAXKUTakiOuYIlXnFy3a6RXuaRlbnMKp0ucy8qrWXnWKt0ucv5FnLPKSJc5uc--Y5UPl2KFFqRPhf4oBoryjFj1JFEkogQDzaFpibigYsRzdyYE7ClmiRndLzJg5fiyRPnOPT0KNapsUQTgngVeKhZT0kWT0rFl9LzJ7YxuJ2P5ndKXp_S8ZRLIGUczxZMy6ZVzNmULL5lPMxZSsuWV8zVlGy9ZYLJxlUzdl9M_ZaMsOWbKdlFM05XsrOVjKPpEy65VMsmVzL7lSyx5WsueVbLXl5yg5ZcuOXbKrlvS95b8puV_LblDy4FU8tBUvLwVbyyFR8qOVfK4VFyhFZ8sRWwrkVJygFXcuhXoqQVQKnFYCrxUYrcVBK_FdiuJVgrCVJKolZSopXUqyVpKiFeStpVUrGVNK-lXSqhUMrWVTKzlSyvZVsqYVaK75f8sFWYrhVHK3lVyvFU8r-VPy0VXyqxXMqFV3KxVZKuVXSqhV8KpFZqpRVaqBVGq7Vfqt1WoqZVeqw1TquNVGr1VFqkVSavNVmrLVdq61VarFVqrHVDq51fKqVWeqVVXql1e6tlUSrfVcq_1VKo9Xeqw1gagNaGojUhrg1qqqNfGtjU-qE1Nq-1QattVprU1pqjNa6uzV-qU1OarNYWvTVFrM1xastaWorUFry1VaytXmqdVBr81dat1Q2vrWRrE14a5Na2pjWNqW1zattT2v7Vdq417a6NcOoHXdqh1SakdZ2r7UTrZ1Y6ydR2unXLrx1C6-dVOtXUbrF1o6rdeuqXWbr9126mdbmt7UnrB1e6ndYeovXHqS1Nau9U2rPVzrH1a659butfUOdqBGKVJG2WTRZpryOieVEaJXiWjpiKcmkUMkOJw8MUrZD2cgOTlJIPZ6fH6jzXEJnzTUVsp7jomEUpychU-cFDhorkpCMUwirNEOgjSEaphgsRDUsK5r1l8xP67jAvLTpdJ654hGefmLVHg4K5FIrpD7PLHg4cNiIkwZmnlTojpiM83Yh0gNn6pERuG9NJBsazgoDipqQDRGiE3Kp_1AlFOSBp14YoHukxFOV8JqGIbLes3dnjokI01FZNsmqTSnKI3coK5IIySjZuoSTFERVPahIiIfkfIbEwvYjZTwqIpovNYGxDXgOFQVzBYR3I7g9yuHVjEchGiudJqG6IaFh1Iw0WnJ0SnIvNgG01BGmU0VFv11G0Te5tCxXD6hWcVMeGi9kRafCF6RWY0IdE2JqhAgxEQmLSyki6eKc5-b6JqShajuHSCOVzSwqzlCiqsiQU7PEz5yPZRmgGlmik3KoU5HmrmgsQ9mzy8elG_eTPJ9nw8kkT8movWUo2kakkfSAEdH0ho7l9yyaPGuIQOKIiWFecJzY8lk0pyQFtyZ0aogOKWa8CiG8rVontGSUDkomnDeJVk3KohBiIpkTMiA0fos0sW2TYhsJF0oFNrWbpGvnt4_d_NAlOHRUWo3iVitl2zNJ9qWJHbNUsWtTdQik3UbKdrm8QlcOh3SVEtXmgbQjoR1071iFcmbY7iEGkirZKckOeph-1jFxKBxPnbsQR3aD0dMqLzdZpx0Yo7NKWgbXzs-QSoHuoWxDZVvUyIjRhB3CLa1psT066U3m8wRXLa0m9fK7OfHIIgvr3yrdFu1uBAgvqNzfM6TYJNS1d2csrENWDxqRlt0HrL1_um9XhKGXBxg9ysJQJHA-jKwugBAPoOYGjDTxGA0ELCPBA7jEwRQU0doBTBSEiwxYlMaWCzBZjyxOY7QSPcHD5hTQXQYwbUFkCeg4AIgDQZwLqCMgzgUgT0UvabAthwBKAUAcIDACMgkwM9WeiWDntpj57ZYrMdmFzHb16xO93e3veeAwAV6YAVemvZyDr2UAG9TetEAUDb0dwvAlAbYFZG2D9709wAVAKEASDT7lY--w_fBG2AL6eAZ-i_VACv08xqA9gPwLOEmjTRwYOkbvf-CgCUBW96ATkK_sJjUAbwwgW_QIG2Af73AaQKaDkARhFhUAXe2ADgEAPAHQDHcR4DCFQAWxYAqUc2IkDgg7BM4i0U2MAAHCUAhwyB-PY3ET0kQBA7ETGOJBwDsHqDdwGSOjAohTQeDmMbGDsBkhwBhgIwCKG7AKBTQgYVsGADJC3AdxsDCeyQEnoYgCAKDtYd8ITHkCl6pAUMH6GYG_AgBaIuEZPThHojYROIQEXQKBAMDgRCIYkPiAQCWASR1w1AV0DJCohCQlQokB0OlBoOWAdo8AWSPKE4MWhjI8wLiD4amDkAfAnh8gObDgBwB8Dx4SI6gHsMOgtYiQTQMEfaCZHNAmkdI1MAaBEBjwLALII4D0BYBpQ7oZCJIAFClGIA5RkCNgFfBRGLINYM8CoaDjxGfQMwSwJQEageA0DveyA-dC1jwg4AQcM8NqAXAEBXA1exIJMfWC2BsYXQawO4EagLGpjY4AABKhAogaRsqOgGr20Alj70HI56HCDQBUjhR6iOYfggWh1YNwAoHABwBKR0AF-_8GcBuM8RxopkTw56HuMCA3jTgT4x8ESMFGeIKh0UPAb70LgtgEQBCDUc9CfANwmMEwxkFhOPH4TUoYUJCaIhWAYIUANAN0ABNqQMwFEDE8SZdD4mxIRB7WKQd2BknUTbh9E-SAZOShtgtJh0BJEcOuHMwUwfwI0F0DQnYTfUC43UZ0gYmYTX-nAHAFYApBuTUwXk1qH5OughTDQXQJAYP1H7xTZJ2IA1EkA36j9cphU0qfEi8RVTToVk4KbsCamIDUBo_eIYSB5gPDyJyU4aeNN37nTsAdAKacVNtGVT5oNU1mA1O6B9QaAPIHqfdMGnUDkgIgJGdePymAzaRniEGalAhnbTwp6gEQajNunBInoWM6xHJB5B_T5proObBiDkQVDORvI8WZ702RJAFZ6IGwBgAqHNIdZnAC0b5iRhmzVZtszBF-j1RUDUwXUAADlzwAAfW1CNQAAmpOf1DOBWoLCBmOwCMBBRHI65pmmueAS-Q6oPRxI4SdMMwgqjfMOwJmfaMowGoaIUILiYEBgwTYtYBkHCCeirgJgtgdfZiFgDFGGjWQVqJGHqPZBGjtAAaMgcfOEx3zSZscP3toCRhIwxMEC-DHaiZxALZR2gOXH6iaHaw0-yCzgDQC0ABArAPsOZHP0JA3zhIOU3MdoCtRwLtYVC8BfKjSH1Y5cEQ6MFFNf7nAOJxE1cCYswBy4s-nvbQAf1XBSLUAAuKXo-jrAWTAp7UFwGxihwHzq4VGBabT1OG8DOQGSOZFwucG4AdUQmLgcsC6g9QY0GIDsGHDHBtYkgYYH0F8AXBhwlAcix-Z-AxAwAiQOA1_vgtzGRQSwPmFhcks1gELsQUcDqANjkR0AMFmABFFlB-G7gkYHSwNFou4HYAgpoY3Puot8xJw50AkEIAxD4gJg3QDK3tAJDdBMjSl68yEFSuCWYAD-1qHWbiuDhXjAl-fRgCwuEwuzGAXUGACfCZG3wkcdfZvub077Wrk4McLHsvM8wmrQljAOJfWD-WLAEQL8wOePAym0gnF2AHef_OgXEYjlqCwQAitwWBw6MCK1tbai0WiYoh9i6ta4vCgrgAAQkOusAIrcpi6zBBWtwn1riJ8S5yD8t6X9YBAbU9AdxhtQTrtF5SxJFUs-XprewVAADaP3uW0g4prSxRZ0urgHTOpu_fDe6C3WTool9gJtGhuw2Mbn-tIJ5ZJiQ2QDs1369QEuvvWETwoZwG8ATNTBzIpN7y-pZBs7WcAzliAK5cxus21Lvlzm08f2tnWxoL15a7CbWt03ywRoeIMxdXD9RKbWkCwPpGEBygWbqtyIBzYJhg2TLZN9S0sEmt96vLalo2zVc0sEgPzKNnW-VcwAgxXArUfUNEDwBhhHYj4aY7MfmPaw4A_N8m99d-sWBkrJlmAHcFXBB2XQVRmY_bbDtjh2AEdggAAFU0jzN-UD1YDucBmgkYTW-rZOjtA0Ab4ca4TFRAh27A5kG2MnHG5OQy4vspYPN0qj-xI44UI4JGCDul3L6yoMaHWGDt3AMDdAFIBMA7t2AAA1OZAqgJXM4yl4uzMFahT24ANsOAA3eng822odtuY-wCGhT3x7qCeO1HbXvmQp7e-s0NsEziv7X9uBhkB4CtDawxoLwUIC2eoCRxl7kYHe57bMgnQxjMASAC6BAOF2eYL9-261ARE4AxCmceO0nYnDmR2g1l52BHoVswgZDGdtqNnbfuQP9gBd0W7Pdag2wpu7AOu9vCrtLAK7i95WE3bait3Wo9kQe13dnu93ZwA9zuyPcqhb3TYk92gNPf3tsO57C9zOLgafur2HbG9th8w71h8PX7jAbu8I9Nj_2973dw-xKGPvTxT76diwLgaUhdACQ7gSqC0AlBHB8gMe--8rZ5hP3pHDt46OZA_tf3sgkjnmLhe5u83ibMASMEbZP2m3KrzVim9PGj2x7YHBMOa7WGUvnQXgnVtWGOH1Bt2wHydlB_KGgfXQ7o45qczOfnOLn2AkgXc-wCuDxPpzc5hc84DKsjn2ACZrsLADCetROjMEfmwNCHttQynx4SML5fYAWhgrKhipwNFSdkw8nukVWE8ZKcs2THO5wJwQGCfdO4ArT4BB06mCV6XHPTgp1wHQDFO7AjTrp6E90s238nRAMc8vpce1XtYmgZ-5s5NthO19qlzq3s6qPgOCAw15S5XpqvmR1n-zkmDgC8inOQr9tpYBE5eBr769jewa7OFfOGOrz-T_h9M76frmBnQz5Z-M4tOTOTb9gc2IKGyBvPl9D-2F70ddOtQejgofo4MeGO0BRjGAeCIbB9uRw7nIwFx_1e-fb7fnnIcuNc-muRwgXZx5WM45Nv8W3HU19AKuCHMQWKLdjtyw472ekuYXcL-YIsDjtIuMAKL-Fx44sB-PeXmN_8xDfZvgxQb5ViSO_oceI3Lbrx624TF1t4B9j7gUqNkBcdLB9XBxo1-gHNulPdjBrw49kBOPwBfb7N1G6gD5uKu-Ypr21xa5Ne-AvXRxh_T9cMc5niDjJ6CGZd6f3O2btLn-2Bc5tyv-X0L_W9G8DfrApwUYax7rfddQ3mX-tr0zAZ9d5v79UNugAQZgD0mSDnJzV9pYauQuJI9Fv8xbdwsIWmQ_zlJ6k-bePO2X1VjAHsHIgCB-g5QYq-wCIs97ugTxzgOYB0uducX3bnII0_VjdAPb_QMKxFaiuRAYrKz3V6q7FtsXXrkt66wIENtdurXSNj882_TvKW4gqADmGrYaDmBzIKx9SOsdQCbHtYTrwW6s90j8OFjbdj2_bZ_fvuWrkLo27va9uLHrXLzuYwB5zds2zbQHz99EfcA3vIguocILVc9s_u6w5kEDxh-9sNPKoF78q34DgCE2YDZkSOIW62fY3zHEYSxzkE2gUfHTd-qjzjef1431ojH9GzAZqvUfcgtHkk_R44-5xC3PH1j2RYQ_sBC3slioB4F9Pkfc4xH0j7sAY-5wanjjyjybdAsnQ1PFT9j5HB08ieWrUTnTx-9XBeOBAceyOIwB_NAWmjlRggDgD8N_Bpww7-IIyCmh1uSjtn9C8OEWs2e0L5UXCwtaxAwB_PDFvqAtEzixgOAB5uAGOZ9Df6_j8AHACoewiRfUEwAEt7J7LchvK3-N-g4nEYDlvGTUCVS1NFUtgG9Y5ezLxgEq9Muu3LjqaDB4IB1eJrx7xfcADg_oBWv4B1AGG-2BTRcLwbjkzsH689eUn6h5WIoY7jReegCRuLwl_K9zRkv9ERqFKBUhwB0vjcYAKxZGA02pbG1_L1AkYMS2OLB7qBLDHYN17kbDV8b4TC69Nf2v3Xi79DYZseAmbg3ii9Tb3dnePr9Nxmy8Du8qxUA0nuIAIEf1BegDIX_bwe6B_yGlEihhg6NFi_xfjwS3iaK8fohvWKjcxkkwIC28rxGAHgcIBEFbeNxwjk0fgMT5uAP2QAL3mIAQFgB8AQAB3wU-MBgiThYT_AF7yj8W_LQsAnljHzgFCAQAbwJP6gEsCS-Y-fvaQRH-vGhuwvYgA34AJD8Wsw-_v-PqBJN8K_2m-vMv7oPD_XhSBqfpP7X8rC-hxgH4RP8X2T-DgU_mfJv2n1AgZ9M_-ASnnoH0HDBTB6InPr_dz4aS8-0f_PwX9iGF-i-bfkv5b68cLdy_G47-4kzsE-9nuxwSnoHywBk--mpoUn2wKW6QMnQbzshh-Gb71jABFPTHsj3dGs9any_2wH03mC3DpO6wuv931uHG_G-bfxfwmLN8D-Jeo_demCM4DiCwACfDBx37b9jj2-qfNv_3_L_Z-M_KfIAZD3KH2Az_5f6f3P1NCvdL_UPzNk6LxaB8WB4_SvqaPDG2sNJuXH57O0-DQfDXG42hnn_N9R_f6YjIf5LyL7F80_UAkfoX_sFj-JxO_esFX7UAEZufp2AhvoT5GmHfsd5j-9PoEYO-0_nT7n-c_q76L-athO6r-68Ov7Zej-lv63u97nv5y2hfkgFH-ifnDDa2s_vNYUWV_nnZXQt_onD3-SAT36b-AvlL5h-H_qT7f-ofmgB_-scAAHm-uvrmZgBfAbWDt-n_sIEW-sgDN67gkgeP4iBKhtSbdAwAFd7VuNBpt4K-Djkn6vG8brCYyQD3p15PechsX4SB2vlIBhednrQBVGjnkIDOeGQOoaBu_lql7wQOAJwYBGERjRbrAqllcAxWrgcl6ogLenhZwA4oAACOIvl0CLA6wHzBeBg4D4FJmlLikABBwQaEEIu6wBp4kwUQf4aBGsQS3pBwhnvzBpQ0QZkGUW2QcyAw2NfpjbpBfRoUFnQ2kEHDqusJhUExBOANUHkACQTAAhBEAGEFBwzXg0GFBfgQUCtB7QZ0HrAXXj0ERGRQf0G2AiQR0HJBNYFl6EGuXjsCjByXvvpiWZgA4FMGOAIDDAwBABu7uBNYKkEigIls_o5BNfsJZx2xwREH4G2XsV6cmPFoQG1BpQVx6wGDjlcCn-4kOHrvQdUP9AZGn9tsFHmqhgYZKARhmhAYm2EExAkwrECwZhwlhtoDWG-gAwC3Gjhs4aOgFJlmD5mSEGaDeGqZgSbeBmQTkahGFPj8YEmx4EpBGuORiSGUARrhaBuG5puDZzGOwJH6cmuoOD4ZAY5m4aMhOwOC57W0ANZZjgPnvBASgSwL0CEWxtiHaNQYAARbRmgkOgDJgjxn4DzA5pnWa1mOzkSFiQUvhKb8G0Ie8Zgm3xppBmAyloZapQC5o1CigAAOINAY5q1Azw-oeVY3guoJYCGW-oMaFmhFoYA72Q-5vN7sAUIXYDdmGAOebWmApuNZng4hvgZQA3oa1AUhRrgV4WAdThjBhwkvqIbiGIhgUDkBPMEHYSQ5sJbCTGIcKwYW2moVBYTGyjog7wWiYRIazg7ALx4F-1jlu75OkAMmGzgd7moCtQmYQuCvGqgNgAnO7QHWHuwipnQGB2FsK2FYOV3i2FWwcpgn6OO_cEaBlhKQI2HYA1LuwDDhA4aOFwA44ZGDdhBQLOE-AVTmPbEOesFQChwbdjbBXe-4ZjBjhsQBOFLA64Q2ERgWAPOHHhjsNCErh54WuHThm4ewDbhnILuFaGRYcpZwQ6sOc6tQ-YTgBLOogLnDKWRAFs7mQdVkBGqWdAeBE3OFllkY-2QER-7KwQdkQD2AnvvoCQRBTmS7xGbhn87KwVzvsbnObdkQAP6mwTzZdWEESy6SelIOc5cuPMMpbxAUAAABqbnkEZl2X4WbCx2UQFgDsRo7hQ5FhpDi3ax2WsLQBvh5kJQ4WWEkTeFd25-kQCkR74ZVAd24kaF5yRjDmPa_2hMEHYjujIHACNQOoFkAM26tpfQT25VnpHwAhkQ657BscGpFXAGEVhHFQJtuvoOuT0C3CVeI4a8ZN254JKB4AcFtsAwAiQEsCBR94DeGphLDhZEcR6Lg-Fz2oUZuH-wNsGpEJRHcJZEGRRkbQA2woUf7CtQlkalEcR6UQ64mR74eZB5RijoxHKwT9h3BeRbxrMABRJ1mlHWRWQFlH-wa-pAAgwUYJGCsADUVE4WOAnmvqwAdDviBmO7ADVGDR_dngCZw1YUxENQ_-jgAjA8EKgBPg-Vuo4ChcdiOBpRIQBKEZAWrjJF8WFVhqAFAI1hGAt6LsI1EZRMAH2G1gHgEfYn2RYRYBP250UVH7G69gU6uA_ERxHTRhMHxECRjILlEFRTUbQAmRd0bIGOR_bthEm2EYZhHgxzkQ85POODn-EwADEZnAsRv0cl4zAeQP5FPRWQHQF-ONYbpAsRMJj2CHh3ERYCoxBUU0HCgvkZ1BwW2MYhaxu08MpaZAxMYDHdAeMAuHsGdMd0CeRS4d5FUxfkQFFBREUXrDMxAwIVHNR2Uf9Gju4sZlGSxqTj9EcRJ9ldGEx99tq6YxvZqrGsxuMXQG4G7YDkARA_YJ2D5geIEO4JGUwJZHmWLEaMBDuwoeRBGQYodtFHACgaOAugzMcKDmWvoRy65wKscTHOB6saLYWAV3j7FixNsMHGUArxuNGFgjThVCh6PMPZEFO0MV75kuEQG5HUuEehVH-O5VsTA7AAADLaw-wDPb0h2wIRF6wOAKFE-2XkVdHARLIfebZx2wMyHTgbIS6BVxIEaTachYACE7chUALyE3Al0UWHme5gHXF5xrQOEBOOCQETFixw1tPoGWRlrqBiueYL0CogJoG0F32xJsZBFggoPBDRAwoDdCrguBk44OREADUCiuHgIfHHxJ1isESgrbvvEg2I1jHoWe4wOiAwAHdqXqMRabveYZu27vmFLA-wBkCD-8QPtG_xAgAADqXABMBLAKQJkAzAeADsYwAEACkCEACYaMBJhPYVW43eqgXvGpO9gPEC9AlZt0D5Wo0VkBfuoVnmDiRrgPUCQgwoPAloAfYPmEyRDtsR5XQ0Rg45ex-lu25oASUAQlmxx0dOBLAxQJGFlQ1IS6DFAxsQkAjWeQPgmbAhCbpADxrnqO44AmCVYCzxu0dQZwQsnskAjA1AO0BTAmiWR5UA4MVKBJAxsYWDigHxj4D1G4QKW5621FkKbx2G7l2ZxhdgLx5Tu-YbvESeX9vEDhhp7q8bBhNCWGGOJsYRRBIJYhtOEZxylh4lQAsCfAmEApTlAkwJcCQglTAjToaHOh5oZaGNOdoQ6EGgqSRaGQuhTnM5sxSiUaH6gJoWknKRESVEmJJKTmM6tuzEWaCmh6QG7FHA2HmaAlxbVgL6RgMbkNBAJ_8bACdJmwdEDkJakf7a5wOAIkD2QcFl0kzORTt0BVOFSQkkxJ65ugA2w9kK1F9WiQBVCTJJ1vkmwA5SX4mVJiyccDYOayaMm2xjjmcn2xMwOKEEWw1rInRhIgcmbGx6ABMBTQQCaAnPJeADJCbA0SQQBTQkCbMDxJPyTJBMBO3n37ehI_jzDAAESd6G1RMwHBb5hEUMKAAA0kFFLAEACdb3J5vp5ATAD8KFF8GjiYikCAKKYkBlxQUcpEQA43o_oChrgA0mux28feYIpyKULHjeIKVL42wjKUSlBRpKYkD-wrXuAFTePAXWA0QCpnYFK2_ljCkuBeIXjARBjiUsFJm8oY460WngfkEZBYwX0GzgBcJEEqplQWqlxBBcCBFyp4wRqmrg6sBMaGpIhrMCKpkcF5GGp8EJkCJAJzriG6pLemnFgRsUban9u2sI6kFBYwXalepXVk6nJeCkYEACA31l9ZBw_UAMFJB4QTWA9JQ_uVCBp3kedAtBkwSvHTBMaYf696ICWAl4AhqcGkZAUaemlTGcSQcmkw2qY0H5pwJqmmDBMwedbIJ04YakrBNUHVAwpWwRfo7BDVrZE7uISfWEpAdwTIbNpWkN8FTAbaSDBehjiYCHKAxhkCZ1GXngF44-LRjCEUAzRmBAQQBJo4Y5GmIa0bDmukGYG0AC6VUatQjhh8Bmg-6c0ZVGa4YQHvgw6ccC_B7aY0BzpDFgemgRhhtOlMGkgFcajhgELCErpthmukAwKocqFIReoRHYEmylmp7_myUY3onWleuwBuRUGbqBr6OnkOY3pl7sK5YuXbni7jGhLv-YeBLLpcEZpt6fkBhBoHmE5dBDXvhk1gXXmYCphrDiTDTOOnrBFSW5VnzAMZY4M06oRKBgTEUZ9Gb-7sZ5Ts15YWzEU95sZBAM05deWFuHaRuBAJK4iuhcSTDrAUmSMDIuwrnmDmQfMIpmx2GLiK6_WusdJmcAAQJ_bqQFVjO562hwbkDqwJmWZlZmsGapYhAPboFEh2Q7tgC2AMQOWEfGosSyAGxZ4OZawZGmTWBP2qliU7iOzXoc6_2ibiKCyZamSZlpWxtgpkEw0blFlIGYrivqwWoWcPZEZ6aaRkjO5Llvot6bSXN6ouyWe0CqWmkGwkpZNVrYBbRkoUbbqWVwBIlWZGVrYnL66lvZk5AjmdPYEJLmaiBHRHmQY7mWPmYya-ZLWapazW8DpZlP2rGXYBDQXXmFm0WiWapnJZ1GQlnSZSWa1CwZbkbNkLOmWSRme2hzrlk_Orepc6LZrUPbAYAZWX1Cpuo1g_ESQEWTJmLZiLspkSuD2YVlSul2Z8FDpWAGBnlWf7nMbTOgHlMkmeRno06MZmnn9BfZYkOBljgoHph4s2WboDnQ5e2T7bw5oziuaOQqTtuYY56Obubg532fk6Puaxp_qvuyQHDm0R9Tsga_ZYHsjlk5RnmICj2XwRDkOgrDkr79GsLuHHwAidpE4s2akUsADOtGeVZEANkVBEqhnSTjHMZazi46dWEYQ66UWJMCc5854ubpDkRHVs0C3OMuXzDy5ydkJlZxJttlkQezTsMn4eNEXLlgAOAJZEnO2ufk58weubc4P6nVmbkcRFufh46ewyYrktgbOerC6QHDiTB65Q0NblI5t0AU525zQA5GS5YAFdn3x5gBhGAGnuQ55fOeWUNZrBDOXjm6QZ4HsbmuRxg65t2AOfzm1hwoFEAp2BOW2ZE5CxjnmB57QPqCV5cGewCzmtebObXQdkJXmGg2oDXl157ADsY7GNsHgD-wF2cpZmuhrkcY4RdVrBGUxAgAXlrh-edECW5ukP3l2ulrj27C5SEXU4tWo-ePlN2BeVhayJEkLPneutETvn-uPbh9AfQr6SCEzpQJtibPGs4K8bah6Bt8ZWGv6QwCIAQgCIDjWxgA4C6gOcbqCigS5ryDrAFoGEZMGFoFEBoAFoIyaQJbthaBUAgBjLYAAxIEKiwycKqA1g_-efnAFqAKAXCg04JAXd6N1uwAwFFUDAAV2rgEgUWAKBYAXqwugOMaJAoBZybgFYxtgXQFVwHAUeAlcDPBgAJBQ04AFphhaAi-oBQQDoFUBbgX4FGwmACu8HBWQXcFvBR4D8FDBcKAWgQMJgB5B1kHBCRgtcEFAjclUCCKX0OADPCfgf-VwWqGPBRAB8FAhTgUCAFoMMB9uTBWTDoAc8GIQzw4hQYXYQQBa4AgFYBTlYYAsheYUjANgLQBXAyha4CRgz8tMJFwwCAcLaFY9o4WoFrhegXuFEBYIXeFvhTADUhfbsQZMFFUOgBkwrgL5AeAURYAVoFNBTsB0FnhQkUWgPhS8DJFlhRkD-FKQCoXBFwvKEWLcldqzC-QehcgVOFDxlKCuAJhV4VMFk6NkUeAYhHkXcFXRT0VVFsBYPiSgHgOwX6F5-cSaJJoBaO59FYAOQCBQ6ABLDDFhheUV-FeBR3EzFhjm_mWAs5qlDnga5nyDtF5-UVCWgQMAmZJAdkKKCUAXgBEAuwxIHADYm_QPsWkFHReYUtGmQBaDmw1kMkVXFjxka5XAZMF0BEAmxc4XAl-QGVBXAFUDgDJgEJVCUPGwJSMALJZaY9wol5hXABRACQPIUgQIJXCWVQOAOCWKQSBesBv59oTsbngooGcWzFgBeMVhGmQKgYvAKkFcAsRgIvZBEAdgAoHwQ2JUSXlQEsKSXIlSeagAn5dEO-lAmIJh8a35iRvfl6Aq6Sl5MG41riAfJ8JQzAAApBwXfJiSVcBEW95hIWGFsJZdEcF6fuyaxQRoLABYAHBXEVjG-pfBCRgRpc4UFFdpSUVmFbRRYBeANcWEY0G8JQFBoGXAK56Gl3xS4VuFmBRkBeFnpUWCMFwZU6Whl2xaaVhQhJTcUxQDpSGWXFKZdFBJA0ZTCWglcZc6WolhJSaW5lhJeiU_J6ZfGWZlNAGUUYl0ZdUBElBQC9C_pGBTaVilZgGwE2-41t6XTgIlm4YcFnkF2BNl7dikERl5hZkAsAeQFcCUOUln0Bd6MtkKD4WGQBwVqlEwFcDJgOAIFCilNYLqWEA65ZuXblXpbQUeF6AL0UFloZVIUyFCRdGUJFlZYWWJFFRdGXmlaRVaXYAHBfEDwJ6BRUU8lL0PoDLl6wOoB5ALltQVwhNAL-VOwHBWiDuAejuyXnl5-UyVQVrJZdBtF_lp2Wf-iAFgFyej5sKHzlfZZaBWx6JegBIFqFe_42-GFTn7YBY0AqbjWNBpKAvAlpazAOF7ZagBoVpPogDjF7kKxXUAiAOFCLx3ZceXxFZhXeUXlxhdIWmF0BRYW_AGQNGX7ACgX2UugxFXVCHFDQPqCnFjUPYCWADQOOY_55xR2Wre63g1DjWQoDBXcVI1pWatmK5TmnCV5-SWVmltgBaU8W1pRwVgA1pWUVQJVwCMBQJHBfpAWg7YVgDwlilVpD9-p3gjaPmPZZGX9AepREUQlY0N3pBlBpVWX5FMRYUXbAxRaeXXlgVXpUD-8aeNbPl2sI5VvlzFcFV96OVVxXmAYVWOW-lMwNOU4AFUDFWBlOQAlX3lYZbEUCV9BRlXrAu5WWkblM8NuWoVWPrCY4-MRTtGPmxlWyWmVfZhZXMVckL-bQ2RiXADkAXQMECVAbUHxFlFVlbg5klRAMI5P5L4L_bNVJpVcBbl5JUrbrAzgQsHbAa3pdCMuC4YW5BwxVb0mKBq4HlWWlPwApWnVNYMVVvWv9quW5pcFeQVGu0ZRYBdV1lQDVlQ0ZUfmTpwIZKWmG5JmiZhwGJiyVpA2Jhr5LpwEIqV_piIVqDIhF5uiGmgWoOaaJp-IYOBhGmQYqGAZnhnWbmmPfpRA1GsXskbwAtIU04c-eNchCXGMQFbDmmRUQe4SmakSjXS25puqFkm9EEjXJF6sKjU35XxhCb7m5Vpk6JOOTsubswO5tuZbmm5mk7RxHof4B2A6vtLYnmoEOgD-hqIcqZu56IHeb1WqgdY7PmUYPFa1u1meTZHuM7j65demrjq61gTblRaFJGDjC7uAd7otWKQ-gFcB2Z4jh66Rwqltgkg-WwBCUB11ma9HNe5cHzDh1vtVHVgVzNbU71OVTnLXZOyTuI46eEmfHUSu7gDMZ-114GWkZWgjmTYK2H1VeZG1slugDyWNAIpYSedIfrYZWjbugmh2BME27QWHtcha5wENpHAh1vjim4BWAPgQBl5Krvk5quqAG95M2aCVbY1u18ak4sgFZhKDMW7APwA9ZZBiADmWmRlZaHAkLndnbOS-UxmjJxzl1a5G2sL1ajJ8eYdkFZVzuK7JZ0EfB7KwsuSKCdhPVnQEHZcQQVnUAM9S8ACuPrsm5V1f1uc6Rg5RZ1CG2CQFhnZhAzj_EdxTxp_H5OD1kLlausuZlHgN3eQfXL6KDXVbINOMY85dgkYCBG85WuYR75OXgGMZt2LEdA02wGDdxFKZDrsC7YNWQK5Gr6p4Pxm1Ow1pXqMNbdk7YTAbxmgCRgFDX6G1RWAEsB8NLtnxFCNbttfloAj2Tw0jJq4E_YYNUTiVkm26DpHBd1e1j3UBx1mSJYtZbkdw1ZAhzi3Bh1PtdpDJ1ZaUY20AJTrx7CNBtaI2mN3tRHXF10ddY0wAtjSdD2NsjV_6ZwCdYXWR1_tSnXuNnjeZDeNjjenFwOrYU9W5wWjSLZ-NGAPo2pZjjiE0jOLcP42oASdUE1WNzDTY1OJXjTI0RN08Bk1F1ljUk08NFYQU2UNAjb43TwZjZk0WN2TeU3GN-TWE2FNCZrU1h6U8cA1mxQ8JkbZ5wsbrZdeP8dPWj1c9dq4L1vXn_Vj19LiLkSZmcHKZvAUFVKCRg-DhfU6wVcTfXf1rqfV4zuD-py7AN78Y3X4xxtX3WUZysIPXKw9TVk0l1LFs42lN2TfnXoAidY023NA9QXUuNljeJatQ7tVkC21cdTFlVWJ7qg3W2SjZnZ2ZI0X1Hf200bImiWldbUnlW3jV2lF2JtsbCZwHTVcC51PGSKA7NesHxGYtHDY471OjTpnVJOzgBhZPNaLdPAYtqdY46wRykaS05OLcPi20tTjk964tWhjNYSexuQ6CL5uzifUnNQeQvmIRuzqZ4EwQdhkBCAAgPqDwAFQAjaQOF2Q9GZ2t1vU0PNJdXQGStwoDK2JGrgPK3ygs5ocAx1akQZnOZ8EMSYc5e0cYn4gZCSEBEW0AKW6KtxYbdYZNNzfoADQmrdK2yturYUntABrTZYZWxrVVlcJRCSOl_mBYNa2DJtra4WZhfoGC1tQKrc42utWYPjbOtHzWq1utA9f25atXrXq2-thrXZkrVAbX-ZEAQFZJ5IgUwBSCdOLoIhEhAnkCKCOtT9gm0kw4dem3JtW0Km3PN5ja400AGrVm2etOrbm1-tRwD76i1JrQQl8RAoC9Gjt4bfQlRt9rdl4gZhMHclWeyPo_58-rATrV3mEKV36rtWtU_7o-ofuRDQAMkCQHK-KgT3bUAoPvBDdeE3lF67tiRvu2gpQvmgCux27TzBJgZMGICs-IQOz7HgvvmkCVgn7TN73tC3kH6sB4tdLZwAQ1Xj5vt5viB2Pt4HQe6mhOVjMCwdgAblCaOrKX34Qdd5nnGWwC0M4CWAJoZYBSAGHagDCBiYNzUa-PPl22WNS3s220d2TQf6rAnzdk30dkWQE3dtLXi951BX-if4gRwsevBaNoDWo0kwLsN41LA6zS7ACdL3gwGz-lkVNA8tDnmpG76DSPymFeVHdLY0dDTVx3sdMmYx0l1zHVe6ttvyaCkMdrHYZ08drrhoFwwAncq4velAcn6c5_9aJ31tSwBJ3yg2UBMDSd8DWOBXRpsHJ3y-CncABKdq-dEBPgTeW-Bw-FHXWCadd5tp1Jtpndc2vN-gEZ2cddHWZ0cdFnal1WdmNvx2-dFzvZ1IBjnbtYidpWe50yNknYkA6OPnZ3H-desIF3rwwXaF3VdjpYKmmw6nabDGBVvvB3rt2HUh0odaHeb5kdhWQ-19dQvjh2ImeHQuALQ54GObagpHZ5Dkdx3nF2ImCXSl00AfBh82JdaXdl2bdNXp217d3HcQHWdsJvl11dRXRQGoNTxiJ18w4nZV2p2l9XA11dsncx3NdFESp3tdesJ13BwjAKt3Cg63bp0HdLzVx27dJnVt2HdJncx28dCBrZ0FdgnSvDCdydk-B3dFXZQ2SdXnXgC1dCDa90ve73RgBhdY9RXmV5UXVAg_dXXf90CAgPRl0utG3cd2z-xnYE0l1EPS21M9OXSd15dcPRd0MxV3Uj0udqPZJ4Pd7QK13Owz3Tj1IBjXSvD49fpiL2qd68OT3vt0gQAHddqCIwAjdWHUL4et2rXK2yGYgJl59t2vd63yAi3e4DK9vXWB19-5oBt5DdIgTAENIk_iAAwBiAevAgpNNa_6vGXRZwG-BWwNQBUFX3crCntmgRgb-ABAH03e243jF05xjUIR2-ycGXOa5OSiKIGm-Vvnb1CdcAVP6f-GAYnAa9ofl0VA-gfWQGXd8vk26j1OeVAiS9psDF16gE5lb6QBYgVIHfQUXkr1WezfQTD2BdUJu2ImzgT6mcRNFaM3veLwIanNBhaUMEBWqLeWm9BcQSP21pdWRP3OpEwYEFppo_WTHYtZaYmlGp8QdWnRp5GXs2JNc_b4FT9W_UWklBV7eD5D9yadP0xp_ljemjpxECFW028XeKVAhb6bDXSWlJvRAKBaNaBWY1PEEiEWmuNZukE1bRkTWeGBIWTVtGMRjkb01CXqqE8mY0PGk1mrNTKGPG8aeTVIRQGfkZtGEwEIA3AuyZ4aAGWsCIYYQeADgPz-5pnukwAz6RcaFmj6eYEtGTNYa4F5CLuwDOAA4EdGs1W6Y8ZsDs4E2Z8wGQDpa0h6wGp7dG6GQMaYZbtgS7wA2xpB6uAZGcsZYwT7iXnawQcJvXbArOTHkc55zjVDUDH6RzWwDUwO75kmhbuabyBJJkpHC1RJiSY8FydvoPt5lQLABImBZlSZWDn-gUkwO2IWqFR-Eph_0kmMpTqHS1WkMpbagooI1Cmhk5haETmdJZA7BDoQ-ENjmkQ5pBBDIQ2EOEdxHadkxDKQ0R2iglgIkPlWGQ5OZzdLedEPJDBQ_N0gZsXv8HOxnsYbXw141oFbkAKBhYFiZgRq1AUDz6SbW3miJsc1PmoQC-bDWvzdRbSpucC-1_xJtqlD-VpTCMPMGGAOMPTl5cFMPvJa5ewBtabyRtUrm5cEAmlpVwG1o9QurTZB9p5wQkBctF_j4lxJ0Ha7HrZz-pzaPufwNeH5AKUOZC8WwDW_00AtdfXVj11jrgYLRE4KQ6FW-0JyV1xA2bHbvxeYPYDOACfYTC4gGAKMBymhLfsCRgQ3qgCgJ0IyMDigJpUsAsIw1lCMnAIwAQ2WucYTnGuZjSU-BdAJpS7CIjyIziNojgNauDYjMI15BQhhI8XauxT4EpASJSkORDkjX3qgDyW6sNjDkQWI6oD0jXYIyNEjLI9oltAnUByMaQSwIiO8jHjVJWCjKI3iOijzI1GDtAbI-rC9DXIx-bABgwEjEzASoziMqjBI2KPqjEQLeabA52bKPcj8ownaGjnNl0AhBHOY1CpmBjlFYJerUHSO4jTo_pEEArowKDujmQLU6IjC-gRYejx4MPXV18NaAkJASdmyMN11jt6NhgikFJWqjoEOqOkjRrjqOvG1AJSOjA1I-DW0jQoz6Opj5EOmPEjGo_qPSjOY8BE8j-o_yN9xBMMmMQlaY6aNqj95hKOWjNYzaO6j9YxImNjRozCOtj5Y-2MZjnY5qMwA2o72O5j_Y_-EOjzYyWMpj0oxWPijFo51AC9co_qP2jQ47iNXuiIFAABjBeSpARjjjrha-jLo26OXQp41GPQ2-Y6iPwAZISzbCxT9rhb_J0CecM7RvHqJbTR4GXElGQE0F6NLjZ4OuC964Vst4IjFFu-N4An46GmRwylkAkAAGq1B1t6sBFCAG4XW-NnDIEMNXAmZ4FhkFAivvoDigKzQNGf2FzvBPlWqwx8koT8EGhMYTY9dBMAT6Br9VwRVE1mmlptEwID0TlAOF1MTy3vgB1llE_jmoArsS47jDrUNROFg65qzAH8wk7pBTDD-hJPmQUk_iAyTOAGNzyT44KJMZAiw8NF7AWaXpM7mrMBLCaNFFsLY6NmcEhMtwUw-JNiNKFjpPTD6AOMM2Tjk3pMtwqkx5McTGJRhbdNNYH462AOxvYMZAS_ne4CRXAJGC3hv9rra7DmIAUBopjk3ZMJTrsUpPSQPzeZMe1kLrYChT97pHCdJmQHFPlhI0fkOpD2Q-x7sAPgENC2TYw1FMAAPrVMr2BU_sNRO-Q4UPlTPgOI6KTMw7eHp2uBhuNmWEwNEAx1rgw4N6Q8AEwmpAI4K4COxrWSNM7R7sRlZzTRwIEBN2Y7pDFLTWU3ADhTSBo_ZwAOU3p65wkyU1NHRxUyUOlTlgO1Nd2XU85M-AjThTADQ9U5nD5TewydMnQrU_N2XTVU4lM1TykfdOXO5VtpnZAyE3wC5wsU81OnTsQ-dOB5EjTU2RTyUxkCpT-HvdON-MM1I1iNE7mJM_TVTvdNme12eVUGZOU2ilbTH5aK6Az6AMhMSWv1oFPBTAgNv7hA205FOINukBJBgz8UxjOjDJMC5PszTk1zOqT4zWg0tuS7XjMQwysM9OFTc4BDOZDaQ_jYdT3M3ZOfTl9A9O1TeU6zNFTb0yUNtTMs69HXTEk1rPiOqk8Na3j1AGGMZAp4_-b0QxMIKAvjmdrhYygCXioaWz7Du_b8e0LdpGoNds8eAOzcxoKA_NMEI7PwtgrdQaQJsrb7MpG3s9PaNOts8GNLWHOb0ac2HszHOOzoc7HOCg6dq-MZTLDUAnagBU1E5VhbszFPHTGqXLM1T8MzzPoznk9MAYADg_KMUz6U2e6ZTbqZPV21BtoC296TtU94jN8rm3Xz1GCbnB9Ts0egaYG5tcHOJGQNZnGAuntuMMTxI4CDOmwqsxLPqzkM1kOWAHcHdAAW305zO3Tlc24M1zoztVObzHcK8FLTNc_h46zUU6k5ENhkzmmnzjk6lMZxALp04FdPTk9O4Wtk_Gl4WqAH25j1rMIFBIZhLWDCRzFFm_MAJH81_ORg9kH_NiZ5Tt9ZrmmcEHOkjdgKYDTw_DlPP321qbHaH13uSKDoLEzg_WARGAEWF8OhcwvPmQJU8vNfRKWThEbZNeqDkkwA0Is5PzOWVs35ZuMeNndARCy9NqzpCxrPzdFC9G7rZBjTQv_z6dXsCMLnzhvoUuLCz45aTULqtkvZC2UVmau2mRhkzuWGZINEu08Hdktw0bi3CU5YTjnktwcdSjFPekcHQEw9KTXItFZj2SplFZfk46Mrxl44GPXj0c0BPKjF46iBHjQYwl6QTfYybMCAN48A16jEidqCjA97m1CahSwPPODN27khP8z57hJ7xGhsDQDAzMIHGEfA5rckvsA9U6ksngnULCboA_RpaPwAKyf7DpLSSwQCITnNmbEpLiS_oCVLEnj4DmQtS5kuLOWafUsnDHwOelx5UPt-a0DsFlWFC23dTXqi288-XDHz-o4hNXA9k0PXAN2AyIDz-ddQ2NSV6U6QN9JkYM0sVLkvvGlEzCxsLHnts4_KONj6yxkubL8AwAk7L2sH5YYjv81TZzjCo-RD_mmodEtNz8OQ7WxZ7c7v2iu5iyM3yjOcRKAPL3cxM29zgrSzPELP8W0ulzSU9zOIzgKwLOQuGyykuahZS3UtZLDU4Ek0AHwCwmFLG43YD42SK3ktf6BS5KObAc9qsnIryS8NZP2CK71EuzVjm7MDxAc-PO6QjS3N7lLyE60sEW7S0yvjgCg7cMzhrJQ8OoNPwJgCdLNADEXIRaS15ZngA0FrNfTmM5vOXTnU7fPdTcbQBa8rG4QKuXRbs6_Pqrdw1wCFJBfjIu2ACxq1C3WRec-7E5ZfbE0UWcy7gPZAhy1JVwzqDXGkgLaAF_MXLiQFPFsLxYTqv8jGq_cNsx-fk_HTRvq78D-r-q61BPDucEEvqwfy64DkQBWdPocL4sy1MlDEQ7SW_jAM05EyDomdllWrysLgbYJUALglEJFUwU5SVJdcEbcJmoTfbaQ3QNit4AUIWNNJG2idMAPL47RWsornBhkDGQMi9KMl1NSycvsrqDdUtmTH5tUuARaS9SvZL-K1ivErxS2SsIrMi5guoNwC-gZurPa06X9rdS2xP5O_CyRaCLsFndnsNUC5w3KRwoV77ZZu68zOULQrlYsVZz2YosW2yi2IOqLEgxMaYptYMevMLQ1tosP1X9SwstwF6_oDZZhi6v1gbny6YuRw5iwA13rUrtYuPrUrl6vRNPq0AtwAQU1XMhTeAQzO3hAQdtO5zwa9qvmTQy7Ba6N4yxImTLFU15MEW2c7q39p8trnCK2vjt6vpzH5tTOYbtM2rY7-OG1p5aWhG6LZxNlk9PDkb6sJRvTLpsFnMFTVwAX6-TjK344xrBo48txhzyzeuvL6gWKawrrtQ_PKmxwGCsGTnK5Cs_TsK_Euqr881E4_j9K3jPwt8K0OuTruS7ZszrU63OtFLpK6UtLrDS-i62bHKxkD1Lm0xhtuDOU_hveJAQf5sODgWyTOMz6drhZwhlgcF69Lv5rBa8W_Q8RvaNwy_S7ELRwUcORwImzACUbolhsNZptGwcO8WX1unZKZOEaNnitGC3gvqZBC625P27GwFvYbJMwEE5T00cmvgzi81LPZDfC_pnBba64LPBwoC5uuNbYW81vEmfpmTPDr-8yKDjD9XQBuJ5jGyxuZ2Zm5LOlD2oL1tPZyWa_OJT78xusigaq6FtYbkQGFMtbU2zfPyrs27hs_rVLj47fhBMLgbL18JpSBLAG9aZbH229QbG710DpC6qDAEQ-4KDhORsal5Wiw-s_2d0FJ2N-UDocCOtK66oPqD7OaiCgNoO39ukNK2VtuFxLOZQAe5mg8j06LJlkr7IxrbjBug7QDf5O_WRzUzOnNVzec08wlzW16fL5cAcFOGnHoDYP6Gw6d1f6HO0p6Y23zcFtabXGdTtxxYK9ls0zNc_MMbzV2xLspT3U9Lu6TOaQVsGb0G1fMfJiuxkClpfO9d0NzIK9mAJb3MXXMe9XS1FtALu2wAkz2CA9At9W1oDEWRgNsNQuwWsEY9lwZNer5YnJL9aLW27k4QsM5pbu9yv6bHM7y2rrpu-uufzm675WS7OwddsSLCebdsSeQCQhE7bYk3tuh7B23zONOM25HviLA1ts3G7uo1mmPV5uwAnNOn9dbuCNdu4euOOPSZp5O7bkfHstWvu21Ye7KyTOMCzwESrsTAJyZC5mx9o2pGpQ4ceNVhLQ3vnvxpArs7tpZ7LRnHLtucLN5dAYACf7CrWq3Qa2OxYOtnFgoBqN2gdvfkL6mDLoGh3AAzO5U00egMAJ7lTB-9-NseR3qr1KeD8AtUAJQfS6vD-D8MztZ-Nfi47jeuQS_tPBD-uN4dNiE1NDUhbSz_vvRf-8ACqT43pe3wmtACf4I9Em48GA2fNvluHDUAPV0yu4B9PVcW0B0X1x-nOyTbM7FXV_vP19AXynF-X3dF4dwOfcl7QTsE616z7J_rPswHNjlBPYTYq3j6tQs-x3AV9tYAAHAAb-TPHGW6sHW1ZAOQLFMhAZoHdC8grXmQdKIFB6cMApaB_KMhLIwKgAn-Ty1geJwW48EuhL6K2pb5D6a6KAoHEXg_DU2xK415wwqhzz2I9to_qOKHS0REtwZaa_EMZrD8JweEw4gTvtIxNg1AhKB7Bvsv59w-3fsq-X3v4eP7DSFXsD6oB_nsm2fhwRYP6ryVmnf7D8Ar2EwgRz3M92r0L1AqeQne3Ue9XUG9C91s_g_uBeQRwRaPVQCJmklHtO-vB17hGVUft7eAGUf-7AgBrsve0E1sONHzR0gERA3ejEAzAsE9Js2rwgCDAQAvRzhN4-DR8oHZHQCP1CSHrfV12zHgATIAdwtB2YfIHah6bCQ-3R8MewTgEVAAcHlXgr1SHscK70sBffke1QAfyxKFe9rxmcfOGedKwGTm9brQD-wVwKttdbk5udPjw0x6nrLeHng_C_VLx8QuprS82kN3QOW8hNXAGey5N7HPDkYFHbVPaggKbNhyofKbax3rAaH6sDYfaHSwGQvEd9XS4fA-Da6YfaHDBx0uInWh3Yc4nPW9CeoI880H0durx9wvAn2Q615YAU0JCdYArXpOMgHAw_-Bgn-x7Cc0zHcGSdKHyJ262onysOicwAmJxSc8LG29Sexwxh5aNEn5h2f7k-Vh5odKHWJ_YexDhQ3ietetJykexBLDQyfanYQ4UMsnbJ8qs3TnJxMt0nHtfgBi7Ey_yd3tbAOQdrtQfi_6sBZx6KA_JVx2blwJYlm7PKw89n34PHfSzADPHum5wskLpp-tufH_vSZYTQvx0oiwAEoQCfRnQJ2acfToJ46cUbjfmfPHw_x1Gcpra221N3Qae9vPVzEy434VnBZ_KffdxfsADd7MwL3v97l0Fh6NHRk5fuxwjAKwMt6cdi2YPLjx9_rDnMkBEAeeo0eRNXAzZ62cmV5gNobCBcMEl4Ypx3owNCHlETF7unW-6H5dewhj8dPtw_jF2Jg5vc_4nHQvjOdZAfpxee0A03cgcLQecbpA97WQCr2z-3flucHtyXtee6900HM3sthPRF1N51eXXn15oBi-cQBa57QB-mjfQj4zHfZwUAkHr-mBcWA7fVpDuH3faqm99j5uYvn92kJf0PBvy_8sJpPfUmk1BJQQ6vkQOF-QDdGuR-GCUXeF3hlpB-_VkEL9Uwcv2z96_eqmb9i_TWmEZ3QUxcb99F1RlPe5qYf3cX2_SUE87LwfxfNBJwU8EuOIl8UH7BpwXv0cXeqcxVoXt_bsFDDXpa_vj9-W6OUEHeQfpexpcB3DZSXbwcAAfBh_nctxrFF8DbKuVl9DbkX5UBZcfB1_Yzkjpd6WOnuHUNS_2qGcNTab1mI3tsBf9D-XYa_92Nf_0Bh7hoAPCQwA8RfE1NBqTURG1NbEZ0183gzW2DAiaSY1G2V0IkaQgZmcuwAhIy6DwQUoUhDIDt-7G0eDcAy-vYusWWosTG5Vx6Ds11xuQPhnVAwCY0Deu8-lM1fJtFehmdproA5xwgNPas17Bh6ZxmgBjQZlmhV_1dG1IQENcQGlbuNeFmUpoyazXNVzpvzXtQ2GbDeyQKteTXQVySnJmfV1aYLXe16gCpQYQJZmHXRZpICeQEiZte3G6ZjJkDXWZrr6EpC0eD7NXbNUdeSATdt9d-mp120ZC17phaUbXkteCa2DIvsxNBGXV6CFOBUN7qEy1-TjeDR9U5oR3ngqUBQ7ywFUDaH5OzgCcXng2oO8eWA2N0uZl2ODtXYaFldiwiL2ylhFDR9lgJOYRQX-cAkmhpN6KDngwCRaGk3-oAnY5xmlalA5xDQPYCNQhllEOVQDMJrWHmNwWZbVDKIbUOPm9Q40MtGPga0MdXRuzWBfnwLlcM1gqMKbVdDltb0PpuQth7XIttYBaXDlJW6HXzAxrmw5zD1qaNf0bfFnJu_WZ4JckRhqY1GEA5kvvbfgTIdiptTAiMZcmgJEwKwNBAyWejfOAmN-Tc4365kTfngJN2TcU389gHeXJ3EXRkigTDck0VOJ68XuQuU2QIt53vlgXeW7EnlVeFJVdyVc6OBWYHFN7k4THEl7kQDbshnvGeTZhODe4Lvd2heyHtgLod2w7h3eAJHd0r87gc6butYLIkH2_k4xG9Dxrdzl7Z7acMcJ-9KWFkWH2mxabfeDIc3Meurc0DG0RztZpuTNfu-DYZ3bDksDTXY1wbtwrEngy433nt2w5-3Y0OfdB3O5kC7L35ILEBr3Kzlg2CuvGSXdj7dLZp7l3Z61U4Muf9w_q53QD8vkgGoD446VOt6fbZhOZDbpDAbsMSKAP6NuWDslOjTndkoPCLXut9bKWTA_4PTC9Hu31_00Q8Y7B63nfRu-2TdtHZqDzpt3ZSWQhvPNL2WTNKLog_VdVWjV4S6frWi5HA6L8E9msuOWD0jmsujtZUe1gy2YTAZx298XGsP8iw_VJZGcVSsnZI0WdnoAGjcMOZ2V9wRuMgFC-faQxurTEXBGzXuZHUPCEfbuOOHcLY9st0j3QvwPYMFU7oPqW5g8YA2WVNELbse7Af9ejj-8u0RZO2Hrerujar4he5bpekyGuMYytKtbUFw-8e2j9dDZLBjyNF5zotrImGrvjrMtK-jy-bB3A9qyM5qHrGxHEh9T53k3mbz-iGsUWut23YLgswOrB11k9zK6KJ_AKiYCh_APA6NPeYDO35W6kKZZ9g25mABDgCc5C7wLsrdPP5PPT80_4euFnU-jOkYGjnVJTNGEnlWvo9MEbOVRv143389zXoTPiRtPMZx8z-U8tnLTTsczPBD6qsbPXQFs9QL4bkGtGPRGx-buL_o1eMnjLi-ZAtjDix4vvP1AKeM-L0vjsB-TrT4Y5xbOXtfYs2TdoiDB3Fptbflhxmw3PjPxBgUB3Pka8KBJQkLbSs5Ad0PdYov5YTxYYvLbqqvwvKQHc81PH5jFvdLfnuGcIjwa2OuvGrz54vOLno189LjTL38-oAAL0F5K-yGwg4CbFFlS-fmIXhQPRP6sHQEnPSO2c-VPJFvrfKwyY_uMLgzLx8_eL54z89vPTiyq-Rj1m53Upb8TbnCkvVwKS93PpW-TuGOLwwQCxjUAPGMPh3QxYAKv7gAePKv_z9HOAvKY86O_Pmry68JeRs1dfEG_RotaK-4bvZcb3qDeC9RPt4-C8jXNBptZqHgmzXr1WR1h7UYpotlfd3WD1k9ZX3X1r69fX17UG9A2Fl5zZ7PsFkzeEdrN-zec3k5tze8383QuaC3wt6Lfi3kt7683gnJkDf5vsb6G-4Wxb444Wgpbyzds3ooBzeigXNzzd83db0LcNAIt2LcS3X-b6-j3HD3k_Pjah5m6v3198FvxLgrfHZe3-9mu9ROSdyndY3qUM4C0OE0fh4VQgeY5CB1e79uGDLqW6Rsv3Ud5cn6NVRl7dMboL1dknRdrz3cSQpL5fejX_t0-9sOcS0i8EwU-3B2unjMe-fB-rARDecmV1Rt63HqCCGdC-cHzsAIfDUAh_kQkZ3-9Kxr-kYGp9dvun2O9CAR3Au-C_gG8he9mV6_mAV9wUBZ9Afa64J-Z7QMeLW0b6h1une7Xz4v-sN336kVn_n6cUFvvfBDBRiZ6H5ZvQZzzAofofkJ_4uAgIkBYfEZ9OcAfHB193K9uvux-3tShmP4Ef0_qggO9TvWR8vAKAY2N0RW9UKdMfx_oad1jrbzsDtvzH617HHkYLx9C-_HxwFif3vZQUiffp4yZqfM3s36VuBx3X3J9CeoR_rHxH4Z_6fxn9_rFAAACRUG-LzGcF-5eddcSJDefKDluJetR_Hj1AMUCteBfYiPlulH7AD5vjn9B88fEAHDevGbnxL4ef0fjb43g8CWkCHudX-dWXLlXtwekvhj90CV-AgTdcG-Q0FcBABfr9fat-TfTp9ReYX2icRfpH1F_z-zPqZ-A317Qx9v6ln6QGIjub-D6lfnH2N0enAvi5-h-NX1_6tfsn1QV-nS3-D5-fqvZ9fCgQN1p9zHE36F96fE_jN-Z9zvXb7RfzPvK4QXKkI-_ZAK37175v9-9PUB3236ghOfB32_7h-Anyd8-9cn6J_gdAd1d-xwwAAe-k3R784Dp3QHyHa8pWAON9QB0-_MfIXYqXVDy3IV5KluB2l9Db9edF0f1sXyqapf-BdPzP1apjPyxdL9M_Xxds_s4IJcr9nywpfs_PF4Om45AMF5dTAZP75en576fdcDVspsmYKlNhgwBq91Fb9XM-2cF09dVav9aEgAEgNin4g7UVADM-MBRFAm_XTzwD8A-oAiVk8yw6wCCwrgBe8XvjkE79aOFUHgDp89v1o7O_jkBVAiwrETPB4AIsMmD6QRAFTBkwrACwiuAZMMAiX0Mfz79R_ZMAH_u_8fzH_e_4sOLCsRyYOQD2QIsLVXAO4sMAjiwrADoX2_OhSSUzwKfzH_Jgl9KxGu_M8EX8zwJf-X8Il5f179OQ1fxVCR_0f878Xv8f8H8WgYhOUisAM8FAAWgsoWTCl_Y_zoXB_Vf_ZBD_UAJP8zwo_-LBT_RABaAzwOhRaASw5Cev8t_KfxaA6FOheH_b_pf63-O_rACLDH_u_07_7_i_yv-Cwl9Jf8V_2fwf91_Hfy_-x_H_7P8X_7_1783_N__pD8ALcCkdEVISlRG44Qe66Fuf0wK_eELgQZX5zgVX78AdPga_DEpq_Pczb1P4DL6SAysnfgDd_B35oAiqYkAVAzM-QgC3AB4CSAEYAUA-aIblYUApASQAUwBmDCpQoA6_esDO2EyxCAQKJG_E34RQLp5-BA_TJFBAEgAZv5m_Bb4O_PABiEcP5kwEf6-QDf7JgHOIO_IP5dPA37M-N6pMgbeq8AwKL_FEkzqASkLKHfgAnlQAESARgFyAZ_pS_WGoQAmvx1-YG4KmaAGrpOAFPJF5KIA_G7b1TX6IA_AEYAkYBYA5ny4A6xBdPLACEAuADEAm4DVVR4AUA3EYjAagHWQOgHswRgHiAFgGFgdQEL-Y36m_NQFogPgHrVD5Jq_HQqKA6ACG_fgBJA7gHb1c34gAS36VQMQESAqQEyAuQGaFAAHb1A34WgdEAoBfgxOADlwpA9gHJFBQLaAtADM-fQEgAIAFGA0AEzpe64dNUszy_H9IY1JX6PJAQEgOZwEoA_gDJgLp7uAzwE4AmP4D_eYHb1PwFQAIgH8AEgHBA8gGUA8IHVxWgH0A-yAxA5gFdAfiACA0yYzAn5Jq_Lp4CAbAEgALIGfbFkpwAdfLM-RCorhGvQO_bkC1AnIGcA5IFsAvgH_AgoGAgjQECAp4Ggg9oEkmOIAzAboFu2HgGpAjQEdAnQFwgsYwGA4AEpAYwFTpUwH-Xe64lmJMzWAsYGK_WAGTAnNLM-aYG2WG4H8ACkGLA7wBeAlYHsACkEbArYEgAHYFkA0IFUAw4FRAhgHJmWIFzgD4FvA_gAfAvBJLPJhzZAhIDAghEFtAyUGtAtIHgg7X6QgzQEugGEGogghaygpEFaAlEF6A-EFnAhEwtAZnxrA-wF4AZnxXAykGJJW4Hb1e4HM-J4FAA84He-F4GCgwQAiAGvS1EJyAT_HQo_A_UFzArp6XA5AFUgwQF3Ah4E2gwwGYgjEFYg6GpgA8EIsQL0COJPwZylLQDLpcYHgQQ4rKJBOyWZA0qNGbLyILc4pNBacLjWA35MFMAAwADniwQTKosVAkyPmAsF4FSeD2_QYplg9qwnhSUKVgnIFMFGABLwZ7hEVIqrnQLoDPAYuxhBfMEtgvApiEVwCRabID1g72DT2ZsEJAQsFFgrf4zlD7IDA99IWvViB81SbrCgUK5Jg_9IOgP_ouGd66_XLdKE1BK6gDEmqEhQWpeDMkyrgg9xxgqWq2DV64XmS66NQLNojAe0a_XCa73XO1KjAe0bPXNMyWmYMx7gh8FPgmw6vgta6GmD8EjAGw6bXfUKehSnp61M8xK3G0xGVBBYnTMyIeQJCHXhAiwjuS4bieCwCHWRIwFAFQwFxWV7ieMi7WHLQ4cJSxrWOaLYUgD-K21cxb8zAXbVuWVrIQ8iHZNF1x82RiF4Q2cDJbeepMQ2cAEQtDxsvZUZPGfiFj1X5oigESFLALQQQLYsbKjBkZjjSsaTjacbOrO5Y7jYBqqWESGdvVU5u1G7y8Q_lYYQ4izGxISFjgO9z6QqABuvagAmQjIAjuSSHSQs14lBSyGEWAyGFvJurqbL_T0Qk-7WXdiE6QziEpAX152jdhwhvLSElddJZ13biETNXSFCROyEG3aiHfvBV7UQhyEjuN164Q_IDoQqyHxAXcYhQ-CAiQpKFoQlIAiQjKEjjaqzyQ8UaKQmYC1jBTaqQqKHRjG0xWvG14KWSiGCvGKG3jSnbRTGJY4HfaKWRIUIGdfQBdQo7ruQ4FZT3YWafrN85cfC3pC-Snpoda3yZ9fT6vfUnwA_fxzQfVgJgQ9gLUAfU4UVTPzAAW6xXuHboWfBQ6hLTA6hvdY7qnDE5aHIexj2es7KwdT66AR8FCAZ8HT2IL6PfLrrq9RaGnHDiILQYACWRY3o0QJbq6faaEvfeYDwBN747fTfYfnRqxPglaEfZOyLrQ7IBTQLaHpdJjq7Q0iEinQvqHQtE7HQqU5aHEWB6ncgz-fa6GAQ0Jb3fQALBfagAmBIn7sAFC5mASnroXHVKYXEoLlBaS4X9Zn6EZSyKGpNwydWHwK27bn4pAJYDr9StKtRXn4sdRLqNpQY4CwxnpcdYWHd6QS7uXAky39IB6s-AHpP9bEEw1fy7LgxGpYmNcHAmZG7ylIkEwAx4Gd9d2KjVNs6wVI2y2leZaRAUGrcFWyqaZNM4jlGsBFnSdCHlMz6pVE8oWwwwqulNqrulaAr1lMcr-lHwANVScC1FQIoK8SuzBwpYChw7QrJgb2FYARso-QQXo-laoDeVcPZqAacqmw6OEWpHEbTlGP6VwAKAzwAKABFcBZLAScJFwjSYoVOqD-naADjWb_p2Qf0A4Qo2GmVSADHxSyrqlaW6z_EYA6lDEoalWf54ASCp-lW2GB2Kc59wp2FpVV2EulZKpuldKoelDgq0VcgD0VGqobFdYA-VPypXAEWD1gqYZGVLyDDlHqoxVJEqKQJyB9VOqB4AKP6Vg4sr5lJqqhlX4rdFAErI1PMrg1DgoKBCwodw_6rcFC-H_FeCDXwk-G3wyyBvwtACZwxyBbVO-F8hSMoYdGeGxw2Sb7woKoawqDqjHC4aPmF6oFVNso1gKyA2QDAo0-IgA1VY6qQlIqoaw5DptAScHrAOBGvlBBEWAFyrYAAKphQVyqeVWYAeVLypYIg9y3nVUprDLUr1gq3qGVWBH2VF8okIohGSQICo82ECq_pa96SgZIqBAAgDolOgD1groq5VdhH5VSTyAGHYCmwmuLyVZ-LrAQcreQA4bzgnS4-lCcoQAKcqDwnCq4FRcoQVdYBFnA_iOwkGpugjBG2lD2F5BM-Hn5UYpiVKMocFW8pPwrYpJFUso1lQ6rOI6EofwpMo1gD4ED7EeEPGBCovAgfalwoKpdFdipSVQ9wdlcJG8VKMxhVKxEBI8wp2ImQrjFGSrhAOSrrRd6ofZDsqnfET78VIoouwx-LQVOtr6AeRG9laKq7w_2E2IwArJI8SrCgUJE5IuH5UFCJF9uTiq5I-T48VU4BxIlIIJIgOEqFcOEDIggTaFYMRpIxnwkmRRH1grXo5tGJoWAAhGyeHGBTwvKCzw7QpMVRBHfw2IpmwtBEklf-GWQEApmInZE63FwaPwg5H-WGaq2eOaoogP2rLVHtyRgNapFnIJD2QFyDCOZUr39eWFHAWizGIhmCsANuGrgMaqXQHixHxMcGrgJ4oRALZHVIy2GA1DgqQ1LSBnIsowXI-AZLVcwArVW5HvRdIFLDXBCPIqKaPmWEYa-KBEsHGBGrgThFWgaYIGVWyAxlfYyoAKFG_WHFHS2HBG9DX-wflFIBflWgA_lHoB_lAQBUowxw0ou8x0o6qqQAbiaWgV6C_2JBHhlVBFglR2F-OblFTdJcI_VDaoWI4BqwjLz7yfX-wEIlQGco4_ImA5WFghVWGQA79KJg4kFbgzUDmgHGp7gjgZADLa5MXRK4zAZK6M1CAZbnWmqCQaAYpGJmpp5P1z2uUtaHXT9K2DNoZdLHQbDnXq6g3c8HumSAFaw28G_gjMz_gpa6mXb0w5AtFwI3cwFPBSwHfgisHhot64XXKNFR2McD67eNFSmO2xZo5NFiQO8GRo9gA3Q62J3XKUxgQyCE7pKYD6gC0KTmXm7agSwA7GVqBtwAm66QWtFjmetENARtE7GLtFNoycy6gViK0lCKCf5YBKTmE0KigXUDAJSm7LDdpzVo9_L6gVKDqVFm4lJRCZdontGAOPuCy3OwDu-RW4XmFW5UWIKxUvDW7mQH1H2eT97Tgb96ZubZaC9OS60RXIJZQNACITLKDAHEZrftY-4DQze6eePXb8zKl7MPMtb72EfYOPZnYjJQVq_VPu4WLPO65BGBaNOPH4uQ_fIO3fWwIY-fIaWCDzp5AfLuo04zSNO9G5uZS7SuP3YjhLBzIYn1zIYh_SlLToFLRa6CNOK-ox2A4B9uFyqjAej5VbOjEZABjFQjFIAXHUCI6RWOyRItjEFAH06JJWjE8JC4DkzVqBwY7jFTAEEboAIyZsvD5JpzTOyyzX_YwtPgZhBFJa_7SOBSYmTFlrKpyaYnNLQbejGAGdjE_NJ-L6Y1jGGYgoCcY4zGMgOJ7FhKTHITKpzgYoaB8RRCbKYk6JAzR2zO2WGZ2Yl9FYAYdYdo9dH9o3m79owdHDo0dHjo0UCTo6dF0BXTE0TW5zAHfDx2Y0zECAPjFFTR-LWY6NYGYxjGzgATExJPjbpY-7Z5JNABaY3jHmYrhZpYnr7sAfzENowLENAYLFDo0UAjoqdHhYyLFLmK4BVY7tFNo3GZuY6THXzcyCozd6K3IorEK7YTFhBPSZUPNB5Ogc0BsHFTHZAIybiOewAGgJdEaVY0Jro6rE7GcZ46AlOwxYwsCMAPrF1otbHp2cD7vtRY5QfUaHP-e1Hu9HABKeJD6xwaT7JeScwlYrLEcY8iaRnR7HsYzjHjwO7GvGB7GZY9jE5YggCvY37H8Y304dwL7E4AScwdPKUCRnSHEs7ZD73HAxEA4o16bYz7H3HYc6RnYc4eRL7pJeCc6pnMtLeYo0H-FGbE9YmiacHX6FzQmaEAwjPpzQ977rHT778AU0IjgA2IjtMUyFueaEowF6FC-NAr5fNb7K-X-pcWDr4dwUA5A42cCWY_GyMAUtFjAGQ692CUIS4wwKSHZvwWA2NE5AKXGxmQwKC4mHFROXizlTNXpLdDfYIdPvzkfd6EjhL6FkdMQCteIXFmYp7H_Y7XES4vXHjdUPyRVQgCy4ibyVeJPokwzODLQSbH8QEaJa47s6_dKb7hfSnEkfIGFKIcj7M-TNHUWZnFuQ1nE044OBS4vNG0ANA5A_az5TuCA7JWIgK8BK3y6-CPEDfKQKPQvWCCpJC7kwkn5aQJTzUwmIJdpZnYC_Hn5Mw2S5s7FS7EXAS614jwLxpWn5iXY_qIIp9F5pfYwhpAWHOY7vFEAXvHN4gLLhnCWFQAAWF84j6xt41i4z9NPFZo6fEc_K_rJ5UX5Awe9LX7RWERgmdKqwnwYugawYvAV4x6o9GoGorGrGoqK4LXM1FxXC1EgDGoxgDFK6FXCC7MDSwDBI9s4X4qUBcDFvS8DE6ICDQq6U5TDyeovQbtXHq6-o-NFa3ezxngjHzeDSwa74gZzX5UEzxgl1FjgUiJ97Oc52AQ67EGfYCpGKCFa1SoZmDGwawQv0LwQwMIHolswNDY9EtDU9GgEpoYLwtWz9GUBrN1Nmyt1BqGpHWcZuuGnL4YvxwtQieqqbNglvLKqwfLWLLs7Ro6lHIQm0Rao79Qjuo67Yc6_o7W6CtKYaw5YKww5b2xWrITGIxf7aPdHWCqrOQl4eIaDJwX-Z0Rf8Jc5eUAi9R1oobBraOTTDw6ErSKqEwwlVjGgBY9VcCmEzOxaE8DziOKwn0RGwkxOf9EwEiDxIEuuGoGT9aFHNXYCAE1zK7GI50ub2LgbSODDNCjzuEl4AHNVtxHYndqW-BPRP46CoD7ex6DnQbamwYc5sncM6teb8oBA4AAwE1rzlxKaAwE2FJbJcGB-mLgAJnRCATnaeHLIxyD4nfuHxrb_RquJZHGQTOHNEvAwEWE_xTJdqCTnG2F-mdGZFnP0y_VH-IdEy0oXvL46oIHt59ElN6DEstLDEpYCjE-aLDYhomdErRwzEyvqC4zpIYpYp50GK3wP4qC5sADz7leYFIc4w77J2G3rJHawkQOXOwxOQPKfrHs7HEjc569P0zG4qQCvE6C7rwZ6AizeXyMAV4kB4xHqzQp3zFdBXzMfA6FBQigK4WbOy0E5Hr4Y2fzdE2nHzfaaD4ASJG3nZjpHnJaAfEpcLMdL4lXjbIA4AfPGNwBM47gb4nJE2OCkHZQzP4lSCkwn4kaGEvFmAdw6kRcvFSpPvr0w9frD9YfFEwcfpcwgWGs_RvGcXAWFc_IUmiXGfG8XYS78XYUk8kkQmMXfkmyk6o7V4ri4Sk2oLBHIi4YXEi4ppdvGj9aWEr4v4Iskzw4b4vy7ao966sQHfGVFGmYbg4_ERXKbGeGA8HxXTUlWom1G2DGmpQDDK4wDcAn_Gd0wWkiwpWk0NFnXP8Hpo7Mwg-HOblow0yxTKtHKWOE7_meKxIWGMBTfYU7KHKgwNWOsZ7QpQ7T6RU6dQUw6p4u5Y2HHCygkgMCx4sPH8AIrbmWAlYI2AhJR4tIBZ9V3oXY1gJLTG7FSfVHHhnHD6pkk04ybBWx_-bHHAADMIDwqdwdkp-KB5KdxcnRvxTuaSCl6dQzDfMsngBN3HLdD8B1QOE5skyn599dMlkorkmMwnUkz9eeZj4gWETDXmE94gtKykrk4D4kNLC_VABLkzS6dpKn4nktJh6kn4Kr4sdJwnSX5aoxiDb4qAn_gUNE2Av9IvIhcAkmBhHNwlczalHpEFIiAp_IlSAWgKYmOw8CkTVBp79mROFLw22GoVKg7QIkapGIxhH2QYCk7lR-FAUhCk3hFOHMgX7FXAGwBdgMRFFVaCZGVPwmE48yrkQduEVlFuFYU2ZFSIy0qcIxxFzlXArSjDuxv5aQxQAIbLL2f5IeAD3zcTd2JVZc6DPmIiB5gX_IG3diky2ASlsU4Sky2IAqUAHypyU2coKU5eHolDwDbAF4AWgVSnZIlipnHSilznDkpduOilRVXCnrACIDVVQeF-I_5GeIwJGRI5kppE5Cp4U5OEqRZRGbYyMr5hDkoJAesFnHSzGPmYxEzwRilDwk8q-VKIBpARABh2EkwPGf5IsAfQCfrWoiYAbmGRwcFFuwseFWIqMqX0TUrlwfOFN3eODLDOuyswSOEMUzlx-UgM7W4x8yO4stLqIgnGAiNmAVQEKnjw8KnetKKnitGKnmFOKnlLRKn2QZKm5UwOEFwyqAFUvQQRwgaCYU8uBpU0eFuFTKnXlUqlt9cqnQAcHFSEx8y2U2CpqooqrO1Q2HGU_e5KImsAEI1inkI7ADEou0GwVKAoUojgqAVHrKuWbAoY1cCoEWMyl7lBik9w6ym1UlREFAf4oDwg5EWACRI4lLiwTI5Mo1lcspRVPuC1UxMpcDQRF9lShEzAVymkI9yn6U4PpSvY1rHw9xH5lBEq-QcBEdlL870IlaktGJymoGdfL1ZOYAZAOIDqwRZF0VTYktFZyreI-EoilE6oLgzVGRg-65X3KAE6w2wGkgjIGIA9pzXA80GIAwKC-A_wGBA0gEhA_YERAo4HRA3kHMAvX7HABb6BQNJDn_SQHj_WATAITcqBQHOKy0g_iIlXyDy01wDr_KqDLDWqq-QCv4-_DcpzcHP5Q8RqC60w2mW0o2kLhJWmCwLP45_JHiklYWAIlS7gaTXyDL_SLTj4lkTAOQKCNQDcr3_AOlP_aP7207365_Q2nj_YMQklFITK0tbj-0jSbl_AOlX_GP7q0smDB_bP5iETWnkANGmy0v-E4ASbg6FKP4m0iWBl_CWAW0g2n60vWnd_SqAIlC-DsAUOkklJHj7_SuAklS7j7_SLSx03yAj_YBzD6X2nx0wOkaTYOksIeukO0hEo-_HAAe0yOmL_MenD6cf5x0pOlugsbjB02Wla0smA5xDcp10jemG02Wkq01gBp08UEj_BoEL-JoFdgdEH9AhmmDA9a6cmFmn6o3WF2A30Hc0wgAmghYGGwDwF0g5YGOQEummg5kEBA7YFBA9kEi0rkHHA04G6_VgFFA_UAl02f4SwHOJF00v6QM_SAlAqBk7GeyCsReyBu_GoFThCUF5ArgEH0-oGfGZnwn0loF9A5Mzhgk0mMQPEHEGG-lH4u-ns0hwGCAw0EuAwQF809AGv0pYEgAbv5V_dX7rAgWl_0oWl7AsIGi07kEnAiWmgMwsDgM0v4IldHgSAielZFH_4V_fOlPwGRmBQKAAsINmASEC0CBQUkpv_Hf7B05_5jcNekIlU-BR_WundCRqByM534SM_OliEDBlKA7BkAghIEygzBmH0_Bn8AQhln0khmLgswFSmR67qwKhnf9CYEq_MkGIA90KP035KOA_mmbA3-msg_-nC0gRlAM8WkKmWIFS08BlO_FMBswObjh_CqDIM1BnB_TRkSEGf47GFhCZMnYx5MhEQ5Mg-kyg4hkgAi-nS_KUwXfKwEpAb8kBM-AFBMkACmgxhmmg2kEPA535f0iJksgtkGxMzkE0AoRkgMuIHWtBb5O_KACJ0nQo5xT-k5MogC50t36sACWAlM8pm_ArBkgAfIG4Mo-kEMjGDNA9xnVMpWGRg1WFofEK5fk1mk_k05kYfVAxUVOcBTgqACJIsoquIssFv5EW5zmdG72AJFIlojSpaVMcw6VMuFXM0lF2AeJGgU9qpCVeynmFS8p1I0NJNwpYaTUh4xWw7Cn0UiylrI6yAgFaqk1VOqp00pim5QDhFOVQ6nRwqGnUI2YD1g9pHJALC6TEginw0wFnXVRT4LhMlmcVGlkbeFpE7RRVHCfZVEUs8mkMVHQr1gplmGVNlnw_RT6Msi6rXM-4DjFellNIkT4ss95HMgSllw01Cp8sm5lj-AClLDcf7o07Flmgx6lqsx2HhVccqdgbRHWwIPBYUhVkisoFm3VBr5NfaoocVDsqKsuwDEki1mYgaoqxI4FmjlNOF-ADOHB0_yA-AfOGDIkOFDI2SbRlReH4U-VkAs01nXVBcJZvG1lhsjbz0sgO7jWEVFkovOnqszBH6U2FGNGeFELVRFFtZVaqooos7KECErPI21kqo5in_Us14aoo5lb4s0nSALID81O8zXg6G5NM8CA4AGCGPmbilZlW4qWleFnmFYEqplHMod2KSk4shyqEI5yquVFgAnU0ypnUogCUo9CnNw6QFfUt6Jos9AoYsyqAY0lirLQrsoVVBRGZI3ak4QjeGgIspERVfVk6I2ql6IhcqeUjlGdVY5ET0nVm9Ij4ElImgCOI8Fldsp5mPlOyq4s6REHUqjLzFZlGKQa2CIgQxE1gS6nAVG6k2GO6n_lXxG0k0yrPsoJHOUlSANItdngwsiqYVPMCcsmeEU0nlkeUpco_FWVLbs5hGIc9CrWshDm3QiGGdIviogs52Fu2Gor9IoZG-swuFswXQpTw9JHjI3DlFVC2JsI99ksU_FlIsqKoblZNnvlb9m-VFlF_s9lEXUnhHXUquFsogDlHlUFl79Z9lkslKppVBxHMZWMrPs-YqEARYpGPSCq40gUH55QmlwgEmm7U8tmb42pmgQp8Ffg0YG30tmmBMjmmCAkJmassJltMl-mYA9-nsM2P6f0vplRMgZn8MoZmRA4BkiMsZmQgxxkJAtFHGg_gBc06WkW_C97KMj2mG02LkVM_gAqAg5mYgzxm4gitH4wpQ5-MsK5MAWhmhc2zl-gnmmOclhnOc7pluc3BwecwWm7AjkEHA4Zl-cxJmS01gEOMuxkgg4LkCA8LngMh35QAWLnlIC0D4A2xkgARLm9AwwEeMmpmv9KtkhouAk3gxtmPA93wVVNOGlQYcq6s1soDlKik7U02FioiFmClJ8ols4dlfwxdkoI0FE1VXqoas1alQcx0rNVGDlIVODkcFH6m1sqxr9lXTLrmINluU8WD9s84qoVMvFhnH9ErUyDlko9anw093zKs8jnDwjblQsrwryFTsBWOA9ky2P7m7socr7sy9n0UneEpslGAyUpHFYc-sEA8sirOsmipMcl0Cls97k1-STxkVcVlA8wpHPs0HkdVfSlj-WqJoASREcc-BEjs2GlhACID8cz8qCc39lgci9m-I3GmMoslG44gcp7stRErsjVmLcqykfUiUL1Ao9nWwFoo6syqogoyIDi8y0BaI49nXsumkE8p4Lg4jXE088qqjlH0pi86qmS8ycrS81XnI8uOFYFeXmr_A3nK843l8cgCpicvhG3Ul-6CI0ApjgURHTs_7k1-cHFvY4HFVJbXndlSqr68n5KG8g1lUsjRHm8zZH1AoPnW8qlnq8wGxe84XHPYiUILhNAr-8vXlJXXHHB849lQ8_bkK8jPnR8pCl1QankJ4mZExlXArPsxMpbc-nk7cr9ls8gomc80TlXUh3mgcyTn3Umdnoo2Xk-lXHGYs-qpxVRqpnchMrPM3bnIIrvkhAcICUAbPmB8hYr58mXki8uXkR8q3lS8mqq28j3ka8n7GW4v7E_JBcLF81PlYFafn1g8j75g60oclMfkcFBNmK8mqqCwR2E9s7Mqds_vnVla4o38txGWgDxHPsm-E-I4hFllR-Gv8z_k_JG8pPsu_mAFCvlacqox4014G6c3IBE0tCCUgDHme8tfnJY0rGJ8qYDS4_0ZPg-NnrIyPlRVVmCX8tXllwj7ne87LGb8sMA_JW3GPmM_nLsrAWOwnTlj5fwrOg2gAcwJZ5aCZKnwcq7GwCrXmxmQ_mw0xyDM88flFVD7kI4xACIAaaZNg8XLN89oA1w_sArck2HWwstLp8FyBrcg7kNOXOFcIos61UsxG1UxblJeQOq987Pn3InOEBQRyBKC7PlOI8nmiVK8pmFcHmKFAaB3sgUJZgawVe-IpGoGe9kEAQKopcsEL3XYvmZczcH301plIA0JmoApzlv0krne_PAHlc3hmVcwBk1chJlMA0RnjMyLktFObj503BCsRcf4K8bJmJCwWCHwzcqBCdemIlFPiX0NJnKECWDj4ubgm03BCZCpmhp00MBY8e_7p8YBz38c_5iEMoFiELP4LhMXhiEff4H8cf4p8ff6JCEulW_NAT7_IeDSA0vj7_agSaM3oWO0oJAT0qHg7GFIUzwcgCDCkYiX0ff7dC2qpzwSYW3_CYWIlJunbCzYVQ8UYVLwHoX7C_oUzwGxl_AprnbMlxkgANxmDcsMGuC8hlpc26GeCg1HeCmznMM-zlq_OzldM-kGOQdWl2cn-kVcgBlxMyIU8gurkxCiLnFApv5VA4f5xc9UGJAnBlwikLmZAhUF9cgblVM5LkjclWFVs30nlE85mWcn8kDOIyn-I1bkI88ylMIgllkIvanbcz9lkxATl18whEWgPmDZ88gW1VHvkTbPpFBwmjlci5oqklZgUDOHiodBVECQFXI478yMoj8sBGVI3vkci1QrcisOH-s3kX1gwkVj-TiqEi0aCBUjCkhUt6nw87nkgC3nn18xTJHI5Fkm84AWWgKgVbI3ob6c6AXrAG7mTdUtlXmFTkAC7gpqcy0CyeTTkA05_mnwx0XGlPEoj_N_lP82sr0UkGlU0msq9s2_kZlQArX8jtl8iyJyA8kCkUc-0oscpS5bsmHlCU3CrsAbOzh7GGkTDCqCKimMVY8rpEus2NK488qDzgkip5igjmRInHljIvHm6I__nhi7gpACuMWKcwMaRU6KmlXTqlaIhKmRwXqkwAFKm5wH1myi4BDyig_hjUnKkaYgam0cocXNFAaBAUsqnTVWarUAeapXIpFE3Iu5EbVSdCYo55GEi2iy889nmso_9mt8qqELhQkUjdWixmIuTmQotsWVFL_lei5wqIs0F5Gcshk4QdAnhAViB-Va0m6w24xKhSmoqhBAmnrbNHImVq6c1VG6p5RAnJ2ehEs2RSLJ2dzqxE02x2tGNowAMbFF9N_LwAakxTAUKLg0kBFqIt5yUAIArL3TCVGwGP5SUt3LBWYBJBAWvxEAFOy3IrQYGZcQwCoyNZXpFd4C5MiUwAItzJZKCUvAPEaRgAqlSdW5LCzOL4hdc5z_nYnr6gKLrsAeL4cShzzr5cLrtAbUBRdC0ASSliVsS4SVyS9fbxfXaZ0S3SB3QSSXCS4C4F2auEK2YoDPDcqyDvEpKWAGdG0WEXrGwWiWCistJvBErZGgSfJhwK4A2wZvb6tOvIBwHKKOXCwCY9KlqVROACaSuyVgAbargwYKUgmOwnwwE6ArIaSXOS22A2wegGSdJvKGgPSWBwW2DrDeUBJSz2CAXFKVLANyUiSrKVV5WvKeS8SwFwURHbAPyVGOAKW2S14LBShg6yJMKWfdKJz43RjblwGKXhwTOAjKDZjUSrXLinHmCyJM8BKSiKCUS7qUfODg7jwEaWFdVGFR6YWYDS8iVDSseqSS2Ub0vVBDeSnmCxxCwCxxVaWZGCqWEwWwCBSmqUhS5AwNS1fRNS1qVOS9qXTwG2Dn8STpdgHIAt5JKWt5IqXrS2sDxStwSp2LsDV5TKXPSiwA2wDvjvSu6UFSw0AVQAOAtwPKVySxKUk9Z6WbSguDQOHaV0WKqUCog6UnWMKXQOSKVSRM6Vj5aIDhwK6XICf6WfS7KVt5TvI7GHvKpSvKVEynvI3Sj6VyS_2DQypWyb3AZyEpAvKtQUyUS3TH53EgHGaZaUBOS5MrN2IOwQAChwd2fmXiOBmVOSwnoRxPuz0OfmWaRKnaOSzGUEAEAJaYkWVyysWU2wCACJRVZKqreNbRtUtxGTIaAxShWU5paaIxS1qBKygvIqytWUUeW6I5PI8XKWPaW2Sk2XJ2RmXRAAIKBSiaXT5aUB-JJ2WF5BGW6QfGwxS-KU5RO6D-ysmA5RQl5yy45IR5MawU-IqwRJL2WqNZoKXQWJxThUMJeyt2WN-HSUxSl8IpypyXvge8nRGH7JgS_fHIEgfbZ5ZkDqktUkVHCupFisImSkpx7eWYYIdzHpEGEuIkfgIvrZ3eWW8NTzFSNHTxhHHFoQJf-aCZd2XqWaZyozQRo9y-I4tWfuX_iwJ5AtFqyMRXAw3gBOwm_Wkq3QNxKb3IgA7-APYp2YfIT3I5wm2E5zsyoeUbyieWP1EXJTZNfQa5LqyHy36wBOPAlcREiUKRUiJchfXLlOao4DQIaBYtT5YDQO6BXvAjwG3cqyPyu-UFOTeVOTSiIdxW5EgKgtywSxB6AK_fFchX6zoRNQnHyyuXYLHW6x2FlaFHN2W_WESJB2EXwCy3IBCy2V6SSuAAd2PBXSy1qFrOc5xovW5xCS-GIwS5uUUTBpbUKoQkj7SSXkvf9FBlGhXJ2f86RwXRpWS9yVFS5logQP6q-tOvIWgEnotwMqV2QYC7iK_UAWgbUDgyzODbSgRWzmWRXyKxRXCbQ4DSKsRWV5dRUWgDvK6wLQw2wdmXcRNZ75OcDHmQLABovWDGQuQkVU_XaU1HWsDibHmDjE61JLhAlrOdAgC3nCaX0Kjw4vAFYmGysZYYk9xXsAASVngc5zeKxaX6EvxVqWO9xf2eirr7RpxL-cyzxfdmXyAYoB3NRi46Sxh7uRd5p5BNhWLpC-zLNMeo4OaHZ9AN8C-PI7JLAXAyQWW1qUhA2pltI6KogW8y7AHwrBARJY7AI6IsgB2yZGPjwty-7aEwcokYxEQzOfNHbfRJBVUKloyrgFlZWKqZVHi2RIwEsUr3CnCDvk48D3wpab1su_IXMhgAOnDjaii6Hn3cjyCC80PmhUyjkg80wXQsv_kOi-sUuI19n4I6kVcc2kW18oTn6iwDn28kDnR1A8Xgc2uHbUqQW-I3uGMVWXnrcwFUaskfkH8EKlmi6TYvAvBKITJ0pGs72GaIxfnaFZfn2vNYb502XluszsCjAX-G4OfQXSi_KlLAEakmTG8qo88ta0UlJzrmHil8U5oACU1MUiUuwBiUi0UagSSnnFFHnqU1ICZAXIpqUtMVKUlSmcq-Sk8qzSnaUy0B6UlWxJw2GlkwSCo_cx5kXcuc7wc4wAdlJaYCCoQVoU_YK9IsIKPsx3nXQcQXGIuQWkix6laCPVUeQSQWmUtYL0lIKobKz7neeEvknc37mHK1CpKqwjm7Ktwakc7pFqqmTnWI28UPGCnnmC1JGMc6sXlQP7mnIhcWoAJcVZs5FFri2dlM0J5HjWZ1WjTD5EbVbVkas6FHLK_66RkiznUMqzktMmzm-Cj4XBM0IXRMvhlVcwRm1c6IUBc8BmG0iqDQi-f7lIIgCyhQWA1qj2lV_fAGNczZkIixUECAoQHrM3IH9ctwxJc8MF5QbYDetTiDUAKbmPmBLkJefgBXAdp7FgYkBVAbwBeUrAC9GWACZQdYD8APtz5AWnzTq9hlswNmCrqmsD8AcoCLVYY6XQKdXr1EACNQG-x_gE8zLqkqwh2QAzVdHIB5AI6KcDIEBzq0EBU9EABBwfgBoFM9X8Ad8WaAfdUWAQ9Uh2PgbaQQlxnq2ix6ArUB_qkAAAAPWzgGk03KQGtrA_AFvx8AFg1CGvX-mjK5pBcHaeHpJSMmGpSFyGq_Vq4EPVKoUw1kjPzpKGuA1IADyufaqQA56rg16_wn0NGvPVlVwVSlGsRKE9LY1h6tlCVdyI1pJVJKvGpAABA38Ak0UY1_ADg10gJSEtVTWBeGsEAWoHfx9H0k18GsFgu6uF4Ims4G1oEo1mjPU1zDLFSr6RBA3gFFWkAHiCmgFHV2yvAgSMBAALKPZMtACnV7T1PSyRU4GswBmA_AHkACgG0MQAA`} __position={1} __code={'() => {\\n  const eventsMock = {\\n    start: \\'2014-01-01T00:00:00.000Z\\',\\n    end: \\'2018-12-27T00:00:00.000Z\\',\\n    offset: \\'day\\',\\n    series: {\\n      labels: [\\'encounter\\', \\'fishing\\', \\'gap\\', \\'port\\'],\\n      counts: [\\n        [\\n          36,\\n          36,\\n          24,\\n          16,\\n          16,\\n          8,\\n          22,\\n          28,\\n          22,\\n          26,\\n          36,\\n          32,\\n          68,\\n          40,\\n          30,\\n          32,\\n          44,\\n          52,\\n          56,\\n          18,\\n          34,\\n          30,\\n          32,\\n          32,\\n          24,\\n          26,\\n          34,\\n          24,\\n          34,\\n          30,\\n          62,\\n          36,\\n          26,\\n          38,\\n          26,\\n          26,\\n          14,\\n          26,\\n          26,\\n          20,\\n          32,\\n          36,\\n          42,\\n          36,\\n          22,\\n          32,\\n          32,\\n          34,\\n          32,\\n          38,\\n          38,\\n          22,\\n          28,\\n          22,\\n          12,\\n          14,\\n          14,\\n          14,\\n          16,\\n          20,\\n          10,\\n          18,\\n          28,\\n          14,\\n          28,\\n          40,\\n          32,\\n          52,\\n          24,\\n          34,\\n          24,\\n          34,\\n          24,\\n          34,\\n          22,\\n          26,\\n          28,\\n          12,\\n          16,\\n          26,\\n          18,\\n          12,\\n          14,\\n          28,\\n          32,\\n          26,\\n          28,\\n          14,\\n          34,\\n          14,\\n          14,\\n          20,\\n          22,\\n          16,\\n          16,\\n          16,\\n          22,\\n          28,\\n          20,\\n          26,\\n          20,\\n          26,\\n          32,\\n          54,\\n          38,\\n          20,\\n          38,\\n          22,\\n          20,\\n          8,\\n          16,\\n          16,\\n          8,\\n          4,\\n          8,\\n          12,\\n          12,\\n          16,\\n          16,\\n          24,\\n          18,\\n          12,\\n          20,\\n          22,\\n          22,\\n          36,\\n          40,\\n          20,\\n          42,\\n          18,\\n          16,\\n          26,\\n          28,\\n          38,\\n          26,\\n          28,\\n          12,\\n          8,\\n          10,\\n          8,\\n          8,\\n          16,\\n          16,\\n          16,\\n          24,\\n          20,\\n          20,\\n          26,\\n          8,\\n          24,\\n          10,\\n          16,\\n          32,\\n          22,\\n          6,\\n          20,\\n          18,\\n          16,\\n          14,\\n          24,\\n          22,\\n          24,\\n          22,\\n          16,\\n          14,\\n          14,\\n          28,\\n          20,\\n          24,\\n          16,\\n          14,\\n          20,\\n          34,\\n          26,\\n          32,\\n          16,\\n          20,\\n          16,\\n          22,\\n          14,\\n          14,\\n          22,\\n          24,\\n          20,\\n          10,\\n          12,\\n          14,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          38,\\n          16,\\n          20,\\n          24,\\n          22,\\n          26,\\n          22,\\n          10,\\n          18,\\n          22,\\n          12,\\n          24,\\n          14,\\n          14,\\n          28,\\n          26,\\n          30,\\n          28,\\n          24,\\n          24,\\n          24,\\n          10,\\n          16,\\n          16,\\n          8,\\n          16,\\n          24,\\n          20,\\n          30,\\n          12,\\n          16,\\n          36,\\n          20,\\n          22,\\n          12,\\n          20,\\n          32,\\n          28,\\n          32,\\n          18,\\n          32,\\n          8,\\n          6,\\n          26,\\n          14,\\n          28,\\n          20,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          14,\\n          6,\\n          18,\\n          22,\\n          14,\\n          10,\\n          18,\\n          18,\\n          20,\\n          14,\\n          20,\\n          26,\\n          16,\\n          22,\\n          20,\\n          10,\\n          10,\\n          20,\\n          14,\\n          20,\\n          16,\\n          10,\\n          26,\\n          18,\\n          14,\\n          20,\\n          12,\\n          22,\\n          28,\\n          16,\\n          22,\\n          26,\\n          12,\\n          22,\\n          12,\\n          14,\\n          20,\\n          14,\\n          12,\\n          16,\\n          14,\\n          16,\\n          12,\\n          12,\\n          14,\\n          32,\\n          26,\\n          36,\\n          26,\\n          20,\\n          44,\\n          22,\\n          28,\\n          22,\\n          24,\\n          18,\\n          12,\\n          10,\\n          24,\\n          20,\\n          32,\\n          12,\\n          22,\\n          18,\\n          26,\\n          34,\\n          26,\\n          18,\\n          16,\\n          26,\\n          12,\\n          16,\\n          12,\\n          10,\\n          22,\\n          18,\\n          30,\\n          22,\\n          28,\\n          18,\\n          20,\\n          16,\\n          14,\\n          10,\\n          12,\\n          8,\\n          14,\\n          12,\\n          10,\\n          10,\\n          12,\\n          8,\\n          12,\\n          14,\\n          18,\\n          20,\\n          28,\\n          24,\\n          38,\\n          18,\\n          20,\\n          6,\\n          16,\\n          14,\\n          6,\\n          20,\\n          6,\\n          8,\\n          16,\\n          8,\\n          24,\\n          32,\\n          36,\\n          20,\\n          24,\\n          22,\\n          36,\\n          36,\\n          40,\\n          40,\\n          34,\\n          32,\\n          28,\\n          34,\\n          28,\\n          34,\\n          24,\\n          50,\\n          70,\\n          54,\\n          46,\\n          20,\\n          46,\\n          40,\\n          38,\\n          44,\\n          38,\\n          38,\\n          40,\\n          20,\\n          24,\\n          16,\\n          30,\\n          52,\\n          54,\\n          34,\\n          42,\\n          36,\\n          24,\\n          24,\\n          20,\\n          56,\\n          30,\\n          50,\\n          30,\\n          22,\\n          26,\\n          30,\\n          20,\\n          4,\\n          20,\\n          16,\\n          14,\\n          20,\\n          12,\\n          22,\\n          34,\\n          34,\\n          34,\\n          30,\\n          36,\\n          42,\\n          20,\\n          20,\\n          12,\\n          14,\\n          20,\\n          8,\\n          12,\\n          16,\\n          8,\\n          26,\\n          26,\\n          20,\\n          24,\\n          20,\\n          20,\\n          24,\\n          16,\\n          38,\\n          20,\\n          12,\\n          10,\\n          14,\\n          18,\\n          8,\\n          2,\\n          14,\\n          8,\\n          0,\\n          10,\\n          6,\\n          18,\\n          18,\\n          10,\\n          12,\\n          10,\\n          6,\\n          14,\\n          4,\\n          18,\\n          20,\\n          24,\\n          24,\\n          18,\\n          22,\\n          22,\\n          12,\\n          6,\\n          6,\\n          8,\\n          2,\\n          0,\\n          4,\\n          2,\\n          4,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          6,\\n          8,\\n          6,\\n          8,\\n          6,\\n          4,\\n          4,\\n          10,\\n          10,\\n          4,\\n          8,\\n          22,\\n          22,\\n          10,\\n          12,\\n          18,\\n          14,\\n          6,\\n          0,\\n          4,\\n          6,\\n          10,\\n          6,\\n          8,\\n          12,\\n          8,\\n          2,\\n          16,\\n          12,\\n          4,\\n          2,\\n          10,\\n          6,\\n          0,\\n          12,\\n          8,\\n          14,\\n          2,\\n          14,\\n          22,\\n          16,\\n          24,\\n          18,\\n          20,\\n          36,\\n          18,\\n          12,\\n          10,\\n          8,\\n          16,\\n          0,\\n          0,\\n          0,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          8,\\n          6,\\n          6,\\n          4,\\n          6,\\n          2,\\n          4,\\n          0,\\n          6,\\n          6,\\n          4,\\n          6,\\n          8,\\n          10,\\n          6,\\n          12,\\n          16,\\n          10,\\n          4,\\n          6,\\n          2,\\n          8,\\n          0,\\n          6,\\n          4,\\n          4,\\n          10,\\n          18,\\n          16,\\n          14,\\n          6,\\n          0,\\n          8,\\n          2,\\n          8,\\n          14,\\n          12,\\n          10,\\n          6,\\n          10,\\n          10,\\n          12,\\n          20,\\n          16,\\n          28,\\n          8,\\n          12,\\n          8,\\n          4,\\n          2,\\n          2,\\n          6,\\n          8,\\n          4,\\n          8,\\n          4,\\n          2,\\n          4,\\n          0,\\n          4,\\n          2,\\n          2,\\n          2,\\n          2,\\n          0,\\n          4,\\n          4,\\n          6,\\n          14,\\n          8,\\n          12,\\n          18,\\n          26,\\n          18,\\n          10,\\n          18,\\n          10,\\n          14,\\n          14,\\n          14,\\n          4,\\n          2,\\n          2,\\n          4,\\n          2,\\n          4,\\n          6,\\n          4,\\n          6,\\n          22,\\n          8,\\n          8,\\n          24,\\n          14,\\n          6,\\n          8,\\n          8,\\n          8,\\n          8,\\n          14,\\n          6,\\n          18,\\n          18,\\n          16,\\n          32,\\n          24,\\n          52,\\n          18,\\n          18,\\n          8,\\n          4,\\n          2,\\n          0,\\n          4,\\n          2,\\n          10,\\n          14,\\n          6,\\n          16,\\n          14,\\n          6,\\n          18,\\n          4,\\n          12,\\n          10,\\n          8,\\n          8,\\n          12,\\n          8,\\n          8,\\n          6,\\n          10,\\n          18,\\n          10,\\n          6,\\n          12,\\n          6,\\n          14,\\n          4,\\n          16,\\n          10,\\n          4,\\n          12,\\n          14,\\n          12,\\n          22,\\n          20,\\n          14,\\n          18,\\n          20,\\n          8,\\n          12,\\n          18,\\n          6,\\n          4,\\n          10,\\n          10,\\n          16,\\n          14,\\n          14,\\n          6,\\n          14,\\n          14,\\n          6,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          8,\\n          6,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          28,\\n          10,\\n          12,\\n          20,\\n          30,\\n          24,\\n          24,\\n          32,\\n          30,\\n          22,\\n          16,\\n          26,\\n          18,\\n          18,\\n          24,\\n          14,\\n          20,\\n          30,\\n          22,\\n          8,\\n          0,\\n          16,\\n          22,\\n          18,\\n          10,\\n          24,\\n          16,\\n          4,\\n          8,\\n          12,\\n          10,\\n          10,\\n          10,\\n          8,\\n          8,\\n          20,\\n          14,\\n          18,\\n          24,\\n          24,\\n          28,\\n          30,\\n          20,\\n          40,\\n          36,\\n          32,\\n          56,\\n          54,\\n          60,\\n          56,\\n          28,\\n          16,\\n          28,\\n          30,\\n          22,\\n          22,\\n          14,\\n          62,\\n          40,\\n          42,\\n          68,\\n          60,\\n          56,\\n          64,\\n          32,\\n          50,\\n          34,\\n          14,\\n          24,\\n          20,\\n          24,\\n          38,\\n          42,\\n          60,\\n          46,\\n          52,\\n          42,\\n          30,\\n          28,\\n          12,\\n          16,\\n          14,\\n          22,\\n          16,\\n          12,\\n          18,\\n          38,\\n          16,\\n          30,\\n          24,\\n          16,\\n          20,\\n          10,\\n          14,\\n          14,\\n          30,\\n          30,\\n          16,\\n          30,\\n          14,\\n          50,\\n          52,\\n          64,\\n          66,\\n          64,\\n          54,\\n          44,\\n          46,\\n          52,\\n          52,\\n          34,\\n          40,\\n          30,\\n          36,\\n          28,\\n          34,\\n          22,\\n          34,\\n          20,\\n          20,\\n          20,\\n          22,\\n          18,\\n          16,\\n          30,\\n          16,\\n          24,\\n          28,\\n          22,\\n          24,\\n          34,\\n          42,\\n          50,\\n          62,\\n          44,\\n          46,\\n          44,\\n          34,\\n          20,\\n          32,\\n          32,\\n          20,\\n          28,\\n          20,\\n          20,\\n          32,\\n          20,\\n          12,\\n          16,\\n          16,\\n          24,\\n          6,\\n          18,\\n          22,\\n          26,\\n          16,\\n          12,\\n          22,\\n          10,\\n          18,\\n          38,\\n          58,\\n          44,\\n          44,\\n          44,\\n          44,\\n          24,\\n          18,\\n          14,\\n          12,\\n          12,\\n          12,\\n          10,\\n          18,\\n          10,\\n          24,\\n          14,\\n          18,\\n          22,\\n          10,\\n          20,\\n          18,\\n          18,\\n          6,\\n          22,\\n          20,\\n          26,\\n          10,\\n          24,\\n          28,\\n          24,\\n          34,\\n          68,\\n          32,\\n          28,\\n          24,\\n          18,\\n          30,\\n          32,\\n          16,\\n          12,\\n          24,\\n          22,\\n          10,\\n          12,\\n          36,\\n          28,\\n          52,\\n          28,\\n          14,\\n          6,\\n          10,\\n          8,\\n          16,\\n          10,\\n          12,\\n          38,\\n          32,\\n          34,\\n          24,\\n          28,\\n          46,\\n          36,\\n          32,\\n          38,\\n          18,\\n          22,\\n          18,\\n          14,\\n          20,\\n          24,\\n          16,\\n          20,\\n          10,\\n          28,\\n          42,\\n          36,\\n          30,\\n          20,\\n          18,\\n          26,\\n          16,\\n          24,\\n          20,\\n          38,\\n          52,\\n          40,\\n          34,\\n          46,\\n          42,\\n          24,\\n          48,\\n          62,\\n          60,\\n          76,\\n          30,\\n          36,\\n          32,\\n          42,\\n          32,\\n          48,\\n          30,\\n          32,\\n          42,\\n          32,\\n          22,\\n          20,\\n          14,\\n          38,\\n          40,\\n          32,\\n          46,\\n          32,\\n          42,\\n          22,\\n          30,\\n          24,\\n          24,\\n          30,\\n          44,\\n          26,\\n          38,\\n          28,\\n          6,\\n          40,\\n          22,\\n          32,\\n          28,\\n          32,\\n          44,\\n          48,\\n          38,\\n          50,\\n          92,\\n          50,\\n          38,\\n          44,\\n          42,\\n          22,\\n          30,\\n          32,\\n          34,\\n          34,\\n          72,\\n          46,\\n          60,\\n          28,\\n          44,\\n          76,\\n          78,\\n          72,\\n          60,\\n          68,\\n          72,\\n          32,\\n          24,\\n          28,\\n          38,\\n          32,\\n          42,\\n          34,\\n          38,\\n          44,\\n          22,\\n          30,\\n          28,\\n          20,\\n          24,\\n          24,\\n          16,\\n          26,\\n          28,\\n          16,\\n          16,\\n          26,\\n          14,\\n          28,\\n          44,\\n          48,\\n          48,\\n          36,\\n          32,\\n          46,\\n          24,\\n          20,\\n          20,\\n          20,\\n          24,\\n          38,\\n          50,\\n          24,\\n          42,\\n          46,\\n          24,\\n          44,\\n          26,\\n          20,\\n          30,\\n          16,\\n          18,\\n          28,\\n          22,\\n          20,\\n          18,\\n          36,\\n          42,\\n          42,\\n          34,\\n          60,\\n          56,\\n          54,\\n          26,\\n          52,\\n          40,\\n          44,\\n          90,\\n          66,\\n          78,\\n          70,\\n          58,\\n          66,\\n          26,\\n          42,\\n          38,\\n          58,\\n          114,\\n          122,\\n          120,\\n          90,\\n          72,\\n          38,\\n          80,\\n          60,\\n          62,\\n          58,\\n          58,\\n          30,\\n          66,\\n          58,\\n          46,\\n          34,\\n          50,\\n          26,\\n          46,\\n          32,\\n          40,\\n          26,\\n          18,\\n          22,\\n          98,\\n          82,\\n          118,\\n          162,\\n          130,\\n          94,\\n          128,\\n          80,\\n          54,\\n          90,\\n          138,\\n          140,\\n          144,\\n          98,\\n          150,\\n          140,\\n          150,\\n          166,\\n          118,\\n          128,\\n          112,\\n          96,\\n          62,\\n          26,\\n          36,\\n          18,\\n          62,\\n          36,\\n          76,\\n          44,\\n          54,\\n          32,\\n          36,\\n          28,\\n          26,\\n          28,\\n          24,\\n          20,\\n          22,\\n          12,\\n          28,\\n          24,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          30,\\n          38,\\n          30,\\n          30,\\n          24,\\n          20,\\n          20,\\n          22,\\n          28,\\n          16,\\n          28,\\n          34,\\n          26,\\n          10,\\n          8,\\n          14,\\n          16,\\n          16,\\n          22,\\n          20,\\n          8,\\n          26,\\n          18,\\n          24,\\n          18,\\n          18,\\n          12,\\n          16,\\n          18,\\n          32,\\n          50,\\n          46,\\n          54,\\n          38,\\n          38,\\n          34,\\n          26,\\n          22,\\n          26,\\n          32,\\n          26,\\n          30,\\n          22,\\n          12,\\n          18,\\n          20,\\n          12,\\n          28,\\n          10,\\n          14,\\n          16,\\n          14,\\n          16,\\n          18,\\n          24,\\n          12,\\n          26,\\n          32,\\n          24,\\n          60,\\n          90,\\n          62,\\n          52,\\n          34,\\n          32,\\n          24,\\n          12,\\n          12,\\n          10,\\n          20,\\n          10,\\n          8,\\n          22,\\n          12,\\n          22,\\n          20,\\n          8,\\n          14,\\n          10,\\n          16,\\n          14,\\n          14,\\n          10,\\n          12,\\n          14,\\n          4,\\n          14,\\n          28,\\n          48,\\n          42,\\n          42,\\n          32,\\n          24,\\n          14,\\n          14,\\n          8,\\n          10,\\n          8,\\n          18,\\n          20,\\n          30,\\n          14,\\n          10,\\n          12,\\n          16,\\n          28,\\n          26,\\n          18,\\n          10,\\n          16,\\n          20,\\n          18,\\n          12,\\n          20,\\n          16,\\n          16,\\n          32,\\n          38,\\n          50,\\n          36,\\n          48,\\n          32,\\n          32,\\n          40,\\n          34,\\n          26,\\n          16,\\n          14,\\n          46,\\n          40,\\n          48,\\n          12,\\n          20,\\n          14,\\n          22,\\n          22,\\n          26,\\n          30,\\n          24,\\n          12,\\n          44,\\n          36,\\n          32,\\n          32,\\n          52,\\n          48,\\n          40,\\n          48,\\n          80,\\n          96,\\n          60,\\n          74,\\n          62,\\n          42,\\n          26,\\n          38,\\n          18,\\n          34,\\n          44,\\n          36,\\n          36,\\n          26,\\n          34,\\n          30,\\n          14,\\n          10,\\n          18,\\n          14,\\n          18,\\n          18,\\n          4,\\n          12,\\n          18,\\n          20,\\n          24,\\n          28,\\n          32,\\n          50,\\n          62,\\n          82,\\n          78,\\n          72,\\n          58,\\n          58,\\n          68,\\n          90,\\n          68,\\n          22,\\n          32,\\n          22,\\n          42,\\n          22,\\n          26,\\n          70,\\n          42,\\n          48,\\n          40,\\n          42,\\n          36,\\n          30,\\n          32,\\n          14,\\n          38,\\n          38,\\n          44,\\n          46,\\n          44,\\n          42,\\n          76,\\n          70,\\n          62,\\n          48,\\n          84,\\n          28,\\n          42,\\n          34,\\n          42,\\n          44,\\n          38,\\n          56,\\n          62,\\n          86,\\n          56,\\n          62,\\n          90,\\n          64,\\n          78,\\n          82,\\n          50,\\n          54,\\n          50,\\n          46,\\n          42,\\n          56,\\n          46,\\n          66,\\n          100,\\n          84,\\n          106,\\n          68,\\n          56,\\n          38,\\n          36,\\n          24,\\n          40,\\n          50,\\n          34,\\n          24,\\n          68,\\n          48,\\n          40,\\n          50,\\n          38,\\n          64,\\n          52,\\n          50,\\n          36,\\n          40,\\n          52,\\n          62,\\n          86,\\n          48,\\n          58,\\n          46,\\n          48,\\n          38,\\n          58,\\n          64,\\n          38,\\n          54,\\n          48,\\n          24,\\n          28,\\n          24,\\n          36,\\n          40,\\n          16,\\n          32,\\n          32,\\n          22,\\n          36,\\n          54,\\n          56,\\n          70,\\n          62,\\n          48,\\n          30,\\n          54,\\n          44,\\n          20,\\n          42,\\n          44,\\n          40,\\n          36,\\n          50,\\n          24,\\n          42,\\n          64,\\n          54,\\n          40,\\n          22,\\n          32,\\n          26,\\n          32,\\n          42,\\n          52,\\n          80,\\n          74,\\n          52,\\n          30,\\n          58,\\n          42,\\n          34,\\n          72,\\n          66,\\n          64,\\n          68,\\n          72,\\n          72,\\n          64,\\n          138,\\n          144,\\n          146,\\n          140,\\n          166,\\n          126,\\n          134,\\n          118,\\n          130,\\n          82,\\n          54,\\n          62,\\n          64,\\n          70,\\n          68,\\n          52,\\n          32,\\n          28,\\n          54,\\n          62,\\n          70,\\n          78,\\n          84,\\n          68,\\n          54,\\n          24,\\n          40,\\n          38,\\n          40,\\n          26,\\n          42,\\n          36,\\n          36,\\n          48,\\n          26,\\n          60,\\n          64,\\n          60,\\n          48,\\n          46,\\n          58,\\n          78,\\n          88,\\n          68,\\n          54,\\n          42,\\n          66,\\n          46,\\n          38,\\n          64,\\n          40,\\n          38,\\n          36,\\n          32,\\n          44,\\n          104,\\n          144,\\n          146,\\n          100,\\n          64,\\n          30,\\n          24,\\n          44,\\n          68,\\n          42,\\n          84,\\n          62,\\n          58,\\n          40,\\n          24,\\n          16,\\n          22,\\n          24,\\n          30,\\n          28,\\n          22,\\n          38,\\n          16,\\n          14,\\n          20,\\n          24,\\n          16,\\n          18,\\n          16,\\n          6,\\n          18,\\n          16,\\n          24,\\n          20,\\n          28,\\n          22,\\n          32,\\n          54,\\n          72,\\n          96,\\n          78,\\n          66,\\n          102,\\n          52,\\n          28,\\n          26,\\n          16,\\n          36,\\n          26,\\n          24,\\n          12,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          32,\\n          10,\\n          12,\\n          16,\\n          8,\\n          14,\\n          12,\\n          18,\\n          14,\\n          34,\\n          34,\\n          54,\\n          70,\\n          64,\\n          68,\\n          52,\\n          38,\\n          36,\\n          26,\\n          32,\\n          32,\\n          18,\\n          36,\\n          34,\\n          14,\\n          14,\\n          30,\\n          20,\\n          34,\\n          78,\\n          30,\\n          16,\\n          20,\\n          12,\\n          26,\\n          12,\\n          22,\\n          20,\\n          32,\\n          20,\\n          26,\\n          86,\\n          68,\\n          68,\\n          68,\\n          56,\\n          56,\\n          26,\\n          44,\\n          54,\\n          54,\\n          40,\\n          56,\\n          28,\\n          42,\\n          42,\\n          50,\\n          36,\\n          40,\\n          58,\\n          32,\\n          42,\\n          18,\\n          40,\\n          34,\\n          38,\\n          46,\\n          34,\\n          80,\\n          82,\\n          86,\\n          58,\\n          64,\\n          78,\\n          64,\\n          46,\\n          48,\\n          52,\\n          30,\\n          40,\\n          64,\\n          88,\\n          60,\\n          50,\\n          42,\\n          38,\\n          36,\\n          20,\\n          30,\\n          42,\\n          34,\\n          36,\\n          24,\\n          34,\\n          46,\\n          54,\\n          50,\\n          30,\\n          54,\\n          44,\\n          86,\\n          84,\\n          96,\\n          78,\\n          58,\\n          58,\\n          40,\\n          48,\\n          38,\\n          60,\\n          74,\\n          84,\\n          66,\\n          52,\\n          42,\\n          44,\\n          32,\\n          52,\\n          52,\\n          48,\\n          42,\\n          60,\\n          50,\\n          48,\\n          68,\\n          46,\\n          60,\\n          66,\\n          68,\\n          92,\\n          96,\\n          104,\\n          80,\\n          104,\\n          104,\\n          80,\\n          68,\\n          50,\\n          70,\\n          56,\\n          66,\\n          56,\\n          36,\\n          26,\\n          32,\\n          30,\\n          20,\\n          40,\\n          46,\\n          36,\\n          44,\\n          32,\\n          30,\\n          28,\\n          36,\\n          44,\\n          52,\\n          76,\\n          34,\\n          40,\\n          54,\\n          58,\\n          70,\\n          60,\\n          78,\\n          64,\\n          44,\\n          48,\\n          42,\\n          26,\\n          52,\\n          62,\\n          62,\\n          60,\\n          38,\\n          46,\\n          62,\\n          46,\\n          34,\\n          28,\\n          36,\\n          28,\\n          22,\\n          56,\\n          40,\\n          58,\\n          34,\\n          44,\\n          56,\\n          54,\\n          66,\\n          72,\\n          58,\\n          54,\\n          40,\\n          56,\\n          38,\\n          32,\\n          42,\\n          28,\\n          40,\\n          50,\\n          20,\\n          20,\\n          32,\\n          38,\\n          26,\\n          34,\\n          26,\\n          36,\\n          42,\\n          54,\\n          52,\\n          56,\\n          28,\\n          20,\\n          24,\\n          36,\\n          40,\\n          54,\\n          76,\\n          54,\\n          44,\\n          38,\\n          56,\\n          50,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          1414,\\n          1343,\\n          1385,\\n          1471,\\n          1444,\\n          1477,\\n          1321,\\n          1405,\\n          1383,\\n          1388,\\n          1426,\\n          1458,\\n          1514,\\n          1504,\\n          1527,\\n          1517,\\n          1599,\\n          1513,\\n          1486,\\n          1500,\\n          1247,\\n          1435,\\n          1547,\\n          1498,\\n          1378,\\n          1407,\\n          1443,\\n          1381,\\n          1401,\\n          1357,\\n          1414,\\n          1093,\\n          1004,\\n          859,\\n          979,\\n          973,\\n          1038,\\n          985,\\n          1059,\\n          1154,\\n          1306,\\n          1483,\\n          1509,\\n          1482,\\n          1527,\\n          1591,\\n          1616,\\n          1607,\\n          1581,\\n          1543,\\n          1469,\\n          1453,\\n          1419,\\n          1392,\\n          1403,\\n          1533,\\n          1621,\\n          1625,\\n          1653,\\n          1658,\\n          1625,\\n          1607,\\n          1626,\\n          1634,\\n          1637,\\n          1573,\\n          1546,\\n          1472,\\n          1473,\\n          1501,\\n          1527,\\n          1580,\\n          1627,\\n          1791,\\n          1894,\\n          1933,\\n          2013,\\n          2272,\\n          2378,\\n          2425,\\n          2381,\\n          2328,\\n          2343,\\n          2283,\\n          2298,\\n          1989,\\n          1862,\\n          1851,\\n          1756,\\n          1811,\\n          1985,\\n          2213,\\n          2242,\\n          2316,\\n          2370,\\n          2305,\\n          2318,\\n          2243,\\n          2308,\\n          2425,\\n          2385,\\n          2534,\\n          2597,\\n          2570,\\n          2624,\\n          2587,\\n          2652,\\n          2631,\\n          2709,\\n          2631,\\n          2654,\\n          2681,\\n          2674,\\n          2571,\\n          2431,\\n          2414,\\n          2483,\\n          2444,\\n          2372,\\n          2482,\\n          2377,\\n          2227,\\n          2150,\\n          2104,\\n          2150,\\n          1999,\\n          2145,\\n          2244,\\n          2288,\\n          2382,\\n          2508,\\n          2591,\\n          2526,\\n          2587,\\n          2613,\\n          2587,\\n          2610,\\n          2615,\\n          2586,\\n          2581,\\n          2574,\\n          2618,\\n          2566,\\n          2582,\\n          2638,\\n          2699,\\n          2676,\\n          2855,\\n          2812,\\n          2719,\\n          2686,\\n          2555,\\n          2328,\\n          2253,\\n          2189,\\n          2066,\\n          2065,\\n          2156,\\n          2076,\\n          2155,\\n          2176,\\n          2130,\\n          2048,\\n          1903,\\n          1870,\\n          1842,\\n          1798,\\n          1719,\\n          1678,\\n          1629,\\n          1623,\\n          1481,\\n          1446,\\n          1601,\\n          1597,\\n          1588,\\n          1633,\\n          1588,\\n          1580,\\n          1520,\\n          1457,\\n          1475,\\n          1453,\\n          1410,\\n          1409,\\n          1355,\\n          1369,\\n          1496,\\n          1618,\\n          1688,\\n          1776,\\n          1800,\\n          1813,\\n          1894,\\n          1977,\\n          2049,\\n          2029,\\n          2060,\\n          2082,\\n          2158,\\n          2208,\\n          2255,\\n          2326,\\n          2245,\\n          2172,\\n          2150,\\n          2274,\\n          2162,\\n          2028,\\n          1986,\\n          1885,\\n          1796,\\n          1829,\\n          1842,\\n          1861,\\n          1870,\\n          1928,\\n          2018,\\n          2030,\\n          1733,\\n          1754,\\n          1802,\\n          1864,\\n          1836,\\n          1864,\\n          1885,\\n          1929,\\n          1876,\\n          1902,\\n          1929,\\n          1932,\\n          1952,\\n          1926,\\n          1901,\\n          1820,\\n          1859,\\n          1763,\\n          1777,\\n          1696,\\n          1615,\\n          1606,\\n          1562,\\n          1568,\\n          1562,\\n          1559,\\n          1611,\\n          1547,\\n          1583,\\n          1646,\\n          1553,\\n          1446,\\n          1550,\\n          1564,\\n          1591,\\n          1577,\\n          1593,\\n          1582,\\n          1537,\\n          1707,\\n          1728,\\n          1631,\\n          1736,\\n          1694,\\n          1723,\\n          1707,\\n          1680,\\n          1713,\\n          1722,\\n          1577,\\n          1581,\\n          1538,\\n          1538,\\n          1563,\\n          1599,\\n          1532,\\n          1600,\\n          1616,\\n          1443,\\n          1704,\\n          1639,\\n          1766,\\n          1797,\\n          1875,\\n          1825,\\n          1861,\\n          1904,\\n          1888,\\n          1931,\\n          1994,\\n          1997,\\n          2008,\\n          2047,\\n          2036,\\n          1931,\\n          1897,\\n          1847,\\n          1854,\\n          1881,\\n          1846,\\n          1650,\\n          1627,\\n          1562,\\n          1532,\\n          1536,\\n          1556,\\n          1522,\\n          1564,\\n          1694,\\n          1788,\\n          1957,\\n          2006,\\n          2190,\\n          2314,\\n          2308,\\n          2246,\\n          1881,\\n          1860,\\n          1804,\\n          2131,\\n          2167,\\n          2058,\\n          2120,\\n          2154,\\n          1863,\\n          1885,\\n          1891,\\n          1950,\\n          1903,\\n          1778,\\n          1757,\\n          1672,\\n          1597,\\n          1561,\\n          1612,\\n          1711,\\n          1790,\\n          1855,\\n          1942,\\n          1888,\\n          1877,\\n          1924,\\n          2030,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          22,\\n          23,\\n          22,\\n          38,\\n          34,\\n          22,\\n          19,\\n          22,\\n          22,\\n          19,\\n          30,\\n          20,\\n          12,\\n          17,\\n          22,\\n          19,\\n          18,\\n          19,\\n          22,\\n          23,\\n          29,\\n          27,\\n          22,\\n          22,\\n          28,\\n          18,\\n          17,\\n          24,\\n          19,\\n          14,\\n          25,\\n          10,\\n          17,\\n          12,\\n          26,\\n          23,\\n          17,\\n          19,\\n          24,\\n          25,\\n          27,\\n          17,\\n          27,\\n          23,\\n          20,\\n          25,\\n          30,\\n          23,\\n          27,\\n          25,\\n          28,\\n          31,\\n          34,\\n          32,\\n          27,\\n          33,\\n          28,\\n          32,\\n          23,\\n          21,\\n          28,\\n          22,\\n          33,\\n          21,\\n          21,\\n          85,\\n          190,\\n          119,\\n          31,\\n          37,\\n          58,\\n          135,\\n          41,\\n          41,\\n          46,\\n          37,\\n          35,\\n          27,\\n          39,\\n          31,\\n          111,\\n          45,\\n          27,\\n          30,\\n          57,\\n          52,\\n          66,\\n          55,\\n          32,\\n          31,\\n          43,\\n          40,\\n          38,\\n          41,\\n          39,\\n          38,\\n          65,\\n          39,\\n          46,\\n          65,\\n          49,\\n          75,\\n          61,\\n          43,\\n          40,\\n          92,\\n          55,\\n          62,\\n          41,\\n          75,\\n          62,\\n          51,\\n          73,\\n          242,\\n          46,\\n          41,\\n          51,\\n          50,\\n          54,\\n          57,\\n          51,\\n          46,\\n          52,\\n          46,\\n          51,\\n          63,\\n          43,\\n          54,\\n          38,\\n          55,\\n          77,\\n          43,\\n          53,\\n          48,\\n          90,\\n          54,\\n          61,\\n          53,\\n          30,\\n          53,\\n          79,\\n          194,\\n          58,\\n          46,\\n          64,\\n          47,\\n          54,\\n          56,\\n          42,\\n          60,\\n          42,\\n          48,\\n          37,\\n          53,\\n          41,\\n          55,\\n          52,\\n          40,\\n          43,\\n          39,\\n          35,\\n          23,\\n          35,\\n          28,\\n          24,\\n          21,\\n          31,\\n          39,\\n          22,\\n          33,\\n          28,\\n          30,\\n          24,\\n          33,\\n          20,\\n          26,\\n          28,\\n          29,\\n          21,\\n          25,\\n          20,\\n          37,\\n          33,\\n          36,\\n          21,\\n          28,\\n          38,\\n          33,\\n          35,\\n          45,\\n          33,\\n          38,\\n          41,\\n          45,\\n          43,\\n          46,\\n          36,\\n          40,\\n          29,\\n          29,\\n          43,\\n          41,\\n          37,\\n          42,\\n          39,\\n          39,\\n          42,\\n          35,\\n          37,\\n          34,\\n          35,\\n          53,\\n          38,\\n          39,\\n          35,\\n          33,\\n          38,\\n          57,\\n          80,\\n          46,\\n          50,\\n          50,\\n          40,\\n          45,\\n          44,\\n          58,\\n          61,\\n          59,\\n          44,\\n          48,\\n          40,\\n          45,\\n          39,\\n          38,\\n          34,\\n          56,\\n          44,\\n          36,\\n          32,\\n          49,\\n          38,\\n          41,\\n          50,\\n          41,\\n          45,\\n          46,\\n          41,\\n          42,\\n          44,\\n          57,\\n          47,\\n          38,\\n          105,\\n          47,\\n          57,\\n          51,\\n          43,\\n          53,\\n          36,\\n          45,\\n          59,\\n          45,\\n          68,\\n          70,\\n          57,\\n          49,\\n          56,\\n          40,\\n          52,\\n          52,\\n          37,\\n          52,\\n          51,\\n          57,\\n          35,\\n          56,\\n          59,\\n          46,\\n          63,\\n          47,\\n          46,\\n          45,\\n          46,\\n          46,\\n          44,\\n          46,\\n          43,\\n          45,\\n          42,\\n          37,\\n          50,\\n          46,\\n          35,\\n          45,\\n          43,\\n          34,\\n          42,\\n          43,\\n          45,\\n          40,\\n          60,\\n          39,\\n          56,\\n          76,\\n          41,\\n          42,\\n          56,\\n          35,\\n          43,\\n          35,\\n          49,\\n          40,\\n          286,\\n          64,\\n          46,\\n          128,\\n          65,\\n          49,\\n          42,\\n          48,\\n          60,\\n          34,\\n          31,\\n          37,\\n          35,\\n          31,\\n          40,\\n          39,\\n          29,\\n          34,\\n          78,\\n          31,\\n          39,\\n          37,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          65,\\n          102,\\n          90,\\n          100,\\n          106,\\n          100,\\n          120,\\n          136,\\n          94,\\n          95,\\n          143,\\n          112,\\n          109,\\n          108,\\n          97,\\n          99,\\n          85,\\n          87,\\n          110,\\n          82,\\n          96,\\n          95,\\n          74,\\n          129,\\n          140,\\n          124,\\n          127,\\n          85,\\n          128,\\n          122,\\n          105,\\n          121,\\n          117,\\n          107,\\n          80,\\n          100,\\n          76,\\n          121,\\n          119,\\n          87,\\n          101,\\n          92,\\n          71,\\n          90,\\n          81,\\n          73,\\n          76,\\n          82,\\n          66,\\n          91,\\n          71,\\n          81,\\n          101,\\n          100,\\n          85,\\n          88,\\n          105,\\n          123,\\n          110,\\n          100,\\n          113,\\n          91,\\n          76,\\n          118,\\n          129,\\n          123,\\n          128,\\n          112,\\n          122,\\n          108,\\n          114,\\n          120,\\n          136,\\n          123,\\n          116,\\n          106,\\n          100,\\n          135,\\n          194,\\n          163,\\n          106,\\n          152,\\n          135,\\n          164,\\n          197,\\n          173,\\n          147,\\n          158,\\n          121,\\n          110,\\n          93,\\n          123,\\n          128,\\n          125,\\n          117,\\n          141,\\n          137,\\n          113,\\n          128,\\n          142,\\n          133,\\n          109,\\n          143,\\n          130,\\n          124,\\n          119,\\n          107,\\n          150,\\n          110,\\n          123,\\n          135,\\n          147,\\n          186,\\n          181,\\n          184,\\n          154,\\n          156,\\n          159,\\n          124,\\n          121,\\n          111,\\n          129,\\n          137,\\n          126,\\n          144,\\n          153,\\n          119,\\n          124,\\n          163,\\n          130,\\n          134,\\n          126,\\n          128,\\n          114,\\n          112,\\n          97,\\n          100,\\n          113,\\n          104,\\n          109,\\n          118,\\n          157,\\n          163,\\n          201,\\n          186,\\n          240,\\n          209,\\n          203,\\n          214,\\n          170,\\n          173,\\n          150,\\n          169,\\n          152,\\n          155,\\n          179,\\n          213,\\n          187,\\n          184,\\n          158,\\n          133,\\n          96,\\n          70,\\n          70,\\n          58,\\n          30,\\n          16,\\n          19,\\n          61,\\n          47,\\n          64,\\n          70,\\n          108,\\n          126,\\n          105,\\n          109,\\n          94,\\n          97,\\n          75,\\n          99,\\n          81,\\n          61,\\n          75,\\n          93,\\n          83,\\n          70,\\n          92,\\n          79,\\n          80,\\n          100,\\n          88,\\n          83,\\n          98,\\n          88,\\n          86,\\n          90,\\n          104,\\n          96,\\n          98,\\n          113,\\n          142,\\n          137,\\n          143,\\n          125,\\n          152,\\n          114,\\n          128,\\n          111,\\n          110,\\n          77,\\n          118,\\n          106,\\n          114,\\n          140,\\n          115,\\n          126,\\n          133,\\n          126,\\n          108,\\n          173,\\n          166,\\n          136,\\n          120,\\n          109,\\n          123,\\n          127,\\n          138,\\n          112,\\n          108,\\n          108,\\n          180,\\n          162,\\n          137,\\n          107,\\n          139,\\n          123,\\n          117,\\n          106,\\n          130,\\n          113,\\n          90,\\n          108,\\n          111,\\n          130,\\n          100,\\n          129,\\n          126,\\n          123,\\n          148,\\n          127,\\n          108,\\n          127,\\n          142,\\n          99,\\n          136,\\n          131,\\n          123,\\n          138,\\n          137,\\n          137,\\n          139,\\n          138,\\n          151,\\n          164,\\n          168,\\n          179,\\n          159,\\n          145,\\n          134,\\n          147,\\n          112,\\n          116,\\n          138,\\n          115,\\n          136,\\n          117,\\n          130,\\n          150,\\n          162,\\n          103,\\n          133,\\n          123,\\n          117,\\n          105,\\n          117,\\n          128,\\n          135,\\n          132,\\n          146,\\n          166,\\n          157,\\n          187,\\n          157,\\n          143,\\n          176,\\n          151,\\n          183,\\n          154,\\n          136,\\n          130,\\n          131,\\n          150,\\n          154,\\n          146,\\n          4,\\n          3,\\n          5,\\n          0,\\n          3,\\n          3,\\n          5,\\n          4,\\n          3,\\n          3,\\n          0,\\n          5,\\n          3,\\n          4,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          0,\\n          4,\\n          0,\\n          6,\\n          6,\\n          5,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n      ],\\n    },\\n  }\\n  return (\\n    <Timebar\\n      start={\\'2017-12-01T00:00:00.000Z\\'}\\n      end={new Date().toISOString()}\\n      absoluteStart={\\'2017-12-01T00:00:00.000Z\\'}\\n      absoluteEnd={new Date().toISOString()}\\n      bookmarkStart={null}\\n      bookmarkEnd={null}\\n      onChange={d => console.log(d)}\\n      onBookmarkChange={d => console.log(d)}\\n      // enablePlayback\\n    >\\n      {props => (\\n        <TimebarEvents {...props} events={eventsMock} showFishing={false} />\\n      )}\\n    </Timebar>\\n  )\\n}'} __scope={{props: this ? this.props : props,Timebar,TimebarEvents}}>\n  {() => {\n    const eventsMock = {\n      start: '2014-01-01T00:00:00.000Z',\n      end: '2018-12-27T00:00:00.000Z',\n      offset: 'day',\n      series: {\n        labels: ['encounter', 'fishing', 'gap', 'port'],\n        counts: [\n          [ 36, 36, 24, 16, 16, 8, 22, 28, 22, 26, 36, 32, 68, 40, 30, 32, 44, 52, 56, 18, 34, 30, 32, 32, 24, 26, 34, 24, 34, 30, 62, 36, 26, 38, 26, 26, 14, 26, 26, 20, 32, 36, 42, 36, 22, 32, 32, 34, 32, 38, 38, 22, 28, 22, 12, 14, 14, 14, 16, 20, 10, 18, 28, 14, 28, 40, 32, 52, 24, 34, 24, 34, 24, 34, 22, 26, 28, 12, 16, 26, 18, 12, 14, 28, 32, 26, 28, 14, 34, 14, 14, 20, 22, 16, 16, 16, 22, 28, 20, 26, 20, 26, 32, 54, 38, 20, 38, 22, 20, 8, 16, 16, 8, 4, 8, 12, 12, 16, 16, 24, 18, 12, 20, 22, 22, 36, 40, 20, 42, 18, 16, 26, 28, 38, 26, 28, 12, 8, 10, 8, 8, 16, 16, 16, 24, 20, 20, 26, 8, 24, 10, 16, 32, 22, 6, 20, 18, 16, 14, 24, 22, 24, 22, 16, 14, 14, 28, 20, 24, 16, 14, 20, 34, 26, 32, 16, 20, 16, 22, 14, 14, 22, 24, 20, 10, 12, 14, 14, 24, 34, 32, 32, 38, 16, 20, 24, 22, 26, 22, 10, 18, 22, 12, 24, 14, 14, 28, 26, 30, 28, 24, 24, 24, 10, 16, 16, 8, 16, 24, 20, 30, 12, 16, 36, 20, 22, 12, 20, 32, 28, 32, 18, 32, 8, 6, 26, 14, 28, 20, 18, 22, 18, 16, 14, 14, 6, 18, 22, 14, 10, 18, 18, 20, 14, 20, 26, 16, 22, 20, 10, 10, 20, 14, 20, 16, 10, 26, 18, 14, 20, 12, 22, 28, 16, 22, 26, 12, 22, 12, 14, 20, 14, 12, 16, 14, 16, 12, 12, 14, 32, 26, 36, 26, 20, 44, 22, 28, 22, 24, 18, 12, 10, 24, 20, 32, 12, 22, 18, 26, 34, 26, 18, 16, 26, 12, 16, 12, 10, 22, 18, 30, 22, 28, 18, 20, 16, 14, 10, 12, 8, 14, 12, 10, 10, 12, 8, 12, 14, 18, 20, 28, 24, 38, 18, 20, 6, 16, 14, 6, 20, 6, 8, 16, 8, 24, 32, 36, 20, 24, 22, 36, 36, 40, 40, 34, 32, 28, 34, 28, 34, 24, 50, 70, 54, 46, 20, 46, 40, 38, 44, 38, 38, 40, 20, 24, 16, 30, 52, 54, 34, 42, 36, 24, 24, 20, 56, 30, 50, 30, 22, 26, 30, 20, 4, 20, 16, 14, 20, 12, 22, 34, 34, 34, 30, 36, 42, 20, 20, 12, 14, 20, 8, 12, 16, 8, 26, 26, 20, 24, 20, 20, 24, 16, 38, 20, 12, 10, 14, 18, 8, 2, 14, 8, 0, 10, 6, 18, 18, 10, 12, 10, 6, 14, 4, 18, 20, 24, 24, 18, 22, 22, 12, 6, 6, 8, 2, 0, 4, 2, 4, 2, 10, 12, 8, 4, 6, 8, 6, 8, 6, 4, 4, 10, 10, 4, 8, 22, 22, 10, 12, 18, 14, 6, 0, 4, 6, 10, 6, 8, 12, 8, 2, 16, 12, 4, 2, 10, 6, 0, 12, 8, 14, 2, 14, 22, 16, 24, 18, 20, 36, 18, 12, 10, 8, 16, 0, 0, 0, 2, 6, 2, 6, 4, 8, 6, 6, 4, 6, 2, 4, 0, 6, 6, 4, 6, 8, 10, 6, 12, 16, 10, 4, 6, 2, 8, 0, 6, 4, 4, 10, 18, 16, 14, 6, 0, 8, 2, 8, 14, 12, 10, 6, 10, 10, 12, 20, 16, 28, 8, 12, 8, 4, 2, 2, 6, 8, 4, 8, 4, 2, 4, 0, 4, 2, 2, 2, 2, 0, 4, 4, 6, 14, 8, 12, 18, 26, 18, 10, 18, 10, 14, 14, 14, 4, 2, 2, 4, 2, 4, 6, 4, 6, 22, 8, 8, 24, 14, 6, 8, 8, 8, 8, 14, 6, 18, 18, 16, 32, 24, 52, 18, 18, 8, 4, 2, 0, 4, 2, 10, 14, 6, 16, 14, 6, 18, 4, 12, 10, 8, 8, 12, 8, 8, 6, 10, 18, 10, 6, 12, 6, 14, 4, 16, 10, 4, 12, 14, 12, 22, 20, 14, 18, 20, 8, 12, 18, 6, 4, 10, 10, 16, 14, 14, 6, 14, 14, 6, 2, 10, 12, 8, 4, 8, 6, 2, 6, 2, 6, 4, 28, 10, 12, 20, 30, 24, 24, 32, 30, 22, 16, 26, 18, 18, 24, 14, 20, 30, 22, 8, 0, 16, 22, 18, 10, 24, 16, 4, 8, 12, 10, 10, 10, 8, 8, 20, 14, 18, 24, 24, 28, 30, 20, 40, 36, 32, 56, 54, 60, 56, 28, 16, 28, 30, 22, 22, 14, 62, 40, 42, 68, 60, 56, 64, 32, 50, 34, 14, 24, 20, 24, 38, 42, 60, 46, 52, 42, 30, 28, 12, 16, 14, 22, 16, 12, 18, 38, 16, 30, 24, 16, 20, 10, 14, 14, 30, 30, 16, 30, 14, 50, 52, 64, 66, 64, 54, 44, 46, 52, 52, 34, 40, 30, 36, 28, 34, 22, 34, 20, 20, 20, 22, 18, 16, 30, 16, 24, 28, 22, 24, 34, 42, 50, 62, 44, 46, 44, 34, 20, 32, 32, 20, 28, 20, 20, 32, 20, 12, 16, 16, 24, 6, 18, 22, 26, 16, 12, 22, 10, 18, 38, 58, 44, 44, 44, 44, 24, 18, 14, 12, 12, 12, 10, 18, 10, 24, 14, 18, 22, 10, 20, 18, 18, 6, 22, 20, 26, 10, 24, 28, 24, 34, 68, 32, 28, 24, 18, 30, 32, 16, 12, 24, 22, 10, 12, 36, 28, 52, 28, 14, 6, 10, 8, 16, 10, 12, 38, 32, 34, 24, 28, 46, 36, 32, 38, 18, 22, 18, 14, 20, 24, 16, 20, 10, 28, 42, 36, 30, 20, 18, 26, 16, 24, 20, 38, 52, 40, 34, 46, 42, 24, 48, 62, 60, 76, 30, 36, 32, 42, 32, 48, 30, 32, 42, 32, 22, 20, 14, 38, 40, 32, 46, 32, 42, 22, 30, 24, 24, 30, 44, 26, 38, 28, 6, 40, 22, 32, 28, 32, 44, 48, 38, 50, 92, 50, 38, 44, 42, 22, 30, 32, 34, 34, 72, 46, 60, 28, 44, 76, 78, 72, 60, 68, 72, 32, 24, 28, 38, 32, 42, 34, 38, 44, 22, 30, 28, 20, 24, 24, 16, 26, 28, 16, 16, 26, 14, 28, 44, 48, 48, 36, 32, 46, 24, 20, 20, 20, 24, 38, 50, 24, 42, 46, 24, 44, 26, 20, 30, 16, 18, 28, 22, 20, 18, 36, 42, 42, 34, 60, 56, 54, 26, 52, 40, 44, 90, 66, 78, 70, 58, 66, 26, 42, 38, 58, 114, 122, 120, 90, 72, 38, 80, 60, 62, 58, 58, 30, 66, 58, 46, 34, 50, 26, 46, 32, 40, 26, 18, 22, 98, 82, 118, 162, 130, 94, 128, 80, 54, 90, 138, 140, 144, 98, 150, 140, 150, 166, 118, 128, 112, 96, 62, 26, 36, 18, 62, 36, 76, 44, 54, 32, 36, 28, 26, 28, 24, 20, 22, 12, 28, 24, 14, 24, 34, 32, 32, 30, 38, 30, 30, 24, 20, 20, 22, 28, 16, 28, 34, 26, 10, 8, 14, 16, 16, 22, 20, 8, 26, 18, 24, 18, 18, 12, 16, 18, 32, 50, 46, 54, 38, 38, 34, 26, 22, 26, 32, 26, 30, 22, 12, 18, 20, 12, 28, 10, 14, 16, 14, 16, 18, 24, 12, 26, 32, 24, 60, 90, 62, 52, 34, 32, 24, 12, 12, 10, 20, 10, 8, 22, 12, 22, 20, 8, 14, 10, 16, 14, 14, 10, 12, 14, 4, 14, 28, 48, 42, 42, 32, 24, 14, 14, 8, 10, 8, 18, 20, 30, 14, 10, 12, 16, 28, 26, 18, 10, 16, 20, 18, 12, 20, 16, 16, 32, 38, 50, 36, 48, 32, 32, 40, 34, 26, 16, 14, 46, 40, 48, 12, 20, 14, 22, 22, 26, 30, 24, 12, 44, 36, 32, 32, 52, 48, 40, 48, 80, 96, 60, 74, 62, 42, 26, 38, 18, 34, 44, 36, 36, 26, 34, 30, 14, 10, 18, 14, 18, 18, 4, 12, 18, 20, 24, 28, 32, 50, 62, 82, 78, 72, 58, 58, 68, 90, 68, 22, 32, 22, 42, 22, 26, 70, 42, 48, 40, 42, 36, 30, 32, 14, 38, 38, 44, 46, 44, 42, 76, 70, 62, 48, 84, 28, 42, 34, 42, 44, 38, 56, 62, 86, 56, 62, 90, 64, 78, 82, 50, 54, 50, 46, 42, 56, 46, 66, 100, 84, 106, 68, 56, 38, 36, 24, 40, 50, 34, 24, 68, 48, 40, 50, 38, 64, 52, 50, 36, 40, 52, 62, 86, 48, 58, 46, 48, 38, 58, 64, 38, 54, 48, 24, 28, 24, 36, 40, 16, 32, 32, 22, 36, 54, 56, 70, 62, 48, 30, 54, 44, 20, 42, 44, 40, 36, 50, 24, 42, 64, 54, 40, 22, 32, 26, 32, 42, 52, 80, 74, 52, 30, 58, 42, 34, 72, 66, 64, 68, 72, 72, 64, 138, 144, 146, 140, 166, 126, 134, 118, 130, 82, 54, 62, 64, 70, 68, 52, 32, 28, 54, 62, 70, 78, 84, 68, 54, 24, 40, 38, 40, 26, 42, 36, 36, 48, 26, 60, 64, 60, 48, 46, 58, 78, 88, 68, 54, 42, 66, 46, 38, 64, 40, 38, 36, 32, 44, 104, 144, 146, 100, 64, 30, 24, 44, 68, 42, 84, 62, 58, 40, 24, 16, 22, 24, 30, 28, 22, 38, 16, 14, 20, 24, 16, 18, 16, 6, 18, 16, 24, 20, 28, 22, 32, 54, 72, 96, 78, 66, 102, 52, 28, 26, 16, 36, 26, 24, 12, 18, 22, 18, 16, 14, 32, 10, 12, 16, 8, 14, 12, 18, 14, 34, 34, 54, 70, 64, 68, 52, 38, 36, 26, 32, 32, 18, 36, 34, 14, 14, 30, 20, 34, 78, 30, 16, 20, 12, 26, 12, 22, 20, 32, 20, 26, 86, 68, 68, 68, 56, 56, 26, 44, 54, 54, 40, 56, 28, 42, 42, 50, 36, 40, 58, 32, 42, 18, 40, 34, 38, 46, 34, 80, 82, 86, 58, 64, 78, 64, 46, 48, 52, 30, 40, 64, 88, 60, 50, 42, 38, 36, 20, 30, 42, 34, 36, 24, 34, 46, 54, 50, 30, 54, 44, 86, 84, 96, 78, 58, 58, 40, 48, 38, 60, 74, 84, 66, 52, 42, 44, 32, 52, 52, 48, 42, 60, 50, 48, 68, 46, 60, 66, 68, 92, 96, 104, 80, 104, 104, 80, 68, 50, 70, 56, 66, 56, 36, 26, 32, 30, 20, 40, 46, 36, 44, 32, 30, 28, 36, 44, 52, 76, 34, 40, 54, 58, 70, 60, 78, 64, 44, 48, 42, 26, 52, 62, 62, 60, 38, 46, 62, 46, 34, 28, 36, 28, 22, 56, 40, 58, 34, 44, 56, 54, 66, 72, 58, 54, 40, 56, 38, 32, 42, 28, 40, 50, 20, 20, 32, 38, 26, 34, 26, 36, 42, 54, 52, 56, 28, 20, 24, 36, 40, 54, 76, 54, 44, 38, 56, 50, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1414, 1343, 1385, 1471, 1444, 1477, 1321, 1405, 1383, 1388, 1426, 1458, 1514, 1504, 1527, 1517, 1599, 1513, 1486, 1500, 1247, 1435, 1547, 1498, 1378, 1407, 1443, 1381, 1401, 1357, 1414, 1093, 1004, 859, 979, 973, 1038, 985, 1059, 1154, 1306, 1483, 1509, 1482, 1527, 1591, 1616, 1607, 1581, 1543, 1469, 1453, 1419, 1392, 1403, 1533, 1621, 1625, 1653, 1658, 1625, 1607, 1626, 1634, 1637, 1573, 1546, 1472, 1473, 1501, 1527, 1580, 1627, 1791, 1894, 1933, 2013, 2272, 2378, 2425, 2381, 2328, 2343, 2283, 2298, 1989, 1862, 1851, 1756, 1811, 1985, 2213, 2242, 2316, 2370, 2305, 2318, 2243, 2308, 2425, 2385, 2534, 2597, 2570, 2624, 2587, 2652, 2631, 2709, 2631, 2654, 2681, 2674, 2571, 2431, 2414, 2483, 2444, 2372, 2482, 2377, 2227, 2150, 2104, 2150, 1999, 2145, 2244, 2288, 2382, 2508, 2591, 2526, 2587, 2613, 2587, 2610, 2615, 2586, 2581, 2574, 2618, 2566, 2582, 2638, 2699, 2676, 2855, 2812, 2719, 2686, 2555, 2328, 2253, 2189, 2066, 2065, 2156, 2076, 2155, 2176, 2130, 2048, 1903, 1870, 1842, 1798, 1719, 1678, 1629, 1623, 1481, 1446, 1601, 1597, 1588, 1633, 1588, 1580, 1520, 1457, 1475, 1453, 1410, 1409, 1355, 1369, 1496, 1618, 1688, 1776, 1800, 1813, 1894, 1977, 2049, 2029, 2060, 2082, 2158, 2208, 2255, 2326, 2245, 2172, 2150, 2274, 2162, 2028, 1986, 1885, 1796, 1829, 1842, 1861, 1870, 1928, 2018, 2030, 1733, 1754, 1802, 1864, 1836, 1864, 1885, 1929, 1876, 1902, 1929, 1932, 1952, 1926, 1901, 1820, 1859, 1763, 1777, 1696, 1615, 1606, 1562, 1568, 1562, 1559, 1611, 1547, 1583, 1646, 1553, 1446, 1550, 1564, 1591, 1577, 1593, 1582, 1537, 1707, 1728, 1631, 1736, 1694, 1723, 1707, 1680, 1713, 1722, 1577, 1581, 1538, 1538, 1563, 1599, 1532, 1600, 1616, 1443, 1704, 1639, 1766, 1797, 1875, 1825, 1861, 1904, 1888, 1931, 1994, 1997, 2008, 2047, 2036, 1931, 1897, 1847, 1854, 1881, 1846, 1650, 1627, 1562, 1532, 1536, 1556, 1522, 1564, 1694, 1788, 1957, 2006, 2190, 2314, 2308, 2246, 1881, 1860, 1804, 2131, 2167, 2058, 2120, 2154, 1863, 1885, 1891, 1950, 1903, 1778, 1757, 1672, 1597, 1561, 1612, 1711, 1790, 1855, 1942, 1888, 1877, 1924, 2030, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 23, 22, 38, 34, 22, 19, 22, 22, 19, 30, 20, 12, 17, 22, 19, 18, 19, 22, 23, 29, 27, 22, 22, 28, 18, 17, 24, 19, 14, 25, 10, 17, 12, 26, 23, 17, 19, 24, 25, 27, 17, 27, 23, 20, 25, 30, 23, 27, 25, 28, 31, 34, 32, 27, 33, 28, 32, 23, 21, 28, 22, 33, 21, 21, 85, 190, 119, 31, 37, 58, 135, 41, 41, 46, 37, 35, 27, 39, 31, 111, 45, 27, 30, 57, 52, 66, 55, 32, 31, 43, 40, 38, 41, 39, 38, 65, 39, 46, 65, 49, 75, 61, 43, 40, 92, 55, 62, 41, 75, 62, 51, 73, 242, 46, 41, 51, 50, 54, 57, 51, 46, 52, 46, 51, 63, 43, 54, 38, 55, 77, 43, 53, 48, 90, 54, 61, 53, 30, 53, 79, 194, 58, 46, 64, 47, 54, 56, 42, 60, 42, 48, 37, 53, 41, 55, 52, 40, 43, 39, 35, 23, 35, 28, 24, 21, 31, 39, 22, 33, 28, 30, 24, 33, 20, 26, 28, 29, 21, 25, 20, 37, 33, 36, 21, 28, 38, 33, 35, 45, 33, 38, 41, 45, 43, 46, 36, 40, 29, 29, 43, 41, 37, 42, 39, 39, 42, 35, 37, 34, 35, 53, 38, 39, 35, 33, 38, 57, 80, 46, 50, 50, 40, 45, 44, 58, 61, 59, 44, 48, 40, 45, 39, 38, 34, 56, 44, 36, 32, 49, 38, 41, 50, 41, 45, 46, 41, 42, 44, 57, 47, 38, 105, 47, 57, 51, 43, 53, 36, 45, 59, 45, 68, 70, 57, 49, 56, 40, 52, 52, 37, 52, 51, 57, 35, 56, 59, 46, 63, 47, 46, 45, 46, 46, 44, 46, 43, 45, 42, 37, 50, 46, 35, 45, 43, 34, 42, 43, 45, 40, 60, 39, 56, 76, 41, 42, 56, 35, 43, 35, 49, 40, 286, 64, 46, 128, 65, 49, 42, 48, 60, 34, 31, 37, 35, 31, 40, 39, 29, 34, 78, 31, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 102, 90, 100, 106, 100, 120, 136, 94, 95, 143, 112, 109, 108, 97, 99, 85, 87, 110, 82, 96, 95, 74, 129, 140, 124, 127, 85, 128, 122, 105, 121, 117, 107, 80, 100, 76, 121, 119, 87, 101, 92, 71, 90, 81, 73, 76, 82, 66, 91, 71, 81, 101, 100, 85, 88, 105, 123, 110, 100, 113, 91, 76, 118, 129, 123, 128, 112, 122, 108, 114, 120, 136, 123, 116, 106, 100, 135, 194, 163, 106, 152, 135, 164, 197, 173, 147, 158, 121, 110, 93, 123, 128, 125, 117, 141, 137, 113, 128, 142, 133, 109, 143, 130, 124, 119, 107, 150, 110, 123, 135, 147, 186, 181, 184, 154, 156, 159, 124, 121, 111, 129, 137, 126, 144, 153, 119, 124, 163, 130, 134, 126, 128, 114, 112, 97, 100, 113, 104, 109, 118, 157, 163, 201, 186, 240, 209, 203, 214, 170, 173, 150, 169, 152, 155, 179, 213, 187, 184, 158, 133, 96, 70, 70, 58, 30, 16, 19, 61, 47, 64, 70, 108, 126, 105, 109, 94, 97, 75, 99, 81, 61, 75, 93, 83, 70, 92, 79, 80, 100, 88, 83, 98, 88, 86, 90, 104, 96, 98, 113, 142, 137, 143, 125, 152, 114, 128, 111, 110, 77, 118, 106, 114, 140, 115, 126, 133, 126, 108, 173, 166, 136, 120, 109, 123, 127, 138, 112, 108, 108, 180, 162, 137, 107, 139, 123, 117, 106, 130, 113, 90, 108, 111, 130, 100, 129, 126, 123, 148, 127, 108, 127, 142, 99, 136, 131, 123, 138, 137, 137, 139, 138, 151, 164, 168, 179, 159, 145, 134, 147, 112, 116, 138, 115, 136, 117, 130, 150, 162, 103, 133, 123, 117, 105, 117, 128, 135, 132, 146, 166, 157, 187, 157, 143, 176, 151, 183, 154, 136, 130, 131, 150, 154, 146, 4, 3, 5, 0, 3, 3, 5, 4, 3, 3, 0, 5, 3, 4, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 4, 0, 6, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],\n        ],\n      },\n    }\n    return <Timebar\n      start={'2017-12-01T00:00:00.000Z'}\n      end={new Date().toISOString()}\n      absoluteStart={'2017-12-01T00:00:00.000Z'}\n      absoluteEnd={new Date().toISOString()}\n      bookmarkStart={null}\n      bookmarkEnd={null}\n      onChange={(d) => console.log(d)}\n      onBookmarkChange={(d) => console.log(d)}\n      // enablePlayback\n    >\n      {(props) =>\n        <TimebarEvents\n          {...props}\n          events={eventsMock}\n          showFishing={false}\n        />\n      }\n    </Timebar>\n  }}\n</Playground>\n           </MDXTag>\n  }\n}\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timebar\":\"timebar_Timebar__1C7GA\",\"uiButton\":\"timebar_uiButton__1e2qv\",\"timeActions\":\"timebar_timeActions__3eDNK\",\"timeRange\":\"timebar_timeRange__1UFds\",\"timeScale\":\"timebar_timeScale__1y_vV\",\"timeRangeContainer\":\"timebar_timeRangeContainer__3P_UI\",\"playbackActions\":\"timebar_playbackActions__2NQyE\",\"bookmark\":\"timebar_bookmark__23Pha\"};"],"sourceRoot":""}