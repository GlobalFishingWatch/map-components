{"version":3,"sources":["webpack:///./src/timebar/charts/events.module.css","webpack:///./src/timebar/components/bookmark.module.css","webpack:///./src/timebar/components/date-selector.module.css","webpack:///./src/timebar/components/playback.module.css","webpack:///./src/timebar/components/timeline-handler.module.css","webpack:///./src/timebar/components/timeline-units.module.css","webpack:///./src/timebar/components/timeline.module.css","webpack:///./src/timebar/components/timerange-selector.module.css","webpack:///./src/timebar/immediateContext.js","webpack:///./src/timebar/utils/internal-utils.js","webpack:///./src/timebar/utils/index.js","webpack:///./src/timebar/constants.js","webpack:///./src/timebar/icons/arrowUp.svg","webpack:///./src/timebar/icons/arrowDown.svg","webpack:///./src/timebar/components/date-selector.js","webpack:///./src/timebar/components/timerange-selector.js","webpack:///./src/timebar/icons/bookmarkFilled.svg","webpack:///./src/timebar/icons/delete.svg","webpack:///./src/timebar/icons/arrow.svg","webpack:///./src/timebar/components/bookmark.js","webpack:///./src/timebar/layouts/index.js","webpack:///./src/timebar/components/timeline-units.js","webpack:///./src/timebar/icons/drag.svg","webpack:///./src/timebar/components/timeline-handler.js","webpack:///./src/timebar/components/timeline.js","webpack:///./src/timebar/icons/loop.svg","webpack:///./src/timebar/icons/back.svg","webpack:///./src/timebar/icons/play.svg","webpack:///./src/timebar/icons/pause.svg","webpack:///./src/timebar/icons/forward.svg","webpack:///./src/timebar/components/playback.js","webpack:///./src/timebar/icons/timeRange.svg","webpack:///./src/timebar/icons/bookmark.svg","webpack:///./src/timebar/icons/minus.svg","webpack:///./src/timebar/icons/plus.svg","webpack:///./src/timebar/timebar.js","webpack:///./src/timebar/charts/Events.js","webpack:///./src/timebar/timebar.mdx","webpack:///./src/timebar/timebar.module.css"],"names":["module","exports","fishing","port","encounter","unregistered","gap","Bookmark","_immediate","main","_compact","_overflowingRight","_overflowingLeft","delete","title","leftArrow","rightArrow","icon","_point","DateSelector","arrowButton","value","playbackActions","secondary","playbackActionsActive","secondaryActive","buttonBigger","loop","speed","play","handler","unit","Timeline","graphContainer","graph","veil","veilLeft","veilRight","absoluteEnd","lastUpdate","lastUpdateLabel","tooltipContainer","TimeRangeSelector","inner","selectorsContainer","selectorGroup","selectorLabel","actions","cta","errorMessage","ImmediateContext","React","createContext","getTime","dateISO","Date","clampToAbsoluteBoundaries","start","end","desiredDeltaMs","absoluteStart","clamped","startMs","endMs","absoluteStartMs","absoluteEndMs","newStartClamped","newEndClamped","toISOString","getDeltaMs","getDeltaDays","isMoreThanADay","stickToClosestUnit","date","mDate","dayjs","mStartOf","startOf","mEndOf","endOf","valueOf","getHumanizedDates","format","getDefaultFormat","mStart","mEnd","humanizedStart","humanizedEnd","interval","diff","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","arrowUp_ref","react_default","a","createElement","stroke","strokeWidth","d","fill","arrowUp_SvgArrowUp","props","width","height","viewBox","__webpack_require__","p","arrowDown_extends","arrowDown_ref","arrowDown_SvgArrowDown","pressing","pressingInterval","pressingTimeout","startTimeout","_this","window","setInterval","onInterval","onChange","onMouseUp","clear","Component","increment","setTimeout","addEventListener","clearInterval","clearTimeout","removeEventListener","_this2","_this$props","canIncrement","canDecrement","className","styles","type","disabled","onMouseDown","ONE_DAY_MS","timerange_selector_classCallCheck","timerange_selector_possibleConstructorReturn","timerange_selector_getPrototypeOf","last30days","onSubmit","subtract","state","startCanIncrement","startCanDecrement","endCanIncrement","endCanDecrement","_this$props2","setState","which","allBounds","offset","prevDate","newDate","add","bounds","newDateMs","toDate","Math","min","max","_this$state","_this$props3","undefined","onClick","onDiscard","date_selector","setUnit","year","classNames","submit","bookmarkFilled_extends","bookmarkFilled_ref","fillRule","strokeLinejoin","bookmarkFilled_SvgBookmarkFilled","delete_extends","delete_ref","delete_SvgDelete","arrow_extends","arrow_ref","arrow_SvgArrow","_ref","_classNames","overflowing","overflowingLeft","overflowingRight","scale","bookmarkStart","bookmarkEnd","minX","maxX","onSelect","onDelete","immediate","useContext","x","_getHumanizedDates","label","join","renderedX","renderedWidth","minWidth","compact","point","_defineProperty","style","left","getUnitLabel","mUnit","baseUnit","availableWidth","getWeekFmt","isFirst","mWeekEnd","concat","unitFormat","formats","month","fm","week","day","hour","finalFormat","TimelineUnits","_clampToAbsoluteBound","outerScale","outerStart","outerEnd","context","innerDays","units","mOuterStart","mOuterEnd","numUnitsOffset","numUnits","ui","mUnitNext","xNext","id","hoverLabel","Infinity","push","getUnitsPositions","map","transition","zoomToUnit","contextType","drag_extends","drag_ref","drag_SvgDrag","Handler","onTouchStart","dragging","mouseX","defaultProps","DRAG_INNER","DRAG_START","DRAG_END","timeline_classCallCheck","timeline_possibleConstructorReturn","timeline_getPrototypeOf","getOuterScale","memoize","outerWidth","scaleTime","domain","range","getOverallScale","innerWidth","getSvgTransform","overallScale","innerStartPx","startX","scaleX","onWindowResize","graphStyle","getComputedStyle","outerX","parseFloat","getBoundingClientRect","outerHeight","innerEndPx","onEnterFrame","timestamp","frameTimestamp","progress","outerDrag","handlerMouseX","deltaPxRatio","offsetMs","innerScale","invert","newStart","newEnd","requestAnimationFrame","event","clientX","changedTouches","lastX","toggleImmediate","throttledMouseMove","throttle","isDay","onMouseMove","notifyMouseLeave","onMouseLeave","_this$state2","node","contains","isMovingInside","currentDeltaMs","movementX","_clampToAbsoluteBound2","isHandlerZoomInValid","isValid","isHandlerZoomOutValid","_this$state3","isZoomIn","clampedX","stickUnit","PureComponent","cancelAnimationFrame","_this$state4","_this$state5","_this$props4","onBookmarkChange","_this$state6","svgTransform","lastUpdatePosition","ref","bookmark","timeline_units","children","_objectSpread","graphHeight","el","cx","timeline_defineProperty","timeline_handler","renderprops","native","to","div","loop_extends","loop_ref","loop_SvgLoop","back_extends","back_ref","back_SvgBack","play_extends","play_ref","play_SvgPlay","pause_extends","pause_ref","pause_SvgPause","forward_extends","forward_ref","forward_SvgForward","BASE_STEP","SPEED_STEPS","FAST_FORWARD_REWIND_MULTIPLICATOR","Playback","playback_classCallCheck","playback_possibleConstructorReturn","playback_getPrototypeOf","lastUpdateMs","getStep","speedStep","baseStepWithSpeed","scaleLinear","update","deltaMultiplicatorMs","onTick","deltaMs","newStartMs","newEndMs","currentStartEndDeltaMs","togglePlay","tick","elapsedMs","progressRatio","requireNextTick","force","playing","playingNext","onPlayToggleClick","toggleLoop","prevState","onForwardClick","onBackwardClick","onSpeedClick","nextStep","stoppedAtEnd","playback_defineProperty","uiStyles","uiButton","back","forward","timeRange_extends","timeRange_ref","timeRange_SvgTimeRange","bookmark_extends","bookmark_ref","bookmark_SvgBookmark","minus_extends","minus_ref","rx","transform","strokeLinecap","minus_SvgMinus","plus_extends","plus_ref","y","plus_SvgPlus","extend","relativeTime","getRangeMs","clampToMinAndMax","minMs","maxMs","clampToEnd","delta","clampedEnd","clampedStart","Timebar","timebar_classCallCheck","timebar_possibleConstructorReturn","timebar_getPrototypeOf","getMaximumRangeMs","maximumRange","maximumRangeUnit","Number","POSITIVE_INFINITY","getMinimumRangeMs","minimumRange","minimumRangeUnit","NEGATIVE_INFINITY","toggleTimeRangeSelector","showTimeRangeSelector","setBookmark","onTimeRangeSelectorSubmit","notifyChange","zoom","steps","nextDelta","round","nextUnit","s","step","unitOffsetMs","mNewStart","_clampToMinAndMax","minimumRangeMs","maximumRangeMs","onPlaybackTick","enablePlayback","canZoomIn","canZoomOut","hasBookmark","bookmarkDisabled","immediateContext","Provider","playback","timeActions","timerange_selector","timeRangeContainer","timeRange","timeScale","out","in","timeline","Events","getFinalEvents","events","showFishing","_events$series","series","labels","counts","fishingIndex","indexOf","Events_toConsumableArray","slice","mCurrentStart","clone","allValues","maxValue","_loop","dateIndex","valuesAtDateSum","valuesAtDate","forEach","keyIndex","k","filter","v","console","warn","allRatios","ratiosAtDate","Events_objectSpread","stack","keys","order","stackOrderNone","stackOffsetSilhouette","stackLayout","finalEvents","finalHeight","middle","areaGenerator","area","data","y0","y1","curve","curveStepAfter","eventsForKey","MDXContent","timebar_timebar_classCallCheck","timebar_timebar_possibleConstructorReturn","timebar_timebar_getPrototypeOf","layout","components","_objectWithoutProperties","dist","name","parentName","href","index_m","of","__codesandbox","__position","__code","__scope","TimebarEvents","eventsMock","timebar","log","charts_Events"],"mappings":"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","file":"static/js/src-timebar-timebar.58f3b1ad.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fishing\":\"events_fishing__2rScz\",\"port\":\"events_port__3Rq7E\",\"encounter\":\"events_encounter__1iDlJ\",\"unregistered\":\"events_unregistered__ldz0B\",\"gap\":\"events_gap__1s5sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bookmark\":\"bookmark_Bookmark__2e_Fm\",\"_immediate\":\"bookmark__immediate__3UwDX\",\"main\":\"bookmark_main__zAN8v\",\"_compact\":\"bookmark__compact__17r0_\",\"_overflowingRight\":\"bookmark__overflowingRight__V6d18\",\"_overflowingLeft\":\"bookmark__overflowingLeft__N_yd0\",\"delete\":\"bookmark_delete__omE6s\",\"title\":\"bookmark_title__fgJiS\",\"leftArrow\":\"bookmark_leftArrow__1srpm\",\"rightArrow\":\"bookmark_rightArrow__3FUyh\",\"icon\":\"bookmark_icon__23RCn\",\"_point\":\"bookmark__point__38Se1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateSelector\":\"date-selector_DateSelector__21IPK\",\"arrowButton\":\"date-selector_arrowButton__gD06u\",\"value\":\"date-selector_value__1JK9u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playbackActions\":\"playback_playbackActions__2_yJM\",\"secondary\":\"playback_secondary__1Ify_\",\"playbackActionsActive\":\"playback_playbackActionsActive__3r5jo\",\"secondaryActive\":\"playback_secondaryActive__1F80I\",\"buttonBigger\":\"playback_buttonBigger__aL1ns\",\"loop\":\"playback_loop__1XKk9\",\"speed\":\"playback_speed__1OhxF\",\"play\":\"playback_play__3eHhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"timeline-handler_handler__21dks\",\"_immediate\":\"timeline-handler__immediate__2e6ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"timeline-units_unit__11WRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timeline\":\"timeline_Timeline__wZxDm\",\"graphContainer\":\"timeline_graphContainer__6Np1L\",\"graph\":\"timeline_graph__mYQfr\",\"veil\":\"timeline_veil__1P6IK\",\"veilLeft\":\"timeline_veilLeft__3hdXF\",\"veilRight\":\"timeline_veilRight__1eSAB\",\"_immediate\":\"timeline__immediate__1igre\",\"absoluteEnd\":\"timeline_absoluteEnd__2oI9J\",\"lastUpdate\":\"timeline_lastUpdate__3Bteo\",\"lastUpdateLabel\":\"timeline_lastUpdateLabel__1dwiH\",\"tooltipContainer\":\"timeline_tooltipContainer__2gqkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRangeSelector\":\"timerange-selector_TimeRangeSelector__1BK5p\",\"veil\":\"timerange-selector_veil__2nCw3\",\"inner\":\"timerange-selector_inner__1biJD\",\"selectorsContainer\":\"timerange-selector_selectorsContainer__fpVeo\",\"selectorGroup\":\"timerange-selector_selectorGroup__1wIwR\",\"selectorLabel\":\"timerange-selector_selectorLabel__vcLPV\",\"actions\":\"timerange-selector_actions__3KYCM\",\"cta\":\"timerange-selector_cta__1qLr_\",\"secondary\":\"timerange-selector_secondary__2xxi5\",\"errorMessage\":\"timerange-selector_errorMessage__2HlmD\"};","import React from 'react'\nconst ImmediateContext = React.createContext(false)\nexport default ImmediateContext\n","import dayjs from 'dayjs'\nimport { DEFAULT_DATE_FORMAT, DEFAULT_FULL_DATE_FORMAT } from '../constants'\n\nexport const getTime = (dateISO) => new Date(dateISO).getTime()\n\nexport const clampToAbsoluteBoundaries = (\n  start,\n  end,\n  desiredDeltaMs,\n  absoluteStart,\n  absoluteEnd\n) => {\n  const startMs = getTime(start)\n  const endMs = getTime(end)\n  const absoluteStartMs = getTime(absoluteStart)\n  const absoluteEndMs = getTime(absoluteEnd)\n  let newStartClamped = start\n  let newEndClamped = end\n  let clamped\n\n  // newStart is before absolute start: use abs start as new start and keep the existing duration to get to new end\n  if (startMs < absoluteStartMs) {\n    newStartClamped = absoluteStart\n    newEndClamped = new Date(absoluteStartMs + desiredDeltaMs).toISOString()\n    clamped = 'start'\n    // newEnd is after absolute end: use abs end as new end and keep the existing duration to get back to new start\n  } else if (endMs > absoluteEndMs) {\n    newEndClamped = absoluteEnd\n    newStartClamped = new Date(absoluteEndMs - desiredDeltaMs).toISOString()\n    clamped = 'end'\n  }\n  return { newStartClamped, newEndClamped, clamped }\n}\n\nexport const getDeltaMs = (start, end) => getTime(end) - getTime(start)\nexport const getDeltaDays = (start, end) => getDeltaMs(start, end) / 1000 / 60 / 60 / 24\nexport const isMoreThanADay = (start, end) => getDeltaDays(start, end) >= 1\nexport const getDefaultFormat = (start, end) =>\n  isMoreThanADay(start, end) ? DEFAULT_DATE_FORMAT : DEFAULT_FULL_DATE_FORMAT\n\nexport const stickToClosestUnit = (date, unit) => {\n  const mDate = dayjs(date)\n  const mStartOf = mDate.startOf(unit)\n  const mEndOf = mDate.endOf(unit)\n  const startDeltaMs = getTime(date) - mStartOf.valueOf()\n  const endDeltaMs = mEndOf.valueOf() - getTime(date)\n  const mClosest = startDeltaMs > endDeltaMs ? mEndOf : mStartOf\n  return mClosest.toISOString()\n}\n","import dayjs from 'dayjs'\nimport { getDefaultFormat } from './internal-utils'\n\nexport const getHumanizedDates = (start, end) => {\n  const format = getDefaultFormat(start, end)\n  const mStart = dayjs(start)\n  const mEnd = dayjs(end)\n  const humanizedStart = mStart.format(format)\n  const humanizedEnd = mEnd.format(format)\n  const interval = mEnd.diff(mStart, 'day')\n  return { humanizedStart, humanizedEnd, interval }\n}\n\nconst getTimebarRangeAuto = (auto) => {\n  const ONE_DAY = 24 * 60 * 60 * 1000\n  const daysEndInnerOuterFromToday = auto.daysEndInnerOuterFromToday || 4\n  const daysInnerExtent = auto.daysInnerExtent || 30\n  // today - n days\n  const now = new Date()\n  // Minus the timezone offset to normalize dates\n  const end = now.getTime() - now.getTimezoneOffset() * 60000 - daysEndInnerOuterFromToday * ONE_DAY\n  // inner should be 30 days long\n  const start = end - daysInnerExtent * ONE_DAY\n  // start outer at beginning of year\n  return { start, end }\n}\n\nconst getTimebarRangeDefault = (range) => {\n  return {\n    start: range.innerExtent[0],\n    end: range.innerExtent[1],\n  }\n}\n\nexport const getTimebarRangeByWorkspace = (timeline) => {\n  return timeline.auto !== undefined\n    ? getTimebarRangeAuto(timeline.auto)\n    : getTimebarRangeDefault(timeline)\n}\n\nexport const geoJSONTrackToTimebarTrack = (geoJSONTrack) => {\n  const segments = geoJSONTrack.features\n    .filter((feature) => feature.properties.type === 'track')\n    .map((feature) => {\n      const times = feature.properties.coordinateProperties.times\n      return {\n        start: times[0],\n        end: times[times.length - 1],\n      }\n    })\n  let points = []\n  geoJSONTrack.features\n    .filter((feature) => feature.properties.type === 'fishing')\n    .forEach((feature) => {\n      const times = feature.properties.coordinateProperties.times\n      points = [...points, ...times]\n    })\n\n  return {\n    segments,\n    points,\n  }\n}\n\nexport const geoJSONTrackToTimebarFeatureSegments = (geoJSONTrack) => {\n  const graph = []\n  geoJSONTrack.features\n    .filter((feature) => feature.properties.type === 'track')\n    .forEach((feature) => {\n      const coordProps = feature.properties.coordinateProperties\n      const featureKeys = Object.keys(coordProps)\n      const segment = []\n      coordProps.times.forEach((time, i) => {\n        const point = {\n          date: time,\n        }\n        featureKeys.forEach((key) => {\n          point[key] = coordProps[key][i]\n        })\n        segment.push(point)\n      })\n      graph.push(segment)\n    })\n  return graph\n}\n","export const DEFAULT_CSS_TRANSITION = '.35s'\nexport const DEFAULT_DATE_FORMAT = 'MMM D YYYY'\nexport const DEFAULT_FULL_DATE_FORMAT = 'MMM D YYYY ha'\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 6l4-4 4 4\",\n  fill: \"none\"\n});\n\nvar SvgArrowUp = function SvgArrowUp(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowUp.1cbc9b80.svg\";\nexport { SvgArrowUp as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 2,\n  d: \"M1 1l4 4 4-4\",\n  fill: \"none\"\n});\n\nvar SvgArrowDown = function SvgArrowDown(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrowDown.743b8d09.svg\";\nexport { SvgArrowDown as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './date-selector.module.css'\nimport { ReactComponent as IconArrowUp } from '../icons/arrowUp.svg'\nimport { ReactComponent as IconArrowDown } from '../icons/arrowDown.svg'\n\nclass DateSelector extends Component {\n  pressing = 0\n  pressingInterval = null\n  pressingTimeout = null\n\n  onMouseDown(increment) {\n    this.clear()\n    const { onChange } = this.props\n    this.pressing = increment\n    onChange(this.pressing)\n    this.pressingTimeout = window.setTimeout(this.startTimeout, 800)\n    window.addEventListener('mouseup', this.onMouseUp)\n  }\n\n  startTimeout = () => {\n    this.pressingInterval = window.setInterval(this.onInterval, 80)\n  }\n\n  onInterval = () => {\n    const { onChange } = this.props\n    onChange(this.pressing)\n  }\n\n  onMouseUp = () => {\n    this.clear()\n    this.pressing = 0\n  }\n\n  clear() {\n    window.clearInterval(this.pressingInterval)\n    window.clearTimeout(this.pressingTimeout)\n    window.removeEventListener('mouseup', this.onMouseUp)\n  }\n\n  componentWillUnmount() {\n    this.clear()\n  }\n\n  render() {\n    const { onChange, value, canIncrement, canDecrement } = this.props\n    return (\n      <div className={styles.DateSelector}>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canIncrement}\n          onMouseDown={() => {\n            this.onMouseDown(+1)\n          }}\n        >\n          <IconArrowUp />\n        </button>\n        <span className={styles.value}>{value}</span>\n        <button\n          type=\"button\"\n          className={styles.arrowButton}\n          disabled={!canDecrement}\n          onMouseDown={() => {\n            this.onMouseDown(-1)\n          }}\n        >\n          <IconArrowDown />\n        </button>\n      </div>\n    )\n  }\n}\n\nDateSelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  canIncrement: PropTypes.bool.isRequired,\n  canDecrement: PropTypes.bool.isRequired,\n}\n\nexport default DateSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport dayjs from 'dayjs'\nimport classNames from 'classnames'\nimport { getTime } from '../utils/internal-utils'\nimport DateSelector from './date-selector'\nimport styles from './timerange-selector.module.css'\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24 - 1\n\nclass TimeRangeSelector extends Component {\n  constructor(props) {\n    super(props)\n    const { start, end, absoluteStart, absoluteEnd } = props\n    this.state = {\n      startCanIncrement: start < end,\n      startCanDecrement: start > absoluteStart,\n      endCanIncrement: getTime(end) + ONE_DAY_MS < getTime(absoluteEnd),\n      endCanDecrement: end > start,\n    }\n  }\n\n  componentDidMount() {\n    const { start, end } = this.props\n    this.setState({\n      start,\n      end,\n    })\n  }\n\n  submit(start, end) {\n    const { onSubmit } = this.props\n\n    // on release, \"stick\" to day/hour\n    const newStart = dayjs(start)\n      .startOf('day')\n      .toISOString()\n    const newEnd = dayjs(end)\n      .startOf('day')\n      .toISOString()\n    onSubmit(newStart, newEnd)\n  }\n\n  setUnit(which, allBounds, unit, offset) {\n    const prevDate = this.state[which]\n    const newDate = dayjs(prevDate).add(offset, unit)\n\n    const bounds = allBounds[which]\n    let newDateMs = newDate.toDate().getTime()\n    newDateMs = Math.min(bounds.max, Math.max(bounds.min, newDateMs))\n\n    if (which === 'start') {\n      this.setState({\n        start: new Date(newDateMs),\n        startCanIncrement: newDateMs !== bounds.max,\n        startCanDecrement: newDateMs !== bounds.min,\n        endCanDecrement: newDateMs !== bounds.max,\n      })\n    } else {\n      this.setState({\n        end: new Date(newDateMs),\n        endCanIncrement: newDateMs !== bounds.max,\n        endCanDecrement: newDateMs !== bounds.min,\n        startCanIncrement: newDateMs !== bounds.min,\n      })\n    }\n  }\n\n  last30days = () => {\n    const { absoluteEnd, onSubmit } = this.props\n    onSubmit(\n      dayjs(absoluteEnd)\n        .subtract(30, 'day')\n        .toISOString(),\n      absoluteEnd\n    )\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      startCanIncrement,\n      startCanDecrement,\n      endCanIncrement,\n      endCanDecrement,\n    } = this.state\n    const { absoluteStart, absoluteEnd } = this.props\n\n    if (start === undefined) {\n      return null\n    }\n\n    const bounds = {\n      start: {\n        min: getTime(absoluteStart),\n        max: getTime(end) - ONE_DAY_MS,\n      },\n      end: {\n        min: getTime(start) + ONE_DAY_MS,\n        max: getTime(absoluteEnd),\n      },\n    }\n    const mStart = dayjs(start)\n    const mEnd = dayjs(end)\n\n    let errorMessage = ''\n    if (!startCanDecrement)\n      errorMessage = 'Your start date is the earliest date with data available'\n    if (!endCanIncrement) errorMessage = 'Your end date is the latest date with data available'\n    if (!startCanIncrement && !endCanDecrement)\n      errorMessage = 'Your start and end date must be at least one day apart'\n    if (!startCanDecrement && !endCanIncrement)\n      errorMessage = 'Your time range is the maximum range with data available'\n\n    return (\n      <div className={styles.TimeRangeSelector}>\n        <div className={styles.veil} onClick={this.props.onDiscard} />\n        <div className={styles.inner}>\n          <h2>Select a time range</h2>\n          <div className={styles.selectorsContainer}>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>START</span>\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'day', offset)\n                }}\n                value={mStart.date()}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'month', offset)\n                }}\n                value={mStart.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={startCanIncrement}\n                canDecrement={startCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('start', bounds, 'year', offset)\n                }}\n                value={mStart.year()}\n              />\n            </div>\n            <div className={styles.selectorGroup}>\n              <span className={styles.selectorLabel}>END</span>\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'day', offset)\n                }}\n                value={mEnd.date()}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'month', offset)\n                }}\n                value={mEnd.format('MMM')}\n              />\n              <DateSelector\n                canIncrement={endCanIncrement}\n                canDecrement={endCanDecrement}\n                onChange={(offset) => {\n                  this.setUnit('end', bounds, 'year', offset)\n                }}\n                value={mEnd.year()}\n              />\n            </div>\n          </div>\n          <span className={styles.errorMessage}>{errorMessage}</span>\n          <div className={styles.actions}>\n            <button\n              type=\"button\"\n              className={classNames(styles.cta, styles.secondary)}\n              onClick={this.last30days}\n            >\n              LAST 30 DAYS\n            </button>\n            <button\n              type=\"button\"\n              className={styles.cta}\n              onClick={() => {\n                this.submit(start, end)\n              }}\n            >\n              DONE\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nTimeRangeSelector.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onDiscard: PropTypes.func.isRequired,\n}\n\nexport default TimeRangeSelector\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"#FFF\",\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fillRule: \"evenodd\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmarkFilled = function SvgBookmarkFilled(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmarkFilled.9c323b67.svg\";\nexport { SvgBookmarkFilled as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M10.477.738V2.25H0V.738h2.602L3.375 0h3.727l.773.738h2.602zM.738 11.988v-9h9v9c0 .399-.152.75-.457 1.055-.304.305-.656.457-1.054.457H2.25c-.398 0-.75-.152-1.055-.457-.304-.305-.457-.656-.457-1.055z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgDelete = function SvgDelete(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/delete.c8ee873a.svg\";\nexport { SvgDelete as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M5 1L1 5l4 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgArrow = function SvgArrow(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 10,\n    viewBox: \"0 0 6 10\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/arrow.7f32b3d1.svg\";\nexport { SvgArrow as ReactComponent };","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { getHumanizedDates } from '../utils'\nimport ImmediateContext from '../immediateContext'\nimport styles from './bookmark.module.css'\nimport { ReactComponent as IconBookmarkFilled } from '../icons/bookmarkFilled.svg'\nimport { ReactComponent as IconDelete } from '../icons/delete.svg'\nimport { ReactComponent as Arrow } from '../icons/arrow.svg'\n\nconst MIN_WIDTH = 32\nconst MIN_WIDTH_WITH_OVERFLOW_ARROWS = 52\nconst COMPACT_MAX_WIDTH = 240\n\nconst Bookmark = ({ scale, bookmarkStart, bookmarkEnd, minX, maxX, onSelect, onDelete }) => {\n  const { immediate } = useContext(ImmediateContext)\n\n  const x = scale(new Date(bookmarkStart))\n  const width = scale(new Date(bookmarkEnd)) - x\n  const { humanizedStart, humanizedEnd } = getHumanizedDates(bookmarkStart, bookmarkEnd)\n  const label = [humanizedStart, humanizedEnd].join(' - ')\n\n  let overflowing\n  let overflowingLeft\n  let overflowingRight\n  let renderedX = x\n  let renderedWidth = width\n\n  if (x < minX) {\n    renderedX = minX\n    renderedWidth = x + renderedWidth\n    overflowing = true\n    overflowingLeft = true\n  }\n  if (renderedX + width > maxX) {\n    renderedX = Math.min(renderedX, maxX - MIN_WIDTH_WITH_OVERFLOW_ARROWS)\n    renderedWidth = maxX - renderedX\n    overflowing = true\n    overflowingRight = true\n  }\n\n  const minWidth = overflowing === true ? MIN_WIDTH_WITH_OVERFLOW_ARROWS : MIN_WIDTH\n  renderedWidth = Math.max(minWidth, renderedWidth)\n  const compact = renderedWidth < COMPACT_MAX_WIDTH\n  const point = renderedWidth <= MIN_WIDTH\n\n  return (\n    <div\n      className={classNames(styles.Bookmark, {\n        [styles._overflowingLeft]: overflowingLeft,\n        [styles._overflowingRight]: overflowingRight,\n        [styles._compact]: compact,\n        [styles._point]: point,\n        [styles._immediate]: immediate,\n      })}\n      style={{ left: renderedX, width: renderedWidth }}\n    >\n      <button\n        type=\"button\"\n        title=\"Go to time range bookmark\"\n        className={styles.main}\n        onClick={onSelect}\n      >\n        {overflowingLeft && <Arrow className={styles.leftArrow} />}\n        <IconBookmarkFilled className={styles.icon} />\n        {compact === false && <span className={styles.title}>{label}</span>}\n        {overflowingRight && <Arrow className={styles.rightArrow} />}\n      </button>\n      {compact === false && (\n        <button\n          type=\"button\"\n          title=\"Delete time range bookmark\"\n          className={styles.delete}\n          onClick={onDelete}\n        >\n          <IconDelete />\n        </button>\n      )}\n    </div>\n  )\n}\n\nBookmark.propTypes = {\n  bookmarkStart: PropTypes.string.isRequired,\n  bookmarkEnd: PropTypes.string.isRequired,\n  scale: PropTypes.func.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n\nexport default Bookmark\n","import dayjs from 'dayjs'\nimport { getTime } from '../utils/internal-utils'\n\nconst getUnitLabel = (mUnit, baseUnit, availableWidth) => {\n  /* eslint key-spacing: 0, no-multi-spaces: 0 */\n\n  const getWeekFmt = (mUnit, isFirst = false) => {\n    const mWeekEnd = mUnit.add(6, 'day')\n    return `${mUnit.format('MMM')} ${mUnit.format('D')}-${mWeekEnd.format('D')} ${\n      isFirst ? mUnit.format('YYYY') : ''\n    }`\n  }\n\n  const FORMATS = {\n    year: { isFirst: () => false, formats: [[0, 'YYYY']] },\n    month: {\n      isFirst: (fm) => fm.month() === 0,\n      formats: [[200, 'MMMM YYYY'], [100, 'MMMM', 'MMM YYYY'], [0, 'MMM', 'MMM YY']],\n    },\n    week: {\n      isFirst: (fm) => {\n        return fm.date() === 1\n      },\n      formats: [\n        [\n          0,\n          (mUnit) => {\n            return getWeekFmt(mUnit)\n          },\n          (mUnit) => {\n            return getWeekFmt(mUnit, true)\n          },\n        ],\n      ],\n    },\n    day: {\n      isFirst: (fm) => fm.date() === 1,\n      formats: [\n        [999, 'ddd D MMMM YYYY'],\n        [200, 'ddd D MMMM'],\n        [70, 'ddd D', 'MMM 1'],\n        [0, 'D', 'MMM'],\n      ],\n    },\n    hour: {\n      isFirst: (fm) => fm.hour() === 0,\n      formats: [[999, 'ddd D MMMM YYYY H[H]'], [0, 'H[H]', 'ddd D']],\n    },\n  }\n  const unitFormat = FORMATS[baseUnit]\n  let format\n  for (let i = 0; i < unitFormat.formats.length; i += 1) {\n    const formatMinWidth = unitFormat.formats[i][0]\n    if (availableWidth > formatMinWidth) {\n      format = unitFormat.formats[i]\n      break\n    }\n  }\n\n  const isFirst = unitFormat.isFirst(mUnit)\n  const finalFormat = isFirst && format[2] ? format[2] : format[1]\n  return typeof finalFormat === 'function' ? finalFormat(mUnit) : mUnit.format(finalFormat)\n}\n\nexport const getUnitsPositions = (\n  outerScale,\n  outerStart,\n  outerEnd,\n  absoluteStart,\n  absoluteEnd,\n  baseUnit\n) => {\n  const startMs = Math.max(getTime(outerStart), getTime(absoluteStart))\n  const endMs = Math.min(getTime(outerEnd), getTime(absoluteEnd))\n\n  // BUFFER ??\n  const mOuterStart = dayjs(startMs).startOf(baseUnit)\n  const mOuterEnd = dayjs(endMs).endOf(baseUnit)\n\n  const units = []\n  const numUnitsOffset = getTime(outerEnd) > getTime(absoluteEnd) ? 0 : 1\n  const numUnits = mOuterEnd.diff(mOuterStart, baseUnit) + numUnitsOffset\n\n  let mUnit = mOuterStart\n  let x = outerScale(mUnit)\n\n  for (let ui = 0; ui <= numUnits; ui += 1) {\n    const mUnitNext = mUnit.add(1, baseUnit)\n    const xNext = outerScale(mUnitNext)\n\n    const id = mUnit.format(\n      {\n        year: 'YYYY',\n        month: 'YYYY-MM',\n        week: 'YYYY-MM-DD',\n        day: 'YYYY-MM-DD',\n        hour: 'YYYY-MM-DD-HH',\n      }[baseUnit]\n    )\n\n    const width = xNext - x\n    const unit = {\n      id,\n      x,\n      width,\n      label: getUnitLabel(mUnit, baseUnit, width),\n      hoverLabel: `${getUnitLabel(mUnit, baseUnit, Infinity)} - Zoom to ${baseUnit}`,\n      start: mUnit.toISOString(),\n      end: mUnitNext.subtract(1, 'hour').toISOString(), // this avoids being stuck when clicking on a day unit\n    }\n    units.push(unit)\n    mUnit = mUnitNext\n    x = xNext\n  }\n\n  return units\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ImmediateContext from '../immediateContext'\nimport styles from './timeline-units.module.css'\nimport { DEFAULT_CSS_TRANSITION } from '../constants'\nimport { getUnitsPositions } from '../layouts'\nimport { clampToAbsoluteBoundaries, getDeltaMs, getDeltaDays } from '../utils/internal-utils'\n\nclass TimelineUnits extends Component {\n  static contextType = ImmediateContext\n  zoomToUnit({ start, end }) {\n    const { absoluteStart, absoluteEnd } = this.props\n    const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n      start,\n      end,\n      getDeltaMs(start, end),\n      absoluteStart,\n      absoluteEnd\n    )\n    this.props.onChange(newStartClamped, newEndClamped)\n  }\n\n  render() {\n    const { start, end, absoluteStart, absoluteEnd, outerScale, outerStart, outerEnd } = this.props\n    const { immediate } = this.context\n    const innerDays = getDeltaDays(start, end)\n\n    let baseUnit = 'day'\n    if (innerDays > 366) baseUnit = 'year'\n    else if (innerDays > 31) baseUnit = 'month'\n    else if (innerDays < 1) baseUnit = 'hour'\n\n    const units = getUnitsPositions(\n      outerScale,\n      outerStart,\n      outerEnd,\n      absoluteStart,\n      absoluteEnd,\n      baseUnit\n    )\n    return (\n      <div>\n        {units.map((d) => (\n          <div\n            key={d.id}\n            style={{\n              left: d.x,\n              width: d.width,\n              transition: immediate\n                ? 'none'\n                : `width ${DEFAULT_CSS_TRANSITION}, left ${DEFAULT_CSS_TRANSITION}`,\n            }}\n            className={styles.unit}\n          >\n            {baseUnit === 'hour' ? (\n              <div>{d.label}</div>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.zoomToUnit(d)\n                }}\n                title={d.hoverLabel}\n              >\n                {d.label}\n              </button>\n            )}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nTimelineUnits.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  outerStart: PropTypes.string.isRequired,\n  outerEnd: PropTypes.string.isRequired,\n  outerScale: PropTypes.func.isRequired,\n}\n\nexport default TimelineUnits\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M4 1L1 5l3 4m3-8l3 4-3 4\",\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  fill: \"none\"\n});\n\nvar SvgDrag = function SvgDrag(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 10\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/drag.ff1ecd52.svg\";\nexport { SvgDrag as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport styles from './timeline-handler.module.css'\nimport { ReactComponent as IconDrag } from '../icons/drag.svg'\n\nconst Handler = (props) => (\n  <button\n    onMouseDown={props.onMouseDown}\n    onTouchStart={props.onMouseDown}\n    type=\"button\"\n    title=\"Drag to change the time range\"\n    className={classNames(styles.handler, {\n      [styles._immediate]: props.dragging === true,\n    })}\n    style={{ left: props.dragging === true ? props.mouseX : props.x }}\n  >\n    <IconDrag />\n  </button>\n)\n\nHandler.propTypes = {\n  onMouseDown: PropTypes.func.isRequired,\n  dragging: PropTypes.bool.isRequired,\n  x: PropTypes.number.isRequired,\n  mouseX: PropTypes.number,\n}\n\nHandler.defaultProps = {\n  mouseX: 0,\n}\n\nexport default Handler\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport cx from 'classnames'\nimport { scaleTime } from 'd3-scale'\nimport dayjs from 'dayjs'\nimport throttle from 'lodash/throttle'\nimport ImmediateContext from '../immediateContext'\nimport { animated, Spring } from 'react-spring/renderprops'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaMs,\n  isMoreThanADay,\n  stickToClosestUnit,\n} from '../utils/internal-utils'\nimport Bookmark from './bookmark'\nimport TimelineUnits from './timeline-units'\nimport Handler from './timeline-handler'\nimport styles from './timeline.module.css'\n\nconst DRAG_INNER = 'DRAG_INNER'\nconst DRAG_START = 'DRAG_START'\nconst DRAG_END = 'DRAG_END'\n\nclass Timeline extends PureComponent {\n  static contextType = ImmediateContext\n\n  getOuterScale = memoize((outerStart, outerEnd, outerWidth) =>\n    scaleTime()\n      .domain([new Date(outerStart), new Date(outerEnd)])\n      .range([0, outerWidth])\n  )\n\n  getOverallScale = memoize((absoluteStart, absoluteEnd, innerWidth) =>\n    scaleTime()\n      .domain([new Date(absoluteStart), new Date(absoluteEnd)])\n      .range([0, innerWidth])\n  )\n\n  getSvgTransform = memoize((overallScale, start, end, innerWidth, innerStartPx) => {\n    const startX = overallScale(new Date(start))\n    const endX = overallScale(new Date(end))\n    const deltaX = endX - startX\n    const scaleX = innerWidth / deltaX\n\n    const t = `translate(${innerStartPx}, 0) scale(${scaleX}, 1) translate(${-startX}, 0)`\n    return t\n  })\n\n  constructor() {\n    super()\n    this.state = {\n      innerStartPx: 0,\n      innerEndPx: 0,\n      innerWidth: 50,\n      outerWidth: 100,\n      outerHeight: 50,\n      dragging: null,\n    }\n    this.graphContainer = null\n    this.isMovingInside = false\n  }\n\n  componentDidMount() {\n    // wait for end of call stack to get rendered CSS\n    window.setTimeout(this.onWindowResize, 10)\n    window.addEventListener('resize', this.onWindowResize)\n    window.addEventListener('mousemove', this.onMouseMove)\n    window.addEventListener('touchmove', this.onMouseMove)\n    window.addEventListener('mouseup', this.onMouseUp)\n    window.addEventListener('touchend', this.onMouseUp)\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n    window.removeEventListener('mousemove', this.onMouseMove)\n    window.removeEventListener('touchmove', this.onMouseMove)\n    window.removeEventListener('mouseup', this.onMouseUp)\n    window.removeEventListener('touchend', this.onMouseUp)\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onWindowResize = () => {\n    if (this.graphContainer !== null) {\n      const graphStyle = window.getComputedStyle(this.graphContainer)\n      const outerX = parseFloat(this.graphContainer.getBoundingClientRect().left)\n      const outerWidth = parseFloat(graphStyle.width)\n      const outerHeight = parseFloat(graphStyle.height)\n      const innerStartPx = outerWidth * 0.15\n      const innerEndPx = outerWidth * 0.85\n      const innerWidth = outerWidth * 0.7\n      this.setState({\n        outerX,\n        innerStartPx,\n        innerEndPx,\n        innerWidth,\n        outerWidth,\n        outerHeight,\n      })\n    }\n  }\n\n  isHandlerZoomInValid(x) {\n    const { dragging, innerStartPx, innerEndPx } = this.state\n    const isZoomIn =\n      (dragging === DRAG_START && x > innerStartPx) || (dragging === DRAG_END && x < innerEndPx)\n\n    // check that start handler doesn't go after end handler or end handler before start handler\n    const isValid =\n      isZoomIn &&\n      ((dragging === DRAG_START && x < innerEndPx - 20) ||\n        (dragging === DRAG_END && x > innerStartPx + 20))\n    const clampedX =\n      dragging === DRAG_START ? Math.min(x, innerEndPx - 20) : Math.max(x, innerStartPx + 20)\n    return { isZoomIn, isValid, clampedX }\n  }\n\n  isHandlerZoomOutValid(x) {\n    const { dragging, innerStartPx, innerEndPx, outerWidth } = this.state\n    return (\n      (dragging === DRAG_START && x < innerStartPx && x > 0) ||\n      (dragging === DRAG_END && x > innerEndPx && x < outerWidth)\n    )\n  }\n\n  onEnterFrame = (timestamp) => {\n    if (this.frameTimestamp === undefined) {\n      this.frameTimestamp = timestamp\n    }\n    const progress = timestamp - this.frameTimestamp\n    this.frameTimestamp = timestamp\n\n    if (this.state.outerDrag === true) {\n      const { dragging, innerStartPx, innerEndPx, outerWidth, handlerMouseX } = this.state\n      const { start, end, absoluteStart, absoluteEnd, onChange } = this.props\n      // console.log(progress);\n      const deltaPxRatio =\n        dragging === DRAG_START\n          ? (innerStartPx - handlerMouseX) / innerStartPx\n          : (handlerMouseX - innerEndPx) / (outerWidth - innerEndPx)\n\n      const offsetMs =\n        (this.innerScale.invert(0.6).getTime() - this.innerScale.invert(0).getTime()) *\n        progress *\n        deltaPxRatio\n      let newStart = start\n      let newEnd = end\n\n      if (dragging === DRAG_START) {\n        newStart = new Date(getTime(start) - offsetMs).toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = new Date(getTime(end) + offsetMs).toISOString()\n      }\n\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart,\n        newEnd,\n        getDeltaMs(start, end),\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped, dragging === DRAG_END)\n    }\n\n    this.requestAnimationFrame = window.requestAnimationFrame(this.onEnterFrame)\n  }\n\n  onMouseDown = (event, dragging) => {\n    const { outerX } = this.state\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    this.lastX = clientX\n    const x = clientX - outerX\n    this.context.toggleImmediate(true)\n    this.setState({\n      dragging,\n      handlerMouseX: x,\n    })\n  }\n\n  throttledMouseMove = throttle((clientX, scale, isDay) => {\n    this.props.onMouseMove(clientX, scale, isDay)\n  }, 16)\n\n  notifyMouseLeave = () => {\n    this.throttledMouseMove(null, null, null)\n  }\n\n  onMouseMove = (event) => {\n    const { start, end, absoluteStart, absoluteEnd, onChange, onMouseLeave } = this.props\n    const { dragging, outerX, innerStartPx, innerEndPx } = this.state\n    const clientX = event.clientX || (event.changedTouches && event.changedTouches[0].clientX)\n    if (clientX === undefined) {\n      return\n    }\n    const x = clientX - outerX\n    const isMovingInside = this.node.contains(event.target) && x > innerStartPx && x < innerEndPx\n    if (isMovingInside) {\n      this.isMovingInside = true\n      const isDay = !isMoreThanADay(start, end)\n      this.throttledMouseMove(x, this.outerScale.invert, isDay)\n    } else if (this.isMovingInside === true) {\n      this.isMovingInside = false\n      onMouseLeave()\n      this.notifyMouseLeave()\n    }\n    if (dragging === DRAG_INNER) {\n      const currentDeltaMs = getDeltaMs(start, end)\n      // Calculates x movement from last event since TouchEvent doesn't have the movementX property\n      const movementX = clientX - this.lastX\n      this.lastX = event.clientX || event.changedTouches[0].clientX\n      const newStart = this.innerScale.invert(-movementX)\n      const newEnd = new Date(newStart.getTime() + currentDeltaMs)\n      const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n        newStart.toISOString(),\n        newEnd.toISOString(),\n        currentDeltaMs,\n        absoluteStart,\n        absoluteEnd\n      )\n      onChange(newStartClamped, newEndClamped, dragging === DRAG_END)\n    } else if (this.isHandlerZoomInValid(x).isValid === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: false,\n      })\n    } else if (this.isHandlerZoomOutValid(x) === true) {\n      this.setState({\n        handlerMouseX: x,\n        outerDrag: true,\n      })\n    }\n  }\n\n  onMouseUp = (event) => {\n    const { start, end, onChange } = this.props\n    const { dragging, outerX, innerStartPx } = this.state\n\n    if (dragging === null) {\n      return\n    }\n\n    const clientX = event.clientX || event.changedTouches[0].clientX\n    const x = clientX - outerX\n\n    const isHandlerZoomInValid = this.isHandlerZoomInValid(x)\n\n    this.context.toggleImmediate(false)\n    this.setState({\n      dragging: null,\n      handlerMouseX: null,\n      outerDrag: false,\n    })\n\n    let newStart = start\n    let newEnd = end\n\n    if (isHandlerZoomInValid.isZoomIn) {\n      if (dragging === DRAG_START) {\n        newStart = this.innerScale\n          .invert(isHandlerZoomInValid.clampedX - innerStartPx)\n          .toISOString()\n      } else if (dragging === DRAG_END) {\n        newEnd = this.innerScale.invert(isHandlerZoomInValid.clampedX - innerStartPx).toISOString()\n      }\n    }\n    // on release, \"stick\" to day/hour\n    const stickUnit = isMoreThanADay(newStart, newEnd) ? 'day' : 'hour'\n    newStart = stickToClosestUnit(newStart, stickUnit)\n    newEnd = stickToClosestUnit(newEnd, stickUnit)\n\n    onChange(newStart, newEnd)\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      absoluteStart,\n      absoluteEnd,\n      bookmarkStart,\n      bookmarkEnd,\n      onChange,\n      onBookmarkChange,\n    } = this.props\n    const {\n      dragging,\n      handlerMouseX,\n      innerStartPx,\n      innerEndPx,\n      innerWidth,\n      outerX,\n      outerWidth,\n      outerHeight,\n    } = this.state\n    const { immediate } = this.context\n\n    this.innerScale = scaleTime()\n      .domain([new Date(start), new Date(end)])\n      .range([0, innerWidth])\n    const outerStart = this.innerScale.invert(-innerStartPx).toISOString()\n    const outerEnd = this.innerScale.invert(outerWidth - innerStartPx).toISOString()\n\n    this.outerScale = this.getOuterScale(outerStart, outerEnd, this.state.outerWidth)\n    const overallScale = this.getOverallScale(absoluteStart, absoluteEnd, innerWidth)\n    const svgTransform = this.getSvgTransform(overallScale, start, end, innerWidth, innerStartPx)\n\n    const lastUpdatePosition = this.outerScale(new Date(absoluteEnd))\n\n    return (\n      <div ref={(node) => (this.node = node)} className={styles.Timeline}>\n        {bookmarkStart !== undefined && bookmarkStart !== null && (\n          <Bookmark\n            scale={this.outerScale}\n            bookmarkStart={bookmarkStart}\n            bookmarkEnd={bookmarkEnd}\n            minX={-outerX}\n            maxX={outerWidth}\n            onDelete={() => {\n              onBookmarkChange(null, null)\n            }}\n            onSelect={() => {\n              onChange(bookmarkStart, bookmarkEnd)\n            }}\n          />\n        )}\n        <div\n          className={styles.graphContainer}\n          ref={(ref) => {\n            this.graphContainer = ref\n          }}\n        >\n          {/* // TODO separated drag area? */}\n          <div\n            className={styles.graph}\n            onMouseDown={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n            onTouchStart={(event) => {\n              this.onMouseDown(event, DRAG_INNER)\n            }}\n          >\n            <TimelineUnits\n              {...this.props}\n              outerScale={this.outerScale}\n              outerStart={outerStart}\n              outerEnd={outerEnd}\n            />\n            {this.props.children &&\n              this.props.children({\n                outerScale: this.outerScale,\n                outerStart,\n                outerEnd,\n                outerWidth,\n                outerHeight,\n                graphHeight: outerHeight,\n                innerWidth,\n                overallScale,\n                svgTransform,\n                tooltipContainer: this.tooltipContainer,\n                ...this.props,\n              })}\n          </div>\n        </div>\n        <div\n          className={styles.tooltipContainer}\n          ref={(el) => {\n            this.tooltipContainer = el\n          }}\n        />\n        <div\n          className={cx(styles.veilLeft, styles.veil, {\n            [styles._immediate]: dragging === DRAG_START,\n          })}\n          style={{\n            width: dragging === DRAG_START ? handlerMouseX : innerStartPx,\n          }}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_START)\n          }}\n          dragging={this.state.dragging === DRAG_START}\n          x={innerStartPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <Handler\n          onMouseDown={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          onTouchStart={(event) => {\n            this.onMouseDown(event, DRAG_END)\n          }}\n          dragging={this.state.dragging === DRAG_END}\n          x={innerEndPx}\n          mouseX={this.state.handlerMouseX}\n        />\n        <div\n          className={cx(styles.veilRight, styles.veil, {\n            [styles._immediate]: dragging === DRAG_END,\n          })}\n          style={{\n            left: dragging === DRAG_END ? handlerMouseX : innerEndPx,\n            width: dragging === DRAG_END ? outerWidth - handlerMouseX : outerWidth - innerEndPx,\n          }}\n        />\n        {lastUpdatePosition <= outerWidth && (\n          <Spring native immediate={immediate} to={{ left: lastUpdatePosition }}>\n            {(style) => (\n              <animated.div className={styles.absoluteEnd} style={style}>\n                <div className={cx(styles.lastUpdate, styles.lastUpdateLabel)}>Last Update</div>\n                <div className={styles.lastUpdate}>{dayjs(absoluteEnd).format('MMMM D YYYY')}</div>\n              </animated.div>\n            )}\n          </Spring>\n        )}\n      </div>\n    )\n  }\n}\n\nTimeline.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  onBookmarkChange: PropTypes.func,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n}\n\nTimeline.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  onBookmarkChange: () => {},\n  onMouseLeave: () => {},\n  onMouseMove: () => {},\n}\n\nexport default Timeline\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M6 12v-2l2.66 2.66L6 15.34v-2a5.14 5.14 0 0 1-3.77-1.57A5.14 5.14 0 0 1 .66 8c0-1.04.28-1.99.84-2.84l.97.96A3.8 3.8 0 0 0 2 8c0 1.1.4 2.05 1.17 2.83A3.85 3.85 0 0 0 6 12zm0-9.34c1.46 0 2.71.52 3.77 1.57A5.14 5.14 0 0 1 11.34 8c0 1.04-.28 1.99-.84 2.84l-.97-.96A3.8 3.8 0 0 0 10 8c0-1.1-.4-2.05-1.17-2.83A3.85 3.85 0 0 0 6 4v2L3.34 3.34 6 .66v2z\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgLoop = function SvgLoop(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 16\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/loop.238142cc.svg\";\nexport { SvgLoop as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M7 0v7L2 3.5 7 0zM1 0v7H0V0h1z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgBack = function SvgBack(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/back.92029460.svg\";\nexport { SvgBack as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M.5 1.79v12.42a.5.5 0 0 0 .762.426l10.092-6.21a.5.5 0 0 0 0-.852L1.262 1.364A.5.5 0 0 0 .5 1.79z\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgPlay = function SvgPlay(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 16,\n    viewBox: \"0 0 13 16\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/play.df4d1e51.svg\";\nexport { SvgPlay as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0h3.077v11H0V0zm6.923 0H10v11H6.923V0z\",\n  fill: \"#FFF\"\n});\n\nvar SvgPause = function SvgPause(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 11\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/pause.ef441981.svg\";\nexport { SvgPause as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0l5 3.5L0 7V0zm6 0h1v7H6V0z\",\n  fill: \"#FFF\",\n  fillRule: \"evenodd\"\n});\n\nvar SvgForward = function SvgForward(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 7,\n    viewBox: \"0 0 7 7\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/forward.a29c1440.svg\";\nexport { SvgForward as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport memoize from 'memoize-one'\nimport { scaleLinear } from 'd3-scale'\nimport { clampToAbsoluteBoundaries } from '../utils/internal-utils'\nimport ImmediateContext from '../immediateContext'\nimport { ReactComponent as IconLoop } from '../icons/loop.svg'\nimport { ReactComponent as IconBack } from '../icons/back.svg'\nimport { ReactComponent as IconPlay } from '../icons/play.svg'\nimport { ReactComponent as IconPause } from '../icons/pause.svg'\nimport { ReactComponent as IconForward } from '../icons/forward.svg'\nimport styles from './playback.module.css'\nimport uiStyles from '../timebar.module.css'\n\nconst BASE_STEP = 0.001\nconst SPEED_STEPS = [1, 2, 3, 5, 10]\nconst FAST_FORWARD_REWIND_MULTIPLICATOR = 100\n\nclass Playback extends Component {\n  static contextType = ImmediateContext\n  lastUpdateMs = null\n  constructor() {\n    super()\n    this.state = {\n      playing: false,\n      speedStep: 0,\n      loop: false,\n    }\n  }\n\n  getStep = memoize((start, end, speedStep) => {\n    const baseStepWithSpeed = BASE_STEP * SPEED_STEPS[speedStep]\n    const startMs = new Date(start).getTime()\n    const endMs = new Date(end).getTime()\n    const scale = scaleLinear()\n      .range([0, 1])\n      .domain([startMs, endMs])\n    const step = scale.invert(baseStepWithSpeed) - startMs\n    return step\n  })\n\n  update = (deltaMultiplicatorMs) => {\n    const { onTick, start, end, absoluteStart, absoluteEnd } = this.props\n    const { speedStep, loop } = this.state\n    const deltaMs = this.getStep(start, end, speedStep) * deltaMultiplicatorMs\n\n    const newStartMs = new Date(start).getTime() + deltaMs\n    const newEndMs = new Date(end).getTime() + deltaMs\n\n    const currentStartEndDeltaMs = newEndMs - newStartMs\n\n    const newStart = new Date(newStartMs).toISOString()\n    const newEnd = new Date(newEndMs).toISOString()\n\n    const { newStartClamped, newEndClamped, clamped } = clampToAbsoluteBoundaries(\n      newStart,\n      newEnd,\n      currentStartEndDeltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    onTick(newStartClamped, newEndClamped)\n\n    if (clamped === 'end') {\n      if (loop === true) {\n        // start again from absoluteStart\n        const newEnd = new Date(\n          new Date(absoluteStart).getTime() + currentStartEndDeltaMs\n        ).toISOString()\n        onTick(absoluteStart, newEnd)\n      } else {\n        this.togglePlay(false)\n      }\n    }\n    if (clamped !== 'end' || loop === true) {\n      return true\n    }\n  }\n\n  tick = (elapsedMs) => {\n    if (this.lastUpdateMs === null) {\n      this.lastUpdateMs = elapsedMs\n    }\n    // \"compare\" elapsed with theoretical 60 fps frame\n    const progressRatio = (elapsedMs - this.lastUpdateMs) / (1000 / 60)\n\n    const requireNextTick = this.update(progressRatio)\n\n    this.lastUpdateMs = elapsedMs\n\n    if (requireNextTick === true) {\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    }\n  }\n\n  togglePlay = (force) => {\n    const { playing } = this.state\n\n    const playingNext = force === undefined ? !playing : force\n\n    this.lastUpdateMs = null\n\n    if (playingNext) {\n      this.context.toggleImmediate(true)\n      this.requestAnimationFrame = window.requestAnimationFrame(this.tick)\n    } else {\n      this.context.toggleImmediate(false)\n      window.cancelAnimationFrame(this.requestAnimationFrame)\n    }\n\n    this.setState({\n      playing: playingNext,\n    })\n  }\n\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.requestAnimationFrame)\n  }\n\n  onPlayToggleClick = () => {\n    this.togglePlay()\n  }\n\n  toggleLoop = () => {\n    this.setState((prevState) => ({\n      loop: !prevState.loop,\n    }))\n  }\n\n  onForwardClick = () => {\n    this.update(FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onBackwardClick = () => {\n    this.update(-FAST_FORWARD_REWIND_MULTIPLICATOR)\n  }\n\n  onSpeedClick = () => {\n    const { speedStep } = this.state\n    const nextStep = speedStep === SPEED_STEPS.length - 1 ? 0 : speedStep + 1\n    this.setState({ speedStep: nextStep })\n  }\n\n  render() {\n    const { playing, loop, speedStep } = this.state\n    const { end, absoluteEnd } = this.props\n    const stoppedAtEnd = end === absoluteEnd && loop !== true\n\n    return (\n      <div\n        className={cx(styles.playbackActions, {\n          [styles.playbackActionsActive]: playing,\n        })}\n      >\n        <button\n          type=\"button\"\n          title=\"Toggle animation looping\"\n          onClick={this.toggleLoop}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.loop, {\n            [styles.secondaryActive]: loop,\n          })}\n        >\n          <IconLoop />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move back\"\n          onClick={this.onBackwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.back)}\n        >\n          <IconBack />\n        </button>\n        <button\n          type=\"button\"\n          title={`${playing === true ? 'Pause' : 'Play'} animation`}\n          onClick={this.onPlayToggleClick}\n          disabled={stoppedAtEnd}\n          className={cx(uiStyles.uiButton, styles.buttonBigger, styles.play)}\n        >\n          {playing === true ? <IconPause /> : <IconPlay />}\n        </button>\n        <button\n          type=\"button\"\n          title=\"Move forward\"\n          onClick={this.onForwardClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.forward)}\n        >\n          <IconForward />\n        </button>\n        <button\n          type=\"button\"\n          title=\"Change animation speed\"\n          onClick={this.onSpeedClick}\n          className={cx(uiStyles.uiButton, styles.secondary, styles.speed)}\n        >\n          {SPEED_STEPS[speedStep]}x\n        </button>\n      </div>\n    )\n  }\n}\n\nPlayback.propTypes = {\n  onTick: PropTypes.func.isRequired,\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n}\n\nexport default Playback\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#FFF\",\n  d: \"M1.06 5v8a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1V5h-13zm14-2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2V3c0-1.1.9-2 2-2v.5a1.5 1.5 0 0 0 3 0V1h5v.5a1.5 1.5 0 0 0 3 0V1a2 2 0 0 1 2 2zm-9 4v5l-3-2.5 3-2.5zm3 0v5l3-2.5-3-2.5zm-5.5-7a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 1 0v-1a.5.5 0 0 0-.5-.5zm8 0a.5.5 0 0 0-.5.5v1a.5.5 0 1 0 1 0v-1a.5.5 0 0 0-.5-.5z\"\n});\n\nvar SvgTimeRange = function SvgTimeRange(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 15\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/timeRange.cb0de496.svg\";\nexport { SvgTimeRange as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"#FFF\",\n  strokeWidth: 1.5,\n  d: \"M1 1h9v12l-4.5-3L1 13z\",\n  fill: \"none\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgBookmark = function SvgBookmark(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 14,\n    viewBox: \"0 0 11 14\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/bookmark.d1725b51.svg\";\nexport { SvgBookmark as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  width: 7,\n  height: 1,\n  rx: 0.5,\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgMinus = function SvgMinus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 3,\n    viewBox: \"0 0 9 3\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/minus.cd2a0a55.svg\";\nexport { SvgMinus as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  fill: \"#FFF\",\n  stroke: \"#FFF\",\n  strokeWidth: 0.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, React.createElement(\"rect\", {\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}), React.createElement(\"rect\", {\n  transform: \"rotate(90 3.5 3.5)\",\n  y: 3,\n  width: 7,\n  height: 1,\n  rx: 0.5\n}));\n\nvar SvgPlus = function SvgPlus(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 9,\n    viewBox: \"0 0 9 9\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/img/plus.16944dd2.svg\";\nexport { SvgPlus as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport dayjs from 'dayjs'\nimport memoize from 'memoize-one'\nimport ImmediateContext from './immediateContext'\nimport {\n  getTime,\n  clampToAbsoluteBoundaries,\n  getDeltaDays,\n  isMoreThanADay,\n} from './utils/internal-utils'\nimport { getHumanizedDates } from './utils'\nimport './timebar-settings.module.css'\nimport styles from './timebar.module.css'\nimport TimeRangeSelector from './components/timerange-selector'\nimport Timeline from './components/timeline'\nimport Playback from './components/playback'\nimport { ReactComponent as IconTimeRange } from './icons/timeRange.svg'\nimport { ReactComponent as IconBookmark } from './icons/bookmark.svg'\nimport { ReactComponent as IconBookmarkFilled } from './icons/bookmarkFilled.svg'\nimport { ReactComponent as IconMinus } from './icons/minus.svg'\nimport { ReactComponent as IconPlus } from './icons/plus.svg'\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime)\n\nconst ONE_DAY_MS = 1000 * 60 * 60 * 24\n\nconst getRangeMs = (range, unit) => {\n  const start = dayjs(new Date())\n  const end = start.add(range, unit)\n  return end.diff(start)\n}\n\nconst clampToMinAndMax = (start, end, minMs, maxMs, clampToEnd) => {\n  const delta = new Date(end).getTime() - new Date(start).getTime()\n  let clampedEnd = end\n  let clampedStart = start\n  if (delta > maxMs) {\n    if (clampToEnd === true) {\n      clampedEnd = new Date(new Date(start).getTime() + maxMs).toISOString()\n    } else {\n      clampedStart = new Date(new Date(end).getTime() - maxMs).toISOString()\n    }\n  } else if (delta < minMs) {\n    if (clampToEnd === true) {\n      clampedEnd = new Date(new Date(start).getTime() + minMs).toISOString()\n    } else {\n      clampedStart = new Date(new Date(end).getTime() - minMs).toISOString()\n    }\n  }\n  return { clampedStart, clampedEnd }\n}\n\nclass Timebar extends Component {\n  constructor() {\n    super()\n    this.toggleImmediate = (immediate) => {\n      this.setState((state) => ({\n        immediate,\n      }))\n    }\n    this.interval = null\n    this.state = {\n      immediate: false,\n      showTimeRangeSelector: false,\n      absoluteEnd: null,\n    }\n  }\n\n  getMaximumRangeMs = memoize((maximumRange, maximumRangeUnit) => {\n    if (maximumRange === null) {\n      return Number.POSITIVE_INFINITY\n    }\n    return getRangeMs(maximumRange, maximumRangeUnit)\n  })\n\n  getMinimumRangeMs = memoize((minimumRange, minimumRangeUnit) => {\n    if (minimumRange === null) {\n      return Number.NEGATIVE_INFINITY\n    }\n    return getRangeMs(minimumRange, minimumRangeUnit)\n  })\n\n  componentDidMount() {\n    const { start, end } = this.props\n\n    // TODO stick to day/hour here too\n    this.notifyChange(start, end)\n  }\n\n  static getDerivedStateFromProps(props) {\n    // let absolute end run through the end of the day\n    const absoluteEnd = dayjs(props.absoluteEnd)\n      .endOf('day')\n      .toISOString()\n    return {\n      absoluteEnd,\n    }\n  }\n\n  toggleTimeRangeSelector = () => {\n    this.setState((prevState) => ({\n      showTimeRangeSelector: !prevState.showTimeRangeSelector,\n    }))\n  }\n\n  setBookmark = () => {\n    const { start, end, onBookmarkChange } = this.props\n    onBookmarkChange !== null && onBookmarkChange(start, end)\n  }\n\n  onTimeRangeSelectorSubmit = (start, end) => {\n    this.notifyChange(start, end)\n    this.setState({\n      showTimeRangeSelector: false,\n    })\n  }\n\n  zoom = (zoom) => {\n    const { start, end, absoluteStart, absoluteEnd } = this.props\n    const delta = Math.round(getDeltaDays(start, end))\n\n    let steps\n    let nextDelta\n    let nextUnit = 'day'\n\n    if (zoom === 'in') {\n      steps = [365, 32, 30, 7, 1]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        if (delta > step) {\n          nextDelta = step\n          break\n        }\n      }\n      // sub-day situation\n      if (nextDelta === undefined) {\n        nextDelta = 23.9\n        nextUnit = 'hour'\n      }\n    } else if (zoom === 'out') {\n      steps = [1, 7, 30, 32, 365]\n      for (let s = 0; s < steps.length; s += 1) {\n        const step = steps[s]\n        // if (delta > step) {\n        if (delta < step) {\n          nextDelta = step\n          break\n        }\n      }\n\n      // more than 1 year situation\n      if (nextDelta === undefined) {\n        this.notifyChange(absoluteStart, absoluteEnd)\n        return\n      }\n    }\n\n    const unitOffsetMs = nextUnit === 'hour' ? ONE_DAY_MS / 24 : ONE_DAY_MS\n    const middleMs = getTime(start) + (getTime(end) - getTime(start)) / 2\n    const offsetMs = (nextDelta * unitOffsetMs) / 2\n    const newStartMs = middleMs - offsetMs\n    const mNewStart = dayjs(newStartMs).startOf(nextUnit)\n    const newEnd = mNewStart.add(nextDelta, nextUnit).toISOString()\n\n    const deltaMs = nextDelta * unitOffsetMs\n    const { newStartClamped, newEndClamped } = clampToAbsoluteBoundaries(\n      mNewStart.toISOString(),\n      newEnd,\n      deltaMs,\n      absoluteStart,\n      absoluteEnd\n    )\n\n    this.notifyChange(newStartClamped, newEndClamped)\n  }\n\n  notifyChange = (start, end, clampToEnd = false) => {\n    const { clampedStart, clampedEnd } = clampToMinAndMax(\n      start,\n      end,\n      this.minimumRangeMs,\n      this.maximumRangeMs,\n      clampToEnd\n    )\n    const { onChange } = this.props\n    const { humanizedStart, humanizedEnd } = getHumanizedDates(clampedStart, clampedEnd)\n    onChange(clampedStart, clampedEnd, humanizedStart, humanizedEnd)\n  }\n\n  onPlaybackTick = (newStart, newEnd) => {\n    this.notifyChange(newStart, newEnd)\n  }\n\n  render() {\n    const {\n      start,\n      end,\n      absoluteStart,\n      bookmarkStart,\n      bookmarkEnd,\n      enablePlayback,\n      minimumRange,\n      minimumRangeUnit,\n      maximumRange,\n      maximumRangeUnit,\n    } = this.props\n    const { immediate } = this.state\n\n    // state.absoluteEnd overrides the value set in props.absoluteEnd - see getDerivedStateFromProps\n    const { showTimeRangeSelector, absoluteEnd } = this.state\n\n    this.maximumRangeMs = this.getMaximumRangeMs(maximumRange, maximumRangeUnit)\n    this.minimumRangeMs = this.getMinimumRangeMs(minimumRange, minimumRangeUnit)\n\n    const canZoomIn = isMoreThanADay(start, end)\n    const deltaDays = getDeltaDays(start, end)\n    const absoluteDeltaDays = getDeltaDays(absoluteStart, absoluteEnd)\n    const canZoomOut = deltaDays <= absoluteDeltaDays - 1\n\n    const hasBookmark =\n      bookmarkStart !== undefined &&\n      bookmarkStart !== null &&\n      bookmarkEnd !== undefined &&\n      bookmarkEnd !== null\n    const bookmarkDisabled =\n      hasBookmark &&\n      getTime(bookmarkStart) === getTime(start) &&\n      getTime(bookmarkEnd) === getTime(end)\n\n    return (\n      <ImmediateContext.Provider value={{ immediate, toggleImmediate: this.toggleImmediate }}>\n        <div className={styles.Timebar}>\n          {enablePlayback && (\n            <Playback\n              start={start}\n              end={end}\n              absoluteStart={absoluteStart}\n              absoluteEnd={absoluteEnd}\n              onTick={this.onPlaybackTick}\n            />\n          )}\n\n          <div className={styles.timeActions}>\n            {showTimeRangeSelector && (\n              <TimeRangeSelector\n                {...this.props}\n                absoluteEnd={absoluteEnd}\n                onSubmit={this.onTimeRangeSelectorSubmit}\n                onDiscard={this.toggleTimeRangeSelector}\n              />\n            )}\n            <div className={styles.timeRangeContainer}>\n              <button\n                type=\"button\"\n                title=\"Select a time range\"\n                className={cx(styles.uiButton, styles.timeRange)}\n                onClick={this.toggleTimeRangeSelector}\n              >\n                <IconTimeRange />\n              </button>\n            </div>\n            <button\n              type=\"button\"\n              title=\"Bookmark current time range\"\n              className={cx(styles.uiButton, styles.bookmark)}\n              onClick={this.setBookmark}\n              disabled={bookmarkDisabled === true}\n            >\n              {hasBookmark ? <IconBookmarkFilled /> : <IconBookmark />}\n            </button>\n            <div className={styles.timeScale}>\n              <button\n                type=\"button\"\n                title=\"Zoom out\"\n                disabled={canZoomOut === false}\n                onClick={() => {\n                  this.zoom('out')\n                }}\n                className={cx(styles.uiButton, styles.out)}\n              >\n                <IconMinus />\n              </button>\n              <button\n                type=\"button\"\n                title=\"Zoom in\"\n                disabled={canZoomIn === false}\n                onClick={() => {\n                  this.zoom('in')\n                }}\n                className={cx(styles.uiButton, styles.in)}\n              >\n                <IconPlus />\n              </button>\n            </div>\n          </div>\n\n          <Timeline {...this.props} onChange={this.notifyChange} absoluteEnd={absoluteEnd} />\n        </div>\n      </ImmediateContext.Provider>\n    )\n  }\n}\n\nTimebar.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  bookmarkStart: PropTypes.string,\n  bookmarkEnd: PropTypes.string,\n  onBookmarkChange: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  absoluteStart: PropTypes.string.isRequired,\n  absoluteEnd: PropTypes.string.isRequired,\n  enablePlayback: PropTypes.bool,\n  minimumRange: PropTypes.number,\n  minimumRangeUnit: PropTypes.string,\n  maximumRange: PropTypes.number,\n  maximumRangeUnit: PropTypes.string,\n}\n\nTimebar.defaultProps = {\n  bookmarkStart: null,\n  bookmarkEnd: null,\n  enablePlayback: false,\n  onBookmarkChange: () => {},\n  minimumRange: null,\n  minimumRangeUnit: 'day',\n  maximumRange: null,\n  maximumRangeUnit: 'month',\n}\n\nexport default Timebar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport memoize from 'memoize-one'\nimport { stack, stackOrderNone, stackOffsetSilhouette, area, curveStepAfter } from 'd3-shape'\nimport dayjs from 'dayjs'\nimport styles from './events.module.css'\n\nconst TOP_MARGIN = 5\nconst BOTTOM_MARGIN = 20\n\nclass Events extends Component {\n  getFinalEvents = memoize(\n    (events, showFishing) => {\n      let { labels, counts } = events.series\n\n      if (showFishing !== true) {\n        const fishingIndex = labels.indexOf('fishing')\n        labels = [...labels.slice(0, fishingIndex), ...labels.slice(fishingIndex + 1)]\n        counts = [...counts.slice(0, fishingIndex), ...counts.slice(fishingIndex + 1)]\n      }\n\n      const baseUnit = events.offset\n      const mStart = dayjs(events.start)\n      const mEnd = dayjs(events.end)\n      let mCurrentStart = mStart.clone()\n      const numUnits = mEnd.diff(mStart, baseUnit)\n\n      const allValues = []\n      let maxValue = 0\n\n      for (let dateIndex = 0; dateIndex < numUnits + 1; dateIndex += 1) {\n        let valuesAtDateSum = 0\n        const valuesAtDate = {\n          date: mCurrentStart.toDate(),\n        }\n        labels.forEach((key, keyIndex) => {\n          const value = counts[keyIndex][dateIndex]\n          valuesAtDate[key] = value\n          valuesAtDateSum += value\n        })\n\n        if (\n          labels.map((k) => valuesAtDate[k]).filter((v) => v === undefined).length === labels.length\n        ) {\n          console.warn('there are no values after this date, aborting rendering', valuesAtDate)\n          break\n        }\n\n        if (valuesAtDateSum > maxValue) {\n          maxValue = valuesAtDateSum\n        }\n\n        mCurrentStart = mCurrentStart.add(1, baseUnit)\n        allValues.push(valuesAtDate)\n      }\n\n      const allRatios = []\n      allValues.forEach((valuesAtDate) => {\n        const ratiosAtDate = { ...valuesAtDate }\n        labels.forEach((key) => {\n          ratiosAtDate[key] = valuesAtDate[key] / maxValue\n        })\n        allRatios.push(ratiosAtDate)\n      })\n      // need to pad with the last value to allow the curveStepAfter line generator to extend\n      allRatios.push({\n        ...allRatios[allRatios.length - 1],\n        date: mCurrentStart.toDate(),\n      })\n\n      const stackLayout = stack()\n        .keys(labels)\n        .order(stackOrderNone)\n        .offset(stackOffsetSilhouette)\n\n      return stackLayout(allRatios)\n    }\n    // TODO need custom equality comparator?\n    // (a: mixed, b: mixed) => boolean\n    // () => { return true; }\n  )\n\n  render() {\n    const { events, outerScale, outerWidth, graphHeight, showFishing } = this.props\n    // Calculate the latest derived data. If original events data hasn't changed\n    // since the last render, `memoize-one` will reuse the last return value.\n    // TODO this probably won't work correctly with Redux immutable state as nextProps.events !== props.events?\n    const finalEvents = this.getFinalEvents(events, showFishing)\n\n    const finalHeight = graphHeight - TOP_MARGIN - BOTTOM_MARGIN\n    const middle = TOP_MARGIN + finalHeight / 2\n\n    const areaGenerator = area()\n      .x((d) => outerScale(d.data.date))\n      .y0((d) => middle + finalHeight * d[0])\n      .y1((d) => middle + finalHeight * d[1])\n      .curve(curveStepAfter)\n    return (\n      <svg width={outerWidth} height={graphHeight} className={styles.Events}>\n        {finalEvents.map((eventsForKey, i) => (\n          <path\n            key={eventsForKey.key + i}\n            d={areaGenerator(eventsForKey)}\n            className={styles[eventsForKey.key]}\n          />\n        ))}\n      </svg>\n    )\n  }\n}\n\nEvents.propTypes = {\n  events: PropTypes.shape({\n    start: PropTypes.string,\n    end: PropTypes.string,\n    offset: PropTypes.string,\n    series: PropTypes.shape({\n      labels: PropTypes.arrayOf(PropTypes.string),\n      counts: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    }),\n  }).isRequired,\n  outerScale: PropTypes.func.isRequired,\n  outerWidth: PropTypes.number.isRequired,\n  graphHeight: PropTypes.number.isRequired,\n  showFishing: PropTypes.bool,\n}\n\nEvents.defaultProps = {\n  showFishing: false,\n}\n\nexport default Events\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, Props } from 'docz'\nimport Timebar from './timebar'\nimport TimebarEvents from './charts/Events.js'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"timebar\"}}>{`Timebar`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"description\"}}>{`Description`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Visualize time-based data and allows users to filter it by a custom time range.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Currently used in:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/GlobalFishingWatch/data-portal/blob/64aa2982d2159fbcf13ef58d25ea0ae3e01e0af9/src/timebar/TimebarWrapper.jsx#L2\"}}>{`Data portal`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"available-properties\"}}>{`Available properties`}</MDXTag>\n<Props of={Timebar} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={``} __position={1} __code={'() => {\\n  const eventsMock = {\\n    start: \\'2014-01-01T00:00:00.000Z\\',\\n    end: \\'2018-12-27T00:00:00.000Z\\',\\n    offset: \\'day\\',\\n    series: {\\n      labels: [\\'encounter\\', \\'fishing\\', \\'gap\\', \\'port\\'],\\n      counts: [\\n        [\\n          36,\\n          36,\\n          24,\\n          16,\\n          16,\\n          8,\\n          22,\\n          28,\\n          22,\\n          26,\\n          36,\\n          32,\\n          68,\\n          40,\\n          30,\\n          32,\\n          44,\\n          52,\\n          56,\\n          18,\\n          34,\\n          30,\\n          32,\\n          32,\\n          24,\\n          26,\\n          34,\\n          24,\\n          34,\\n          30,\\n          62,\\n          36,\\n          26,\\n          38,\\n          26,\\n          26,\\n          14,\\n          26,\\n          26,\\n          20,\\n          32,\\n          36,\\n          42,\\n          36,\\n          22,\\n          32,\\n          32,\\n          34,\\n          32,\\n          38,\\n          38,\\n          22,\\n          28,\\n          22,\\n          12,\\n          14,\\n          14,\\n          14,\\n          16,\\n          20,\\n          10,\\n          18,\\n          28,\\n          14,\\n          28,\\n          40,\\n          32,\\n          52,\\n          24,\\n          34,\\n          24,\\n          34,\\n          24,\\n          34,\\n          22,\\n          26,\\n          28,\\n          12,\\n          16,\\n          26,\\n          18,\\n          12,\\n          14,\\n          28,\\n          32,\\n          26,\\n          28,\\n          14,\\n          34,\\n          14,\\n          14,\\n          20,\\n          22,\\n          16,\\n          16,\\n          16,\\n          22,\\n          28,\\n          20,\\n          26,\\n          20,\\n          26,\\n          32,\\n          54,\\n          38,\\n          20,\\n          38,\\n          22,\\n          20,\\n          8,\\n          16,\\n          16,\\n          8,\\n          4,\\n          8,\\n          12,\\n          12,\\n          16,\\n          16,\\n          24,\\n          18,\\n          12,\\n          20,\\n          22,\\n          22,\\n          36,\\n          40,\\n          20,\\n          42,\\n          18,\\n          16,\\n          26,\\n          28,\\n          38,\\n          26,\\n          28,\\n          12,\\n          8,\\n          10,\\n          8,\\n          8,\\n          16,\\n          16,\\n          16,\\n          24,\\n          20,\\n          20,\\n          26,\\n          8,\\n          24,\\n          10,\\n          16,\\n          32,\\n          22,\\n          6,\\n          20,\\n          18,\\n          16,\\n          14,\\n          24,\\n          22,\\n          24,\\n          22,\\n          16,\\n          14,\\n          14,\\n          28,\\n          20,\\n          24,\\n          16,\\n          14,\\n          20,\\n          34,\\n          26,\\n          32,\\n          16,\\n          20,\\n          16,\\n          22,\\n          14,\\n          14,\\n          22,\\n          24,\\n          20,\\n          10,\\n          12,\\n          14,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          38,\\n          16,\\n          20,\\n          24,\\n          22,\\n          26,\\n          22,\\n          10,\\n          18,\\n          22,\\n          12,\\n          24,\\n          14,\\n          14,\\n          28,\\n          26,\\n          30,\\n          28,\\n          24,\\n          24,\\n          24,\\n          10,\\n          16,\\n          16,\\n          8,\\n          16,\\n          24,\\n          20,\\n          30,\\n          12,\\n          16,\\n          36,\\n          20,\\n          22,\\n          12,\\n          20,\\n          32,\\n          28,\\n          32,\\n          18,\\n          32,\\n          8,\\n          6,\\n          26,\\n          14,\\n          28,\\n          20,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          14,\\n          6,\\n          18,\\n          22,\\n          14,\\n          10,\\n          18,\\n          18,\\n          20,\\n          14,\\n          20,\\n          26,\\n          16,\\n          22,\\n          20,\\n          10,\\n          10,\\n          20,\\n          14,\\n          20,\\n          16,\\n          10,\\n          26,\\n          18,\\n          14,\\n          20,\\n          12,\\n          22,\\n          28,\\n          16,\\n          22,\\n          26,\\n          12,\\n          22,\\n          12,\\n          14,\\n          20,\\n          14,\\n          12,\\n          16,\\n          14,\\n          16,\\n          12,\\n          12,\\n          14,\\n          32,\\n          26,\\n          36,\\n          26,\\n          20,\\n          44,\\n          22,\\n          28,\\n          22,\\n          24,\\n          18,\\n          12,\\n          10,\\n          24,\\n          20,\\n          32,\\n          12,\\n          22,\\n          18,\\n          26,\\n          34,\\n          26,\\n          18,\\n          16,\\n          26,\\n          12,\\n          16,\\n          12,\\n          10,\\n          22,\\n          18,\\n          30,\\n          22,\\n          28,\\n          18,\\n          20,\\n          16,\\n          14,\\n          10,\\n          12,\\n          8,\\n          14,\\n          12,\\n          10,\\n          10,\\n          12,\\n          8,\\n          12,\\n          14,\\n          18,\\n          20,\\n          28,\\n          24,\\n          38,\\n          18,\\n          20,\\n          6,\\n          16,\\n          14,\\n          6,\\n          20,\\n          6,\\n          8,\\n          16,\\n          8,\\n          24,\\n          32,\\n          36,\\n          20,\\n          24,\\n          22,\\n          36,\\n          36,\\n          40,\\n          40,\\n          34,\\n          32,\\n          28,\\n          34,\\n          28,\\n          34,\\n          24,\\n          50,\\n          70,\\n          54,\\n          46,\\n          20,\\n          46,\\n          40,\\n          38,\\n          44,\\n          38,\\n          38,\\n          40,\\n          20,\\n          24,\\n          16,\\n          30,\\n          52,\\n          54,\\n          34,\\n          42,\\n          36,\\n          24,\\n          24,\\n          20,\\n          56,\\n          30,\\n          50,\\n          30,\\n          22,\\n          26,\\n          30,\\n          20,\\n          4,\\n          20,\\n          16,\\n          14,\\n          20,\\n          12,\\n          22,\\n          34,\\n          34,\\n          34,\\n          30,\\n          36,\\n          42,\\n          20,\\n          20,\\n          12,\\n          14,\\n          20,\\n          8,\\n          12,\\n          16,\\n          8,\\n          26,\\n          26,\\n          20,\\n          24,\\n          20,\\n          20,\\n          24,\\n          16,\\n          38,\\n          20,\\n          12,\\n          10,\\n          14,\\n          18,\\n          8,\\n          2,\\n          14,\\n          8,\\n          0,\\n          10,\\n          6,\\n          18,\\n          18,\\n          10,\\n          12,\\n          10,\\n          6,\\n          14,\\n          4,\\n          18,\\n          20,\\n          24,\\n          24,\\n          18,\\n          22,\\n          22,\\n          12,\\n          6,\\n          6,\\n          8,\\n          2,\\n          0,\\n          4,\\n          2,\\n          4,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          6,\\n          8,\\n          6,\\n          8,\\n          6,\\n          4,\\n          4,\\n          10,\\n          10,\\n          4,\\n          8,\\n          22,\\n          22,\\n          10,\\n          12,\\n          18,\\n          14,\\n          6,\\n          0,\\n          4,\\n          6,\\n          10,\\n          6,\\n          8,\\n          12,\\n          8,\\n          2,\\n          16,\\n          12,\\n          4,\\n          2,\\n          10,\\n          6,\\n          0,\\n          12,\\n          8,\\n          14,\\n          2,\\n          14,\\n          22,\\n          16,\\n          24,\\n          18,\\n          20,\\n          36,\\n          18,\\n          12,\\n          10,\\n          8,\\n          16,\\n          0,\\n          0,\\n          0,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          8,\\n          6,\\n          6,\\n          4,\\n          6,\\n          2,\\n          4,\\n          0,\\n          6,\\n          6,\\n          4,\\n          6,\\n          8,\\n          10,\\n          6,\\n          12,\\n          16,\\n          10,\\n          4,\\n          6,\\n          2,\\n          8,\\n          0,\\n          6,\\n          4,\\n          4,\\n          10,\\n          18,\\n          16,\\n          14,\\n          6,\\n          0,\\n          8,\\n          2,\\n          8,\\n          14,\\n          12,\\n          10,\\n          6,\\n          10,\\n          10,\\n          12,\\n          20,\\n          16,\\n          28,\\n          8,\\n          12,\\n          8,\\n          4,\\n          2,\\n          2,\\n          6,\\n          8,\\n          4,\\n          8,\\n          4,\\n          2,\\n          4,\\n          0,\\n          4,\\n          2,\\n          2,\\n          2,\\n          2,\\n          0,\\n          4,\\n          4,\\n          6,\\n          14,\\n          8,\\n          12,\\n          18,\\n          26,\\n          18,\\n          10,\\n          18,\\n          10,\\n          14,\\n          14,\\n          14,\\n          4,\\n          2,\\n          2,\\n          4,\\n          2,\\n          4,\\n          6,\\n          4,\\n          6,\\n          22,\\n          8,\\n          8,\\n          24,\\n          14,\\n          6,\\n          8,\\n          8,\\n          8,\\n          8,\\n          14,\\n          6,\\n          18,\\n          18,\\n          16,\\n          32,\\n          24,\\n          52,\\n          18,\\n          18,\\n          8,\\n          4,\\n          2,\\n          0,\\n          4,\\n          2,\\n          10,\\n          14,\\n          6,\\n          16,\\n          14,\\n          6,\\n          18,\\n          4,\\n          12,\\n          10,\\n          8,\\n          8,\\n          12,\\n          8,\\n          8,\\n          6,\\n          10,\\n          18,\\n          10,\\n          6,\\n          12,\\n          6,\\n          14,\\n          4,\\n          16,\\n          10,\\n          4,\\n          12,\\n          14,\\n          12,\\n          22,\\n          20,\\n          14,\\n          18,\\n          20,\\n          8,\\n          12,\\n          18,\\n          6,\\n          4,\\n          10,\\n          10,\\n          16,\\n          14,\\n          14,\\n          6,\\n          14,\\n          14,\\n          6,\\n          2,\\n          10,\\n          12,\\n          8,\\n          4,\\n          8,\\n          6,\\n          2,\\n          6,\\n          2,\\n          6,\\n          4,\\n          28,\\n          10,\\n          12,\\n          20,\\n          30,\\n          24,\\n          24,\\n          32,\\n          30,\\n          22,\\n          16,\\n          26,\\n          18,\\n          18,\\n          24,\\n          14,\\n          20,\\n          30,\\n          22,\\n          8,\\n          0,\\n          16,\\n          22,\\n          18,\\n          10,\\n          24,\\n          16,\\n          4,\\n          8,\\n          12,\\n          10,\\n          10,\\n          10,\\n          8,\\n          8,\\n          20,\\n          14,\\n          18,\\n          24,\\n          24,\\n          28,\\n          30,\\n          20,\\n          40,\\n          36,\\n          32,\\n          56,\\n          54,\\n          60,\\n          56,\\n          28,\\n          16,\\n          28,\\n          30,\\n          22,\\n          22,\\n          14,\\n          62,\\n          40,\\n          42,\\n          68,\\n          60,\\n          56,\\n          64,\\n          32,\\n          50,\\n          34,\\n          14,\\n          24,\\n          20,\\n          24,\\n          38,\\n          42,\\n          60,\\n          46,\\n          52,\\n          42,\\n          30,\\n          28,\\n          12,\\n          16,\\n          14,\\n          22,\\n          16,\\n          12,\\n          18,\\n          38,\\n          16,\\n          30,\\n          24,\\n          16,\\n          20,\\n          10,\\n          14,\\n          14,\\n          30,\\n          30,\\n          16,\\n          30,\\n          14,\\n          50,\\n          52,\\n          64,\\n          66,\\n          64,\\n          54,\\n          44,\\n          46,\\n          52,\\n          52,\\n          34,\\n          40,\\n          30,\\n          36,\\n          28,\\n          34,\\n          22,\\n          34,\\n          20,\\n          20,\\n          20,\\n          22,\\n          18,\\n          16,\\n          30,\\n          16,\\n          24,\\n          28,\\n          22,\\n          24,\\n          34,\\n          42,\\n          50,\\n          62,\\n          44,\\n          46,\\n          44,\\n          34,\\n          20,\\n          32,\\n          32,\\n          20,\\n          28,\\n          20,\\n          20,\\n          32,\\n          20,\\n          12,\\n          16,\\n          16,\\n          24,\\n          6,\\n          18,\\n          22,\\n          26,\\n          16,\\n          12,\\n          22,\\n          10,\\n          18,\\n          38,\\n          58,\\n          44,\\n          44,\\n          44,\\n          44,\\n          24,\\n          18,\\n          14,\\n          12,\\n          12,\\n          12,\\n          10,\\n          18,\\n          10,\\n          24,\\n          14,\\n          18,\\n          22,\\n          10,\\n          20,\\n          18,\\n          18,\\n          6,\\n          22,\\n          20,\\n          26,\\n          10,\\n          24,\\n          28,\\n          24,\\n          34,\\n          68,\\n          32,\\n          28,\\n          24,\\n          18,\\n          30,\\n          32,\\n          16,\\n          12,\\n          24,\\n          22,\\n          10,\\n          12,\\n          36,\\n          28,\\n          52,\\n          28,\\n          14,\\n          6,\\n          10,\\n          8,\\n          16,\\n          10,\\n          12,\\n          38,\\n          32,\\n          34,\\n          24,\\n          28,\\n          46,\\n          36,\\n          32,\\n          38,\\n          18,\\n          22,\\n          18,\\n          14,\\n          20,\\n          24,\\n          16,\\n          20,\\n          10,\\n          28,\\n          42,\\n          36,\\n          30,\\n          20,\\n          18,\\n          26,\\n          16,\\n          24,\\n          20,\\n          38,\\n          52,\\n          40,\\n          34,\\n          46,\\n          42,\\n          24,\\n          48,\\n          62,\\n          60,\\n          76,\\n          30,\\n          36,\\n          32,\\n          42,\\n          32,\\n          48,\\n          30,\\n          32,\\n          42,\\n          32,\\n          22,\\n          20,\\n          14,\\n          38,\\n          40,\\n          32,\\n          46,\\n          32,\\n          42,\\n          22,\\n          30,\\n          24,\\n          24,\\n          30,\\n          44,\\n          26,\\n          38,\\n          28,\\n          6,\\n          40,\\n          22,\\n          32,\\n          28,\\n          32,\\n          44,\\n          48,\\n          38,\\n          50,\\n          92,\\n          50,\\n          38,\\n          44,\\n          42,\\n          22,\\n          30,\\n          32,\\n          34,\\n          34,\\n          72,\\n          46,\\n          60,\\n          28,\\n          44,\\n          76,\\n          78,\\n          72,\\n          60,\\n          68,\\n          72,\\n          32,\\n          24,\\n          28,\\n          38,\\n          32,\\n          42,\\n          34,\\n          38,\\n          44,\\n          22,\\n          30,\\n          28,\\n          20,\\n          24,\\n          24,\\n          16,\\n          26,\\n          28,\\n          16,\\n          16,\\n          26,\\n          14,\\n          28,\\n          44,\\n          48,\\n          48,\\n          36,\\n          32,\\n          46,\\n          24,\\n          20,\\n          20,\\n          20,\\n          24,\\n          38,\\n          50,\\n          24,\\n          42,\\n          46,\\n          24,\\n          44,\\n          26,\\n          20,\\n          30,\\n          16,\\n          18,\\n          28,\\n          22,\\n          20,\\n          18,\\n          36,\\n          42,\\n          42,\\n          34,\\n          60,\\n          56,\\n          54,\\n          26,\\n          52,\\n          40,\\n          44,\\n          90,\\n          66,\\n          78,\\n          70,\\n          58,\\n          66,\\n          26,\\n          42,\\n          38,\\n          58,\\n          114,\\n          122,\\n          120,\\n          90,\\n          72,\\n          38,\\n          80,\\n          60,\\n          62,\\n          58,\\n          58,\\n          30,\\n          66,\\n          58,\\n          46,\\n          34,\\n          50,\\n          26,\\n          46,\\n          32,\\n          40,\\n          26,\\n          18,\\n          22,\\n          98,\\n          82,\\n          118,\\n          162,\\n          130,\\n          94,\\n          128,\\n          80,\\n          54,\\n          90,\\n          138,\\n          140,\\n          144,\\n          98,\\n          150,\\n          140,\\n          150,\\n          166,\\n          118,\\n          128,\\n          112,\\n          96,\\n          62,\\n          26,\\n          36,\\n          18,\\n          62,\\n          36,\\n          76,\\n          44,\\n          54,\\n          32,\\n          36,\\n          28,\\n          26,\\n          28,\\n          24,\\n          20,\\n          22,\\n          12,\\n          28,\\n          24,\\n          14,\\n          24,\\n          34,\\n          32,\\n          32,\\n          30,\\n          38,\\n          30,\\n          30,\\n          24,\\n          20,\\n          20,\\n          22,\\n          28,\\n          16,\\n          28,\\n          34,\\n          26,\\n          10,\\n          8,\\n          14,\\n          16,\\n          16,\\n          22,\\n          20,\\n          8,\\n          26,\\n          18,\\n          24,\\n          18,\\n          18,\\n          12,\\n          16,\\n          18,\\n          32,\\n          50,\\n          46,\\n          54,\\n          38,\\n          38,\\n          34,\\n          26,\\n          22,\\n          26,\\n          32,\\n          26,\\n          30,\\n          22,\\n          12,\\n          18,\\n          20,\\n          12,\\n          28,\\n          10,\\n          14,\\n          16,\\n          14,\\n          16,\\n          18,\\n          24,\\n          12,\\n          26,\\n          32,\\n          24,\\n          60,\\n          90,\\n          62,\\n          52,\\n          34,\\n          32,\\n          24,\\n          12,\\n          12,\\n          10,\\n          20,\\n          10,\\n          8,\\n          22,\\n          12,\\n          22,\\n          20,\\n          8,\\n          14,\\n          10,\\n          16,\\n          14,\\n          14,\\n          10,\\n          12,\\n          14,\\n          4,\\n          14,\\n          28,\\n          48,\\n          42,\\n          42,\\n          32,\\n          24,\\n          14,\\n          14,\\n          8,\\n          10,\\n          8,\\n          18,\\n          20,\\n          30,\\n          14,\\n          10,\\n          12,\\n          16,\\n          28,\\n          26,\\n          18,\\n          10,\\n          16,\\n          20,\\n          18,\\n          12,\\n          20,\\n          16,\\n          16,\\n          32,\\n          38,\\n          50,\\n          36,\\n          48,\\n          32,\\n          32,\\n          40,\\n          34,\\n          26,\\n          16,\\n          14,\\n          46,\\n          40,\\n          48,\\n          12,\\n          20,\\n          14,\\n          22,\\n          22,\\n          26,\\n          30,\\n          24,\\n          12,\\n          44,\\n          36,\\n          32,\\n          32,\\n          52,\\n          48,\\n          40,\\n          48,\\n          80,\\n          96,\\n          60,\\n          74,\\n          62,\\n          42,\\n          26,\\n          38,\\n          18,\\n          34,\\n          44,\\n          36,\\n          36,\\n          26,\\n          34,\\n          30,\\n          14,\\n          10,\\n          18,\\n          14,\\n          18,\\n          18,\\n          4,\\n          12,\\n          18,\\n          20,\\n          24,\\n          28,\\n          32,\\n          50,\\n          62,\\n          82,\\n          78,\\n          72,\\n          58,\\n          58,\\n          68,\\n          90,\\n          68,\\n          22,\\n          32,\\n          22,\\n          42,\\n          22,\\n          26,\\n          70,\\n          42,\\n          48,\\n          40,\\n          42,\\n          36,\\n          30,\\n          32,\\n          14,\\n          38,\\n          38,\\n          44,\\n          46,\\n          44,\\n          42,\\n          76,\\n          70,\\n          62,\\n          48,\\n          84,\\n          28,\\n          42,\\n          34,\\n          42,\\n          44,\\n          38,\\n          56,\\n          62,\\n          86,\\n          56,\\n          62,\\n          90,\\n          64,\\n          78,\\n          82,\\n          50,\\n          54,\\n          50,\\n          46,\\n          42,\\n          56,\\n          46,\\n          66,\\n          100,\\n          84,\\n          106,\\n          68,\\n          56,\\n          38,\\n          36,\\n          24,\\n          40,\\n          50,\\n          34,\\n          24,\\n          68,\\n          48,\\n          40,\\n          50,\\n          38,\\n          64,\\n          52,\\n          50,\\n          36,\\n          40,\\n          52,\\n          62,\\n          86,\\n          48,\\n          58,\\n          46,\\n          48,\\n          38,\\n          58,\\n          64,\\n          38,\\n          54,\\n          48,\\n          24,\\n          28,\\n          24,\\n          36,\\n          40,\\n          16,\\n          32,\\n          32,\\n          22,\\n          36,\\n          54,\\n          56,\\n          70,\\n          62,\\n          48,\\n          30,\\n          54,\\n          44,\\n          20,\\n          42,\\n          44,\\n          40,\\n          36,\\n          50,\\n          24,\\n          42,\\n          64,\\n          54,\\n          40,\\n          22,\\n          32,\\n          26,\\n          32,\\n          42,\\n          52,\\n          80,\\n          74,\\n          52,\\n          30,\\n          58,\\n          42,\\n          34,\\n          72,\\n          66,\\n          64,\\n          68,\\n          72,\\n          72,\\n          64,\\n          138,\\n          144,\\n          146,\\n          140,\\n          166,\\n          126,\\n          134,\\n          118,\\n          130,\\n          82,\\n          54,\\n          62,\\n          64,\\n          70,\\n          68,\\n          52,\\n          32,\\n          28,\\n          54,\\n          62,\\n          70,\\n          78,\\n          84,\\n          68,\\n          54,\\n          24,\\n          40,\\n          38,\\n          40,\\n          26,\\n          42,\\n          36,\\n          36,\\n          48,\\n          26,\\n          60,\\n          64,\\n          60,\\n          48,\\n          46,\\n          58,\\n          78,\\n          88,\\n          68,\\n          54,\\n          42,\\n          66,\\n          46,\\n          38,\\n          64,\\n          40,\\n          38,\\n          36,\\n          32,\\n          44,\\n          104,\\n          144,\\n          146,\\n          100,\\n          64,\\n          30,\\n          24,\\n          44,\\n          68,\\n          42,\\n          84,\\n          62,\\n          58,\\n          40,\\n          24,\\n          16,\\n          22,\\n          24,\\n          30,\\n          28,\\n          22,\\n          38,\\n          16,\\n          14,\\n          20,\\n          24,\\n          16,\\n          18,\\n          16,\\n          6,\\n          18,\\n          16,\\n          24,\\n          20,\\n          28,\\n          22,\\n          32,\\n          54,\\n          72,\\n          96,\\n          78,\\n          66,\\n          102,\\n          52,\\n          28,\\n          26,\\n          16,\\n          36,\\n          26,\\n          24,\\n          12,\\n          18,\\n          22,\\n          18,\\n          16,\\n          14,\\n          32,\\n          10,\\n          12,\\n          16,\\n          8,\\n          14,\\n          12,\\n          18,\\n          14,\\n          34,\\n          34,\\n          54,\\n          70,\\n          64,\\n          68,\\n          52,\\n          38,\\n          36,\\n          26,\\n          32,\\n          32,\\n          18,\\n          36,\\n          34,\\n          14,\\n          14,\\n          30,\\n          20,\\n          34,\\n          78,\\n          30,\\n          16,\\n          20,\\n          12,\\n          26,\\n          12,\\n          22,\\n          20,\\n          32,\\n          20,\\n          26,\\n          86,\\n          68,\\n          68,\\n          68,\\n          56,\\n          56,\\n          26,\\n          44,\\n          54,\\n          54,\\n          40,\\n          56,\\n          28,\\n          42,\\n          42,\\n          50,\\n          36,\\n          40,\\n          58,\\n          32,\\n          42,\\n          18,\\n          40,\\n          34,\\n          38,\\n          46,\\n          34,\\n          80,\\n          82,\\n          86,\\n          58,\\n          64,\\n          78,\\n          64,\\n          46,\\n          48,\\n          52,\\n          30,\\n          40,\\n          64,\\n          88,\\n          60,\\n          50,\\n          42,\\n          38,\\n          36,\\n          20,\\n          30,\\n          42,\\n          34,\\n          36,\\n          24,\\n          34,\\n          46,\\n          54,\\n          50,\\n          30,\\n          54,\\n          44,\\n          86,\\n          84,\\n          96,\\n          78,\\n          58,\\n          58,\\n          40,\\n          48,\\n          38,\\n          60,\\n          74,\\n          84,\\n          66,\\n          52,\\n          42,\\n          44,\\n          32,\\n          52,\\n          52,\\n          48,\\n          42,\\n          60,\\n          50,\\n          48,\\n          68,\\n          46,\\n          60,\\n          66,\\n          68,\\n          92,\\n          96,\\n          104,\\n          80,\\n          104,\\n          104,\\n          80,\\n          68,\\n          50,\\n          70,\\n          56,\\n          66,\\n          56,\\n          36,\\n          26,\\n          32,\\n          30,\\n          20,\\n          40,\\n          46,\\n          36,\\n          44,\\n          32,\\n          30,\\n          28,\\n          36,\\n          44,\\n          52,\\n          76,\\n          34,\\n          40,\\n          54,\\n          58,\\n          70,\\n          60,\\n          78,\\n          64,\\n          44,\\n          48,\\n          42,\\n          26,\\n          52,\\n          62,\\n          62,\\n          60,\\n          38,\\n          46,\\n          62,\\n          46,\\n          34,\\n          28,\\n          36,\\n          28,\\n          22,\\n          56,\\n          40,\\n          58,\\n          34,\\n          44,\\n          56,\\n          54,\\n          66,\\n          72,\\n          58,\\n          54,\\n          40,\\n          56,\\n          38,\\n          32,\\n          42,\\n          28,\\n          40,\\n          50,\\n          20,\\n          20,\\n          32,\\n          38,\\n          26,\\n          34,\\n          26,\\n          36,\\n          42,\\n          54,\\n          52,\\n          56,\\n          28,\\n          20,\\n          24,\\n          36,\\n          40,\\n          54,\\n          76,\\n          54,\\n          44,\\n          38,\\n          56,\\n          50,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          1414,\\n          1343,\\n          1385,\\n          1471,\\n          1444,\\n          1477,\\n          1321,\\n          1405,\\n          1383,\\n          1388,\\n          1426,\\n          1458,\\n          1514,\\n          1504,\\n          1527,\\n          1517,\\n          1599,\\n          1513,\\n          1486,\\n          1500,\\n          1247,\\n          1435,\\n          1547,\\n          1498,\\n          1378,\\n          1407,\\n          1443,\\n          1381,\\n          1401,\\n          1357,\\n          1414,\\n          1093,\\n          1004,\\n          859,\\n          979,\\n          973,\\n          1038,\\n          985,\\n          1059,\\n          1154,\\n          1306,\\n          1483,\\n          1509,\\n          1482,\\n          1527,\\n          1591,\\n          1616,\\n          1607,\\n          1581,\\n          1543,\\n          1469,\\n          1453,\\n          1419,\\n          1392,\\n          1403,\\n          1533,\\n          1621,\\n          1625,\\n          1653,\\n          1658,\\n          1625,\\n          1607,\\n          1626,\\n          1634,\\n          1637,\\n          1573,\\n          1546,\\n          1472,\\n          1473,\\n          1501,\\n          1527,\\n          1580,\\n          1627,\\n          1791,\\n          1894,\\n          1933,\\n          2013,\\n          2272,\\n          2378,\\n          2425,\\n          2381,\\n          2328,\\n          2343,\\n          2283,\\n          2298,\\n          1989,\\n          1862,\\n          1851,\\n          1756,\\n          1811,\\n          1985,\\n          2213,\\n          2242,\\n          2316,\\n          2370,\\n          2305,\\n          2318,\\n          2243,\\n          2308,\\n          2425,\\n          2385,\\n          2534,\\n          2597,\\n          2570,\\n          2624,\\n          2587,\\n          2652,\\n          2631,\\n          2709,\\n          2631,\\n          2654,\\n          2681,\\n          2674,\\n          2571,\\n          2431,\\n          2414,\\n          2483,\\n          2444,\\n          2372,\\n          2482,\\n          2377,\\n          2227,\\n          2150,\\n          2104,\\n          2150,\\n          1999,\\n          2145,\\n          2244,\\n          2288,\\n          2382,\\n          2508,\\n          2591,\\n          2526,\\n          2587,\\n          2613,\\n          2587,\\n          2610,\\n          2615,\\n          2586,\\n          2581,\\n          2574,\\n          2618,\\n          2566,\\n          2582,\\n          2638,\\n          2699,\\n          2676,\\n          2855,\\n          2812,\\n          2719,\\n          2686,\\n          2555,\\n          2328,\\n          2253,\\n          2189,\\n          2066,\\n          2065,\\n          2156,\\n          2076,\\n          2155,\\n          2176,\\n          2130,\\n          2048,\\n          1903,\\n          1870,\\n          1842,\\n          1798,\\n          1719,\\n          1678,\\n          1629,\\n          1623,\\n          1481,\\n          1446,\\n          1601,\\n          1597,\\n          1588,\\n          1633,\\n          1588,\\n          1580,\\n          1520,\\n          1457,\\n          1475,\\n          1453,\\n          1410,\\n          1409,\\n          1355,\\n          1369,\\n          1496,\\n          1618,\\n          1688,\\n          1776,\\n          1800,\\n          1813,\\n          1894,\\n          1977,\\n          2049,\\n          2029,\\n          2060,\\n          2082,\\n          2158,\\n          2208,\\n          2255,\\n          2326,\\n          2245,\\n          2172,\\n          2150,\\n          2274,\\n          2162,\\n          2028,\\n          1986,\\n          1885,\\n          1796,\\n          1829,\\n          1842,\\n          1861,\\n          1870,\\n          1928,\\n          2018,\\n          2030,\\n          1733,\\n          1754,\\n          1802,\\n          1864,\\n          1836,\\n          1864,\\n          1885,\\n          1929,\\n          1876,\\n          1902,\\n          1929,\\n          1932,\\n          1952,\\n          1926,\\n          1901,\\n          1820,\\n          1859,\\n          1763,\\n          1777,\\n          1696,\\n          1615,\\n          1606,\\n          1562,\\n          1568,\\n          1562,\\n          1559,\\n          1611,\\n          1547,\\n          1583,\\n          1646,\\n          1553,\\n          1446,\\n          1550,\\n          1564,\\n          1591,\\n          1577,\\n          1593,\\n          1582,\\n          1537,\\n          1707,\\n          1728,\\n          1631,\\n          1736,\\n          1694,\\n          1723,\\n          1707,\\n          1680,\\n          1713,\\n          1722,\\n          1577,\\n          1581,\\n          1538,\\n          1538,\\n          1563,\\n          1599,\\n          1532,\\n          1600,\\n          1616,\\n          1443,\\n          1704,\\n          1639,\\n          1766,\\n          1797,\\n          1875,\\n          1825,\\n          1861,\\n          1904,\\n          1888,\\n          1931,\\n          1994,\\n          1997,\\n          2008,\\n          2047,\\n          2036,\\n          1931,\\n          1897,\\n          1847,\\n          1854,\\n          1881,\\n          1846,\\n          1650,\\n          1627,\\n          1562,\\n          1532,\\n          1536,\\n          1556,\\n          1522,\\n          1564,\\n          1694,\\n          1788,\\n          1957,\\n          2006,\\n          2190,\\n          2314,\\n          2308,\\n          2246,\\n          1881,\\n          1860,\\n          1804,\\n          2131,\\n          2167,\\n          2058,\\n          2120,\\n          2154,\\n          1863,\\n          1885,\\n          1891,\\n          1950,\\n          1903,\\n          1778,\\n          1757,\\n          1672,\\n          1597,\\n          1561,\\n          1612,\\n          1711,\\n          1790,\\n          1855,\\n          1942,\\n          1888,\\n          1877,\\n          1924,\\n          2030,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          22,\\n          23,\\n          22,\\n          38,\\n          34,\\n          22,\\n          19,\\n          22,\\n          22,\\n          19,\\n          30,\\n          20,\\n          12,\\n          17,\\n          22,\\n          19,\\n          18,\\n          19,\\n          22,\\n          23,\\n          29,\\n          27,\\n          22,\\n          22,\\n          28,\\n          18,\\n          17,\\n          24,\\n          19,\\n          14,\\n          25,\\n          10,\\n          17,\\n          12,\\n          26,\\n          23,\\n          17,\\n          19,\\n          24,\\n          25,\\n          27,\\n          17,\\n          27,\\n          23,\\n          20,\\n          25,\\n          30,\\n          23,\\n          27,\\n          25,\\n          28,\\n          31,\\n          34,\\n          32,\\n          27,\\n          33,\\n          28,\\n          32,\\n          23,\\n          21,\\n          28,\\n          22,\\n          33,\\n          21,\\n          21,\\n          85,\\n          190,\\n          119,\\n          31,\\n          37,\\n          58,\\n          135,\\n          41,\\n          41,\\n          46,\\n          37,\\n          35,\\n          27,\\n          39,\\n          31,\\n          111,\\n          45,\\n          27,\\n          30,\\n          57,\\n          52,\\n          66,\\n          55,\\n          32,\\n          31,\\n          43,\\n          40,\\n          38,\\n          41,\\n          39,\\n          38,\\n          65,\\n          39,\\n          46,\\n          65,\\n          49,\\n          75,\\n          61,\\n          43,\\n          40,\\n          92,\\n          55,\\n          62,\\n          41,\\n          75,\\n          62,\\n          51,\\n          73,\\n          242,\\n          46,\\n          41,\\n          51,\\n          50,\\n          54,\\n          57,\\n          51,\\n          46,\\n          52,\\n          46,\\n          51,\\n          63,\\n          43,\\n          54,\\n          38,\\n          55,\\n          77,\\n          43,\\n          53,\\n          48,\\n          90,\\n          54,\\n          61,\\n          53,\\n          30,\\n          53,\\n          79,\\n          194,\\n          58,\\n          46,\\n          64,\\n          47,\\n          54,\\n          56,\\n          42,\\n          60,\\n          42,\\n          48,\\n          37,\\n          53,\\n          41,\\n          55,\\n          52,\\n          40,\\n          43,\\n          39,\\n          35,\\n          23,\\n          35,\\n          28,\\n          24,\\n          21,\\n          31,\\n          39,\\n          22,\\n          33,\\n          28,\\n          30,\\n          24,\\n          33,\\n          20,\\n          26,\\n          28,\\n          29,\\n          21,\\n          25,\\n          20,\\n          37,\\n          33,\\n          36,\\n          21,\\n          28,\\n          38,\\n          33,\\n          35,\\n          45,\\n          33,\\n          38,\\n          41,\\n          45,\\n          43,\\n          46,\\n          36,\\n          40,\\n          29,\\n          29,\\n          43,\\n          41,\\n          37,\\n          42,\\n          39,\\n          39,\\n          42,\\n          35,\\n          37,\\n          34,\\n          35,\\n          53,\\n          38,\\n          39,\\n          35,\\n          33,\\n          38,\\n          57,\\n          80,\\n          46,\\n          50,\\n          50,\\n          40,\\n          45,\\n          44,\\n          58,\\n          61,\\n          59,\\n          44,\\n          48,\\n          40,\\n          45,\\n          39,\\n          38,\\n          34,\\n          56,\\n          44,\\n          36,\\n          32,\\n          49,\\n          38,\\n          41,\\n          50,\\n          41,\\n          45,\\n          46,\\n          41,\\n          42,\\n          44,\\n          57,\\n          47,\\n          38,\\n          105,\\n          47,\\n          57,\\n          51,\\n          43,\\n          53,\\n          36,\\n          45,\\n          59,\\n          45,\\n          68,\\n          70,\\n          57,\\n          49,\\n          56,\\n          40,\\n          52,\\n          52,\\n          37,\\n          52,\\n          51,\\n          57,\\n          35,\\n          56,\\n          59,\\n          46,\\n          63,\\n          47,\\n          46,\\n          45,\\n          46,\\n          46,\\n          44,\\n          46,\\n          43,\\n          45,\\n          42,\\n          37,\\n          50,\\n          46,\\n          35,\\n          45,\\n          43,\\n          34,\\n          42,\\n          43,\\n          45,\\n          40,\\n          60,\\n          39,\\n          56,\\n          76,\\n          41,\\n          42,\\n          56,\\n          35,\\n          43,\\n          35,\\n          49,\\n          40,\\n          286,\\n          64,\\n          46,\\n          128,\\n          65,\\n          49,\\n          42,\\n          48,\\n          60,\\n          34,\\n          31,\\n          37,\\n          35,\\n          31,\\n          40,\\n          39,\\n          29,\\n          34,\\n          78,\\n          31,\\n          39,\\n          37,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n        [\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          65,\\n          102,\\n          90,\\n          100,\\n          106,\\n          100,\\n          120,\\n          136,\\n          94,\\n          95,\\n          143,\\n          112,\\n          109,\\n          108,\\n          97,\\n          99,\\n          85,\\n          87,\\n          110,\\n          82,\\n          96,\\n          95,\\n          74,\\n          129,\\n          140,\\n          124,\\n          127,\\n          85,\\n          128,\\n          122,\\n          105,\\n          121,\\n          117,\\n          107,\\n          80,\\n          100,\\n          76,\\n          121,\\n          119,\\n          87,\\n          101,\\n          92,\\n          71,\\n          90,\\n          81,\\n          73,\\n          76,\\n          82,\\n          66,\\n          91,\\n          71,\\n          81,\\n          101,\\n          100,\\n          85,\\n          88,\\n          105,\\n          123,\\n          110,\\n          100,\\n          113,\\n          91,\\n          76,\\n          118,\\n          129,\\n          123,\\n          128,\\n          112,\\n          122,\\n          108,\\n          114,\\n          120,\\n          136,\\n          123,\\n          116,\\n          106,\\n          100,\\n          135,\\n          194,\\n          163,\\n          106,\\n          152,\\n          135,\\n          164,\\n          197,\\n          173,\\n          147,\\n          158,\\n          121,\\n          110,\\n          93,\\n          123,\\n          128,\\n          125,\\n          117,\\n          141,\\n          137,\\n          113,\\n          128,\\n          142,\\n          133,\\n          109,\\n          143,\\n          130,\\n          124,\\n          119,\\n          107,\\n          150,\\n          110,\\n          123,\\n          135,\\n          147,\\n          186,\\n          181,\\n          184,\\n          154,\\n          156,\\n          159,\\n          124,\\n          121,\\n          111,\\n          129,\\n          137,\\n          126,\\n          144,\\n          153,\\n          119,\\n          124,\\n          163,\\n          130,\\n          134,\\n          126,\\n          128,\\n          114,\\n          112,\\n          97,\\n          100,\\n          113,\\n          104,\\n          109,\\n          118,\\n          157,\\n          163,\\n          201,\\n          186,\\n          240,\\n          209,\\n          203,\\n          214,\\n          170,\\n          173,\\n          150,\\n          169,\\n          152,\\n          155,\\n          179,\\n          213,\\n          187,\\n          184,\\n          158,\\n          133,\\n          96,\\n          70,\\n          70,\\n          58,\\n          30,\\n          16,\\n          19,\\n          61,\\n          47,\\n          64,\\n          70,\\n          108,\\n          126,\\n          105,\\n          109,\\n          94,\\n          97,\\n          75,\\n          99,\\n          81,\\n          61,\\n          75,\\n          93,\\n          83,\\n          70,\\n          92,\\n          79,\\n          80,\\n          100,\\n          88,\\n          83,\\n          98,\\n          88,\\n          86,\\n          90,\\n          104,\\n          96,\\n          98,\\n          113,\\n          142,\\n          137,\\n          143,\\n          125,\\n          152,\\n          114,\\n          128,\\n          111,\\n          110,\\n          77,\\n          118,\\n          106,\\n          114,\\n          140,\\n          115,\\n          126,\\n          133,\\n          126,\\n          108,\\n          173,\\n          166,\\n          136,\\n          120,\\n          109,\\n          123,\\n          127,\\n          138,\\n          112,\\n          108,\\n          108,\\n          180,\\n          162,\\n          137,\\n          107,\\n          139,\\n          123,\\n          117,\\n          106,\\n          130,\\n          113,\\n          90,\\n          108,\\n          111,\\n          130,\\n          100,\\n          129,\\n          126,\\n          123,\\n          148,\\n          127,\\n          108,\\n          127,\\n          142,\\n          99,\\n          136,\\n          131,\\n          123,\\n          138,\\n          137,\\n          137,\\n          139,\\n          138,\\n          151,\\n          164,\\n          168,\\n          179,\\n          159,\\n          145,\\n          134,\\n          147,\\n          112,\\n          116,\\n          138,\\n          115,\\n          136,\\n          117,\\n          130,\\n          150,\\n          162,\\n          103,\\n          133,\\n          123,\\n          117,\\n          105,\\n          117,\\n          128,\\n          135,\\n          132,\\n          146,\\n          166,\\n          157,\\n          187,\\n          157,\\n          143,\\n          176,\\n          151,\\n          183,\\n          154,\\n          136,\\n          130,\\n          131,\\n          150,\\n          154,\\n          146,\\n          4,\\n          3,\\n          5,\\n          0,\\n          3,\\n          3,\\n          5,\\n          4,\\n          3,\\n          3,\\n          0,\\n          5,\\n          3,\\n          4,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          3,\\n          0,\\n          0,\\n          4,\\n          0,\\n          4,\\n          0,\\n          6,\\n          6,\\n          5,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n          0,\\n        ],\\n      ],\\n    },\\n  }\\n  return (\\n    <Timebar\\n      start={\\'2017-12-01T00:00:00.000Z\\'}\\n      end={new Date().toISOString()}\\n      absoluteStart={\\'2017-12-01T00:00:00.000Z\\'}\\n      absoluteEnd={new Date().toISOString()}\\n      bookmarkStart={null}\\n      bookmarkEnd={null}\\n      onChange={d => console.log(d)}\\n      onBookmarkChange={d => console.log(d)}\\n      // enablePlayback\\n    >\\n      {props => (\\n        <TimebarEvents {...props} events={eventsMock} showFishing={false} />\\n      )}\\n    </Timebar>\\n  )\\n}'} __scope={{props: this ? this.props : props,Timebar,TimebarEvents}}>\n  {() => {\n    const eventsMock = {\n      start: '2014-01-01T00:00:00.000Z',\n      end: '2018-12-27T00:00:00.000Z',\n      offset: 'day',\n      series: {\n        labels: ['encounter', 'fishing', 'gap', 'port'],\n        counts: [\n          [ 36, 36, 24, 16, 16, 8, 22, 28, 22, 26, 36, 32, 68, 40, 30, 32, 44, 52, 56, 18, 34, 30, 32, 32, 24, 26, 34, 24, 34, 30, 62, 36, 26, 38, 26, 26, 14, 26, 26, 20, 32, 36, 42, 36, 22, 32, 32, 34, 32, 38, 38, 22, 28, 22, 12, 14, 14, 14, 16, 20, 10, 18, 28, 14, 28, 40, 32, 52, 24, 34, 24, 34, 24, 34, 22, 26, 28, 12, 16, 26, 18, 12, 14, 28, 32, 26, 28, 14, 34, 14, 14, 20, 22, 16, 16, 16, 22, 28, 20, 26, 20, 26, 32, 54, 38, 20, 38, 22, 20, 8, 16, 16, 8, 4, 8, 12, 12, 16, 16, 24, 18, 12, 20, 22, 22, 36, 40, 20, 42, 18, 16, 26, 28, 38, 26, 28, 12, 8, 10, 8, 8, 16, 16, 16, 24, 20, 20, 26, 8, 24, 10, 16, 32, 22, 6, 20, 18, 16, 14, 24, 22, 24, 22, 16, 14, 14, 28, 20, 24, 16, 14, 20, 34, 26, 32, 16, 20, 16, 22, 14, 14, 22, 24, 20, 10, 12, 14, 14, 24, 34, 32, 32, 38, 16, 20, 24, 22, 26, 22, 10, 18, 22, 12, 24, 14, 14, 28, 26, 30, 28, 24, 24, 24, 10, 16, 16, 8, 16, 24, 20, 30, 12, 16, 36, 20, 22, 12, 20, 32, 28, 32, 18, 32, 8, 6, 26, 14, 28, 20, 18, 22, 18, 16, 14, 14, 6, 18, 22, 14, 10, 18, 18, 20, 14, 20, 26, 16, 22, 20, 10, 10, 20, 14, 20, 16, 10, 26, 18, 14, 20, 12, 22, 28, 16, 22, 26, 12, 22, 12, 14, 20, 14, 12, 16, 14, 16, 12, 12, 14, 32, 26, 36, 26, 20, 44, 22, 28, 22, 24, 18, 12, 10, 24, 20, 32, 12, 22, 18, 26, 34, 26, 18, 16, 26, 12, 16, 12, 10, 22, 18, 30, 22, 28, 18, 20, 16, 14, 10, 12, 8, 14, 12, 10, 10, 12, 8, 12, 14, 18, 20, 28, 24, 38, 18, 20, 6, 16, 14, 6, 20, 6, 8, 16, 8, 24, 32, 36, 20, 24, 22, 36, 36, 40, 40, 34, 32, 28, 34, 28, 34, 24, 50, 70, 54, 46, 20, 46, 40, 38, 44, 38, 38, 40, 20, 24, 16, 30, 52, 54, 34, 42, 36, 24, 24, 20, 56, 30, 50, 30, 22, 26, 30, 20, 4, 20, 16, 14, 20, 12, 22, 34, 34, 34, 30, 36, 42, 20, 20, 12, 14, 20, 8, 12, 16, 8, 26, 26, 20, 24, 20, 20, 24, 16, 38, 20, 12, 10, 14, 18, 8, 2, 14, 8, 0, 10, 6, 18, 18, 10, 12, 10, 6, 14, 4, 18, 20, 24, 24, 18, 22, 22, 12, 6, 6, 8, 2, 0, 4, 2, 4, 2, 10, 12, 8, 4, 6, 8, 6, 8, 6, 4, 4, 10, 10, 4, 8, 22, 22, 10, 12, 18, 14, 6, 0, 4, 6, 10, 6, 8, 12, 8, 2, 16, 12, 4, 2, 10, 6, 0, 12, 8, 14, 2, 14, 22, 16, 24, 18, 20, 36, 18, 12, 10, 8, 16, 0, 0, 0, 2, 6, 2, 6, 4, 8, 6, 6, 4, 6, 2, 4, 0, 6, 6, 4, 6, 8, 10, 6, 12, 16, 10, 4, 6, 2, 8, 0, 6, 4, 4, 10, 18, 16, 14, 6, 0, 8, 2, 8, 14, 12, 10, 6, 10, 10, 12, 20, 16, 28, 8, 12, 8, 4, 2, 2, 6, 8, 4, 8, 4, 2, 4, 0, 4, 2, 2, 2, 2, 0, 4, 4, 6, 14, 8, 12, 18, 26, 18, 10, 18, 10, 14, 14, 14, 4, 2, 2, 4, 2, 4, 6, 4, 6, 22, 8, 8, 24, 14, 6, 8, 8, 8, 8, 14, 6, 18, 18, 16, 32, 24, 52, 18, 18, 8, 4, 2, 0, 4, 2, 10, 14, 6, 16, 14, 6, 18, 4, 12, 10, 8, 8, 12, 8, 8, 6, 10, 18, 10, 6, 12, 6, 14, 4, 16, 10, 4, 12, 14, 12, 22, 20, 14, 18, 20, 8, 12, 18, 6, 4, 10, 10, 16, 14, 14, 6, 14, 14, 6, 2, 10, 12, 8, 4, 8, 6, 2, 6, 2, 6, 4, 28, 10, 12, 20, 30, 24, 24, 32, 30, 22, 16, 26, 18, 18, 24, 14, 20, 30, 22, 8, 0, 16, 22, 18, 10, 24, 16, 4, 8, 12, 10, 10, 10, 8, 8, 20, 14, 18, 24, 24, 28, 30, 20, 40, 36, 32, 56, 54, 60, 56, 28, 16, 28, 30, 22, 22, 14, 62, 40, 42, 68, 60, 56, 64, 32, 50, 34, 14, 24, 20, 24, 38, 42, 60, 46, 52, 42, 30, 28, 12, 16, 14, 22, 16, 12, 18, 38, 16, 30, 24, 16, 20, 10, 14, 14, 30, 30, 16, 30, 14, 50, 52, 64, 66, 64, 54, 44, 46, 52, 52, 34, 40, 30, 36, 28, 34, 22, 34, 20, 20, 20, 22, 18, 16, 30, 16, 24, 28, 22, 24, 34, 42, 50, 62, 44, 46, 44, 34, 20, 32, 32, 20, 28, 20, 20, 32, 20, 12, 16, 16, 24, 6, 18, 22, 26, 16, 12, 22, 10, 18, 38, 58, 44, 44, 44, 44, 24, 18, 14, 12, 12, 12, 10, 18, 10, 24, 14, 18, 22, 10, 20, 18, 18, 6, 22, 20, 26, 10, 24, 28, 24, 34, 68, 32, 28, 24, 18, 30, 32, 16, 12, 24, 22, 10, 12, 36, 28, 52, 28, 14, 6, 10, 8, 16, 10, 12, 38, 32, 34, 24, 28, 46, 36, 32, 38, 18, 22, 18, 14, 20, 24, 16, 20, 10, 28, 42, 36, 30, 20, 18, 26, 16, 24, 20, 38, 52, 40, 34, 46, 42, 24, 48, 62, 60, 76, 30, 36, 32, 42, 32, 48, 30, 32, 42, 32, 22, 20, 14, 38, 40, 32, 46, 32, 42, 22, 30, 24, 24, 30, 44, 26, 38, 28, 6, 40, 22, 32, 28, 32, 44, 48, 38, 50, 92, 50, 38, 44, 42, 22, 30, 32, 34, 34, 72, 46, 60, 28, 44, 76, 78, 72, 60, 68, 72, 32, 24, 28, 38, 32, 42, 34, 38, 44, 22, 30, 28, 20, 24, 24, 16, 26, 28, 16, 16, 26, 14, 28, 44, 48, 48, 36, 32, 46, 24, 20, 20, 20, 24, 38, 50, 24, 42, 46, 24, 44, 26, 20, 30, 16, 18, 28, 22, 20, 18, 36, 42, 42, 34, 60, 56, 54, 26, 52, 40, 44, 90, 66, 78, 70, 58, 66, 26, 42, 38, 58, 114, 122, 120, 90, 72, 38, 80, 60, 62, 58, 58, 30, 66, 58, 46, 34, 50, 26, 46, 32, 40, 26, 18, 22, 98, 82, 118, 162, 130, 94, 128, 80, 54, 90, 138, 140, 144, 98, 150, 140, 150, 166, 118, 128, 112, 96, 62, 26, 36, 18, 62, 36, 76, 44, 54, 32, 36, 28, 26, 28, 24, 20, 22, 12, 28, 24, 14, 24, 34, 32, 32, 30, 38, 30, 30, 24, 20, 20, 22, 28, 16, 28, 34, 26, 10, 8, 14, 16, 16, 22, 20, 8, 26, 18, 24, 18, 18, 12, 16, 18, 32, 50, 46, 54, 38, 38, 34, 26, 22, 26, 32, 26, 30, 22, 12, 18, 20, 12, 28, 10, 14, 16, 14, 16, 18, 24, 12, 26, 32, 24, 60, 90, 62, 52, 34, 32, 24, 12, 12, 10, 20, 10, 8, 22, 12, 22, 20, 8, 14, 10, 16, 14, 14, 10, 12, 14, 4, 14, 28, 48, 42, 42, 32, 24, 14, 14, 8, 10, 8, 18, 20, 30, 14, 10, 12, 16, 28, 26, 18, 10, 16, 20, 18, 12, 20, 16, 16, 32, 38, 50, 36, 48, 32, 32, 40, 34, 26, 16, 14, 46, 40, 48, 12, 20, 14, 22, 22, 26, 30, 24, 12, 44, 36, 32, 32, 52, 48, 40, 48, 80, 96, 60, 74, 62, 42, 26, 38, 18, 34, 44, 36, 36, 26, 34, 30, 14, 10, 18, 14, 18, 18, 4, 12, 18, 20, 24, 28, 32, 50, 62, 82, 78, 72, 58, 58, 68, 90, 68, 22, 32, 22, 42, 22, 26, 70, 42, 48, 40, 42, 36, 30, 32, 14, 38, 38, 44, 46, 44, 42, 76, 70, 62, 48, 84, 28, 42, 34, 42, 44, 38, 56, 62, 86, 56, 62, 90, 64, 78, 82, 50, 54, 50, 46, 42, 56, 46, 66, 100, 84, 106, 68, 56, 38, 36, 24, 40, 50, 34, 24, 68, 48, 40, 50, 38, 64, 52, 50, 36, 40, 52, 62, 86, 48, 58, 46, 48, 38, 58, 64, 38, 54, 48, 24, 28, 24, 36, 40, 16, 32, 32, 22, 36, 54, 56, 70, 62, 48, 30, 54, 44, 20, 42, 44, 40, 36, 50, 24, 42, 64, 54, 40, 22, 32, 26, 32, 42, 52, 80, 74, 52, 30, 58, 42, 34, 72, 66, 64, 68, 72, 72, 64, 138, 144, 146, 140, 166, 126, 134, 118, 130, 82, 54, 62, 64, 70, 68, 52, 32, 28, 54, 62, 70, 78, 84, 68, 54, 24, 40, 38, 40, 26, 42, 36, 36, 48, 26, 60, 64, 60, 48, 46, 58, 78, 88, 68, 54, 42, 66, 46, 38, 64, 40, 38, 36, 32, 44, 104, 144, 146, 100, 64, 30, 24, 44, 68, 42, 84, 62, 58, 40, 24, 16, 22, 24, 30, 28, 22, 38, 16, 14, 20, 24, 16, 18, 16, 6, 18, 16, 24, 20, 28, 22, 32, 54, 72, 96, 78, 66, 102, 52, 28, 26, 16, 36, 26, 24, 12, 18, 22, 18, 16, 14, 32, 10, 12, 16, 8, 14, 12, 18, 14, 34, 34, 54, 70, 64, 68, 52, 38, 36, 26, 32, 32, 18, 36, 34, 14, 14, 30, 20, 34, 78, 30, 16, 20, 12, 26, 12, 22, 20, 32, 20, 26, 86, 68, 68, 68, 56, 56, 26, 44, 54, 54, 40, 56, 28, 42, 42, 50, 36, 40, 58, 32, 42, 18, 40, 34, 38, 46, 34, 80, 82, 86, 58, 64, 78, 64, 46, 48, 52, 30, 40, 64, 88, 60, 50, 42, 38, 36, 20, 30, 42, 34, 36, 24, 34, 46, 54, 50, 30, 54, 44, 86, 84, 96, 78, 58, 58, 40, 48, 38, 60, 74, 84, 66, 52, 42, 44, 32, 52, 52, 48, 42, 60, 50, 48, 68, 46, 60, 66, 68, 92, 96, 104, 80, 104, 104, 80, 68, 50, 70, 56, 66, 56, 36, 26, 32, 30, 20, 40, 46, 36, 44, 32, 30, 28, 36, 44, 52, 76, 34, 40, 54, 58, 70, 60, 78, 64, 44, 48, 42, 26, 52, 62, 62, 60, 38, 46, 62, 46, 34, 28, 36, 28, 22, 56, 40, 58, 34, 44, 56, 54, 66, 72, 58, 54, 40, 56, 38, 32, 42, 28, 40, 50, 20, 20, 32, 38, 26, 34, 26, 36, 42, 54, 52, 56, 28, 20, 24, 36, 40, 54, 76, 54, 44, 38, 56, 50, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1414, 1343, 1385, 1471, 1444, 1477, 1321, 1405, 1383, 1388, 1426, 1458, 1514, 1504, 1527, 1517, 1599, 1513, 1486, 1500, 1247, 1435, 1547, 1498, 1378, 1407, 1443, 1381, 1401, 1357, 1414, 1093, 1004, 859, 979, 973, 1038, 985, 1059, 1154, 1306, 1483, 1509, 1482, 1527, 1591, 1616, 1607, 1581, 1543, 1469, 1453, 1419, 1392, 1403, 1533, 1621, 1625, 1653, 1658, 1625, 1607, 1626, 1634, 1637, 1573, 1546, 1472, 1473, 1501, 1527, 1580, 1627, 1791, 1894, 1933, 2013, 2272, 2378, 2425, 2381, 2328, 2343, 2283, 2298, 1989, 1862, 1851, 1756, 1811, 1985, 2213, 2242, 2316, 2370, 2305, 2318, 2243, 2308, 2425, 2385, 2534, 2597, 2570, 2624, 2587, 2652, 2631, 2709, 2631, 2654, 2681, 2674, 2571, 2431, 2414, 2483, 2444, 2372, 2482, 2377, 2227, 2150, 2104, 2150, 1999, 2145, 2244, 2288, 2382, 2508, 2591, 2526, 2587, 2613, 2587, 2610, 2615, 2586, 2581, 2574, 2618, 2566, 2582, 2638, 2699, 2676, 2855, 2812, 2719, 2686, 2555, 2328, 2253, 2189, 2066, 2065, 2156, 2076, 2155, 2176, 2130, 2048, 1903, 1870, 1842, 1798, 1719, 1678, 1629, 1623, 1481, 1446, 1601, 1597, 1588, 1633, 1588, 1580, 1520, 1457, 1475, 1453, 1410, 1409, 1355, 1369, 1496, 1618, 1688, 1776, 1800, 1813, 1894, 1977, 2049, 2029, 2060, 2082, 2158, 2208, 2255, 2326, 2245, 2172, 2150, 2274, 2162, 2028, 1986, 1885, 1796, 1829, 1842, 1861, 1870, 1928, 2018, 2030, 1733, 1754, 1802, 1864, 1836, 1864, 1885, 1929, 1876, 1902, 1929, 1932, 1952, 1926, 1901, 1820, 1859, 1763, 1777, 1696, 1615, 1606, 1562, 1568, 1562, 1559, 1611, 1547, 1583, 1646, 1553, 1446, 1550, 1564, 1591, 1577, 1593, 1582, 1537, 1707, 1728, 1631, 1736, 1694, 1723, 1707, 1680, 1713, 1722, 1577, 1581, 1538, 1538, 1563, 1599, 1532, 1600, 1616, 1443, 1704, 1639, 1766, 1797, 1875, 1825, 1861, 1904, 1888, 1931, 1994, 1997, 2008, 2047, 2036, 1931, 1897, 1847, 1854, 1881, 1846, 1650, 1627, 1562, 1532, 1536, 1556, 1522, 1564, 1694, 1788, 1957, 2006, 2190, 2314, 2308, 2246, 1881, 1860, 1804, 2131, 2167, 2058, 2120, 2154, 1863, 1885, 1891, 1950, 1903, 1778, 1757, 1672, 1597, 1561, 1612, 1711, 1790, 1855, 1942, 1888, 1877, 1924, 2030, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 23, 22, 38, 34, 22, 19, 22, 22, 19, 30, 20, 12, 17, 22, 19, 18, 19, 22, 23, 29, 27, 22, 22, 28, 18, 17, 24, 19, 14, 25, 10, 17, 12, 26, 23, 17, 19, 24, 25, 27, 17, 27, 23, 20, 25, 30, 23, 27, 25, 28, 31, 34, 32, 27, 33, 28, 32, 23, 21, 28, 22, 33, 21, 21, 85, 190, 119, 31, 37, 58, 135, 41, 41, 46, 37, 35, 27, 39, 31, 111, 45, 27, 30, 57, 52, 66, 55, 32, 31, 43, 40, 38, 41, 39, 38, 65, 39, 46, 65, 49, 75, 61, 43, 40, 92, 55, 62, 41, 75, 62, 51, 73, 242, 46, 41, 51, 50, 54, 57, 51, 46, 52, 46, 51, 63, 43, 54, 38, 55, 77, 43, 53, 48, 90, 54, 61, 53, 30, 53, 79, 194, 58, 46, 64, 47, 54, 56, 42, 60, 42, 48, 37, 53, 41, 55, 52, 40, 43, 39, 35, 23, 35, 28, 24, 21, 31, 39, 22, 33, 28, 30, 24, 33, 20, 26, 28, 29, 21, 25, 20, 37, 33, 36, 21, 28, 38, 33, 35, 45, 33, 38, 41, 45, 43, 46, 36, 40, 29, 29, 43, 41, 37, 42, 39, 39, 42, 35, 37, 34, 35, 53, 38, 39, 35, 33, 38, 57, 80, 46, 50, 50, 40, 45, 44, 58, 61, 59, 44, 48, 40, 45, 39, 38, 34, 56, 44, 36, 32, 49, 38, 41, 50, 41, 45, 46, 41, 42, 44, 57, 47, 38, 105, 47, 57, 51, 43, 53, 36, 45, 59, 45, 68, 70, 57, 49, 56, 40, 52, 52, 37, 52, 51, 57, 35, 56, 59, 46, 63, 47, 46, 45, 46, 46, 44, 46, 43, 45, 42, 37, 50, 46, 35, 45, 43, 34, 42, 43, 45, 40, 60, 39, 56, 76, 41, 42, 56, 35, 43, 35, 49, 40, 286, 64, 46, 128, 65, 49, 42, 48, 60, 34, 31, 37, 35, 31, 40, 39, 29, 34, 78, 31, 39, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 102, 90, 100, 106, 100, 120, 136, 94, 95, 143, 112, 109, 108, 97, 99, 85, 87, 110, 82, 96, 95, 74, 129, 140, 124, 127, 85, 128, 122, 105, 121, 117, 107, 80, 100, 76, 121, 119, 87, 101, 92, 71, 90, 81, 73, 76, 82, 66, 91, 71, 81, 101, 100, 85, 88, 105, 123, 110, 100, 113, 91, 76, 118, 129, 123, 128, 112, 122, 108, 114, 120, 136, 123, 116, 106, 100, 135, 194, 163, 106, 152, 135, 164, 197, 173, 147, 158, 121, 110, 93, 123, 128, 125, 117, 141, 137, 113, 128, 142, 133, 109, 143, 130, 124, 119, 107, 150, 110, 123, 135, 147, 186, 181, 184, 154, 156, 159, 124, 121, 111, 129, 137, 126, 144, 153, 119, 124, 163, 130, 134, 126, 128, 114, 112, 97, 100, 113, 104, 109, 118, 157, 163, 201, 186, 240, 209, 203, 214, 170, 173, 150, 169, 152, 155, 179, 213, 187, 184, 158, 133, 96, 70, 70, 58, 30, 16, 19, 61, 47, 64, 70, 108, 126, 105, 109, 94, 97, 75, 99, 81, 61, 75, 93, 83, 70, 92, 79, 80, 100, 88, 83, 98, 88, 86, 90, 104, 96, 98, 113, 142, 137, 143, 125, 152, 114, 128, 111, 110, 77, 118, 106, 114, 140, 115, 126, 133, 126, 108, 173, 166, 136, 120, 109, 123, 127, 138, 112, 108, 108, 180, 162, 137, 107, 139, 123, 117, 106, 130, 113, 90, 108, 111, 130, 100, 129, 126, 123, 148, 127, 108, 127, 142, 99, 136, 131, 123, 138, 137, 137, 139, 138, 151, 164, 168, 179, 159, 145, 134, 147, 112, 116, 138, 115, 136, 117, 130, 150, 162, 103, 133, 123, 117, 105, 117, 128, 135, 132, 146, 166, 157, 187, 157, 143, 176, 151, 183, 154, 136, 130, 131, 150, 154, 146, 4, 3, 5, 0, 3, 3, 5, 4, 3, 3, 0, 5, 3, 4, 0, 4, 3, 0, 0, 4, 3, 0, 0, 4, 0, 4, 0, 6, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],\n        ],\n      },\n    }\n    return <Timebar\n      start={'2017-12-01T00:00:00.000Z'}\n      end={new Date().toISOString()}\n      absoluteStart={'2017-12-01T00:00:00.000Z'}\n      absoluteEnd={new Date().toISOString()}\n      bookmarkStart={null}\n      bookmarkEnd={null}\n      onChange={(d) => console.log(d)}\n      onBookmarkChange={(d) => console.log(d)}\n      // enablePlayback\n    >\n      {(props) =>\n        <TimebarEvents\n          {...props}\n          events={eventsMock}\n          showFishing={false}\n        />\n      }\n    </Timebar>\n  }}\n</Playground>\n           </MDXTag>\n  }\n}\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timebar\":\"timebar_Timebar__1C7GA\",\"uiButton\":\"timebar_uiButton__1e2qv\",\"timeActions\":\"timebar_timeActions__3eDNK\",\"timeRange\":\"timebar_timeRange__1UFds\",\"timeScale\":\"timebar_timeScale__1y_vV\",\"timeRangeContainer\":\"timebar_timeRangeContainer__3P_UI\",\"playbackActions\":\"timebar_playbackActions__2NQyE\",\"bookmark\":\"timebar_bookmark__23Pha\"};"],"sourceRoot":""}