(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports={version:8,glyphs:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true",sprite:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites",metadata:{"mapbox:groups":{"basemap-background":{name:"basemap-background"},static:{name:"static"},temporal:{name:"temporal"},tracks:{name:"tracks"},"basemap-foreground":{name:"basemap-foreground"}},"gfw:basemap-layers":[{id:"satellite",label:"Satellite"},{id:"north-star",label:"North Star"},{id:"labels",isOption:!0},{id:"graticules",isOption:!0},{id:"bathymetry",isOption:!0}],"gfw:styles":{selected:{fill:{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},circle:{"circle-stroke-width":[2,.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},highlighted:{circle:{"circle-stroke-color":["#fff","#000"]}}}},sources:{6:{metadata:{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{id:"nama"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},satellite:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256,attribution:"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href='https://www.google.com/intl/en-GB_US/help/terms_maps.html'>Terms of Use</a><br>"},"north-star":{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},labels:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},graticules:{metadata:{"gfw:carto-sql":"select * from graticules where scalerank=4"},type:"vector"},bathymetry:{metadata:{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},type:"vector"},mpant:{metadata:{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},mparu:{metadata:{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},eez:{metadata:{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, 'eez:' || mrgid as region_id, geoname as reporting_name, 'eez:' || mrgid as reporting_id FROM eez","gfw:popups":[{id:"name"}]},type:"vector",attribution:"EEZs: marineregions.org"},highseas:{metadata:{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{id:"regionid"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},protectedplanet:{metadata:{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector",attribution:"MPAs: www.protectedplanet.net"},rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, 'rfmo:' || rfb as reporting_id, 'rfmo:' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{id:"rfb"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},falklands_conservation:{metadata:{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{id:"full_name"},{id:"zone"},{id:"area_sqkm"}]},type:"vector"},events_fishing:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},events_encounter:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_gap:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_port:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/port/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_encounter_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_gap_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_port_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}}},layers:[{id:"background",metadata:{"mapbox:group":"basemap-background"},type:"background",layout:{visibility:"visible"},paint:{"background-color":"#001436"}},{id:"satellite",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"satellite",layout:{visibility:"visible"}},{id:"north-star",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"north-star"},{id:"bathymetry",metadata:{"mapbox:group":"basemap-background"},type:"fill",source:"bathymetry","source-layer":"bathymetry",paint:{"fill-color":["step",["get","depth"],"#1e346c",1e3,"#1a2f63",2e3,"#142655",3e3,"#101f4a",4e3,"#0d1b43",5e3,"#0a163b",6e3,"#061132",7e3,"#030d2a",8e3,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{id:"mpant",metadata:{"mapbox:group":"static"},type:"fill",source:"mpant","source-layer":"mpant"},{id:"mpant-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mpant","source-layer":"mpant",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"mparu",metadata:{"mapbox:group":"static"},type:"fill",source:"mparu","source-layer":"mparu"},{id:"mparu-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mparu","source-layer":"mparu",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"eez",metadata:{"mapbox:group":"static"},type:"fill",source:"eez","source-layer":"eez"},{id:"eez-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"eez","source-layer":"eez",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"highseas",metadata:{"mapbox:group":"static"},type:"fill",source:"highseas","source-layer":"highseas"},{id:"highseas-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"highseas","source-layer":"highseas",layout:{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"rfmo","source-layer":"rfmo"},{id:"rfmo-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"rfmo","source-layer":"rfmo",layout:{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"6",metadata:{"mapbox:group":"static"},type:"fill",source:"6","source-layer":"6"},{id:"6-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"6","source-layer":"6",layout:{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"protectedplanet",metadata:{"mapbox:group":"static"},type:"fill",source:"protectedplanet","source-layer":"protectedplanet"},{id:"protectedplanet-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"protectedplanet","source-layer":"protectedplanet",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"falklands_conservation",metadata:{"mapbox:group":"static"},type:"fill",source:"falklands_conservation","source-layer":"falklands_conservation"},{id:"falklands_conservation-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"falklands_conservation","source-layer":"falklands_conservation",layout:{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"events_fishing",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_fishing","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_encounter","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_gap",type:"circle",source:"events_gap","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_port",type:"circle",source:"events_port","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter_vessel",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["encounter_highlight","encounter"]}}},layout:{"icon-image":"encounter","icon-allow-overlap":!0}},{id:"events_encounter_vessel_number",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_gap_vessel",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["gap_highlight","gap"]}}},layout:{"icon-image":"gap","icon-allow-overlap":!0}},{id:"events_gap_vessel_number",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_port_vessel",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["port_highlight","port"]}}},layout:{"icon-image":"port","icon-allow-overlap":!0}},{id:"events_port_vessel_number",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"graticules-lines",metadata:{"mapbox:group":"basemap-foreground"},type:"line",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],paint:{"line-color":"#174084","line-opacity":{base:1,stops:[[0,.7],[8,.7],[9,.2]]},"line-width":.5}},{id:"graticules-labels",metadata:{"mapbox:group":"basemap-foreground"},type:"symbol",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],layout:{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{base:1,stops:[[3,500],[8,1e3]]},"text-size":{base:1,stops:[[3,7],[7,12]]},"text-letter-spacing":.2},paint:{"text-color":"hsl(0, 0%, 100%)","text-halo-width":.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{base:1,stops:[[0,1],[8,1],[9,0]]}}},{id:"labels",metadata:{"mapbox:group":"basemap-foreground"},type:"raster",source:"labels"}]}},"./src/map/glmap/map.css":function(e,t,r){e.exports={map:"map_map__1TLha",googleLogo:"map_googleLogo__3lQ1y"}},"./src/map/lib/Pack.js":function(e,t,r){"use strict";var a={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},n=function(e,t,r,a,n){void 0==r&&(r=e.length),void 0==t&&(t=0),void 0==n&&(n=t);for(var o=t;o<r;o++)a[o-t+n]=255&e.charCodeAt(o)},o=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},i={typemap:{byname:a,byarray:{}},pack:function(e,t,r){var a=new ArrayBuffer(e.size);return new DataView(a)[e.setter](0,t,r),o(a)},arrayBufferToString:o,stringToArrayBuffer:function(e,t,r){void 0==r&&(r=e.length),void 0==t&&(t=0);var a=new Uint8ClampedArray(r-t);return n(e,t,r,a,0),a.buffer},writeStringToArrayBuffer:n};for(var s in i.typemap.byname){var l=i.typemap.byname[s];l.name=s,i.typemap.byarray[l.array]=l}t.a=i},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Pack__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/map/lib/Pack.js");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PelagosClient=function(){function PelagosClient(){_classCallCheck(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return _createClass(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(r,a){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=r,this.reject=a,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient},"./src/map/map.mdx":function(e,t,r){"use strict";r.r(t);var a=r("./node_modules/react/index.js"),n=r.n(a),o=r("./node_modules/@mdx-js/tag/dist/index.js"),i=r("./node_modules/docz/dist/index.m.js"),s=r("./node_modules/redux/es/redux.js"),l=r("./node_modules/react-redux/es/index.js"),c=r("./node_modules/lodash/throttle.js"),u=r.n(c),p=r("./node_modules/prop-types/index.js"),d=r.n(p),A={id:d.a.string.isRequired,url:d.a.string,data:d.a.object,color:d.a.string,type:d.a.oneOf(["geojson",void 0]),layerTemporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),fitBoundsOnLoad:d.a.bool},g=(d.a.string.isRequired,d.a.string,d.a.string,d.a.bool,d.a.number,d.a.number,d.a.arrayOf(d.a.shape({hue:d.a.number,filterValues:d.a.object})),d.a.shape({endpoints:d.a.object,isPBF:d.a.bool,colsByName:d.a.object,temporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),temporalExtentsLess:d.a.bool}).isRequired,d.a.bool,d.a.string,d.a.bool,d.a.string.isRequired,d.a.bool,d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.number,d.a.string,d.a.bool,d.a.bool,d.a.arrayOf(d.a.arrayOf(d.a.string)),d.a.bool,d.a.oneOf([void 0,"geojson","raster"]),d.a.string,d.a.object,d.a.object,d.a.node,d.a.number.isRequired,d.a.number.isRequired,d.a.number,d.a.arrayOf(d.a.number),r("./node_modules/reselect/es/index.js")),m=r("./node_modules/immutable/dist/immutable.es.js"),f=8,h=2e5,y="dot-world-fishing",b=function(e,t,r){var a=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==r?"".concat(r,"_").concat(a):a}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),r},E=function(e){return function(t,r){t({type:"COMPLETE_LOADER",payload:e});var a=r();a.map.module.loaders.length||void 0===a.map.module.onLoadComplete||a.map.module.onLoadComplete()}},w=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}},v=function(e){return e.map.module.temporalExtent},B=function(e){return e.map.module.highlightTemporalExtent};function S(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function C(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){O(e,t,r[t])})}return e}function O(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Q=Object(g.a)(function(e){return e.map.tracks.data},function(e){return e.filter(function(e){return"geojson"===e.type})}),R=Object(g.a)(Q,function(e){return e.filter(function(e){return void 0!==e.data})}),I=function(e,t){return{sources:C({},e.sources,t.sources),layers:[].concat(S(e.layers),S(t.layers))}},x=function(e,t){var r=t.start,a=t.end;if(!e||!e.features)return null;var n=e.features.reduce(function(e,t){if(t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var n=t.geometry.coordinates.reduce(function(e,n,o){var i=t.properties.coordinateProperties.times[o];return i>=r&&i<=a&&(e.coordinates.push(n),e.times.push(i)),e},{coordinates:[],times:[]});if(!n.coordinates.length)return e;var o=C({},t,{geometry:C({},t.geometry,{coordinates:n.coordinates}),properties:C({},t.properties,{coordinateProperties:{times:n.times}})});e.push(o)}return e},[]);return C({},e,{features:n})},L=Object(g.a)([v,R],function(e,t){var r=e&&e.length>0,a=t&&t.length>0;if(!r||!a)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"Track"),a={sources:O({},r,{type:"geojson",data:x(t.data,n)}),layers:[{id:"".concat(t.id,"Lines"),source:r,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:r,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return I(e,a)},{sources:{},layers:[]})}),k=Object(g.a)([B,R],function(e,t){var r=e&&e.length>0,a=t&&t.length>0;if(!r||!a)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"HighlightedTrack"),a={sources:O({},r,{type:"geojson",data:x(t.data,n)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:r,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return I(e,a)},{sources:{},layers:[]})}),D=Object(g.a)([L,k],function(e,t){return t?I(e,t):e}),T=r("./node_modules/@turf/area/index.js"),Y=r.n(T),G="ZOOM",j={NORMAL:0,BULLSEYE:2},M=0,F=1,_="geojson",U="raster",P=r("./node_modules/lodash/difference.js"),J=r.n(P),K=r("./node_modules/lodash/uniq.js"),H=r.n(K),W=r("./node_modules/lodash/uniqBy.js"),q=r.n(W),V=r("./node_modules/lodash/pull.js"),Z=r.n(V),z=r("./node_modules/lodash/sumBy.js"),N=r.n(z),X=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),$=r("./node_modules/@globalfishingwatch/map-convert/index.js"),ee=r.n($),te=r("./node_modules/lodash/template.js"),re=r.n(te),ae=r("./node_modules/lodash/templateSettings.js"),ne=r.n(ae),oe=r("./src/map/lib/pelagosClient.js"),ie=r("./node_modules/pbf/index.js"),se=r.n(ie),le=r("./node_modules/@mapbox/vector-tile/index.js"),ce=function(e,t){return fetch(e,{headers:t?{Authorization:"Bearer ".concat(t)}:{}}).then(function(t){if(!t.ok)throw new Error("could not load tile ".concat(e));return t.blob().then(function(e){var t=new FileReader;return new Promise(function(r){t.addEventListener("loadend",function(){var e=new se.a(t.result),a=new le.VectorTile(e);return r(a)}),t.readAsArrayBuffer(e)})})}).catch(function(e){console.warn(e)})};function ue(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){n=!0,o=l}finally{try{a||null==s.return||s.return()}finally{if(n)throw o}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var pe=function(e,t,r){var a=[];return(t||[null]).forEach(function(t,n){var o={id:r.seriesgroup};null!==t&&!0!==r.temporalExtentsLess&&(o.startTimeISO=new Date(t[0]).toISOString(),o.endTimeISO=new Date(t[1]).toISOString()),r.tileCoordinates&&(o.x=r.tileCoordinates.x,o.y=r.tileCoordinates.y,o.z=r.tileCoordinates.zoom);var i=function(e,t){return ne.a.interpolate=/{{([\s\S]+?)}}/g,re()(e)(t)}(e,o);(!0===r.temporalExtentsLess||!r.temporalExtentsIndices||r.temporalExtentsIndices.indexOf(n)>-1)&&a.push(i)}),a},de=function(e,t,r,a){for(var n=[],o=pe(e,r,a),i=0,s=o.length;i<s;i++)!0===a.isPBF?n.push(ce(o[i],t)):n.push((new oe.a).obtainTile(o[i],t));return n},Ae=function(e){return e.filter(function(e){return null!==e})},ge=function(e,t){var r,a={},n=N()(e,function(e){return e.longitude.length}),o=t.filter(function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)});o.forEach(function(e){a[e]=new Float32Array(n)});for(var i=0,s=function(e){a[e].set(r[e],i)},l=0,c=e.length;l<c;l++)r=e[l],o.forEach(s),i+=r.longitude.length;return a},me=function(e,t,r,a,n){var o=void 0===n?[]:n,i=r.zoom,s=ee.a.getZoomFactorRadius(i),l=ee.a.getZoomFactorRadiusRenderingMode(i),c=ee.a.getZoomFactorOpacity(i),u={},p=Object.keys(t);p.forEach(function(e){u[e]=!0});var d=[].concat(p);!0===u.sigma&&d.push("radius"),!0===u.weight&&d.push("opacity"),!0===u.longitude&&(d.push("worldX"),d.push("worldY")),!0===u.id&&d.push("series"),["latitude","longitude","datetime"].forEach(function(e){void 0!==t[e]&&!0!==t[e].hidden||Z()(d,e)}),Z()(d,"sigma","weight"),d=H()(d);for(var A=function(t,n){var A=void 0;if(!0===a){var g=e.feature(t);A=g.properties;var m=g.toGeoJSON(r.x,r.y,i).geometry.coordinates;A.longitude=m[0],A.latitude=m[1]}else A={},p.forEach(function(r){A[r]=e[r][t]});var f=u.timeIndex?A.timeIndex:ee.a.getOffsetedTimeAtPrecision(A.datetime),h=ue(Object(X.g)([A.longitude,A.latitude],1),2),y=h[0],b=h[1];if(A.worldX=y,A.worldY=b,u.sigma&&(A.radius=ee.a.sigmaToRadius(A.sigma,l,s)),u.weight&&(A.opacity=ee.a.weightToOpacity(A.weight,c)),u.id&&(A.series=A.id),!o[f]){var E={};return d.forEach(function(e){E[e]=[A[e]]}),o[f]=E,"continue"}var w=o[f];d.forEach(function(e){w[e].push(A[e])})},g=0,m=!0===a?e.length:e.latitude.length;g<m;g++)A(g);return o},fe=function(e){e.hasFishing=[],e.worldX=[],e.worldY=[];for(var t=0,r=e.weight.length;t<r;t++){var a=ue(Object(X.g)([e.longitude[t],e.latitude[t]],1),2),n=a[0],o=a[1];e.worldX[t]=n,e.worldY[t]=o,e.hasFishing[t]=e.weight[t]>0}return e},he=function(e){for(var t=[],r=0,a=e.series.length;r<a;r++){var n=e.datetime[r],o=ee.a.getOffsetedTimeAtPrecision(n);if(t[o]){var i=t[o];i.worldX.push(e.worldX[r]),i.worldY.push(e.worldY[r]),i.series.push(e.series[r]),i.hasFishing.push(e.hasFishing[r])}else{var s={worldX:[e.worldX[r]],worldY:[e.worldY[r]],series:[e.series[r]],hasFishing:[e.hasFishing[r]]};t[o]=s}}return t},ye=function(e,t,r){return Object.keys(r).every(function(a){return void 0!==e[a]&&r[a].indexOf(e[a][t])>-1})},be=function(e,t,r,a,n){for(var o=[],i=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var r=e[t];if(void 0===r)return"continue";for(var a=function(e){var t=r.worldX[e],a=r.worldY[e];if((!n.length||function(e,t,r){return r.filter(function(e){return!0!==e.pass}).some(function(r){return ye(e,t,r.filterValues)})}(r,e,n))&&t>=i-l&&t<=i+l&&a>=s-l&&a<=s+l){var c={};Object.keys(r).forEach(function(t){c[t]=r[t][e]}),o.push(c)}},c=0;c<r.worldX.length;c++)a(c)},u=r;u<a;u++)c(u);return o},Ee=r("./node_modules/@mapbox/tile-cover/index.js"),we=r.n(Ee),ve=r("./node_modules/lodash/debounce.js"),Be=r.n(ve),Se=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function Ce(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Oe=function(e){var t=Math.ceil(e+.5),r=!0;return t>10&&(t=10,r=!1),{min_zoom:t,max_zoom:t,tilesAvailable:r}},Qe=function(){return function(e,t){var r=t();if(!r.map.heatmapTiles.currentToLoadTileUids.length){var a=r.map.heatmapTiles.currentToReleaseTileUids;e(Pe(a)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},Re=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(Qe())}},Ie=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var a=r(),n=a.map.heatmapTiles.currentVisibleTiles,o=[],i=[];if(!0===e)o=n;else{var s=a.map.heatmapTiles.currentLoadedTiles;n.forEach(function(e){void 0===s.find(function(t){return t.uid===e.uid})&&o.push(e)}),s.forEach(function(e){void 0===n.find(function(t){return t.uid===e.uid})&&i.push(e.uid)})}var l=o.map(function(e){return e.uid});o.forEach(function(e){var r;t((r=e,function(e,t){e({type:Ge,payload:r});var a=t().map.heatmap.heatmapLayers,n=Object.keys(a).filter(function(e){return!0===a[e].visible});n.length&&e(Ue(n,[r]))}))}),t({type:"SET_CURRENTLY_LOADED_TILES",payload:n}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:i}}),t(Je()),t(Qe())}},xe=Be()(function(e){e(Ie())},500),Le=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var a=r().map.viewport,n=a.viewport;if(null===a.currentTransition){var o=new Se.a(n),i=[o.unproject([0,0]),o.unproject([n.width,n.height])],s=i[0],l=i[1],c=[s[0],l[1],l[0],s[1]],u=c[0],p=c[1],d=c[2],A=c[3],g=[],m=Oe(n.zoom);if(!1!==m.tilesAvailable||!0===e){if(d>180||u<-180){var f=d>180?u:u+360,h=d>180?d-360:d;g.push([[[f,A],[179.999,A],[179.999,p],[f,p],[f,A]]]),g.push([[[-180,A],[h,A],[h,p],[-180,p],[-180,A]]])}else g.push([[[u,A],[d,A],[d,p],[u,p],[u,A]]]);var y={type:"MultiPolygon",coordinates:g},b=we.a.tiles(y,m),E=we.a.indexes(y,m),w=[];b.forEach(function(e,t){var r=E[t];e[2]>=2&&w.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:r})}),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:w}),!1===(a.prevZoom!==n.zoom)?t(Ie(e)):xe(t)}}}},ke=function(e,t){return function(r,a){var n={type:"Point",coordinates:[e.longitude,e.latitude]},o=a().map.viewport.viewport.zoom,i=[o,o-1,o+1].map(function(e){return Oe(e)}).map(function(e){return we.a.indexes(n,e)}).map(function(e){return e[0]});r(function(e,t){return function(r,a){var n=a(),o=He(n,e,t),i=o.layer,s=o.isEmpty,l=o.isCluster,c=o.isMouseCluster,u=o.foundVessels;void 0!==i.id||n.map.heatmap.highlightedVessels.layerId!==i.id?r({type:je,payload:{layer:{id:i.id,tilesetId:i.tilesetId,subtype:i.subtype,header:i.header},isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:u}}):r(We())}}(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Ce(e,t,r[t])})}return e}({},e,{uids:i}),t))}};function De(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Te(e,t,r[t])})}return e}function Te(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ye(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Ge="ADD_REFERENCE_TILE",je="HIGHLIGHT_VESSELS",Me="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",Fe="UPDATE_HEATMAP_TILE";function _e(e,t){var r=e[0].getTime(),a=e[1].getTime(),n=[];return t.forEach(function(e,t){var o=e[0];e[1]>=r&&o<=a&&n.push(t)}),n}function Ue(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(a,n){var o=n(),i=b(a,o,e.join("-")),s=o.map.module.token,l=o.map.heatmap.heatmapLayers,c={};e.forEach(function(e){c[e]=Ye(l[e].tiles)});var u=[];e.forEach(function(e){var n=l[e].header,o=De({},n),i=o.temporalExtents,p=o.temporalExtentsLess,d=o.isPBF,A=o.colsByName,g=n.endpoints.tiles;t.forEach(function(t){var n=c[e].find(function(e){return e.uid===t.uid});n||(n={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(n));var o=void 0===r?l[e].visibleTemporalExtentsIndices:r[e],m=J()(o,n.temporalExtentsIndicesLoaded),f=function(e,t,r,a,n){var o=n.url,i=n.temporalExtents,s=n.temporalExtentsLess,l=n.isPBF;if(void 0===o)throw new Error("URL/endpoints object is not available on this tilesets header");var c=de(o,r,i,{tileCoordinates:t,temporalExtentsIndices:a,temporalExtentsLess:s,isPBF:l}),u=Promise.all(c);return new Promise(function(t){u.then(function(r){t({loadedLayerId:e,rawTileData:r})})})}(e,t.tileCoordinates,s,m,{url:g,temporalExtents:i,temporalExtentsLess:p,isPBF:d});u.push(f),f.then(function(e){var r=e.loadedLayerId,o=e.rawTileData;n.temporalExtentsIndicesLoaded=H()(n.temporalExtentsIndicesLoaded.concat(m)),n.data=function(e,t,r,a,n){var o;if(!0===r){if(void 0===e||!e.length||void 0===e[0]||!Object.keys(e[0].layers).length)return[];o=e[0].layers.points}else{var i=Ae(e);if(o=ge(i,Object.keys(t)),0===Object.keys(o).length)return[]}return me(o,t,a,r,n)}(o,A,d,t.tileCoordinates,n.data),a({type:Fe,payload:{layerId:r,tile:n}})})})}),Promise.all(u).then(function(){a(E(i)),a(Re(t.map(function(e){return e.uid})))})}}var Pe=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}},Je=function(){return{type:"UPDATE_LOADED_TILES"}};function Ke(e){return function(t,r){var a=r().map.heatmap.referenceTiles;t(Ue([e],a))}}var He=function(e,t,r){var a=e.map.heatmap.heatmapLayers,n=r[0],o=r[1],i=[];Object.keys(a).forEach(function(e){var r=a[e],s=t.uids.map(function(e){return r.tiles.find(function(t){return t.uid===e})}).filter(function(e){return void 0!==e&&void 0!==e.data}),l=r.filters;if(s.length){var c=s[0];i.push({layer:r,vessels:be(c.data,t,n,o,l)})}});var s,l,c,u,p,d=i.filter(function(e){return e.vessels.length>0}),A=d.filter(function(e){return"Encounters"===e.layer.subtype}).length>0;if(0===d.length)c=!0;else if(d.length>1&&!A)s=!0;else{var g=(u=A?d.find(function(e){return"Encounters"===e.layer.subtype}):d[0]).vessels;if(0===g.length)c=!0;else g.filter(function(e){return e.seriesgroup<0}).length?s=!0:l=(p=q()(g,function(e){return e.series})).length>1}return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:p,layer:void 0===u?{}:u.layer}};function We(){return{type:je,payload:{isEmpty:!0,clickableCluster:!1}}}var qe=function(e,t){return function(r,a){var n=a().map.heatmap.heatmapLayers;e.forEach(function(e){var a,o,i=e.id,s=n[i];void 0===s?r((a=e,o=t,function(e){var t=a.header.temporalExtents;e({type:"ADD_HEATMAP_LAYER",payload:De({},a,{visibleTemporalExtentsIndices:_e(o,t)})}),!0===a.visible&&e(Ke(a.id))})):(s.visible!==e.visible&&!0===e.visible&&r(Ke(i)),s.visible===e.visible&&s.hue===e.hue&&s.opacity===e.opacity&&s.filters===e.filters&&s.interactive===e.interactive||r({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))}),Object.keys(n).forEach(function(t){var a;e.find(function(e){return e.id===t})||r((a=t,function(e){e({type:"REMOVE_HEATMAP_LAYER",payload:{id:a}})}))})}},Ve=r("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js"),Ze=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(n){n({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:r,zoom:a}}),n(Le()),n(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var n=r.map.viewport;void 0!==n.bounds&&a({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})}};function ze(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Ne(e,t,r[t])})}return e}function Ne(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Xe=function(e,t,r){var a=t.style.mapStyle.toJS().sources[e];return void 0===a&&console.warn("Couldnt find source when looking for fields of layer",e),"geojson"!==a.type?void 0===a.metadata||void 0===a.metadata["gfw:popups"]?null:a.metadata["gfw:popups"]:0===Object.keys(r.properties).length?null:Object.keys(r.properties).map(function(e){return{id:e}})},$e=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source},et=function(e){if(void 0!==e&&e.length)for(var t=0;t<e.length;t++){var r=e[t],a=$e(r);if(void 0!==a)return{feature:r,staticLayerId:a}}},tt=function(e,t,r,a){return function(n,o){var i=o().map;n({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s=i.heatmap.highlightedVessels,l=s.layer,c=s.isEmpty,u=s.clickableCluster,p=s.foundVessels,d={type:null};if(!0===c){var A=et(r);if(void 0!==A){var g,m=Xe(A.staticLayerId,i,A.feature),f=A.feature.properties;null!==m&&(g=m.map(function(e){var t,r=e.id||e,a="POLYGON_LAYERS_AREA"===r?(t=A.feature,(Math.pow(10,-6)*Y()(t.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})):f[r];return{title:e.label||e.id,isLink:e.isLink,value:a}})),d.type="static",d.cluster=a,d.layer={id:A.staticLayerId},d.target={fields:g,properties:f}}}else d.type="activity",d.layer=l,!0===u?(n(function(e,t){return function(r){r(Ze(1,e,t))}}(e,t)),n(We()),d.target={isCluster:!0}):d.target=p[0];i.module.onClick&&i.module.onClick(ze({},d,{latitude:e,longitude:t}))}},rt=r("./node_modules/react-map-gl/dist/esm/index.js"),at=(r("./node_modules/mapbox-gl/dist/mapbox-gl.css"),r("./node_modules/pixi.js/lib/index.js")),nt=function(e,t,r){var a=e%360/parseFloat(360)*6,n=100===t?1:t%100/parseFloat(100),o=100===r?1:r%100/parseFloat(100),i=Math.floor(a),s=a-i,l=o*(1-n),c=o*(1-s*n),u=o*(1-(1-s)*n),p=i%6,d=[o,c,l,l,u,o][p],A=[u,o,o,c,l,l][p],g=[l,l,u,o,o,c][p];return{r:Math.round(255*d),g:Math.round(255*A),b:Math.round(255*g)}},ot=function(e){return nt(e,50,100)},it=function(e){var t=ot(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")},st=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},lt=function(e){return 12*e},ct=function(e){return e%360};function ut(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var pt=function(){function e(t,r,a){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.stage=new PIXI.particles.ParticleContainer(h,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===n&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var o=new PIXI.Rectangle(0,0,2*f,2*f);this.mainVesselTexture=new PIXI.Texture(t,o),this._setTextureFrame(r,a),this.clearSpriteProps()}var t,r,a;return t=e,(r=[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(h),y:new Float32Array(h),a:new Float32Array(h),s:new Float32Array(h)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,r,a){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=r,this.spritesProps.s[this.spritesPropsCount]=a,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.mainVesselTexture.frame.clone();if(null!==e&&(r.x=2*f*e+e),null!==t){var a=function(e){return Math.round(e/360*30)}(t);30===a&&(a=0),r.y=a*f*2,a>0&&(r.y+=a)}this.mainVesselTexture.frame=r,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var r=this.stage.children[t],a=this.spritesProps.s[t];r.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],a,a),r.alpha=this.spritesProps.a[t]}for(var n=this.stage.children.length,o=e;o<n;o++){this.stage.children[o].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),r=0;r<t;r++)this.stage.removeChildAt(0);if(e>0){var a=Math.max(5e3,e);this._addSprites(a)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var r=new PIXI.Sprite(this.mainVesselTexture);r.anchor.x=.5,r.anchor.y=.5,r.x=-100,this.stage.addChild(r)}}}])&&ut(t.prototype,r),a&&ut(t,a),e}();function dt(e){return(dt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function At(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){n=!0,o=l}finally{try{a||null==s.return||s.return()}finally{if(n)throw o}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function gt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function mt(e,t){return!t||"object"!==dt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ft(e){return(ft=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ht(e,t){return(ht=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}pt.__docgenInfo={description:"",methods:[{name:"clearSpriteProps",docblock:null,modifiers:[],params:[],returns:null},{name:"pushSpriteProps",docblock:null,modifiers:[],params:[{name:"x",type:null},{name:"y",type:null},{name:"a",type:null},{name:"s",type:null}],returns:null},{name:"setRenderingStyleIndex",docblock:null,modifiers:[],params:[{name:"renderingStyleIndex",type:null}],returns:null},{name:"destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_setTextureFrame",docblock:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used\n@heatmapStyle bool whether to use heatmap style or solid circle style\n@hue number hue value between 0 and 360",modifiers:[],params:[{name:"renderingStyleIndex"},{name:"hue"}],returns:null,description:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used"},{name:"resizeSpritesPool",docblock:null,modifiers:[],params:[],returns:null},{name:"_addSprites",docblock:null,modifiers:[],params:[{name:"num",type:null}],returns:null}],displayName:"HeatmapSubLayer"};var yt=function(e,t,r){return[1/1.5*(r[0]*e+r[4]*t+r[12]),1/1.5*(r[5]*t+r[13])]},bt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),mt(this,ft(t).apply(this,arguments))}var r,a,o;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ht(e,t)}(t,n.a.Component),r=t,(a=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,r=e.rootStage,a=e.useRadialGradientStyle,n=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:n,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(a),this.stage=new at.Container,r.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:j.NORMAL;this.brushRenderingStyle="string"===typeof e?j[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?M:F,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===j.NORMAL?this.brushZoomRenderingStyle:0,r=this.brushRenderingStyle+t;r!==this.renderingStyleIndex&&(this.renderingStyleIndex=r,Object.values(this.subLayers).forEach(function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)}))}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.filters,a=t.baseTexture,n=t.layer;if(null!==n&&void 0!==n&&void 0!==n.tiles&&!1!==n.visible){this.stage.visible=!0,this.stage.alpha=n.opacity;for(var o=n.tiles,i=n.hue,s=void 0!==r&&r.length?r.filter(function(e){return!0!==e.pass}).map(function(e){return void 0===e.hue?"0":e.hue.toString()}):[i.toString()],l=Object.keys(this.subLayers),c=H()(s.concat(l)),u=0;u<c.length;u++){var p=c[u];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(a,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(o.forEach(function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:r.length,defaultHue:i})}),s.forEach(function(t){e.subLayers[t].render()}))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,r=e.numFilters,a=e.defaultHue;if(t)for(var n=this.props,o=n.startIndex,i=n.endIndex,s=n.viewport,l=n.filters,c=n.viewportLeft,u=n.viewportRight,p=o;p<i;p++){var d=t[p];if(d)for(var A=0,g=d.worldX.length;A<g;A++){var m=void 0;void 0!==l&&l.length||(m=a);for(var f=0;f<r;f++){var h=l[f];if(ye(d,A,h.filterValues)){m=h.hue;break}}if(void 0!==m){var y=d.worldX[A];c>0&&y<c?y+=512:c<0&&y>u&&(y-=512);var b=y*s.scale,E=d.worldY[A]*s.scale,w=s.pixelProjectionMatrix,v=At(0===s.pitch?yt(b,E,w):Object(X.k)([b,E],w),2),B=v[0],S=v[1];B>-10&&B<s.width+10&&S>-10&&S<s.height+10&&this.subLayers[m].pushSpriteProps(B,S,d.opacity?d.opacity[A]:this.renderingStyle.defaultOpacity,d.radius?d.radius[A]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,r){var a=new pt(e,t,r,this.brushRenderingStyle===j.BULLSEYE);return this.stage.addChild(a.stage),a}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}])&&gt(r.prototype,a),o&&gt(r,o),t}(),Et=bt;function wt(e){return(wt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function vt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){n=!0,o=l}finally{try{a||null==s.return||s.return()}finally{if(n)throw o}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Bt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function St(e,t){return!t||"object"!==wt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ct(e){return(Ct=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ot(e,t){return(Ot=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}bt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"setBrushRenderingStyle",docblock:null,modifiers:[],params:[{name:"style",type:null}],returns:null},{name:"setBrushZoomRenderingStyle",docblock:null,modifiers:[],params:[{name:"useRadialGradientStyle",type:null}],returns:null},{name:"_setBrushRenderingStyleIndex",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_setSubLayersSpritePropsForTile",docblock:null,modifiers:[],params:[{name:"{ data, numFilters, defaultHue }",type:null}],returns:null},{name:"_createSublayer",docblock:null,modifiers:[],params:[{name:"baseTexture",type:null},{name:"renderingStyleIndex",type:null},{name:"hue",type:null}],returns:null},{name:"_destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_destroySubLayer",docblock:null,modifiers:[],params:[{name:"subLayer",type:null}],returns:null}],displayName:"HeatmapLayer",props:{layer:{type:{name:"object"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},filters:{type:{name:"array"},required:!1,description:""},baseTexture:{type:{name:"object"},required:!1,description:""},useRadialGradientStyle:{type:{name:"bool"},required:!1,description:""},customRenderingStyle:{type:{name:"object"},required:!1,description:""},viewportLeft:{type:{name:"number"},required:!1,description:""},viewportRight:{type:{name:"number"},required:!1,description:""}}};var Qt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),St(this,Ct(t).apply(this,arguments))}var r,a,o;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ot(e,t)}(t,n.a.Component),r=t,(a=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"_build",value:function(){var e=this.props.rootStage;this.stage=new PIXI.Graphics,this.stage.nativeLines=!0,e.addChild(this.stage)}},{key:"clear",value:function(){this.stage.clear()}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.tracks,a=t.zoom,n=t.startIndex,o=t.endIndex,i=t.highlightTemporalExtentIndexes;if(this.clear(),r.length){var s=null===i?void 0:[Math.max(n,i[0]),Math.min(o,i[1])],l=s&&s[1]-s[0]>0?s:void 0,c=a>2,u=1+.5*(a-2),p=void 0!==l&&l[0]>0&&l[1]>0;r.forEach(function(t){e._drawTrack({data:t.data,startIndex:n,endIndex:o,drawFishingCircles:c,fishingCirclesRadius:u,color:"0x".concat(t.color.substr(1)),lineThickness:1,lineOpacity:1}),!0===p&&e._drawTrack({data:t.data,startIndex:i[0],endIndex:i[1],drawFishingCircles:c,fishingCirclesRadius:u,color:"0xFFFFFF",lineThickness:2,lineOpacity:1})})}}},{key:"_drawTrack",value:function(e){var t,r,a,n=this,o=e.data,i=e.startIndex,s=e.endIndex,l=e.drawFishingCircles,c=e.fishingCirclesRadius,u=e.color,p=e.lineThickness,d=e.lineOpacity,A=e.worldOffset,g=void 0===A?0:A,m=this.props.viewport,f=0,h={x:[],y:[]};this.stage.lineStyle(p,u,d);for(var y=!1,b=i;b<s;b++){var E=o[b];if(E)for(var w=0,v=E.series.length;w<v;w++){var B=E.series[w];f++;var S=E.worldX[w]+g,C=E.worldY[w],O=vt(Object(X.k)([S*m.scale,C*m.scale],m.pixelProjectionMatrix),2),Q=O[0],R=O[1];if(t!==B&&this.stage.moveTo(Q,R),r&&Math.abs(S-r)>256){0===g&&(y=!0);var I=a+(C-a)/2,x=S-r<0,L=g+(512-1e-6),k=x?L:g,D=x?g:L,T=vt(Object(X.k)([k*m.scale,I*m.scale],m.pixelProjectionMatrix),2),Y=T[0],G=T[1];this.stage.lineTo(Y,G);var j=vt(Object(X.k)([D*m.scale,I*m.scale],m.pixelProjectionMatrix),2),M=j[0],F=j[1];this.stage.moveTo(M,F)}this.stage.lineTo(Q,R),l&&!0===E.hasFishing[w]&&(h.x.push(Q),h.y.push(R)),r=S,a=C,t=B}}if(l){this.stage.lineStyle(0),this.stage.beginFill(u,1);for(var _=0,U=h.x.length;_<U;_++)this.stage.drawCircle(h.x[_],h.y[_],c);this.stage.endFill()}return!0===y&&[-512,512].forEach(function(e){n._drawTrack({worldOffset:e,data:o,startIndex:i,endIndex:s,drawFishingCircles:l,fishingCirclesRadius:c,color:u,lineThickness:p,lineOpacity:d})}),f}},{key:"render",value:function(){return null}}])&&Bt(r.prototype,a),o&&Bt(r,o),t}(),Rt=Qt;function It(e){return(It="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function xt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Gt(e,t,r[t])})}return e}function Lt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(a=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(l){n=!0,o=l}finally{try{a||null==s.return||s.return()}finally{if(n)throw o}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function kt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Dt(e){return(Dt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Tt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Yt(e,t){return(Yt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Gt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Qt.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"clear",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_drawTrack",docblock:"Draws a single track (line + points)\n\n@param data track points data in 'playback form' (ie organized by days)\n@param extent extent, in day indices\n@param offset object containing info about the current situation of the map viewport, used to compute screen coords\n@param drawFishingCircles whether to draw fishing circles or not\n@param fishingCirclesRadius radius of the fishing circles\n@param color\n@param lineThickness\n@param lineOpacity\n@param worldOffset offset to use when a track crosses the dateline (ie 512 to add a second world to the right)",modifiers:[],params:[{name:"{\n  data,\n  startIndex,\n  endIndex,\n  drawFishingCircles,\n  fishingCirclesRadius,\n  color,\n  lineThickness,\n  lineOpacity,\n  worldOffset = 0,\n}"}],returns:null,description:"Draws a single track (line + points)"}],displayName:"TracksLayer",props:{zoom:{type:{name:"number"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},highlightTemporalExtentIndexes:{type:{name:"array"},required:!1,description:""},tracks:{type:{name:"array"},required:!1,description:""}}};var jt=function(e){function t(){var e,r,a,n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=new Array(o),s=0;s<o;s++)i[s]=arguments[s];return a=this,n=(e=Dt(t)).call.apply(e,[this].concat(i)),r=!n||"object"!==It(n)&&"function"!==typeof n?Tt(a):n,Gt(Tt(r),"state",{pixiReady:!1}),Gt(Tt(r),"onTouchStart",function(e){e.touches.length&&r.queryCoords(e.touches[0].clientX,e.touches[0].clientY)}),Gt(Tt(r),"onMouseMove",function(e){r.queryCoords(e.clientX,e.clientY)}),Gt(Tt(r),"_onTick",function(){!0===r.heatmapFadingIn&&r.heatmapStage.alpha<1&&r._heatmapFadeinStep()}),r}var r,o,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Yt(e,t)}(t,rt["a"]),r=t,(o=[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,r=e.height;this.pixi=new at.Application({width:t,height:r,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var a=function(e,t){var r=document.createElement("canvas"),a=r.getContext("2d"),n=2*e;r.width=3*n+2,r.height=31*n+31;for(var o=0;o<31;o++){var i=n*o+o,s=i+e,l=e,c=a.createRadialGradient(l,s,e*t,l,s,e),u=lt(o),p=it(u);c.addColorStop(0,p);var d=nt(ct(u+30),80,100);c.addColorStop(1,"rgba(".concat(d.r,", ").concat(d.g,", ").concat(d.b,", 0)")),a.fillStyle=c,a.fillRect(0,i,n,n),l+=n+1,a.beginPath(),a.arc(l,s,e,0,2*Math.PI,!1),a.fillStyle=p,a.fill(),l+=n+1,a.beginPath(),a.arc(l,s,.4*e,0,2*Math.PI,!1),a.fillStyle=p,a.fill(),a.beginPath(),a.arc(l,s,.95*e,0,2*Math.PI,!1),a.lineWidth=1,a.strokeStyle=p,a.stroke()}return r}(f,.15);this.baseTexture=at.Texture.fromCanvas(a),this.heatmapStage=new at.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every(function(e){return!0!==e.interactive})){var r=this._context.viewport,a=Lt(r.unproject([e,t]),2),n=a[0],o=a[1],i=n;i>180?i-=360:i<-180&&(i+=360);var s=Lt(Object(X.g)([i,o],1),2),l=s[0],c=s[1],u=10/r.scale;this.props.queryHeatmapVessels({longitude:i,latitude:o,worldX:l,worldY:c,toleranceRadiusInWorldUnits:u},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,r){var a={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},n=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)a=xt({highlightLayerData:a},r.find(function(t){return t.id===e.layer.id})),n=e.foundVessels.map(function(e){return{hue:312,filterValues:{series:[e.series]}}});else if(null!==t){a=xt({highlightLayerData:a},r.find(function(e){return e.id===t.layer.id})),n=[{hue:312,filterValues:{series:[t.seriesgroup]}}]}return{highlightLayerData:a,highlightFilters:n}}},{key:"_render",value:function(){var e=this,t=this.props,r=t.zoom,o=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightTemporalExtentIndexes,l=t.highlightedVessels,c=t.highlightedClickedVessel,u=t.tracks,p=t.leftWorldScaled,d=t.rightWorldScaled,A=this._context.viewport,g=this.state.pixiReady,m=i[0],f=i[1],h=function(e){return e<6}(r);if(!0!==l.isEmpty&&this.toggleHeatmapDimming(!0),!0===l.isEmpty&&0===u.length&&this._startHeatmapFadein(),this.renderer){var y=this.renderer.gl.getError();0!==y&&console.log(y)}var b=this._getHighlightData(l,c,o),E=b.highlightLayerData,w=b.highlightFilters;return n.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===g&&n.a.createElement(a.Fragment,null,o.map(function(t){return n.a.createElement(Et,{key:t.id,layer:t,filters:t.filters||[],viewport:A,startIndex:m,endIndex:f,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:h,customRenderingStyle:{},viewportLeft:p,viewportRight:d})}),void 0!==this.stage&&n.a.createElement(Et,{key:"highlighted",layer:E,filters:w,viewport:A,startIndex:m,endIndex:f,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:h,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:p,viewportRight:d}),void 0!==this.stage&&n.a.createElement(Rt,{tracks:u,viewport:A,zoom:r,startIndex:m,endIndex:f,highlightTemporalExtentIndexes:s,rootStage:this.stage})))}}])&&kt(r.prototype,o),i&&kt(r,i),t}();jt.propTypes={zoom:d.a.number,heatmapLayers:d.a.array,temporalExtentIndexes:d.a.array,highlightTemporalExtentIndexes:d.a.array,highlightedVessels:d.a.object,highlightedClickedVessel:d.a.object,tracks:d.a.array,queryHeatmapVessels:d.a.func,exportNativeViewport:d.a.func,leftWorldScaled:d.a.number,rightWorldScaled:d.a.number},jt.contextTypes={viewport:d.a.object};var Mt=jt;function Ft(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var _t=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).map(function(t){return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Ft(e,t,r[t])})}return e}({},e[t])})}),Ut=Object(g.a)([function(e){return e.map.tracks.data}],function(e){return e.filter(function(e){return"geojson"!==e.type}).filter(function(e){return void 0!==e.data})}),Pt=Object(g.a)([v],function(e){var t=e[0].getTime(),r=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Jt=Object(g.a)([B],function(e){if(void 0===e||null===e||!e.length)return null;var t=e[0].getTime(),r=e[1].getTime();return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Kt=Object(l.b)(function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:_t(e),tracks:Ut(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:Pt(e),highlightTemporalExtentIndexes:Jt(e)}},function(e,t){return{queryHeatmapVessels:function(t,r){e(ke(t,r))},exportNativeViewport:function(t){var r;e((r=t,function(e){var t=[0,0],a=[r.width,r.height],n=Object(X.h)(t,r.pixelUnprojectionMatrix),o=Object(X.h)(a,r.pixelUnprojectionMatrix),i=n[0]/r.scale,s=o[0]/r.scale,l=r.unproject(t),c=r.unproject(a);e({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:i,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}))}}})(Mt),Ht=r("./src/map/glmap/map.css"),Wt=r.n(Ht);function qt(e){return(qt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Vt(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Zt(e){return(Zt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function zt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Nt(e,t){return(Nt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Xt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var $t=function(e){var t=e.latitude,r=e.longitude,a=e.children,o=e.closeButton,i=e.onClose;return n.a.createElement(rt.b,{latitude:t,longitude:r,closeButton:o,onClose:i,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},a)};$t.defaultProps={onClose:function(){}};var er=function(e){function t(e){var r,a,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),a=this,n=Zt(t).call(this,e),r=!n||"object"!==qt(n)&&"function"!==typeof n?zt(a):n,Xt(zt(r),"_resize",function(){if(null!==r._mapContainerRef){var e=window.getComputedStyle(r._mapContainerRef),t=parseInt(e.width,10),a=parseInt(e.height,10)+1;t===r.props.viewport.width&&a===r.props.viewport.height||r.props.setViewport(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Xt(e,t,r[t])})}return e}({},r.props.viewport,{width:t,height:a}))}else console.warn("Cant set viewport on a map that hasnt finished intanciating yet")}),Xt(zt(r),"onViewportChange",function(e){r.props.setViewport(e)}),Xt(zt(r),"onMapInteraction",function(e,t){var a="hover"===t?r.props.mapHover:r.props.mapClick;if(void 0!==r.glMap&&void 0!==e.features&&e.features.length){var n=e.features[0];if(!0===n.properties.cluster){var o=n.properties.cluster_id,i=n.source,s=r.glMap.getSource(i);return void s.getClusterExpansionZoom(o,function(t,r){s.getClusterLeaves(o,99,0,function(n,o){t||n||a(e.lngLat[1],e.lngLat[0],e.features,{zoom:r,children:o})})})}}a(e.lngLat[1],e.lngLat[0],e.features)}),Xt(zt(r),"onHover",function(e){r.onMapInteraction(e,"hover")}),Xt(zt(r),"onClick",function(e){r.onMapInteraction(e,"click")}),Xt(zt(r),"getRef",function(e){null!==e&&(r.glMap=e.getMap())}),Xt(zt(r),"getCursor",function(e){var t=e.isDragging,a=r.props.cursor;return null===a?t?"grabbing":"grab":a}),Xt(zt(r),"transformRequest",function(e,t){var a=r.props.token;if(null!==a&&"Tile"===t&&e.match(y))return{url:e,headers:{Authorization:"Bearer "+a}}}),r.state={mouseOver:!0},r._mapContainerRef=null,r}var r,a,o;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Nt(e,t)}(t,n.a.Component),r=t,(a=[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("resize",this._resize),this._resize(),window.setTimeout(function(){return e._resize()},1),window.setTimeout(function(){return e._resize()},1e4)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this._resize)}},{key:"render",value:function(){var e=this,t=this.props,r=t.viewport,a=t.maxZoom,o=t.minZoom,i=t.transitionEnd,s=t.mapStyle,l=t.onClosePopup,c=t.clickPopup,u=t.hoverPopup,p=t.interactiveLayerIds;return n.a.createElement("div",{id:"map",className:Wt.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},n.a.createElement(rt.c,Object.assign({ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:i,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:s},r,{maxZoom:a,minZoom:o,onViewportChange:this.onViewportChange,interactiveLayerIds:p}),n.a.createElement(Kt,null),void 0!==c&&null!==c&&n.a.createElement($t,{latitude:c.latitude,longitude:c.longitude,closeButton:!0,onClose:l},c.content),!0===this.state.mouseOver&&void 0!==u&&null!==u&&n.a.createElement($t,{latitude:u.latitude,longitude:u.longitude,closeButton:!1},u.content)),n.a.createElement("div",{className:Wt.a.googleLogo}))}}])&&Vt(r.prototype,a),o&&Vt(r,o),t}();er.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapHover:function(){},mapClick:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,interactiveLayerIds:null};var tr=er;er.__docgenInfo={description:"",methods:[{name:"_resize",docblock:null,modifiers:[],params:[],returns:null},{name:"onViewportChange",docblock:null,modifiers:[],params:[{name:"viewport",type:null}],returns:null},{name:"onMapInteraction",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"type",type:null}],returns:null},{name:"onHover",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"onClick",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"getRef",docblock:null,modifiers:[],params:[{name:"ref",type:null}],returns:null},{name:"getCursor",docblock:null,modifiers:[],params:[{name:"{ isDragging }",type:null}],returns:null},{name:"transformRequest",docblock:null,modifiers:[],params:[{name:"url",type:null},{name:"resourceType",type:null}],returns:null}],displayName:"Map",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},mapHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},mapClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},transitionEnd:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},interactiveLayerIds:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:""},viewport:{type:{name:"object"},required:!0,description:""},mapStyle:{type:{name:"object"},required:!0,description:""},maxZoom:{type:{name:"number"},required:!0,description:""},minZoom:{type:{name:"number"},required:!0,description:""},setViewport:{type:{name:"func"},required:!0,description:""}}};var rr=Object(g.a)([function(e){return e.map.style.staticLayers}],function(e){return e.filter(function(e){return!0===e.interactive&&!0===e.visible}).map(function(e){return e.id})}),ar=Object(g.a)([function(e){return e.map.style.mapStyle},D],function(e,t){if(!t)return e;var r=e.toJS().layers.filter(function(e){return void 0!==e.metadata}).map(function(e){return e.metadata["mapbox:group"]}).lastIndexOf("static")+1,a=e.mergeIn(["sources"],t.sources),n=e.get("layers");return t.layers.forEach(function(e,t){n=n.insert(r+t,Object(m.a)(e))}),a=a.set("layers",n)}),nr=Object(l.b)(function(e,t){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,cursor:e.map.interaction.cursor,token:e.map.module.token,mapStyle:ar(e),interactiveLayerIds:rr(e)}},function(e){return{setViewport:function(t){e(function(e){return function(t){t({type:"SET_VIEWPORT",payload:e}),t(Le()),t(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var n=r.map.viewport;void 0!==n.bounds&&a({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})}}(t))},mapHover:function(t,r,a,n){e(function(e,t,r,a){return function(n,o){var i=o().map,s=i.heatmap.highlightedVessels,l=s.layer,c=s.isEmpty,u=s.foundVessels,p=null,d={type:null};if(!0===c){var A=et(r);if(void 0!==A){var g=Xe(A.staticLayerId,i,A.feature);if(null!==g){var m=A.feature.properties,f=(g.find(function(e){return e.id&&"name"===e.id.toLowerCase()})||g.find(function(e){return e.id&&"id"===e.id.toLowerCase()})||g.find(function(e){return e.id&&null!==m[e.id]&&"null"!==m[e.id]&&void 0!==m[e.id]})).id,h=m[f];d.type="static",d.cluster=a,d.layer={id:A.staticLayerId},d.target={featureTitle:h,properties:m},p="pointer"}}}else if(!0!==c){var y=void 0===u||u.length>1;p=y?"zoom-in":"pointer",d.type="activity",d.layer=l,d.target={objects:u,isCluster:y}}p!==i.interaction.cursor&&n({type:"SET_MAP_CURSOR",payload:p}),i.module.onHover&&i.module.onHover(ze({},d,{latitude:e,longitude:t}))}}(t,r,a,n))},mapClick:function(t,r,a,n){e(tt(t,r,a,n))},transitionEnd:function(){e(function(e){e({type:"TRANSITION_END"}),e(Le()),e(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var n=r.map.viewport;void 0!==n.bounds&&a({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})})},onClosePopup:function(){e(function(e,t){var r=t();void 0!==r.map.module.onClosePopup&&r.map.module.onClosePopup()})}}})(tr),or=r("./src/map/glmap/gl-styles/style.json"),ir=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function sr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function lr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){cr(e,t,r[t])})}return e}function cr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ur=function(e){return{type:"SET_MAP_STYLE",payload:e}},pr=function(e,t,r){var a=e.toJS().layers,n=e,o=a.findIndex(function(e){return e.id===t}),i=a.find(function(e){return e.id===t});if(n=function(e,t,r){var a=!0===t.visible?"visible":"none";return e.setIn(["layers",r,"layout","visibility"],a)}(n,r,o),!0===r.isBasemap)return n;var s=or.layers.find(function(e){return e.id===t}),l=void 0===r.opacity?1:r.opacity;switch(i.type){case"fill":n=n.setIn(["layers",o,"paint","fill-opacity"],l).setIn(["layers",o,"paint","fill-outline-color"],r.color).setIn(["layers",o,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":n=n.setIn(["layers",o,"paint","line-opacity"],l).setIn(["layers",o,"paint","line-color"],r.color);break;case"symbol":if(i.metadata&&!0===i.metadata["gfw:isLabel"]){var c="visible"===n.getIn(["layers",o,"layout","visibility"])&&!0===r.showLabels?"visible":"none";if(n=n.setIn(["layers",o,"layout","visibility"],c),!0!==r.showLabels)break}n=n.setIn(["layers",o,"paint","text-opacity"],l),void 0!==r.color&&(n=n.setIn(["layers",o,"paint","text-color"],r.color));break;case"circle":n=n.setIn(["layers",o,"paint","circle-opacity"],l).setIn(["layers",o,"paint","circle-radius"],s.paint["circle-radius"]).setIn(["layers",o,"paint","circle-stroke-color"],s.paint["circle-stroke-color"]||"#000").setIn(["layers",o,"paint","circle-stroke-width"],s.paint["circle-stroke-width"]||1),void 0!==r.color&&(n=n.setIn(["layers",o,"paint","circle-color"],r.color));break;case"raster":n=n.setIn(["layers",o,"paint","raster-opacity"],l)}return n=function(e,t,r,a){var n=e,o=e.toJS(),i=r.type,s=o.metadata["gfw:styles"],l=r.metadata;return["selected","highlighted"].forEach(function(e){var o=t["".concat(e,"Features")],c=null!==o&&void 0!==o&&o.values.length>0,u=t[e],p=lr({},s[e][i]||{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{});Object.keys(p).length&&Object.keys(p).forEach(function(e){var i,s=p[e][0],l=p[e][1],d=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===c&&!0!==u&&!1!==u)i=or.layers.find(function(e){return e.id===r.id})[d][e];else if(!0===u||!1===u)i=!0===u?s:l;else{var A="";if(null!==t.color&&void 0!==t.color){var g=st(t.color);A="".concat(g.r,",").concat(g.g,",").concat(g.b)}i=["match",["get",o.field],o.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",A),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",A)]}void 0!==i&&(n=n.setIn(["layers",a,d,e],i))})}),n}(n,r,i,o)},dr=function(e,t,r,a){return function(n,o){var i=o().map.style.mapStyle,s=i.toJS();if(void 0===s.sources[t]){var l={type:e};e===_?l.data=a:e===U&&(l.tiles=[r],l.tileSize=256),i=i.setIn(["sources",t],Object(m.a)(l))}if(void 0===s.layers.find(function(e){return e.id===t})){var c=e===_?function(e){var t=e.features.map(function(e){var t=e.geometry;return void 0===t?null:t.type}),r=ir.map(function(e){var r=0;return t.forEach(function(t){e.geoJSON.indexOf(t)>-1&&r++}),{gl:e.gl,num:r}}),a="fill",n=0;return r.forEach(function(e){e.num>n&&(a=e.gl,n=e.num)}),a}(a):e,u=Object(m.a)({id:t,source:t,type:c,layout:{},paint:{}}),p=e===U?s.layers.length-1-s.layers.filter(function(e){return"labels"!==e.id}).reverse().findIndex(function(e){return"raster"===e.type}):s.layers.length-1;i=i.set("layers",i.get("layers").splice(p,0,u))}n(ur(i))}},Ar=function(e){return function(t,r){t({type:"MARK_CARTO_LAYERS_AS_INSTANCIATED",payload:e.map(function(e){return e.sourceId})});var a=e.map(function(e){return r=(t=e).sourceId,a=t.sourceCartoSQL,n={layers:[{id:r,options:{sql:a}}]},o=encodeURIComponent(JSON.stringify(n)),i="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG".replace("$MAPCONFIG",o),new Promise(function(e){fetch(i).then(function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(r)),Promise.reject(),null):e.json()}).then(function(t){e({layergroupid:t.layergroupid,sourceId:r})}).catch(function(e){console.warn(e)})});var t,r,a,n,o,i});Promise.all(a.map(function(e){return e.catch(function(e){return e})})).then(function(a){var n=r().map.style.mapStyle,o=n.toJS();a.forEach(function(t){var r="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt".replace("$LAYERGROUPID",t.layergroupid),a="".concat(t.sourceId,"-instanciated");n=n.setIn(["sources",a],Object(m.a)({type:"vector",tiles:[r]})),o.layers.forEach(function(r,o){if(r.source===t.sourceId){n=(n=n.setIn(["layers",o,"source"],a)).setIn(["layers",o,"metadata","gfw:id"],t.sourceId);var i=e.find(function(e){return e.refLayer.id===t.sourceId}).refLayer;n=pr(n,r.id,i)}})}),t(ur(n))}).catch(function(e){console.warn(e)})}},gr=function(e,t){return function(r,a){r({type:"SET_STATIC_LAYERS",payload:e}),r({type:"SET_BASEMAP_LAYERS",payload:t});var n=[].concat(sr(e),sr(t.map(function(e){return lr({},e,{isBasemap:!0})}))),o=a().map.style.mapStyle.toJS().sources,i=n.filter(function(e){return void 0!==e.gl&&void 0===o[e.id]});i.length&&r(function(e){return function(t,r){var a=r().map.style.mapStyle;e.forEach(function(e){var t=e.id,r=e.gl,n=Object(m.a)(r.source);a=a.setIn(["sources",t],n);var o=[];r.layers.forEach(function(e){var r=lr({},e,{source:t,"source-layer":t});o.push(r)});var i=Object(m.a)(o);a=a.set("layers",a.get("layers").concat(i))}),t(ur(a))}}(i));var s=n.filter(function(e){return!0===e.isCustom&&void 0===o[e.id]});s.length&&s.forEach(function(e){r(dr(e.subtype,e.id,e.url,e.data))});var l=a().map.style,c=l.mapStyle,u=c.toJS(),p=u.layers,d=u.sources,A=[];e.forEach(function(e){var t=e.id;if(void 0!==o[t]&&(void 0!==e.data&&(c=c.setIn(["sources",t,"data"],Object(m.a)(e.data))),void 0!==e.url)){var r=o[t].tiles,a=void 0!==r&&r.length>0?H()([e.url].concat(sr(r))):[e.url];c=c.setIn(["sources",t,"tiles"],Object(m.a)(a))}});for(var g=function(e){var t=p[e],r=t.source,a=d[r],o=void 0!==t.metadata&&t.metadata["gfw:id"]||r,i=n.find(function(e){return e.id===o});if(void 0===i)return t.type,"continue";var s=void 0!==a.metadata&&a.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var u=l.cartoLayersInstanciated.indexOf(r)>-1;return!0!==i.visible||u||A.find(function(e){return e.sourceId===r})||A.push({sourceId:r,sourceCartoSQL:s,refLayer:i}),"continue"}c=pr(c,t.id,i)},f=0;f<p.length;f++)g(f);A.length&&r(Ar(A)),r(ur(c))}},mr=r("./node_modules/@turf/bbox/index.js"),fr=r.n(mr),hr=r("./node_modules/redux-thunk/es/index.js");var yr=s.d;Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).MAP_REDUX_REMOTE_DEBUG||Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).REACT_APP_MAP_REDUX_REMOTE_DEBUG;var br=Object(s.e)(function(){},{},yr(Object(s.a)(hr.a))),Er=function(e){var t,r=br.getState().map.tracks.data.find(function(t){return t.id===e.toString()});return br.dispatch((t=r.geoBounds,function(e,r){var a=r(),n=Object(Ve.a)({bounds:[[t.minLng,t.minLat],[t.maxLng,t.maxLat]],width:a.map.viewport.viewport.width,height:a.map.viewport.viewport.height,padding:50});e(Ze(null,n.latitude,n.longitude,n.zoom))})),r.timelineBounds},wr=br,vr="ADD_TRACK",Br="UPDATE_TRACK",Sr=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach(function(e){e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach(function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)})}),{geojson:e,timelineBounds:[t.start,t.end]}},Cr=function(e){var t=fr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}},Or=function e(t){for(var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a={start:1/0,end:0},n={minLat:1/0,maxLat:-1/0,minLng:1/0,maxLng:-1/0},o=0,i=t.datetime.length;o<i;o++){var s=t.datetime[o];s<a.start?a.start=s:s>a.end&&(a.end=s);var l=t.latitude[o];l<n.minLat?n.minLat=l:l>n.maxLat&&(n.maxLat=l);var c=t.longitude[o];!0===r&&c<0&&(c+=360),c<n.minLng?n.minLng=c:c>n.maxLng&&(n.maxLng=c)}return n.maxLng-n.minLng>350&&!1===r?e(t,!0):{time:[a.start,a.end],geo:n}};var Qr=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,r){var a=r().map.tracks.data;e&&e.forEach(function(e){var r,n=e.id,o=a.find(function(e){return e.id===n});void 0===o?t((r=e,function(e,t){var a=r.id,n=r.url,o=r.type,i=r.fitBoundsOnLoad,s=r.layerTemporalExtents,l=r.color,c=r.data,u=t();if(!u.map.tracks.data.find(function(e){return e.id===a})){var p={id:a,url:n,type:o,color:l,fitBoundsOnLoad:i},d=void 0!==r.data&&null!==r.data,A=void 0!==n&&null!==n&&""!==n;if(d&&(p.data=c,p.geoBounds=Cr(c)),e({type:vr,payload:p}),!d&&A){var g=b(e,u);if("geojson"!==o){var m=u.map.module.token,f=de(n,m,s,{seriesgroup:a});Promise.all(f.map(function(e){return e.catch(function(e){return e})})).then(function(t){var r=Ae(t);if(r.length){var n=ge(r,["latitude","longitude","datetime","series","weight","sigma"]),o=fe(n),i=Or(n);e({type:Br,payload:{id:a,data:he(o),geoBounds:i.geo,timelineBounds:i.time}}),e(E(g))}})}else fetch(n).then(function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()}).then(function(t){var r=Sr(t),n=r.geojson,o=r.timelineBounds,s=Cr(t);e({type:Br,payload:{id:a,data:n,geoBounds:s,timelineBounds:o}}),i&&Er(a)}).catch(function(e){return console.warn(e)}).finally(function(){return e(E(g))})}}})):o.color!==e.color&&t({type:Br,payload:{id:e.id,color:e.color}})}),a.forEach(function(r){e&&e.find(function(e){return e.id===r.id})||t({type:"REMOVE_TRACK",payload:{trackId:r.id}})})}},Rr=function(e,t){return function(e){return e}};function Ir(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function xr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Lr(e,t,r[t])})}return e}function Lr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var kr={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},Dr=Rr("module",{loaders:d.a.arrayOf(d.a.number),token:d.a.string,temporalExtent:d.a.arrayOf(d.a.instanceOf(Date)),onViewportChange:d.a.func,onHover:d.a.func,onClick:d.a.func,onLoadStart:d.a.func,onLoadComplete:d.a.func,onClosePopup:d.a.func,onAttributionsChange:d.a.func})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:kr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return xr({},e,t.payload);case"SET_TEMPORAL_EXTENT":return xr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return xr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var r=null!==e.loaders?Ir(e.loaders):[];return r.push(t.payload),xr({},e,{loaders:r});case"COMPLETE_LOADER":var a=Ir(e.loaders),n=a.findIndex(function(e){return e===t.payload});return a.splice(n,1),xr({},e,{loaders:a});default:return e}});function Tr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Yr(e,t,r[t])})}return e}function Yr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Gr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var jr={data:[]},Mr=Rr("tracks",{data:d.a.arrayOf(d.a.exact(Tr({},A,{data:d.a.object,timelineBounds:d.a.array,geoBounds:d.a.exact({minLat:d.a.number,minLng:d.a.number,maxLat:d.a.number,maxLng:d.a.number})})))})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:jr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case vr:return Tr({},e,{data:[].concat(Gr(e.data),[t.payload])});case Br:var r=t.payload,a=e.data.map(function(e){return e.id!==r.id?e:Tr({},e,r)});return Tr({},e,{data:a});case"REMOVE_TRACK":var n=t.payload.trackId,o=e.data.filter(function(e){return e.id!==n});return Tr({},e,{data:o});default:return e}});function Fr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function _r(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Ur(e,t,r[t])})}return e}function Ur(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Pr={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function Jr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){Kr(e,t,r[t])})}return e}function Kr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Hr={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]},Wr=r("./node_modules/react-map-gl/dist/es5/utils/transition/viewport-fly-to-interpolator.js"),qr=r.n(Wr),Vr=r("./node_modules/d3-ease/src/index.js");function Zr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){zr(e,t,r[t])})}return e}function zr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Nr={transitionDuration:500,transitionInterpolator:new qr.a,transitionEasing:Vr.a},Xr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};function $r(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function ea(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){ta(e,t,r[t])})}return e}function ta(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ra,aa=H()(Object.keys(or.sources).map(function(e){return or.sources[e].attribution}).filter(function(e){return void 0!==e})),na={mapStyle:Object(m.a)((ra=or,ra.layers.forEach(function(e){void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),e.metadata&&!0===e.metadata["gfw:temporal"]&&(e.filter=["all",[">","timestamp",0],["<","timestamp",999999999999]]),"visible"!==e.layout.visibility&&(e.layout.visibility="none")}),ra)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:aa};function oa(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ia={cursor:"progress"},sa=Object(s.c)({module:Dr,tracks:Mr,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Pr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case Me:var r=e.heatmapLayers,a=r[t.payload.layerId].visibleTemporalExtentsIndices;return a=H()(a.concat(t.payload.indicesAdded)),r[t.payload.layerId].visibleTemporalExtentsIndices=a,Object.assign({},e,r);case"ADD_HEATMAP_LAYER":var n=Object.assign({},e.heatmapLayers,Ur({},t.payload.id,_r({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:n});case"UPDATE_HEATMAP_LAYER_STYLE":var o=t.payload,i=_r({},e.heatmapLayers[o.id],o),s=_r({},e.heatmapLayers,Ur({},o.id,i));return _r({},e,{heatmapLayers:s});case"REMOVE_HEATMAP_LAYER":var l=Object.assign({},e.heatmapLayers);return delete l[t.payload.layerId],Object.assign({},e,{heatmapLayers:l});case Ge:return Object.assign({},e,{referenceTiles:[].concat(Fr(e.referenceTiles),[t.payload])});case Fe:var c=t.payload.layerId,u=t.payload.tile,p=_r({},e.heatmapLayers[c]),d=Fr(p.tiles),A=d.findIndex(function(e){return e.uid===u.uid});-1===A?d.push(u):d=[d.slice(0,A),u,d.slice(A+1)],p.tiles=d;var g=_r({},e.heatmapLayers,Ur({},c,p));return _r({},e,{heatmapLayers:g});case"RELEASE_HEATMAP_TILES":var m=t.payload,f=Object.keys(e.heatmapLayers),h=_r({},e.heatmapLayers);f.forEach(function(e){var t=_r({},h[e]);m.forEach(function(e){var r=t.tiles.findIndex(function(t){return t.uid===e});r>-1&&t.tiles.splice(r,1)})});var y=Fr(e.referenceTiles);return m.forEach(function(e){var t=y.findIndex(function(t){return t.uid===e});t>-1&&(y=[].concat(Fr(y.slice(0,t)),Fr(y.slice(t+1))))}),_r({},e,{heatmapLayers:h,referenceTiles:y});case"UPDATE_LOADED_TILES":var b=_r({},e.heatmapLayers);return _r({},e,{heatmapLayers:b});case je:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return _r({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return _r({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Hr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":return Jr({},e,{currentVisibleTiles:[].concat(t.payload)});case"SET_CURRENTLY_LOADED_TILES":return Jr({},e,{currentLoadedTiles:[].concat(t.payload)});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var r=H()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),a=H()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids));return Jr({},e,{currentToLoadTileUids:r.filter(function(e){return-1===a.indexOf(e)}),currentToReleaseTileUids:a});case"MARK_TILES_UIDS_AS_LOADED":var n=e.currentToLoadTileUids,o=t.payload;return Jr({},e,{currentToLoadTileUids:n.filter(function(e){return-1===o.indexOf(e)})});case"RELEASE_MARKED_TILES_UIDS":return Jr({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:na,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MAP_STYLE":var r=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return ea({},e,{mapStyle:r});case"SET_MAP_STYLE":return ea({},e,{mapStyle:t.payload});case"SET_STATIC_LAYERS":return ea({},e,{staticLayers:t.payload});case"SET_BASEMAP_LAYERS":return ea({},e,{basemapLayers:t.payload});case"MARK_CARTO_LAYERS_AS_INSTANCIATED":return ea({},e,{cartoLayersInstanciated:[].concat($r(e.cartoLayersInstanciated),$r(t.payload))});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return Zr({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"UPDATE_VIEWPORT":var r=Zr({},e.viewport,t.payload);return Zr({},e,{viewport:r,prevZoom:r.zoom});case"SET_ZOOM_INCREMENT":var a=e.viewport.zoom,n=Math.min(e.maxZoom,t.payload.zoom||a+t.payload.increment),o=Zr({},e.viewport,Nr,{zoom:n,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return Zr({},e,{viewport:o,canZoomIn:n<e.maxZoom,canZoomOut:n>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:G});case"SET_MOUSE_LAT_LONG":return Zr({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return Zr({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return Zr({},e,t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ia,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),a.forEach(function(t){oa(e,t,r[t])})}return e}({},e,{cursor:t.payload});default:return e}}});function la(e){return(la="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ca(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function ua(e){return(ua=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function pa(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function da(e,t){return(da=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Aa=Object(s.c)({map:sa});wr.replaceReducer(Aa);var ga=u()(function(e){wr.dispatch(function(e){return function(t,r){for(var a=r().map.style.mapStyle,n=a.toJS().layers,o=Math.round(e[0].getTime()/1e3),i=Math.round(e[1].getTime()/1e3),s=0;s<n.length;s++){var l=n[s];if(void 0!==l.metadata&&!0===l.metadata["gfw:temporal"]){var c=a.getIn(["layers",s,"filter"]).toJS();if(null===c)throw new Error("filter must be preset on style.json for temporal layer: ",l.id);c[1][2]=o,c[2][2]=i,a=a.setIn(["layers",s,"filter"],Object(m.a)(c))}}t(ur(a))}}(e)),wr.dispatch(function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}}(e))},16),ma=function(e){var t;wr.dispatch((t={latitude:e.center[0],longitude:e.center[1],zoom:e.zoom},function(e){e({type:"UPDATE_VIEWPORT",payload:t}),e(Le()),e(function(e,t){var r=t(),a=r.map.module.onViewportChange;if(void 0!==a){var n=r.map.viewport;void 0!==n.bounds&&a({zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}})}))},fa=function(e){function t(){var e,r,a,n,o,i,s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var l=arguments.length,c=new Array(l),u=0;u<l;u++)c[u]=arguments[u];return a=this,r=!(n=(e=ua(t)).call.apply(e,[this].concat(c)))||"object"!==la(n)&&"function"!==typeof n?pa(a):n,o=pa(r),s={initialized:!1,error:null,errorInfo:null},(i="state")in o?Object.defineProperty(o,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):o[i]=s,r}var r,a,o;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&da(e,t)}(t,n.a.Component),r=t,(a=[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){var e;void 0!==this.props.viewport&&ma(this.props.viewport),null!==this.props.glyphsPath&&wr.dispatch({type:"INIT_MAP_STYLE",payload:{glyphsPath:{glyphsPath:this.props.glyphsPath}.glyphsPath}}),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(wr.getState().map.style.attributions),wr&&void 0===wr.getState().map.module.token&&wr.dispatch((e={token:this.props.token,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange},function(t){t({type:"INIT_MODULE",payload:e})})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&wr.dispatch(w(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&wr.dispatch(gr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&wr.dispatch(Qr(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&ga(this.props.temporalExtent),this.setState({initialized:!0}),wr.dispatch(qe(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){var t;this.props.tracks!==e.tracks&&wr.dispatch(Qr(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&wr.dispatch(qe(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&wr.dispatch(gr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||wr.dispatch((t=this.props.loadTemporalExtent,function(e,r){var a=r(),n=a.map.heatmap.heatmapLayers,o={};Object.keys(n).forEach(function(r){var a=n[r],i=a.header.temporalExtents,s=a.visibleTemporalExtentsIndices,l=_e(t,i),c=J()(l,s);c.length&&(o[r]=c,e({type:Me,payload:{layerId:r,indicesAdded:c}}))});var i=Object.keys(o);i.length&&e(Ue(i,a.map.heatmap.referenceTiles,o))}))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||ga(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||wr.dispatch(w(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&wr.dispatch(w(this.props.highlightTemporalExtent));var r,a=wr.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===wr.getState().map.viewport.currentTransition&&(a.latitude===this.props.viewport.center[0]&&a.longitude===this.props.viewport.center[1]&&a.zoom===this.props.viewport.zoom||(1===Math.abs(a.zoom-this.props.viewport.zoom)?wr.dispatch((r=this.props.viewport.zoom,function(e){e(Ze(null,null,null,r))})):ma(this.props.viewport)))}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),n.a.createElement("div",null,n.a.createElement("h2",null,"Map component crashed!"),n.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),n.a.createElement("div",null,"Component Stack Error Details:"),n.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:n.a.createElement(l.a,{store:wr},n.a.createElement(nr,this.props))}}])&&ca(r.prototype,a),o&&ca(r,o),t}();fa.defaultProps={token:null,glyphsPath:null,highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,onViewportChange:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var ha=fa;fa.__docgenInfo={description:"",methods:[{name:"componentDidCatch",docblock:null,modifiers:[],params:[{name:"error",type:null},{name:"errorInfo",type:null}],returns:null}],displayName:"MapModule",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},glyphsPath:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},highlightTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},tracks:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"exact",value:"import { trackTypes } from './proptypes/tracks'",computed:!0}},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},heatmapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},temporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},loadTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},basemapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},staticLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},onViewportChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadStart:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadComplete:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onAttributionsChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!0,description:""}}};or.metadata["gfw:basemap-layers"];function ya(e){return(ya="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ba(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}function Ea(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function wa(e,t){return!t||"object"!==ya(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function va(e){return(va=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ba(e,t){return(Ba=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.d(t,"default",function(){return Sa});var Sa=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=wa(this,va(t).call(this,e))).layout=null,r}var r,a,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ba(e,t)}(t,n.a.Component),r=t,(a=[{key:"render",value:function(){var e=this.props,t=e.components,r=ba(e,["components"]);return n.a.createElement(o.MDXTag,{name:"wrapper",components:t},n.a.createElement(o.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),n.a.createElement(o.MDXTag,{name:"h2",components:t,props:{id:"description"}},"Description"),n.a.createElement(o.MDXTag,{name:"p",components:t},"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),n.a.createElement(o.MDXTag,{name:"ul",components:t},n.a.createElement(o.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}},"Map client")),n.a.createElement(o.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}},"Vessel profiles")),n.a.createElement(o.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}},"Data portal"))),n.a.createElement(o.MDXTag,{name:"h2",components:t,props:{id:"available-properties"}},"Available properties"),n.a.createElement(o.MDXTag,{name:"p",components:t},"TODO: fix crash on PropsTable docz component"),n.a.createElement(o.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),n.a.createElement(i.e,{__codesandbox:"N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkqiUrGiJkjK8Eq1QyZnWTWWoXY2Hm_To5G67mScAIAlCKRSsDsIxeeHGNjsFU83iWM1g_m6mVsSPMtjgoRg62oqTxb3qiAAlGYjJIzBAiDNKAIpgAlGCuchTMBCIjsToSqXtADc_MFwrFioIABEAPIAWXYMsi8q6koIAFoTkQVWqhSKHJEhah9EbZfKcJJsK5BbBbagzOLzXr9TguhgMgAKdbMNhidYWRh4ADMYkc6pdNE46pF2XYuImPScwJJNQEiCkKfj5gs7EYMzEkYaUyiyRdedc6BYMWo8XYMyEd3GlFSMCmL3Y4cw_VQKXzMASnKkDYTdfTztdkmriekccUZhOvSI-hwaQIAFFYMeaAAhRINdCRzrCAjtbmoTnKhTKb2-mA4TQyB0ahaHoRAVBzKZ9VmN0TXaT04AEchJCiGZJFUbAALgf0BXtTVzVguUFXNdo7Q1dhgHYTQfHkQj5QAARgIgRAGVBAWFGBSIDVBdFRY5TgAL2cAhEmxdhuAo9YogEZ5UCudoAAZ2GTGYsHafcaxmTsWFneSABZVPYAA2VT1PWMAQIAMR9aBEnk_hnEORFHUwdgAAUhH4JZmJ-OAtMRMyawsmhnAgATLnYABGPSNPkcEeOoPiAEE5nE9hI0o8gbCgdBw3YeROXEsR0pjGR2FRUSYG4YBDyEkTsXkbda2ALLoFy4IADIOvGRJ5koZpWpyvLuBG-UwFCHie1Qdp2AAfg2Nrw0jQqrkG9rUDimspBkat3zMWFyMwMAwigKZlqKkqtpSlca0TIMpRwSzMhSa8CCa2s62gmZ2D-GARjw6rMv0DIrgAbQUnAFIAJiMpZIqh5McCMyKAF0lgE4QiCuABWfLaK3VcpHughHue16mqka7drMb8QEQ5DUPQiMNC0CgQP0BgDodSijpOqZaONIjPVQriuamSiCFcGSxy-gA1eA4AXfK6PgyRUQ40WsDwijjhgY7QlOkI7CS2WkoaAAZJKb3N88AH0byS5xz31JK3OcZXBY9SQPEpVDsJppQ6aQlDZhDmYsKA3RQIMcDcPI4mVbNJUyIdDzKBmSxevgFWB3Ti0RPmf3UDj7miyIDw0BgcV0FCREBDsAX3QVGu1JT8X3KEP5pw9puk8tLoW64kupgmIQblgFWoCcfw8EkUeRAIP0251tFJW2TPC57uDPVzmYC_gOfMh2Ivh51zZolQ83XESDIN_gJYfcVy_r9vrO4CWVFoliK-b4EO-G5VjvQc-84CSCgC_euQ9II61-v9DU_8yTp1CBnN-W8haSF3iAtWfgB5cWXl9QBTwoCMy-h8ECrhK4CCgdrSiaAXj6icAbGAH8xyWCYvaeI54sDRxYQQAAEhAFIeAoCCMIGwnMnDuGukbtvFCjDYByJrrAHA5pWIn2gZRZB6AsiywgH9PCSxV6oHyFNSwlAABamM0FeyxIzWBeEVFSjUdQ8itDi4EGEpVJYnwiAvE8bAAAqjMbRtB34hDmEkcRHCoBcOjtY1WtjQ4VWUaoxKLjS5aKyJYI-2wAGe1VqvY-h815wEcVNdRNDcjBKyHwiUxBZg_wyGEzJtBGkCHNpQTsUThSSOjnkpunpz71LQkM1CZTnHxVPurLohDpmcWXqhautcmmzIiF0SQA9lmQPirxFsswll1zSp8CuLoDlNIylJWYVxFnZC2e_MwBV4pzLDDAckkoq63LrpGG5Nc657QSsYkeeAx6LxgNdSJ7CekxKkVmCS89x4wEjJGWgEjoXR0KtwYqwB1jPJYH5aIWVIyzHJIkbpmQ0X6GRZC8lsT9CcnfBYXFtgtIEEJYrAgZLemUpRdE2lNB6UPLhkZf5uyqkhJgLo_RGonqRAaAlXxs405DgkpGNAnwCiSrgSKDFWKcVrP_HillhLVwtIlXorVBALm3VrOAmIBBQiYCuGqyIGrzUOMRHoAQ4M0argsFPWcLwHURWdQqlImr3XAy9ajDSH0LAY0iE6-VrqpUihwPGogMbayPJrO-TaZhyDgLgHYL6DClHdGwKBdAdhiY4HXNQV02Kayf1oGlRtH06ExHiGFbIVxjpQEVpmiwGQhDlnYKgA2UBB0wgECOuVFkrjjoSJmvNNZPgbhoNqLg9gCV4EjMO4USx90CDnZQQqbbay8UoMoqeKQ90zoPdO2dqALIMtrBMWwOB2XCSyFa2Nj7hRXCPVOod97j3PsoIB0DJ6p3ZosCuiwa760bq4Awialqz2rkeOwSyEB64j36JiDI5VEg8WBdQQYIQnGJQJNEcqwwDY5D8HMYIgQLIzOROwVCk46DTkw5IdgSUgXlowHsZo76wnspCEacBc4IghASKMTjMEpwZAKPFdtzRkWEhwLvUp9jyIAEJRoTSOpXdAGHrUWFNeG6Vso5XqsVYOOAWmP26ZwPp7Vq54O1iw5YXUepVwQE0-JnTTnTxJBmHgOAbloj4iMxJRdUALN_qZfi1lu7fW1g7f4xF56_0WCxL1KLMWJhXBC25wrkXouxeA7G3z_ndThJJewAJopzZiqyOcLomW4Ovo-n1_K6msvBe0256ggm0QQA8OENR9g_Czm6PF3IEZIAunM5JSzBJXNhfGzcfo03ylzfcGkSMzyzzftoMtHAYzkn_miJNg7aiBveYsEF9Kcz2BdXKvq08Y4LuIs5Nd2Y135H_giNsYII0JImb1mZ5LsbUtGoy5t177jS1MN_fliw4O6BldG2FnHqBasfWoDZkUR2Ft4-2-nUppO3Uagp2kYntZqB8N-CDLbpSxuoDZ6wDIzOLDUHsCInYVOuc7dQML2I2wBd7FQB0zs36RRi9CzTnA1AFfoCVwQWXGvOnoHXLAWgKvuea8N2OZhPWWeS6norNySCZgm4l8LygduHe69QBN_bM3EqM4iuViXXups--MX75nsHY3PaG69kb1O7j4FESIoRHLqVcqzEtxLn3uoB7VzYIRSexGp4pTQHAsBZwTHhx9RHO7TtjgEfn0RKfUV8stTn-PefhGN85cXggArrUvc4JpzLLnxdq8fkxBpEC7AZ4nVnznqv4_j-fr_UpZeUgV_YAAH038PtvpTm3fyn-wGfCQ5978_ZLGI5A2mr7oOvvAA3K-1mr-l6MKOy6-I8fVGAQTxXOfPwftfkftvuwKDGjPPm5kvpPivlvpvqASjANhYFHtxBpulOfoUrksfqNIlk_oyj9oajXqatkiUiPgvqUhgXAH3h9APlhgAHKKaTaEZHD-AkbkCUblLR6D5oH45q48pQot5YEJaz5fboFF4t6l534b55ZvpkYIrgqkpiEwqt48Hx58E0pKHIF8YwhwAiI0BWi2CuAeCwAWgujcIWi6FUhajfCUD6HoAWjMRoYWjspOGX5MjWohZfquGY7truIQBdrhToBlboiW796vreaIaZg6hcC_4_oDgwCsBKqUEbYfRYYUGBax6j6qE5LT6jRxEJEE7ZG4HfYcQ4AEGv5EHZGkFuYUFUFZqcFYajIwTgIr7pHcFx6lKNEzA36CH9hdD5G551LL5NJFEv6Eqmq1IXzQHnLn6dE36GIqGr767d4t61Fwb1H8ZQHfT8aAHsDNFNKtFv5_pVFhabHdEn5QBn4LE4CnFT4SHl4P6wG75XGAFnHYHCHZ7PGX6H4r53H36P7JEI74HMo15W4-J-Lf4xGhLHFq4vHAFwFgHzHtHXG-xTH1ywHwGIHsCaHWpYZTxdKKHRwHHn54noDLFKE9GZ4iFXEklknRy_FSGZZvaHH5Z5GJGl5LEEmuhQ5jqz7b5W4GaslhY0mckl5r6Fh8nv7EkcnN5KHeq_YcoCgA49GClq7CkynRxylniWCKnnQSlY5Sn4nqn6CgyozynanHjnRLYqnx5qm8qymmlak6mYlFF4ElFlFjHVKtIQKa60n6D_7UnSl2noqYmbTUFaFqFp6iDWpMmiFGnp5vGn5UlIkRk970kPHSEx6XRY7WnkEilTDcmZ56n5YCl9FskpniFin4hFl_qxlBnGkKQoxmlOnKmlkE55mamsLNnVmxq1n8H2mNmOkWmFRWmtm8HtkOmdlDmZYukEggqwDyG-k0DQmqF5khlebrG-CJ5d55lElXEd4F5N51nxlCGJkfFIn7nblxkkyVlFFMlW45kJ4N7J6Ln5kJkXHdkfQlnxFskXnPl5lpmPGSl7lbl_lXkdkKlDmCFW4WAPm_mF5gUNlNmQUfkyHnkgXwVHkEAmkDmTlKnxbQW9HflhZwWHl9kakTkQUA7TkAkpZAlpZsp17oWkXqHRzLkdFMUvmrF1H94wj9rdAZlcFsWPmd6gWYUtlEW54cWrk0WAlunAmv7sr14iUYVkXcrAVPkqUsV0prn94bkeZTAWjlRqrdD6X5jQAXGBAda0A5BoC0ACCoDxBJDDgEjdDMRlpTpYYjDdB-B87OVrpSzdAhoFC9E07OXYC2AxCzg_T04OhoDFFdBLB6KIBaGmrRUprSjuhBVRW6bsC6i0HmwACaXB6aewRwHqdlnAdgLAYAYAFwNAWhnsEwgVnqDlCQKI-qOQ9aWhfmeo2Glk7sWVc4tquxLIcA9GOU7All7gewHg6gWwOuY6IgIQ5gUsmQiQq4oqvQM6-gZO-Z8V_452XhgOYy-l7mMVUZKR_GWO11N1t1xR30u8rgKQX8UVpqdgns-w-QrkIwmw5g6awVaABxmW5-plS2MOq2eYXUmWZ2f2R1QO4cp1W14YHKmQxiLwrE4kb5q4t5Q-7-SNO151peX89qrkS2INhN5VGQ3qgFWO-NNAu17JAaJNi2o05N6VHwka2FNN-WdNBADNJVZNVxp16a1FAlFgWGb2JVmAp0rglVhF5ANITl3JkU6MViBY-IstRiJirEVuTJ0EEwKiHgzmvN_NVihlbNFqaamMGKo0kUM5rpXQpR8lhKWt6N1AZilikQQlwt1tmJcGvFisMlf61m51MqRA9mLqjmNO3t51ftg2m2oZ3FaxNYKmAg500hMZ2mza_4R6FJE6RRl616lAt6HhrhOAR6mJXQ9q9lWZ-WsYsgBFSYUMYgBCERro5AmQY12QBmlYzdjd30Ba_gcAtBPoVU_AA84gwApdWQ5doGlxH62ds9I6OAEQwkM4t6nI8gy470ddO0dakR7A36Ow7A54c92oY4FC_aFYu4Dd7-iYA9haw9o9fAgg2Qk909tAS9woJ6ZCGY-gR92wW9GCO9H020cY0565OJ_GIw1A7QUwqdy1iQ76UVrGHE7BainA5gbdyG6AqGWYPl3QgQwQjBaQE91qVdfQ5gH9_4HafhIiARPRaIjIc0PJp-VwzJoDacXcRGcy1UcyjUVujABCwAOAoje--MIDdYkgXDXAGQO9YRDy8UJaoOC-_8ra6whOVwSq_8F-69ma-lWjg4OjY1swiK-l_8gOtg4oAAjqELhtkJmhQYY-nDo6tdfLqGAJGNo2_OXVgOaMijkhY5yJmrMVPs4ygoXCojOu454945EyY_MJGKE7_EE443meE649E4kB4140Yz42gJ_DxDADk9qFkPSiE1JVeRkz4249k7E3k5EwU5LEUyU2U8E-sLaapTQNU5E7Uzk3E_ADgE0-4IiK07QOU-sDcSvj04M30_Uy4z4wk4ilM6_IXBM02l8UAdMx3As701k_0w04M0s6dps20qk-sFhr0OrEQDfusMMHzgIPbjMMgjM_vkxoikKM8xE_AO06uiLtsE8y8zs98286Y5GJ88ghY5mpVsVrFq87owUJmnTulX7vC-NDxEi_LvrtrmixNOQJi2bk6EbhFAM6Uui_i8yDbtLrixi5S7zhzqSzgOS5i0Ho9r7vNmkDSxSzWELrbjAIC47sCzo8y4o9xMo2WqUXrHzIkeozWJo6w5OusDC9VqVgqxUxpcxZGQuhOo49kdq0unc-zo8w7vq4q389LgK6ayE4MaifcGqxo-k_azWJ01pd006xYCs_XFa3ql_Fs00t6zy6gLtai-lDqhREoJS5rji6GxdMABG4G4S3-MbjG5iuG5i1LqLim1ivG4Ljzka-w2G3Gyy3tsHodhyxFOdKm0W5Sy7m7l8wW7G_GyumLLrPrIbOK0wgHMoPTGHGrPqkzGoBHNoFHBzLHBomXEKAOj0GaLQMJBxEsMSkkPqFwOgLACMAFfEpsq3MXNAq8KgLsPklu_nHgBNNsHgju5UpABypQDeG0BgP0tvJ6IkmhKdaksYue0bhO67jAOeKgPNnXHYBJIhorPyLjRYOC0IIiEWuXagKwDgC7G5LbKKOeNqAEgABpIfOy6iWB2zajng3gBIADi6JucUHpSdAcHyHSU9glgtsrsiHCHmHqHGHyH-o2HuH-HRHhUUNmkkHCsMHcHtB_mds54tBssmNEk7QmAfOU8Mwr0XE8Om1To37AA6niOfawGYleoB9xrY_Y0-F0MxLQBaEe9JxENp2-L_ZOzAGpxMBp1p_2usMBz-3-yMyskB8p4rLZ3gPZ8IP2t4WOqPfJAQm5UwoFB9GaKdIqUEYyFOsMKiA5cePJFPHEFAPF6-FOnhFcAABwKR5dTpRBYBJScvKQKRTrZ1uC-HhSjonNlMXQZTsCiMX5ZDeRXI6xNeL2oRLCdHyRCe0dOyigNBJTmwNDmIoczS0QFTLq5o7KJRTAfZAczswBztdBIqFtKBptfuKy_v_vnKLuJDLtdhrsBVaanv0r_ItuiqSzSwEBywKxKwqpcCFtOdzfjA5JpQw1f4_rHXA4UGlHRCuBMuqBIq94XQkxcASecDoAr2UBr0FDLSvqjG7pXtmK3smb_45K_Y3t3tVp97rAUM10YEr2KkWFo_3uiv7RayHRSsGzzf6pdtBwMyhybGgIYQsyRzsxgQQTayEfmy2zOCWAFU2yAJPvEKhxYguGVSgK3ZYSwOzeAoCamwWxWw2z2yOzOyuzuwSS8_8-C82zXYX0hKuCgztApBgAjCICbHmFT7tAozxQtu8y0-K9myWzWx2wOxOwIfOAM89uMyYJvzFLHxDtsx6Bc-nyks5yDj5xvznuXevcYFqMSTnpcDwuojr1DNwA2N2MDyZp9BQCp-TaziZpG_wuUCzXzWZpUBTyjqMtp-IsaNZyl8ug5Mm9pCUCaCwNLDg1mYIGZp7F_x5l2uMtzO5O7OzP7PzMgs4DjrlwZDrMWBXtk9Vq6hYudjwteBXqxQ-_Bx-_AIB_9-lKATDuc8xzc_kQR_5K7zR-Fyx9U8OiirJOrPZxJ_rAp9CuLOF8pAZ9Z_2OLAaPQDwAxwD4AvnoxxRvB94IA-vjWD-D5AjCJLQ5qUg35msLAJ7eAWP1KQz9AgAgJFv5BeB2R3-kTTAfznMjQA7KQ_BAVEzWo5NVwtfd5gF3Fr8ZUBewB5v0HKC7EIEvgZhm9nZSZZUB8LIgdgMyxYZIAp0DILLHiCMg7AtgKTCwCowOUBAyQOKj9ViD4hFQ-ICHIoLsCy0RBdlQwhPEgALg_-m2LDJUB-gSDs40g6arU1EzyYLik7WARPFYDmC7AkYXUKKCNCkC5-Qg_jElQ8GiCBA4gqAJIKuCZQsgKQYUPgNBjYwlgRkFGPHT_Q6CxBzg0vuXylAwZX0vzFARKGnCp86B0hHjEKFsrkD0B6uVITrkCzRYbwlkdfn5ynRV84Ad4EeklwIGDMy-c1NIauHLJKFihU_EfsPwn6j8p-Ag-fm-kH7mwFYNQzfusAKjf8YAenHPq_09SqI-ckws1s2zv5TBRUnrRPgCTf619P--jWwFNlgCrCt-3EOPgr1hIpNUEL_GsHsIoF19Zwsw-YQ4wub8YeqjWBDuwDY6odheDQOwBMFozthMAOQUwdwJHA_V1q0Ao4XANOE4oFw81HtC0MQG1D4RsAKUNkEsh1I-g8AXIWC2kIGCcokAovquCcFBDcRyIygTE0GHGNP-mQ_KPSJIpIjGWSA9VgeUxHYiugPQ4xnkNXCEjAilIx4SkCnRkjghlIvoQ8LpHTccBkoPAfwNCCz9BBq6K9ABkFEHCcUwwEYFfECBX1KRrIxYboKcQrC9RqIoKJ4K9biiBh_QqgZP1pHr0RhtgewHkAiBYwTRUwptOAMb6Uj60LfbvmtiWCm8YA7fOAJ31ND-A7KtvekXn2JHCj1gJfb0WUOhb58Ex7Q8oRtG35M80I_vQuNggCrQ8j-IfaOAwHD4IDI-ecEBLf21iioIWILWVghhP78DiwffYmkGnlGKjnh2fV4c62oDPBmabYrAR2N_5nDKeVY17uYxuEAl00_Y4gaukjTwsJRJQ4YWcNpi-9xeYvNCKQijgUIXQAgYPsBFD6n9T4mUagC6ClCbstQJnW5NuyPHTs6ky3BEVKGFDnjFY6I18MvEoiCwAAUu7BkREQBQRAcIHoPmQXtXEVgUUNRwADSzgW2JbAKrnhRQtsBoLQVtiWRRQeVWjrqEsi2xCOaEgJG5HiSiN2Iz6QROknbgFpv2ArAicLFByKImE4yRKFhFIk6wtS2RHLA-yFiegKCgfXJJ-gfFrJD-FSUCahHpbYClMMwDNrsF_FexbKGQN9vROMSMT3x5UMcLtUMSo1ta1AX9jkCkmqxX2cggSUxIIT5JPQX0c9qKkOq-tuiKqbOmG067A4ZeVw_YtxHMlAClhRomAG0gfA6cO6d45wHxOFDMlQYFkq_Dfh9Q1g6CIgCKJsBmReUjYDIY8DRimD99Gg2oOwLnG4Y5B1anGUHEpnSwuV2AvPdgTAUBHzdxq6AN4ZNWaqGiYgvlJ8T8AWp6IeoMwWII5WSBNU_BFxZKW9llrgIdRRUojNILiKKx6qNYWriFKnw6pVwjk-uED38FIoksF0KAEMzck1Tug3JJht0C-xLSYBxwtaazWCI_cZg80sNktKe5mARUr3M8F9DYlpQxpMAWyWXRuzf54aOWfNJdJlizAcsRyJbn5NfEBT1gQUj6TMDYlLAWJJSNiWFPA6oQQZb3NeGxOe7RlNMBmDAvDO4zV1zA0M7_HAE4KbU-gyNNpIRyEDIIdOmMqXplhh7fjlo5Mg_rNLsrHTFpBvSWEbx6J-jsgmJeGvTNTZLTjwTMgHib1QjVBEAKQImTMEjEbV4-OSG_HKjUBHI8Z-gAmSLNXzhjpZ2AHJpYHAn2AoJMEpKHBIQlISUJaE2ghhKwk4TdQeEwqAAGooonBT9qtniDXSsZaUUmdiAN7Sw5UkYE3iGL6BQdbeakuGVjM_ROQfmq4T9s7PgBWSxJbE-Uk-AP5vhOhOSKOTTLYznhJQu6AJmvDaSJUEZf6MOXAAjm5yb8y0xWCKHTk7ApZzMdgFbIgBLAvxzgUudsDaRcUI8C_NAPbM-mOyJIdsqAA7Kl68TLU7QWOa12BlYyb8_yD6IXX_A3onwlgewObF7Stzu57cqXupA8GtUe52IAbAT3MBdz158AaYedPl58RMZWSSgDK2smuElgowVAIkTDaY4DG32GeidUJr6VM0hXT2q6LskI1Cab8zGK_LQDvyrgn8s6uzQVTvzK-fQEMaOiAUySj4U0D4BAoPQaNKAEOOSA_M_pjJQuyiQnK_KXknDRwt3XBYihsmZoYFywjyRAi8lXAzwcqaqWwHIW_wvJd035tmjekK9UIm6eingDMRnz0o7pB4qm0xzspdq7DfStnNrB8La8fNc6pGFEVhEcFMwESew1tRLB_Uwoo0JyPvg9AghqIOfrG1XASLhJRrSMMopGpF91F0QHEWEgLTOi5-ciy5OJP-ZKLogKinsTXI0VWLtFdlMRRYAMWzAJJxi5xaYrUW1ULFXI7xJ4tsXTDdW7gDSagC0kNsq2-i52ruldpTQtJCPKJTWz5aWss2MlCReRLrbIIMlNYJthdw2Gts-YRYVAKeMtT2L_s3CpzPIo4VI4GlNOc6ZGC-jvgVxO_UOJgpgC0SUk-kvcSOy54XC-ISEhoLRx-EBJheknCZVMv8wzLzwmsUcQrydi0ccO-oNyG4OG62xzwaHHDkbLSjtB1ltsTZdsvAl899lhyywCsvIiipTlfCBoIRz4QjcXlGy52Bct2XXLROlgY5Y8ueWvLAVHyrZTsquUHLfldy-_q9wF5JRRQtHc2LqCSh4d3BknWFfCpglIqUVUKzYa93sAGg3INsHDpiuRXwTjl-KrZUSrtiIrSVooSsfcte4dp0cE8FVLplvl8KxFEi6QhAMaC0FJltsaZTbEy7XwSSVwXTNNwp6mFVlfET-CKE1xEYVUfCj-K4TEWioSSGQB8GlBdBjBSml2QHIOSoo1guVnQr0eioRVYr4Jwq0SPriuDqrj0Rg3rK_00xAK-l6uVflrmu5TAwaK2OHDJRdUqM9ciuT1VTJKX48xwlDEap2A1XlT0x5w8pUpyTYeT9cCq9KHaofDsrkloM2GnV0SXKjLhrhNKMFMNX1iFedqnTrqDKEqIi0giVABlA27-qJWZa19MavcJeiKVhK88MSppUoqrVoqyNdOAfASq7hSMstQBS-wNq6Jgag3ESwtwsyfVa2J_BOuURTrzceq_ebGpHEMqFeyLC1H7lukZrOFWar7uMz0V5qZVBaiSEWpDUlq-IqXKAD7GPoSQl1_4HdXhD9xDYmSd6h9bsG5Ksz1s0hLeeupvVTBTKT6x6cDn0ofrNMp1LwOj0h5_qn8gG0NSgVWAJBv1AXKcWlUto-1IgdQucaAVOqnVbUgaTAEsEI2E1VFJGmAJDNrCwb72VwGDTj3uTWo4gqAd-XKgY0U13A7GonBtW42YxdQ4QTjezVY3vzBNaYj6A4UVhXwCAHSXSFhocRSbyFsm1xdMJm5xrpV83VhHmVuldD0U9Xc9DytOXnKwVeyiFUbMzRaRrVa_cYHmVihlLNNyk_hJUzEoqoSKnFAzQ33mBXAAVLyt5XwhBVfLwVNyyzSKptWbkNWL5ezfb3jWvcCl_LB3Puvq5Kr8F_2VVa92zqFrs1a64de9nA3hxXVvLCiYlu9WmYF1fq_LSDglZFbClR0hRrGu6WZiiEdiQmm-wEkc8DxxY8dovyY1kgIANQftGYhU7CgJqOk_SvYQyBxA1kFoXOKmKYmaJPSMACYsMm1LYgw6u1KiZIE6JbabWGcAAaUja3za5cwbctptr6UDK7s-ko7bPICQC94JtsWeQ0E1m2xzEuoA0IhNoL2BWOvyzbboEgApAZo9WXql8MFXngYtjm05bLAaDngVOFyv5Wis7W2wodMOuHTiqqV8Q8J2oJKMSuR2w63B8O-UJjux12xcdqOzddCrWWI7Xt72pCV9udg_aEdtHanfqA-1079QkK8nbisp0LLbt1K7HZitoLEdGdAqs2U7G1nmrBdaO0VOrKSi0FnAkyhoHlT2W0FtQxymXXLoV1K7RO2oKXTCsR20FsdDQWWCTuh1474V_y_XYbuN1I7TdZOjTVuplUqTzqt00RcluSWcrklAXIzYjtJ347e14Wl-WprjGe7xiu21bfAHW3SLaiEi19QznLbFL1hjmkOulRd3nVIS90t3Zwo92cKvdXoonTjtt1-7VwVmvtfpXT1DqfFIexbcttQjh64Ake9KsUsr057Y95OePX3hXRXd1JbtVAGYlulqpDO-gFRS2NcgnlJ0QSqjVqp1bsASqY-g9Ujmz1I5c93mw-lTre0s7ad32izcXrC02aBKA-piEPsyzEbmatWSjafsyzpoYMFe44FXvFQ17ZgdehvRaib236W9Qbc6n7gT3g6Hd-GGJT3o9pWIVU6aefTukX015UlrEMxJGESxLBYDarGfb7UlVjK_9aNNJSJhVSgH0s4B1_Nyq9Hq75dlgRXchO1036JFoeyYntrW2yhdqr-mPR_pRbt71NnO9HVMHTQ0LKA8sItAuHsCRpbpJ-oNC4qZpBosDWUHAy7W72mJKAkYG7XdoQmPbntzO1nVvssDD67UghifczQ70_6KdfEFHtjzg0qo6NuPTPUjiPVpbT1wGtBWtNS1HUXuCvVgN9E7kvAl-zmaQsYbtagxQYHh67GgHNhmKfDCqGTeAW8NMagcWAfw2osCOuAIj0QFGDRosC4h0AqrIBeRvZpJGJgcXGAI3kAWVa0jltTYI3mFVdgCgOMMrkHqNWe7ID7taQ_AccNE11DpGn6OHHP0aH6jIB5g1Kt_0wgNhI9VaRtpVQOV-jsdUw2AcsOsHhwXRPWAQDcg-AJI4MJYA2XsN8QvANwSIKKEbyzG0ooMIY3QoZoZG8AcBr-HzgZqFHk8dvFDZcydDhBugsAMAFMFMEEZCAomMAOygBEjhMAfYLKe4BiDHhWBfhOkEWkZDLGR46ccYfceG0CAJqEkZqQNrgBDaRtj4CIFMfuOzGjjwx9mrCYXABJUAs2-aqxH1r9AsAr6LYQvHWON5IT0J_sP1oXDwnKAlJx8KsZdEbHk8aJwLhictpYmoAOJvE3IMJP9aSTr3O4wQAZPOBUueYOFGCemMMnqa_GXYyccJpwBxTIJycBScRNin4gEpyamSaIAsnCAMphsuwDlPHGzU7NJU5qaGy4logYCFkFQHsorI2MnGOhFiDL5uErDPwEUHgBU7wA9q8p005bQmi8nW8Up1E8SZVNeyJgKcviAlhNMM1AzQgVMZGCZPknWTYZs9VMA8N1jawHp1Vjma9M-nsK5XfYHgEAXFmozWFaNKuC8qogF0GofM6iG9RToJQNZ8qGWfDGNn11wenPXgZX2nKDdRB63b7vhX-699x-6U-qfFMOrY0TxkUxOc1NTmPoHh6_RUc2iNbe2z7PtpVHkntbj-nWsdpe1lDfj4k_4wCXAKO2bAsAZiUUCkA8CbaZs_aMOBaCr7ChBJDoCaBAGsaTxp4Y1SQO-esZHbYVRB-wNrN1nQT7AcKvzMru1DbKkJqhw-pYEN3AXYJ8EsCxBd1BnKLY54aCdrpgtHKdJhEv7SRKUn2BbtfmFnchdFDQTnAASG8ILzchYWlgOvAg25DhU_b8LnoXZD8dfNTAdeAvIXueEIQS9bs0vZ6R32mjLwrp24wjkGKIB3wRev5mIA-cktoBpLkQO-PSt0NTB5lAq12Lr34vHLtLjHPizbF13c6dLiHYywJeF1GW9eyylg6KhdiigIJD2tCyBZQt0doJSE2FZ9qG44dVdknRy85fAvwr0LFF6CY7A-3eX7Avl8bvZb139cELQFty5RYt0JXELyV5wKZb4inKPeGvRDmFdStq9PeulsKxpa518Rss3-W6ZRGVYlZ8QBUTzXKy9GGXdLll0LdZoFHSFarNWTJRtAumXCgZX08-ZVFvmGbTViOmy_xfat9rbs0W-3ZpaawQoryum6SgIpS1Fr0t-arIFluPUA54aF-SqB0zHDfZKoH3fLa9PTM9A5ZIUKq2Bq3MRBKZgphXliAjm80csRNFoihtFSyq9q-tPAGGBx5UoEKOFSiudH4yRQ8uCkJ63xB4xpQ_rANkzEDcwrYUkKSpcG5DbHlGgnxxi46xADSgKRlQnAOsKkCgCFzKyhNiABbItlP5zJpNjgZerpsr5QYEAC46gUjAvWIEjMzsAD3g3zq8wIBDm7_C5tG9W-5vRACmVt6MMDpQdKpZFWBO6UUNDArgl1IBFF4F2fgiqgBL4jxB12iQAIN0CGnHWWQ7UmXmJZmqpitCgQOIHkHLSpz-pZVaagQxkFBZaqyNcYIqQ8GGDnKllRIWQ3HlxbrrBAHDP4LOtbnqFtak3oPM4ABjfbkYimXXIGyfrA7wdiqgWXzoy354YwbVSfVAxPhfbnGZ0ZVMIqSZRqolkMdvKfEpl7b8kUGYzYyBDNzMkDcecnfNHYVQYUMOIWBqlgXUL0Ld_we3ZRgD20oPGKabdZOvKJ2U7syOzb0Sox3zRvswiJTN5op3IlyG5vUvvZS7yTmI1zo6Kn25tIuEQ0_INRmGuwAlgXQMAJnKuvbUaAhHOu6JMFsarmYYiz9tqqGvj23TExt62PZl4PWE7KprEHJaA6B277bSFelnBVOO9ToN04Bzfa_xbmeZ3NyWKLYt7CXbeKpxB8zNgfI1QHnNzBwD3WDKhPZfE7ICvPaBMj0AtvJlsKBTmEpt7sAO-N4qNP8Yzwyk18RyNCXZwnxFDrEZw-xksbXuIS6us_24yX2IEoMYoAABJgAt2O-PIF4fCO4AxQVmxele5-B697itKEI8sV51Ty5ixR3OrK2Q1uo2jrke5mcEAVioCkcWQr3245YzESUBIAo50cSQL7bSUGLI6zgXGbHfEKB_A5ZUVLaebEjx9_jviD3AHXj9EnGx8dJSIEQ14fPg8lhz5EnxvU3mLbQdxCvsKTlB4gAychPKoYTwqCAWicCPbHCQGLLZSVQZAYgIjyiE1z8c5YlgTXfvl9MTqZlXBlajQc5kcoVOaAVTkUHokoJpkiiWGcIbOTaBCIYQdtxdi1LgEk3-w24qYLvGqdQi_0Fa1MTgC6dEpyniz_pzU6GfJzU5SKLEL05mODgVnTD_2wNfYfoBAhzDCSD092fnOBn8AIKVAFOd7PEgg9pY3jUEeOVv1dzmw488qfPP9nbzj56C6-fYVQSr3LSLZV1DtJr4-wbY-0FiDUAnC3aMh2i9QAWgBQT1TiI2TVRBDyg7N9508_TgXOCK80AeUi_CBcQbq8kOFzQHpf5ZP2JzxZzhlaqAvdaYHa6uo-cdcjIefaQOjxxup2PQnlARx1AAFfZwyawRLPARXFcFPJXTjzR0tmFef2_09tZhx_e4ySYfqwQH4Po50f53pBmAQegPGWo5AXQeIAaVoIiSJApXBFUVMKEEQLy2k793i7ZY-tNIgeGATmcVFOk5BuSvNXB0LbOl30Sbpzzl_EEBdpRXXskeIB6-_ygwmXBABFz_H2DhOyXILilyKC-dW5aItJwKppiVcMOVX0rzR-tPlcgEy3MABx6q74dCv4gisbV-y9soxuoAcbh5w6_scVuZXgHfacw3mgvjERtz8wewF7T_O143L9_EW74oy2Pon7fvo4Gr7XmPAcPKKpJxZdY4mSbjzm8-aODnE58-7oW4e8Mew5ytYtWNGqogSrvhQ67tKBeavM3nIwp7-u4e7jpLu73KogQOu83dzgJIUj4ACu9_fruwwSgaR6B7Xc3nTwkHkDz-5g_vAPA8gYoARTaf5Z23NATt929AIEULA7QKIOlnC63VW-Y4FeaY8Gb8iEj11Sj3pmcGy5scWcfqGw7Hdxuls7QIUTu9uojuSH478kfh9rCAK-PgLl5G8kRBPhJHyHSyBRYe26hEVCE0UIRxvArzoPD7m8wB_pE3V94LHvtPepncTuOPXHwTxYHmh6eAX5gkz5O6NDTudgonroOJ8RTtApP54GTzrPu34qFPSHZT6p8Q_qeN3Uogiio7_QD42bWHoOwvPY_GY-b_6gim_bHvxetzk92tYJ-nsr4V5j9sDGoDJCLOM3tLhauF8-c0esc4XnD5Z8jdx0MPjqhW9V4sBbyx0f0C653vj7F0sQ9CsQTCOgB4Dbps10R1fcy8qziT4x0VDtIrgiIRIaUd97uNG8sqh33QalzN84jWf2gPwF0Cy_q8OTXJHsml-l9rueTmYAY5ovsDIejeuvIkBe6d_G-JBd7r3U1LzzaQ9fv8e3ihYsD68QJNrt6wO-_d_uUBHrKp7-5VFetffnpB_I61MES8BPbsQ2Wm_t5lnYP_63-QuatnQCDeA3uxBu5DwG-N3LrmX2WXA5yxI_gexik6Rj-5JY_MbWGS73gPWAQ-bDEQTELADaS6JYBZ3xIDAca9Pe3vv8Z7wwuftQb0oU3jPjeBRJOG5viG8NTXVp-dnLrtDeIPd_psFS-elln1zNOR9o-g3mP---mpVNTfdQuAib6471hgP04sog39F6Mc5B5okUaz4L5N8K0RIlp_jIe8kB2_qfTaAsFlHSiZfwH8wGm5SDGjmV2gIQzLLT61Uc_Dr7-PuVPZ29NIMvWvg7_KDTdkORBUAC0K7_O_gFdf-v671bij8R2Y_kCHn0_ey-J_Fnyf8ymn_CAWEnzv7he4L8_e5_kv23qOwN4T_tAk_c9hIDX-r4L2mL4EuXSxeQ5GzMSHgM0NsCbsXp_fA8yuEH5luh-Es4f2AI3629pfY_RfrL9gADEd_5Q1f9P4kDr9G-IEev03zn8j9N_V_hfkm7D83-l_bKZD6v4e4P9iOz3v7kf2P4n8IYp_cARIOXCvSz_99mmN74pOc-EAGG8fMmk4W8tgNqILgkttW6MgM5NWIBUNAJ5JwAzPrtLiQcXov4HUK_gX7YQ6_oN6He-Xid6deV3pGKQ87QIt7ceVznxC9StJmgFje3XnwCRuWkPjIUKqATCITwX2IL5jUowNAH9okPBtIsMFARwFLe8kKt7ASWOPP4NeIwO9ZN-BFBf54BV_hQpt-R3nS4BiVPhn6y4tAf2j0BrPlbhx0e7of5C2PAVqKGEtJlLbwBi7rRrv-c7plhVe0ge_a0-efs34z2Sgbz4l-7fmX4BitAGYR7-T_m0jH-9vqf6MkmmPX6_uF7hDSxe7-FIFOB5_rgFx-1_lgBb-XgfKA-BloI_6Z-RgR-6v-dgZlij-EoOP41ePmPxjngfOFmAH8VrldbXM9tjiB4g_YJQC2Uo4CaAgIfGoHTtACtEhB-gwfptgxBWAcv4EA0fi37x-Hgdv7tBuGAWgwAaftn7-BR_tn5x0zgfIHxB-AW36jBHQRMEmcnYBAB5AvsgRSy-UAPL5C2abibxrBxhJkAsA2wcF6R4_Qe7KLBQwYkHJBd_gGInBkwWnzIKkwRkGy4ewQcH12RwWMGdBLwWiBvB3fsKCS2IBO0AAAxJDZUBtYPMFyBkbgoEJBygSMEpBfwesGvBEOBaAHGOwZG5fB5sGA6_BzwS4RCAGIViFxCIBJFD6BnBO05hB1fBEG-q17r0EyBz0nEF3BSITf6eBjwfKCEhHwVz7ZB1fDpR_o-Qa4CFBYZCxpT-ndBGLdBf6IyGyBW3lbgIhywciGchnQOGIZAUwSf7YhWOFn4n-EDJthChIoUnTiKNPKdBShsaPqET-3mFIH72ECIfZcix9sYjs-TIV4i8hD9vfaKh2AJjb1eUvhuoAo2tl2BOi1zN8FHA1kp6LzAw-gwqveefEsBG8ohoca2GOarqiXWmWperZaxarsTHWt2GdaPy9ks9Jhy_3sD6nWd1lgq_e_9pcb8Y2kK2beyJbpwBTAJwPADTQUwOFR8QN8D3ZJ2-PsyFBycAKDD98D4J3bm-l7mzIyU31kHKtoTUhFAMgHgPvDxCw2O9ihhe0hJAkWAvO9phW_PDRZ0WWFljxiWIxEHL_cSThJBG8XmAHTVhp2HOGQ8i4WRYZWq4bRYFU9Fs4BhgqoQIDbhVYcTxiQ8xnnyXBjKDuGKWy3N2hpQUMNjBGQH_rq5Fh_4HEFeySEPAC-eEYeAS1yp2EHK1E3mG2HI071knJE-mXmGze-EPNyQ9h62L-oxeNNpdJQAQDuVCnh3JOeHLh7npRZXh64XeFt8ZtvNDKWqAKpayWWcJGAxh1nhOH7wMTm4EpqsEfvoCiOEbVjgRiILaovetWDyoROYYcfr5eIQjmyxoabrJHpC3ET2EVyTASlikRo0ORHkWlEVRZrhN4RuEShYIO_jzQEtM0CGRoks8wPG44BXIsehaPAwPh9tj0aIge8OwI6i_DjdQA-16LcSVk7ABaAEU1vn5GRunkZPJT4gnrTJRgxPgzIQ8HHtoHYQX7rWAvIDzIrDXqt1H64o-zMOr4--84WGI6KVCHHSrQBYV5E_EPkYZQUh1qJmEgRfcjHKuBMvGeDVR6XoDh-QIuIigqRJfmVw8Rj4fVpdmG9oNbf49DvdI3etjl2CQmuSP5AwAQYTpyRgMDAICjR7yBNGxh5hiqrDeGWherxhOWn6gZhP9pVoy8eYShrTRs0YiATR1DgIC0OacvtH4oh0XiHve4xlYZYR-YMKAHR40VdHhuMatQFTAWIGlDnRY0UGHhY3EV3KOQVYVo6HmdcliCByVYQNgVRH9s4GeynYSvJcAMEQvIAxEEZjZWGFQfMaXBoMUnI0ORzqdhIQYbroq5qf6DD4K-17h1x4xboVbjCRwaAuaxonHkHLW8v8LP5cAtWPYE0yzzGNSkujcl5goxExl3IRysEQfwQxW0Ul5jg9UWv5QxdUfEGA4ugFNqRgfMRNJhEmNhIqb2hCv1F484Uu8INY3wq7DfCiyjbAVS5Botpb29KKqA-hLkgQDboIoJQD7ehTArRZAacL4iB0KqJRBUxg6pWEQRlsavQAAiu1gNWhMRMaoQjgMRKAeOsAfxgwtCAKKuxr3unDlIIQuVDWMyYlTGexsPD7HKw8gHEKJ0oqIHHUA_2q1jtYEkAiDFgrWE9rKckRJGDfieVAiwBoYAGz7ZxwcbUSbU3dpK6reP_oMBfQASFCZpQgFk9qXhwVpBY4WuoLBZie4CBJ7OeCHPiq0ElkM8orydcbnFtYnoRL7mA2dg7E0gSKFyJXofOEw61Ur-HEBWxSUC3FSa7cVCbsyTVLWpvuPzDdGxohgfviX4eQOwBiAEkHpB5c2rhPI4A67PZSRgxQCSTBUtkRwLHQAAjkDSOUcah7xRK8YrAvIiZvFFehE6IW5W49XmY5iWKUdQQnxv1EijsR_sX-jrxUAHzj0CsaP3zCybQM1ICiRvCr4EJyCMzEEUUceHghk7MlNp0Ow6Jc6qOxiFej_g78bWoMJdgYrGSqoqMMw8QfhLQDJxEcgEor4C0WtEZ6_sS2ofQPKoFYuWIVpeERWXlghY-WxOtqAjmAkbcSoQ80tdFcynNlHH0iEeI3FWxN-GAkiONMponCJBMcVBnggicoG2x_Cfyyygq8f3wNxcWk3HGJjiYrDRYHiTYYmJKiAkCRgu8REDuJLqJ4kcy4LGGzhwdCWnLiJxUANEkmbiVPgmJXiSEmaujXKfFIovCXbHWUNiSImXxG0XTyFhYiVdhPSCDoQqZYuMu2GFJP3n96bYmSfYkG4CST8SHOdDoEnWx2iYmG008fPtp5xXcYlY9xK4X3HoWRBjbDYWKurhaWAw8e8gcM-WM54UWpsnhINAOurLitJYDvgkiyXAJSGK2dWPxgOeI8d0AfRVMWZSFgstNnaHJJUrkCB034WlKdwsjDkAeAyQMnHLU1AK3F3xfsAJhuQDQDC4K8b9kHKaqQHtI4rJuib8noA8gLi6AoIzPUloe7-JDGbeAwSl7whdMVWGKBPyVWG9hsuHxGCePKhQHzUIIYx7u22IGDBXJeccV6xozclcFbJl1BsDHY3QIclxUjlDUGJSIQDMh5AANGdBpAqAOShOUQoEkDhC5gFbKxRcdMFEq-ZLNjF0OmXu6FDeGCflhMk3vockhujSfXZ6JVgVXjCxE9jgGsh7geyFUxC9iikQR2vpG54EVScyHqprga34eBKTmQ5m8kAZQ7gEgKcYHAp8UVYZTeaUKhH-ukUVzIvIz_vXZYRo0HamKpDqZ6ltIgnpDF3ez0VGC9emEa95Te8UfYG1epKTzHr2NeCrHDylUGrHPYA2B8A14d6I-F5J6OiwlvxUsOwkzo6acgaxaCvGCT-OP-ItqTR00mEiesSRGtaZqYiWIpYYK3EiBFgMwMkAseOxKYKbENQfUDWA0gtIL1SFyXmAsAXQFKBOU9yRVLtSrdKXGugygp77UATlMCJaChFCwF5gmYW0LzU3UTXg9mEUKcrdxSFjpFqJuRpZJT4ZBp7r7pPmojq5WjHGFanpk1CL5zEFRiqZoxoBB1ynMF6Y1yiM9aWElGEo1j-nXE4-rYDC-T8G1yCBBUJyDeOl1qG7mwSMVBw7W_2MUk5hpSSmnFhj1mDEQR_DhVJV8r4gynmu4CJa5KCD0RdGEM4QItTWRpVG66tU8zlD6XWX0XNFhpaJBJCoRc0quAWJOaTolC2H0aVoDhOQF9hwZCGa8798Ddn2HQ4MXusCvoTJIxmXRZNpITpkSSjnraQI0WRkTRU0aRnfRzGZQRdRGsZgx2J21lcwuiDKW9jAib9LBnOikQBHJsZdMhxnOJi0pzaOilmXKBwBm0t1BCZnYd2GOZ6AOJnLYFvlJlOq6UEZlWZ3kQpk02zmUj6ipacvZlSpiaa_jaQAYS6JBhnGZ-hzh4Yd6mveomVGH22u4a4BNyumVYbJhRSYdIHWS_s6ybRRqdmHoZn9hUnIRqqWDglhKUcTEwE8PjdZbmoPjj5QAwmd5KFRoEZ2HQ-riUYlT4ZiHKgGZLaOjGO-VlDSkjhBrkvFBAIIj6zjSTSVFlrxWQVxkdJTCTKrApk3mtkN2BxB5lIpHjsClxCfGZEE40AvrtnMyp2fSGUx9WdDGIp2GSvJUJ8oEbwL2sEYL4xhAoVfGhBu2Xnx0hV7l8l8QEsPtrKwrWQQC883WUdmopPmVbhYYASPkBRUfjvinZwf2f4BSY5nmvCA54Pn9B16GAZG5XJ_2cY7I5t-PcT3x7AEpDzQf5h7KC-2WU1xXJCBNZ6gwNOVCYfhz-HdlgRsMR_DAp3gftpvZwMY6F16XFMnSih1XuZDY2n7HjYSQBNkTaMAHUSTn34FNlTYERz1vfaFq99l2Es23EVHFq5YDlTHcRWIMJlq5kOVHGXBt7hGG3SoAbzJJO12WtggB99sLbgBVqYgBcAZASARRxOMq9zOprGbcRq-7qYG6k-o0DhE8xhgV6nBh_YWdky2MqfblThHHt-pkJGAG-BWBVxswnKIbCU-AfRyUnWF2AI6U2EEAUguYCyZnEOv6fguQZthRwaAPLaihWhFlBbAuwG9gq2ykgIB84OQJ7DJxSwIun4gx4DErzgDXnmByYdSdtYTgkAHhjdUWsQRyEcq0JsDH09eRwLDpS1APkDBgusOCUAWuUHLJxzgKnEM2wmQ7nW54eWZh252-dk4QBiAK0lOECceg6Iy72GvlNxG-e1jquLbm5nuxiIOvmpxNuYOECUWGMumKCzQA3mLelQeo6UZlUsEAL5eYC2HlJg2UEm2JzTFklami9H6n1wo2dAX1Jy0moA5MSqcVAWgZUX-h3k7-IL5_5rmQq7v4BmPAWIFEKVkACZHUPyTwFdJqQV8JM9L7kLSHqdrnckeiaLSgkCqfXAjZ4KXQWf07Mbugux3OU_kwAL-ebDn2a2QyKl5RMSBAV5qSQPghpi2slkRp9uczEuhBWYJTUFXBWNmTyYWXkqe6IBTknnIGhZQC0FMBQhFDYysb1Gppt2NoaoAa5ozBcSf3G1rDKJ_F1rawBAB4DVAKsPRDV0YAN7DVAR2tdySWMwFwYvim2nMjnsR4kqydksAEknQsY4MLgSgQbDikCASUFkzMaBWCLK6qrgJmjaQxBMfD24RQuKARg69FkVxFKNCUhuQzRN-qlFDyPJb3moCJ0Th6WRUdo_W8qqJJroxLG0VnaNEq6qHaOhuVZTAyKtqBnKGshBLHKQxSMWQSWVlMD56dsDLqayxyrMWTFmstMXsArHLqDW68xWMWSc6xZsWjFZku9LlFOwFkUxY9cFqbs2QYluHLRCvL8Y2GLsZ6pXAc6B2iJAh6BgBXASkInQyplxeXYgB3xdQBMs7ik_h0R5dgCV8Ox0adFIolHowkP8_gOaTP8VuJR4L41ToM5kIwoDpD2xoLiiW3FdgKK75YiJcs4vOpSFQBolrcrQB7OWJYqTy5hYFY4hB6UOo5wlSRNe74lmJYMzElAgOiVklLJeQSUl4JTjHiotxYwls2_JR7ay5txc1zaoyqW-iKk4pXtTClx4Oh5HhglHKXdAxUGKU8Y2rtjjSlsNvuFZAtxeh6FuX2XGmJ09Xl1Z_FvGu4Qk8lcK4aEp0pT9aGIWpRgA0am0M17PWrCDkiuGFuWaUfeGZkxppQ7hdUAXFwYtQCvoJpauBBG0QFcAeGoMMmA0eQRvJpRlDZAVwxGMmpGVMahZmGXJl8ZWmUd2y6JKpYY59HERTafedkRY2AgER4LO9cGpi-h70WOC6gOUHkXbArhpZDCg5ZYqoA8C7F2AeMrxsdadyD-d6Xu2CUrcIqp3do8XES7iC8WrgPGO8W5lOPkGJZmFgOGUEAo5ath4CSZbEZLlvkU8XjlBXH4byaW5auUZlERvJoWg-5SJAzlC_OLm42-NiooKZaUCQnKlaZBTbE25NpwBK5Q4a9zKld5QDy7hY4IqTM2lwUySflopbaWeqRRGKU_WX5bQB6lPFMW5KlupR7aqlDpVEE1kSFZBW_l8pQrbKRtGDqWSwDRlRr_lBxMNSy5bfL4by40QEUQkVi5S6nRAh4bBVMkw1FYlBi4RjJoUVTFYVwya1FT3bJ0IcsdZQAW7scDflrRpgAEVl-USidlNVJJiuZ52cYpRUsuVDZWBfFXOAWyEkMmBGQ1jgnRAR9FbJVNBpFZEasVlALpX8VilbRULuWlXOCMVBlexWzg-lcxVGVs4BaGTZGBNOyu4niflI_GipP8ZrAuWoGW2Vc4IZSUVu5eZXKQ2MEpBfY2kF2WSVo0Bq7i-6Mvgp1lpJO6VMazZWWXRAbEe2Vvc8AdL51ei8TJS3FNpceAyl9pQVU8YNHm3wzlK6OSxTQ_ag2X1y8OPV5sRTaRtaXxoqBHFd8UJoYhZwNci4ZMaK_JrjpZA_FeRWKv7tGE82tEHCg5IWuatFXqids6qVaf3CQm-5oPKmzg8wbqNBPcRREhpV5pTnxAl6-uPOVZYNMVZjtVwNJ1XgF1fLVg9a6PL1X64MGNxEYEfCP4BZFfpZjxXZe-bbkiEL1TzbnEd1TkgPVcAB3EXE0OJ3Fv5FBbkDA1b5HPh_ZHHtx4xkv1Y9UA8RRLtWdguWZBWuAmWEjXQ8bfB6UphRxY2VMaaVZLDIEH0FypjhVwBMVbFOXh1YSFWybDVrwf1U9UgEyMnDX_Vx8TLabV3FMpHJqx6P5YPycqlzUNVh6tYYzVaBFnA9EgYkGXTQIzvxgFlE6eQWwyx8KWXllN6LEDe23QNLQW4OQCGIJS2iKs43uLXigpZh6CsDiuqhOOAUK8ucI7EiOjpDEXeJzmNlnYK9ti-RhILsapjwAZCYKwQ8LCpti-JjlBBwpJpSOYkzAESZmmv4e6GGxxJK9KglvurgCMBNFCNbmlWGEwe4BPVONQkXuA8sI-IpFaRdHWx1AAlkUJpM4ZGDEFFIKgBZFwzpKXs1IXljmTgMdQ2Up1qQJkUA8ASSXWlFeHpG40ujRkXkEUA8j2JUaJHljhSc8FceD91MycXKDOI9X-jtAXlI3gT1tMfkAvQrgLPUWACBFSGbZIGskWpFa1GlC5F2RAUU0AmfDxiqYs4FkU51ddQjXV1mZjjXxVDZU2UtlqVZkCx1OSPnWr1cWYSjXuTHivpLFFNQRQY1poTdQUJBqQJWSwVCm6UVFVRWvAn1fOJnWb118Fp7XUWNUxqpl6PFjx4ptxaTyIN2psg23FsuHJEhecdPkozqrSPzVpq2oELnU11BIqUCU28WMTHxufuknnxDaRtm7uP2TfEWKdgA_HsAT8fJWZ20gTnYjoDDc1z2o8JhWhQJOVQgnl2SCfGl0NUdeglMNPNK9w1WZpUVULgVpb6VjV-CmfWSwpxYrCPgMYc67vSBhvew7WN9fjV6NkbpIm3UPKl_WjFeKb_WSl7aIdXXU8YsCXUAeKQVhBirhm40DlKjS6CeNgnrg35YZKdgWaYl1fezXVnYBqXjAUsEEUhFC4KqjY-N1LGnkN-WCHX0JxaRdCvxaeQwnzBXckkBrcF0AQ2JqbRcYpc1iyedwOVZsZ7lMQ7OA2W6aOSOmqNWH9RFC7FcxTY3rAdjdyr1NU5qUr9FExhUQlIt0tqoNlOnGASiJTVf7HVifRMM1IZcNGMjzVBDnpkVhpgqlQdZ7TkM2FEMlOs0lIvJXQ5bNOwNCUSya8H8nSBDZXtll5sLlM3vcMJpc3bNi1WGwrVAgV02YkTJHkS1NeERb4zkEijSQ5IAuTkhkN87oHQvNNzTsBkItIRng45mPJ-5WBFjfqR56bkFjrEq39cwG76nVoJ5v8ezdsAN2eKYe4LoELWvCgtiCpG4BNyCZIVZoahZcwl1VSMtg22OQGkS8c8RMM07Nacq81_Nl8UyQGYGLXYCM1nLWlEg89zQHnXNDLZjzrVMthIqGcNTT80st-LetUWh6mnYWhw22p0TbmzhXuZn8DoNVSu2CIN0D5IU8Nog_mGrXVQBQy8H-ZfmerbPB_mTEn-Z3gprTPC_mxcNYx3g82lEUKkNtf7VlFadUkXQNaRdCyN1ksGUXh6lRdfDVF7ZWiLzUsTf2iCYsUHUWKWDRWHp51APEdqic-KgEhGyKFr9pzcXFkdrSQ68AAJJQecsmraShCI0X7a25i0WeqbRd4iENSalGpHA7FhdoXapbb02ioExXwjng2OvemUR4xdqDDFrbe20lWlEasVLFvbZYAdtusnpazKhOvC3E6tsMO2jt92pZarFExdJ7wSSbXMWYWXbcMXLtQ_vYBrtJlnFYK8Tyn5rAqSOlhZOw8GccqHtQKu8ontzgGe2ZW-7eMp8qtHLO39toFgZZPtM7W20jtr7SharFLTZ-19t-Vp207FWHNbovtQHbrKDtU7cSrgdyVmcqfKpmj8pGy0Et2oocH2tqBPaWFnjkEeQ7V-1ztCEiZqXKZmjcoodFqsMVISGHTu33tXRgta4dgHRhYTt7QHR3ftiHMMl2WNHQMVrF54DbDq8AHSx0MdWHSB08dYurB1sd1HSgYtY0HdSpkdAnVryTtCLdJ2kqwxWJ2rFl7f5q0cChhBJodxure3cdF7YCrqdD2iNyay2nae3cdqxbPJttCEmp3HtmnaZ26d-cfKCWdcKjO0GdtncZ1adwxTp1nt57MYCmA5gEYAaNg_PQGwA0srEDZwhlOuABUAIoqQ-wRwPsBEYFaAul1BVdkl371xdq6DG2mwI5HnwvGAF3sA9ECwE-gFgMAC1MtEC6yRkDgIHbeNcXXsA3GRwGl0XUgXYV1SwxXRRBldjtYPxWAReD0ZxIhtlmBZdtxhAicevgNkJEYRKCtRZMNgo11Mpa1JQRFAzXSaUddd1PlhhdiGSx7tS_fCN2pd3Qoyk8BDGEXaLeC3XyDPoeLFVVakwXSIFrd8ACU2GkmFP1VO1inAHZwOLeNrgupgZF0xYUiFAapNZz3cjQt4Wku913dn3SjY_d0NtZGyCIjmAQdMECE7VMtIPHZqYMagEw5XceZG91wo7ZD85vRtmleSA9GPWBSowRJHmSA9HDbzSvdnqmfho9FPYwBg5APRgC3kGAOF1c4eQLuhs8RNck31eqgEz15lJgAt39qZzAAK-R_aloLmAnRMjk4AC3Xz0tdmQHKAUQQouV0veK3Y5EbJ-XdL1tdwANulSgtEN-GOAJJUMbZwPZIL1slHJdnCewF9oa3dA34VL1FdsvTI6f82vW8GANUidl022VCO8YoK1va1229HXXpp-k13TiA2AS6WJjZdO3X0h0QOPZhREgZUkXbqqr0c1029JXfL1g1_AUr2alE8AUINB6XelK3Jk1MkC5dRkewDx9XvSV0-9XXX-j0pG3dl1bd5wDW0R9UKL11-knvTL0ldSAtr1jCCsFInyu-4bAz4YbUiOAkkt-jVR1UI8CDnj4nVFgzVdtxQ30jShfQV0J9FEK32VUbkFUKp9b6F33cYnYMjlGw3wrLB_KVssv2WQyOefaxYRGICLmALKVFRuQC4E9Su4Winogz9i3TlXAAJibRCr9H0LLQmJjKbiCn4llFgnN5-YL9Rb90grH3HdZgJVUY0JJAL2wAzJIJH_8sALr3slpJffBIKKCmkyDV_vZmiaI7VXX2useeYYjt9RaIlSVCh_ZtDw4yeSGJF0t6D3WdgUA0Xn22bsTr3CAiA_r1hIvvfvX-90mZph_Z7zfxlP4PDdnan0_DUx1tYXoBgCFC6XZr3jg2eUtSuATgtABAScuJzjE5Y4DX3TgccmvYTG8wDJiu4SScY0ACSSZGD21jvfgODVSwNyoACCAyb3pFowugOM9UHFOhsDeeeMKEDFQgf036e9gkBtIugxJA-1_iVoM39ySZbXzdX1kKaw9-g94lh-YwCYmrZFA5vGXxjlF4O21kdXQBrxtdfG2E1uaX_25YVuLH2eS6iRGHM4D9XHV-tnCdzGvpKdDlX98Abd4k89_nbP0sB0mmEMTwhlA0PZwjtrtpb9cmLLRvIiQN-qXinYMkBsYRHhL0BdTfer3rO81LRBFD6Q7LTXU7Ug_Vb9RvC4pRqOQNkZNURwI1TZd_g-EJ2ABaPf0HAzBGun6gu_dIwr9UDWsjI5Yw971ZMtEPUKNCo9HdSJcXDsH3dAVfAqLGIGXVmBxU8wzHXE5jKcCKq1mDNYogimDPlJdy_YOA3H0B4ar3z9GvWULa9Fg0wNWDKFRPDG9SA-9Tug5veGDOQVvTCPF97XTcOEUCRJCPbAT1bGiRgMcaxDxAhUHFRxAgdFrWW9HtjN3rsWglABmg6AMkCx9pZUoPfhC7MxgiYcmOJhANaNar0mlEw1r1v98kSSP9DHI5xgZAaQDkDQjhfSd3gDLIK0O0Dp9TMOVt_aPcPHgRA24PI5lg-iNkgpZCSP51AJJ-xKjglLYAH9jzZYEZ0vLhFxpDsACnVvV_NjvibYBmNMMujglbeUoU3ozABZF1NDwORB3NJ-TijJMFs4BjQY4hSCxaZNjRs1OVdD1FBPijzauOzo4GN8ysY7cTiDeedMKUN3EUnWetayDA162O1h60Z1JY9nXRj59dahYODdYQkn1RY5WPCgpY2EgRjmzjAB62ASdpy6jA0QcQdjWzjGEAU3JPJUCU9XsmMi504dWJmjaYxo36Ds45LDTJSw-LI6jiQE0IhEUiYiN69nWFOg2jVQplymjQbRA0LNSBGGqxVPQ8G2SwtQ3z3W1EXcL1SY02KRg2CYvVclXDJfYSM4RdgKv0iIfEL_G_wjQFWj_D82YCNcjjpuJhzwmwJcn7a74wSNrUUw3rAW9uOTdS_jBwGZGIT2I4yNiQyKIL3MyXQM9Tsl2IHYD_juiuckAjcmJZQgDeI830UQkg7RBDNg_GYia46UJSO9gC0rLSyCZ0DhFy07UhoKFQG3T12Nd7kYF1c9iGecn7dE1FNT8jII3Ji55wVEqO8gYA2d0Y0d485hfjYhZq1FMdenAY45jE9bF7VEmR80Ak9VetaphKPStHbWONchkDYaqqU081rRfzUpaNkndWO9htf-AYKKjKbXbVUwI_wsZ1hvtZKtvk-5Fr1xOXeAPeSfBh5fj8PfE2MJVyWFPiO8MdsZNcQU8zY-ZL4fACXBZKR4PvOttdsYwZ37hGEipJ0TjFB5uaQ_y7abSBMTdwEkClM4RjZPn0CAZtUDk4DkZKwMEDYSPuOWQ2ow0LrjDw-o11OojL5NVTRGPYGio3A6N2UGlU2N27iGfUULpTOGZthYjWrXXrRTS01pMACgpTq4150-WJi4TlANnAjp8QOyPJAueR4Ij57-J-zfhfpftrxTv8F5nQRvLcij8tdjKtWG-mk4iDh6OAC9MGBSMt-Hau5A_mlTy7QUtxb9K8mtMfTAAl9MRu2noL1Dlt1C9NXA4M_W6QzL06g2D8_vfKoCiCJPqX45N04kDuOdUzpgs9OE7ACVeBY5G4AzlA3nY48yOWDMYTy0yjPQzgTS_UTGtjK7Wkk6M3YPwlkbgxODVTEwZNujr0Tx4TTwyDfj3T0ao2SLeTtf72CeuLbHV6TmuOLP2q-U_I03FnM5D10mzE_uEu2FvdMl_obM_CAcztgxrOy434SvTqzTPZjObJ1dd-Gf9rGfrgajBFLAORuSM59OMDO46EimzxgwRSODcAP738znYLLjv1tYFGGYpg_GjODVzg9YP_1xAzg3Wz7-D05JDfBSTMOJKSQXVp9qc5bXJDZ8ZRC5DYkTXW51Po0k5-xcjSiNg4Fs1ByYzaUFTmYpkM77MYzBbWQg8QqVfXNczms_rjxR8UWbP1j6o00OIognjWMlDgDXcO9Teo2i2xzA8_TPrTWCtuPMDu47XPKIVo1jjpz4ilemYpcLQp18djHGx22NKLX_W3UOEbaoFteQ1428j_jTg2VeNCWUNbJvg1ADbOOU_7WA49DYwmFN5IBbjFNJDWQ2-KM0eHp5tmM-fHvTyMy7LmJf02DyMz5mPlnrqK6H523j0Rd0CGUg6VoJyCctExAvA1lAAPBAJyX9BADdgAbN6ILee6BaQ1Sj_FHA_1FFTtSqEHz2ILZlKfgD9mtIL2Om9KbzROUf-WL2rNdQ0X00TcI6mIITgC-HpSYSM1v1bidCFFRYAiQAJBFgaJSL05AL06AMcdRoMpMsgd4wAtITG08ZM5VAtWYbNpl8TC1voXoku2ueK7Z9q7t54LVh2NrswAJKR3k9FQOCS2hVNH4Vk7M3A4gU_YufW2PYt4P6XRFPheSaUIONdjzmB4uuLwxOFFp0w-E9wXQgS5NNT4qU5LMiBdo6knB50GiIGeLUslWjl1AlBIqqTMisktBLCBVWhLATOVPMQzsAAgTs9zpfFAwL-XV0AUgisLjkILhIOgwsg0gqgs3AeYLNnLUPRhFTBUV09ILit__Z7BELxcFFRPiZC7JjZdlC9RPq9HXS9MxdE8Bfa5AXAO8bcYNS26aKT8i6KjVLzZkAsiOhg4sujWXms03cdbbSJ14dulmJ3TW4WjMtzWD7VMCmomM7jmYGjTaTWSdm86h3KdmFs4DXLbEPxgkMFwJlKADPUrPlaCXYHmBPikmHJhHdp3ZNAQD-uFK5P6woG0icZDTeegmTjVWZOXxWGKn2809tguyn4gi2-PWLFi6-HFZAU7tqepqi9iBKZS-lktKzaKaI4UrPzPVqJ63RtpApLCvpxnLDRs5hSxh_ZVUNdd3uULYNT5s4NW7puBiaor6LbacsQdlqjvodW-8xYDNOECLVgS0vhK1IhANwHbYd5Ngu1Kh9fpEj1M9TKSZRxLWUnsF1ddlC3iZYUsxXMUiF3YNUhdMAP716zNqB924DzOHysirm2HA1yRXte06iZ-BWL66FOeiSRwr-2slWIromTK3IazKwtZ9Ldi1EsATj3LhHFQmi2MYSJa862or6_7bB0UWj6fxHLmJSp0aVLs_XcvekLq61NC97Swl1HAU_TN1ZQ1KVYpT5mBG9jMQMyATmrpoEwW1899yROxSw3S9l1Vr3jTXULYRyfiA6rOmkdPZCnIwW2KDagjlmwTpXZ-NlrPeFV1wOTWJiGyM0_WhN_DZEyBNyYJJIehawdoeZmz9aOVYJTdG3TAxANe8gF0ndLbKqPn9i2m0g-kg_Ld1crn3XVUaLpk7tbmTW1uNnFZ3EUFNuTpK5Qb4AuS8FO3Rbcw45dgt0ymolOH0H4vdjQU4DjNJ0WS94HNCvL5NPuYG7Ssw55zWrODVWG_Gv12Qq77NNTBwDlD2r0s23OEbos5zZWrxs9z14bfENqqUb1qzpy2rkffauOrOQ0ust4zOKRuerZG_qtQcSUCCvBug_YAtOrFgCxsiBVGybNW4V6Lc6ybbG7qG0lqqG3OibIIukuw55YV2C8NXI6JPZwcmGwuz5zQDM5xAcArrSQbkrtBv4z4jnVNpQhm3ACabx6_li6LNZBvPTt2a5RHwdoKkR1IdlgKR1Kd6HZh2fLP9XvP2N9A443YFGm2Js4N1CaS2i5UDPONiQJq9RsatWFYVPec_szZvibCG85hObUG-gAwbj4YRUvecANlvWbmm9pubYEilbhZLX45VsazRW8qpVZoGyBtErmioVu5bJW86QVN0C7z35d4oOjK7DESmiRPifONwb8BzMp7D0LsAF7GMgCgu-PcLkw9YZC97UuZtfwpdlkDLbSfd-ELbGQMkDm02XRDwsestCZu_wUvSaV0TOsLYDnggoGeWVUwuDYqiStgKhiKwz27lE1yOPOG1hIgkcoMDB2knIuiotsAbOJAni494tcyOQdsKCJg5hSDeF8RM2hDLWf5NjILi0Rv1w4Zp6qDefpXmQI7XYVj0TGPGDjv498O8zCvOhPZdYH8v23lNDY-W5xkHOK2UitJr75aWoK-B_Dhum5r3D04uVu0nXp3gHkEUt0-AAjDuJAUM2kvmJ300VDSRQtlcmPToC8tXgL8GkzNnj1i7IOX0QEg8u2C9uNWpwC_O4kCC7gCyEtOrKc_c2C9INWfiQzr1YZP8Z2NB7nlpfdmQLUVQtr7bgbglOrvyDeuyW03kMtlsI-m_Cw85yDvUgw77a3qDLtNIv20TMcx17v3zM4k2y-J2so7lKC_bgmEmb-7Vu-lX7bi2y8W81cKSX7E7CfsvbmilBCzFlLmNmbkR793P2jigDIKdA6c1O1Xtks5otMmcZv2ydIQIke_Hu0mljuTkBZZYTWEjdstNYq5RlUtbaB0Z25iD4TW2-YCDdjeQ8xGUmAGD5PbY2xVIvAa6cPsVUVtmEDj7RwABJRcb8z9CN7fmURhKaS-29uDAwhSvvlZUg_dt7wutcu4d7jezXu08S-xZAmYv2wNkYb_gL-xUAaGO5whyU-L9vP7de8but7Ve-3u_w4bSr6pZk4aLXckSbWbKptlFoDg-RO9OpWBZDO0AfwAtPFSX4go40_h3bD28kDjVlecrB0VmmA3tTbB9bXt55Pe9b5fYBmOo4_7d7GQJP4pkS5TsYMyLmPET8-3vsxAB-wfyVtaNN3BCjQ-2NvpQjUicANhrHmkKIGJoE0zZCl8kcBSHcDBFrKUveOGTRSnECL1ORryFVVvYXexcRJ7VVcIsfD01IXF_7r2wXmB9-IHSOBUUwN_0XEksBDi9EAwP0AO-0ZHACfbqdhlWf2ALfxRaEb2LFJO252xODfG5gBYeeodgLHujpNYaCMDgbh276UppmUtSbdgB0_vYHde3RhtAE1KYdSYCOW156uL-9aj98WBzQdPu3-wlCWHbu6Z41BZRzgePTpR-AcOZkB1XvQHnEXAejQCBym04cyB5liiRK-PUd17Ye1smeUrw9NSsOfBxAAH73ByOtGUviERmN5gzpUFj1btSLKJU1hyoKrAIHMluxSEk7S0zsjKaeskR5AGRzjQFxIYfsAYO3AYyDWii9vcRhh_XuP7VB8Ackwjx5wRMkjxyOOjQY44yRwAt-wb6-HJlYHQf5_GFPDIKVLYwuoAbYDADPUq0kSCu1cAO7VBZY28RNUM2XcXLz7X1PdJCbG-38s07EkF8e-2SKKwBhscHKsdInIssTZQ2am3icDwkez7vXujouIckHqSf7SwVTJT9tH7EmR-Z3gMio3tLAMimSe8S8IMEO7ucAO9uX7L21o5cnVB3QeJb04eETI7Kak0cvHmR6-Q27oY_NBxs1nqqcJ7rxyr5DYJpZVQAnOe8ycvbRA5KfeH_OFjbv7Ap45HlL81tKCKLWDBSACASlOyK3Oje-nTnjEatensANnde3ed3HWFvWoHTX8emnMXJuM3u_zEBLWno6Bq75rydNGvOn0KyyAkU4bWHSeLKc6Ltw7n3fjsfrsVSmvpYi0QmGs756pZP_r1i7nNKrJp0QdED8Z5acX7jZ7acYANO-o2g72e9mfQ0F8sDQi72e-JF475O27uJLqat5mE5OQG7mVagU0xTZADJ4r1LYEa8hWxo7m3osr6gZwFo3td7czjhnkbv3zyr0qfkMZZqDftpACR57uJXJZ53ikdHK-qJk3n0ZzdQNTAx8RvTT8W7sH_H9Z866xncAvGdOoXhyydze6JOfs228Z_Euy4JFHGdjbf56BdyusXARRv7bZwKeFupe8CcBHtW57pJ17p7OdenVB6_rC58dCmcTGJFBJJznVez16In7tf1UNNAimNbrnbnde12dXnWZ2iF7TRFvSEFJ5RcAHBQ71Ze1EnZhcenjeNkAkXOF6EWPLNFwctXAzndZ30Xm54xdbn3HV8sSdFBrRso7joXMTX2-MrxsaE9XKKtZQZRf9jnS1xTtV9EN-Juhniji99zAbwyO1sqXTkhVJLNImCs2hRNYNqqRZxU7s1_Qjcs1XKn9qpENgOKvdj15E4U0SOmXsQFhR1TBxEFf02gs1LV5pVM-0DaQBQFBHRqmJBIqsruS2pe1nvNM-tXkTcuTPBN6UFFdC2f-eC2mBxV3EtfYrl3RtxLUldC2e6wawkDwriLr_DM7_zWpv3kJl9Ve2LFJJ5ddX6AShQwUnV4KvMMpV2A5MCA1yFec2e_j1dlX9dtNcTXRV_Xau7M12A7LXC10NfepK0nQorXjmVtd84bBe_iUzk8sXRPgLSEldUXr3jNBZSl3ud46Ts19N4iB-DemvaenmzB1SrcHW1bhbcq5FvotvVy9F4pi3nLNgOi3nil8C0gWNdwXgDXv5A3U19n54pruzDcu7xe3imkK7kojebXtCnzhvnc7oaWKnFPk76UtyCNS06NNQesD07i1_XBmXveNFMU31F3I3stVV00lE-jBf7k-pgrawB5D9KKK2e6sa2ystXtNxAuytorPK1oQcyBsifIvrgWL7iRYvuagSxyJXBnIaJDpJbsERdAjMqHyL8hEYxktRJloDbZsh1wTEsM2K38lg4XZELyJrdUIy8J4vG32tztqUGdt9Zf63GQExKeLdejbcDIgyLtoO3teiW1O3ltyBIOgu1O7ePszWqHCnUft0xI5YwdxxKh3ot89IR3y8DQqyScgtHcegovIzCo3cCgnfOSr3D8hbIRyJEAnIGt3ciY4fSlcDq3it9ErHwVwEbcS3SolkKUGVwNbd131rJQZ16Td3G3Ygld3qiVQPmt_jd30IulRXAQdy3cGiyd1NCjltCtQAD3vF-UpI5ed3XAZi65uuJEIkvNiCbmyiGJYdaMtyADno_AElE60SAOwDZcmaPwDKs_AFcD8AhALcD3AjwA_WngbINNjFyIyiTCfAkgHfZl88QDhhjUBQCpw7oj5hLzKsIcLlGSAtsPsCWRkgMADBQeeZLA7A8gJA-o0aQPIA6YHgGACzQD9dwAbSXkOsD8AfkO4dMgR91fc3AdwA8AbIMdQ_evAT95Non8v9O_dTwPsNK62ANgLOB_36WAA-p-eDy8AHwUQCA_7AasAkehI2DzWD8AKThfcyUIj7MCCy7tdjJH3AlPwBW8ceUTIYAYj9iggATw2I_yPIvhaCKPOPPwDEt7ALg-bMKj_wDqPhD3TBGP34Jlj8AKZMY9qPo9Bo8gANj5Y-bY1j9kS2Ppj5feOPbj849_omj-BkzAFoGxiwnSj-VKyPJj_Y9mPVvEE_x5oTxh4BNZ92LZW8oPkfegwmWJRD8AGyWY8VAtAAkBcPXkAY8gA2gQ49uAOT-N4EP-ULVjpPKgKE-ePeZi4RSw-T_wBFPZj_QSemh9Ndz8AFT2k8FPmT54-xRjTyoBwAevlNBiPkGZU89PNTwU_CyvrEwgyPSwBk9DPe8IfdRnXT5thVPvTwU8-wEwD_5jgS2yADzPgz8M_LPvh9OHL1U6Ak-oOWMsY8uPdMHx7XPWOPwAp-9z9dSPPFfoe5iPqT4A3j0N5q4CRgLnm55jtnnm4LeeN4IsY4A2MNyD7Pgnt88-wkYGVzwvigDScgAQXshdW4_AM8HPPDzzoDjBxhOiGTBBxh8-CeUMHikQw2MEF6y46Lzi8AhxIe8G_uhL18-CAPz3C-IvLL0i94pML788Iv8L5C_kvBFJS__BGwecEyPYMIJ6RQ0QoJ7qVN1Kzn4X1BLVhX32F5i-xo_LxMGKvvj9i8CveL8CGNTKT9C8gA4ITVRgAQj3dT8AkIXlz8AKL7YEaVRQXJG4P_WWE_WouD1kC5PtAKq8FPb4zq8gA19yQ-PA6-PtpWgIgJiGImgT0w8FAFoNlxQwAAOwqIcwH5AiAtD6wCRQc8KecEAasNabfhs0FgDVQWAPIAdQiQNVCJAObwJDVQAkHFAgAJKdY8QOZj-ZFGvSr448ACoUOFBiP_4bDBWPIAPdje4Iz2Y8EIzMgACVUMApCRQ2XAVLCAbXksB9vA70O8G6zgElBLASEueCEcDQEsBsI0TPqC7PsQHYAAA7XWDnbF9twDkOxD7feSAIwMe-ngI78ohv3tlFACiDFoMp62wt2jtpQAaEHZREAcALbB-w-AMQBQA7QGIDLvL7zYLw5MAFICuAEgKP7xgyL_3jnPaj3Wb1P2rwefWPMEx69evh776_Yg_r5aDTROUMG8_3s4GG-Rv0b3cBCgr95ECSACb0m_YgY4N8CgI6b5m_AA2b7m_5vhb8W-lv5b44-Vvnj9W9QvNz9-ENvBD1cDNvXmJB_9P9r2q_uvIr568HvpDyh_wAaH4G9QmdhJADYfKQLh9RvxKLG9EfXwKR-XnKb8YixRZHzAAZvWbzm95vwAAW8dQRb8AAlv_ACx9cRVbw-E1vH0PB-wAPH028ARAn6uBn3mQFfizPrryI9gB148J_5YFzyflNxZ-VAAOPxh7P2ew0z15-pbWh-VDimqNNsDcAekOa8J0cr6x_zADj-cPCgqX7K_ufIAFs94AOz2iDrUAXw58gAoj2V-1vTuaflwACccU9HLNHLP2oSBoE-nbPPMgoKlU3cN2uYAe8HgC5fpKel82fnj9l_avbnw68VfRC6IBVfFgL59W5aNTN-1gQX7V_1fWT3xLNfaEoaAjA6AFpC2wPwLbDOHMAG-9aQcz2i8gATuTWLCvbdTdTrPkz-E_ylIAKs83fEzw4_bfcLqE8HPzT548qc0FklApSej0HMvfZj1sHkAqALbBTaAz198FPDQAEj2AtBA4BhCEQp0_6PH0Ld8OP5QIIi2wd-JD9mBYX2Y_n089bsbUAyP4D8ZPd36_QzAtsAFQLfT39dRo_Zj_t-HfJPwRT0_nj82h5AzP5G6s_BT-z-vviQNq-0_WONz9n3vwAd-Vvgv_ljC_FX8dhU_4QP1-PfKP81BA_I36piGvCv6T_VPDj7YCUAyYMj9W4rOfo8VvmX2Y-jfA33BiQfgoFLChAPnxV9-fC3weezf532LYrfeP549nt54E1-BdLX1t87frgLbBcik2BiLoAtsDbbHf_gPZ_VfYtpd_0vz32T8OPpjxL9_oUv298UIH3wU9Q__AD98sW_3z490_yvz0-1wYPxD_7P6f7j8OPMP3D8I_tAOEJ7Pif7GhS_GPykBY_9lSX9NPZf_j_wANatPuc_sf5r9VvryFT9mgPf3n9x_DP5QAHfwoeU-K_JXfn-GPbDcP9C_s_-Y9sNtsPz8L_kv0v_hCrAGL_G_df6j9L_UQLOCy_EwOv9J_S_w8xBYp__X9L_2v7r8K_-v3YFDfbHwU-m_4H3l8TfQQAJA2_lXw79TPzvyF91fV34FPd35NfVpJVAW2AqFJqi2wNvgZoFyjQAmSy2wLygeAP4xTaB9Bt8J4bb9J4YBiT_6IAGaAgEIgAyQCHho5fCasQCAGvedAEPDYgGvIDUAFAPb6j0bAEwAASC4A9EgEA54CgiOwAOeGgFH_CHje_GECMAiP7lfC74O4K76fPXv4bPe75T_B_5pfVt7DfF_7JFAQEFPdt6lsY578Ac8DngcxB2saSCUIWE5qIdXAyQM34S_eV5CIRWDh_Rb5zfJBz2_KwLLfAAGrfN36NfP5RGAFxReUNOgkA6gDhLKgHPAagBkA7DCbfNQ4mA077v4IL7R_HV5c_Jf6uA4uChPPf5K_Uf6ePbZSFUQjhK6FcKsWJKB6_d_AG_J_7G_FX6Z1AwHxPEAC5wWgBB_N5Augab5wfW37zfV16O_Gr42AoAEOQewGRfQhZjwMdxFAscAKAyoFR_YQEx_Ef59_Wp4RPKIEz_GIEFPFP6ZPT77t_b76_fHP7T_HWADAjJ6F_cH40VVv6FPUYHQ_WH7w_bdDV_JH7q_Fn5L_Rv7N_QoALAjP4gAAn5d_Tt59AqYHdAgp4OeQf4SgK_77_aYFQfCf4Q4G4HRA84Fz_IRpPA_oEvA5f5CNVf4C_SYFS_Lf47_Kf4a_cQHS_I_5hAE_6bA0IF3Ai_5q_U4FS_W_6pArHDpAmQHP_fe7yAzj5qvJQFssAMBdvFix2sY94jAVXAFA6yjNAkmDFAnIGQfAQBgAZiDf_O34VAv_4W8F34NfG2BNfKAEwA-YhHfGAGIAmADIAybTRAB9BgAjwBkAgMRUg5iDMAkAhUg28xUAvCC0AlQqdAakEQYPAFwESUHb9cIHCgycBgAKUEcA6gEDOI_5YAjUG3mXgGiglfIYgwL5O_C3jBAkV5Qgz4GSg94FnAkEFxAgqgJA5CRJAqjiIg_LDIgrj6ogkACv_cb7lfQCJmAsoEWA-kHWAq2KhfcL7rfQLqewbYDbASn7hAgIFYvIQFfMEQFbAu4GJcGn5_Apf6Og50HyJN0H3_NIGP_FEGZAuQHZAt_5ZoSD59obYDgIe9jg_RKAZAJwSdvUoE__KwHmg4L5hgwAHMgj34OAnwGtfSsHVgqtC1g4xD1g7v6mgtV5Jg4mSdAxf53A845QAOgEPfOEFL_DGAugO0FS_an62wOr7bAIgDugv9CegkT7eg30EQffL7xEP0i2wBT7MPPYGlA2QFog0sFDfBD5ifJD6kPY8H71GT4YfeT4hvHD7hvFT4xvQj60PI3hvGAdj1ofICuAL0BlBPPKSAM8EFAPT6gICz5KAWj6wQgt5WfP0FLfEABPgvPLN_X_aeoG35Xgn0Hog28GUrRD4SfR4CoQuAAvgoN4QQj8F4fVT4_gt-5_glQYAQl0BAQkCF-kUQYYQuyhQQyB4lvRQBwQriEIQst7pfZsHXuIIEdAkIFiA8n6oQsgHbg2NAG_JCGO_YiHQA2YBYQ_cG4QmQF3gvDzifG-6Pg0CEkQk4DofMiHvgpT6fg_D5qfX8EA8f8GqAQCF-EJiH71J4ChwK5IcQ2CHZvHiHMffiF0gxb5tAi0HCQq0GiQhx7iQzJ6nPKSEKnXIFyQvCCKQ4sHXgtZAKAxz57yAiEaQoiFaQ0iFyfLD7ng5T5GQ6iHEfWiFgQ8yEMQyyHEQjBAagdiEwQriGOQkz7OQ1t4CQs77jgu4CTgjf53A3yGRApJrSQw8Ef_LSHoQlg4ZAW2CGHUKG8fKZ5mlSKE6AFfZH3DaTpfOk7QQLADvyMR4Q2dL4HhNyFuvb0EyuVdyviQ-7M4R57uKD56NQ9_7lfOSHPUSn6dQwMHYQlxo4g4aEDQqM5HQl7ajQ8aFH3SaGtvaaG__I37dQ_gDzQq9CLQ4n6jg2t50eNaGBQyD7BQjUAdQqvZdQhx4HQvqF0nUZ7BEU6G5Rc6GYwCaHlGG543QlsHYQx6EJAfEwvQ5aHgAVaEpPdaGGhG16LAlogiQ5qCtvEEE6PEzB9Q8qGBA6X4zAKR4iyBx4KPNeAxPAwHm_IsH3Qgr40wkJ59Q1QIlAlsEaBUr4jfEQJ0wuv78ANNwhgpmE7AGJ5avBx6mvaKCqVXmFxPKdByPT4HZPBcBlPYmGuQ26FkwimGEJKmFaPQmHKPMsEbQ2t7YQjj7pfPXJZPJ16Kw16GO_NmGCwzmFZfHmE6ww0L0w61CywkEF1PWVRKw8oEzQiR7kw7wBCySmGRPTWHMw3R62w-2F7gsKGCAOz5mwnn5ByeP7QfF2G2wgJqOw8n6FfYr57PFyFuwlWECyL2Hu1DWH-PbR7-womGBwvmEZfRmFPPcOG2vKsIaw9r67PUr6Gw-mL98cuFFfDr5Vw1t4CwmaGO_FPyiw3GHGvcx6vIVoH5YUQFv9M-4tA8OGdw3r4QgqzwkpLF7ghSKAwAZMB6QIyDkAHuF_oCGz5cKzwmvSKCuAKGBgAIyB3_Lxr9vZeFO9Ap6TwvSAwwbGBkvIeH5YZMCQ2Lxqrwgd5gAPSALfLxpcNaGFK9E14KQdACRQDwB6QbeFWeEKp7w5-F6vBSCuASKBbwjwALw2NBqVX-ErdF-HIwSKDJgKGCgIj6ARvS-Erw_-EXw9ABQwe-FWeXLgQIzuGQhCGzZcKeG8wj6Djw5CFtw_YAP-Ol5mPKLDgIZl7k5AACkcMDy49CPJykLwpe4AAr8e_mqhN1AyenqG5SO2zPhf6D7hq_SaelcAae-cKRBXjUERqfX4AItDERHoK8ayYC8aT8JW6MUCs8WBWuoGMKDheMJueIIMt-9VBLhQYNhhgkNVhGcJ9hbPwsehYK9BIcOLh1cLLhZj10R03xsREEQZiYIDsRU3wpBq4HjhDj3sR1vDcirsODB7sNbBUASWBQ0LO-6cKwA3sPVhWT3MR0gMsRjMO_8v_jx-jiMRAXiLcR-iKpiziNg-BT3sRrMPy8gsLSCwb0MEDj2AATw1LeKMPyR0D04Rtb1FAZfBEAI4AYQRrnNgjeEIR7AGIR1jwrQGLkbel0MlepKRkhMtjuBlv3RAfiMMRoSMkeJiMiRZiN9YUsIyBRcPMofUKNhnjwGR1vzSRNcIgQKSKt-7iIdh-MPJ-iyJ8RtJiGRBDgCRTuSCROohBhkNyxeYSIiRyCHC-0SJC80yPC-P_i8AiSNbe8yKyRLASWRSSMmCtcNcR6yP0RFsICR5SL0QOUCKRJSJ7hbSLMIFSI7hZoOqRqxjqR5GHYAjSOTwzSNaRjj3aR-QE6RVwAhsn0I8RWyJ8h_AP0RJMPORoyPCRmcKiRkyPzhhv0LhDj2sRzyMjhZj0_-cyJWRl2zpReKN6RniOZRAkF2RjnHxRysJbBRyLzkwSNBhIyM9hxKNMRPPxuRg3wZh9yISRDKNsRnj3pRyyKrCGSNxRX_1-RuSP-R7SP5EwKNHopSLO-5SJAglSPK-0KNqR3wjhRCKMIASKLKRqKO7QUMKxRmyO0R5Pw7w_gP2R_nzThRKMuRMwGuRZKIsRwcJmRCQBlREEQcejqObM_qMRASqMoRoiCdRscJlhOKPDRxgObMnKITBtbwJRZoL5RfAVORD5yTRbqJJREyKvwUyMlRWTweRV6BDRjMKDRpgI-RYaM8epaMTR5Xz-RKsIBRhSLMewAHCBXAB1RpML1ReiK8hLzxAARqLkw9SJHAZqOm--v0tRZhDRR3UMxRVr11hJXRjR7HwVBzqMsBRiIuR2aLFRXqJiRPqKpRsyIVRAaKres6M3RoaK-RM6JpBUaOxR9qIcexoITRc6MFhqaIFRZyLNBi6NFRrwNiAeaNiRUqMeRxaNPRO6PLR-6IuBH6NbetaLhhGqMBR5PybROoMioTfxBRZ8LBRloAhRnaKxePaNhRDSKaRsiORR-SNHRNqInR5YOPRarxBBAYJTh_iNdRwqPdRnqNzR5KLuRZj2pRNzxeR_ABwxNKMVRX6KoxGyNR-06IKeRkHPR3KNThvKLFsxyIXA6aJRhd6PGRy6OIx3qL1h3oPiRr6N3RjMOoxFGMZRLiM8ekmLVef6KMR9aKBRjaPTBraKxe7aPZhkiLVecGJNRCGMRRSGOHRloFQxXSNtRjGJPRZj3yBTQOrBg8NwxwyNJhfGKuRpKMExq6OExViI3RHyIcelmMKB1mIcRNGKcRdGLyBjQO8x7gEHhrKKYx_MKCxJIJ8xrGNsxByJVhV6JORg0MFR9mKzR96K-Bj6JIx-aLZ-haKeRUmNlRBTy8xUWJCxvmLyx_mNWRFmMix2QFJBOSNaA4QDyRAGIbRnj2KR2qNBRKKPBR-qMhR2mJqRvaNNRiGKHRuqKtR6KKig3SKnGmiKnR5mM8efYMqAr714gw4M7esWJdRLYIcxHqKcxGWKEx5X2wh5GLVelGPAA8QCrB02MHBmJxHBn6PKxk2L2x_YJmxdYKbyI4LCxE2IKeU2JrBs2OuxU0BixZUJ5RRiISx3GKSxN6LVey2KIxa2JcxG2JExOWLfRZGPOxB2KexDYKWhfmL3Rp2Pux4OMexV2KhxyMN_RaqLrRDWOUxTWJnBc4JgAamLNBGmINRyEJ0xfaPhRfWLSBhmI6RY6JGxdsIl-bKLlRLUPIhewIWx86IqhYticeJ0KFRasMcxnjyce62OQh2EIxe4mJ8hDOP0hxaIrRBTz8cfUObhKsMJCZwS2CV3wURZ325CFCM8e4IUsg54HwR-HFaxhIU1eBLyPupLxRhOuMBCGIXeeZj1NekNmsc5KNuxWGLEhLUMiOdlAvRhyLZxReB4xnOLGR3OLdeLuMyxz6LMeguI8xdKLtxVR0wh4mPFx_AElx-iOlxLYNlxmwQ5-R90VxpMOVx1fDFh54AAiekAje2oG1xVLyJCQIT1x7xXBehuKzxmr1NxquItxZrytxTULMxNuOFxJ4O2hfUIFxVL1Bx9OJrxCkJDxAWPDxzOMvRzuNRQruJSxBGKXRbSO7x3uLVekeKMR0eKFeYj3jxWL0TxOXzNxlkHVxEbySgluILxGr2Nx-Ly4AEILzx4rwTxheNXx7cJLxpeKlh1uNreIIO-hIoDrx3oL9xMOMZhp-JKx22OkxmSLDxxoVvxSaPexrOIt47ON8OvGNSx_GIHx0SCfRw-MWcgsLHx8uInxy-PWCxeIPhekD0gSUEigN4AAAnJniV8TS911skZ5fpviwCbi9d8RASX4Qfjy8ZOi-kZ8C5Ifbj2obtD_cU3j96q1DLDr9CptufiQ4aJii0Wxi8MUtjv8R7jf8VChWsU7lhLPSDHfhQ5uCchDsXLi4ogGkBCcWq9iCQIBbYCRR4EchCxCc0iiETjMscPYEKUQpizvgIS8XMIS6UUHiHcRBiVALoALQI5RRgGn4HmOAgVsVGdTMVoiq8QHiTwWITqCS-I9vgqIsBI3iCnkQTNCSQS_ofojsIfQTcsb9jX8b3iucSYTPcYPi-ca3DzRIS9PXmWiCsZn0CALWC0MFZ90vsoS20RjigMbmNoiTQAqfh4U-iPUk8cSJ8NUR1iYMVCjusXUjsgFsEtwQZiBsSOjrUZdDiXmUTLQCMxhgA_iCvjqZzCNMZWsfkj-oN2VNMRDAT7r5EIYB3YgiQVjACeqizCH4Ap4HviCnlQiaEQpAmEUvDaESwjqiRaBhiTYRc8ewA4EehixsQQST8S1DtoTYSvsWQSnCZsTZgNsSvCa5i4kSDjGCXZjCUX3i0sU48UYZwSrni3CxiQq97iY79VCUITuoVpiu0VsTJCfwjqvi3jBPNK8acaNiMMTc94iVi8Xifi4AYS3iUYQIT9CSMBDCRkBjCemizCeNiLCeQS0IVsTDDnYTFRI4T-AFtCDiaQSssTz9TiR3iAkX9izHrzjAcSQiQiYh9wifzDIiSkTpvix8QSfjjEiUUjkiaxC0ifkE_gOQUsiXrCciR2jrvl2jicUUSFRBai5icZiMUVUSEiWYRaiTPjPHsmYiAE0T7jC0T2kW0SeBCk9OiUsALQD0TdwbW8R8XMSFiaMSr7joQJiVMTGEbMSpSZaADSUsSViVXUK8eYTj8bbiTwXhBDidiSUIS1DnSfiSfcdljpUWcS4scwTLiT_iUUYPibiek47ib_8eCY8TwyfwTdCWoS3icgjnSV8Sr4XkCNQLITawP8SZXj0iKSebC0cS2CwSeoTPHiFDtCdCSFMLCSjWAiTvsWyd_IXHDwsW6SnST9CMSQIJXSTfiXSe4TgcT6TiSfhi_CQ49ySbcjW3r7ZQieo4BnmySWDrETUcbVj2YYpiWSY2jhyWhgOSRkTuScqT2sfyT3iYaiCid8JhSSUT-sRaTKcRNDJSepj2kTKT6ifKTFSc_jsib4EJKoPCwYBqTuiTgBeiVmT-ibZR6sUMT4gDYRsCZ69jSe1FJiQwjJieaT9yc-SRidaSkSesTyftF9YgLM9zCJXBq0chDk0b9iWCf4S_HhPgAntE8WYUPjjiQ48LCK6TQKb0B8ISdimUZ48sKd599Ef2TOsbW8RoKAj-AJI4bPqwjGkS6AAPLzCWPnqTI3MIiXQIaS9XpFAI3k_FsuCl9vicxTJghwinichDx8BNCkyerAqoSRS7qCuTU-kojJRhYAIYBG8rPEQivGh9BJKUr0T7gpT8sHJT1KWc8tKQKSZKewA4CUpSNKbeSdKemSAoUS1WEdX4liaS9SWnJE6cVM9PPmBTUPkJ8Oyf6Suyb7Ds4chSA4X0S7oS-iGCbsSPPjM8cKVfjQ8ed8HKdhTooel9iKXkS1XmRSeKSABKKZW9qKZXA6KfnDGSTmTg5pBiCkZjiCnjVBgnkEA4APIAAAF3kUtrFQY3Im6U26j8AIUnnBOUDNgLtDzw2RHaUpil0wHLEzaPZKvQdCmVwEqmeEpwi4CFv5Rk8r5CUy6EiU5Ewpg_eHKUnSkfQSfF6U9gA_wkymGUiwAqUlbpqU8an5YJeHU4pXqmUuQnmUvl6lUnckCUx35DUjFEjUtpTiU0jyTU2sDTUvSnyU1alNUyUZLUu6gRvBamxoeGAmUseHoeVhH5Io3B2UXqmyifqnk5Yyn3k_mEDEqMmZUt8njEz8mmkn8klU_JFWk9fFoEgGlb4rhF7UrWi2oOMn7wzApeNNRHiI3amw0l8msUqhGcvRYxMIoyDZcJhEQwPSBwE38ldo1onZ-PgmDUykDCU5BGiUsan3Ui6myU56kfQbGmp9YhE3UB6m3UFakzU62S3UlpHPU_mk3UAyns03vYi0ralpk-QmZk_Al2Utv6-I30mLYhdFwUrOGIUwJ4cQWmGoUoHEhwg2FX49Cm4_GR4T-C4yrmQOCriNCCEWL_hS3F-6GAfjDgoFqRVVdlCgY_hwSdIgzs6Ebi0EO2B3afCQSQKGB6QWfpqVYOlKQQLrrUnVzW-HWo3Lb4T6yVCRJQdnQwSUTiEcSwB8IAVRydT2ncdOd668c8D4SLDBR06-AVLfjCPHbjDFFKsrCCd0BCjEqiwAGTiVBQwjs4MQrFFC5LBUZ4K6uBQ6b9FjydEGOnBneDJIcZFRDcPng4Sfum_Kcdp2wJQyp05DjOAPhDyeHmqARb5b5ScfA11IV6JUTYTTUL_JF2c0ywARUZXyXPr5SOXF3xY6CZ1VDTYUuWqz7DKHd05i7QSXKx90jDq3aNKDZcMwAqrEWZcYXrxGOIYCKYdoBGEPGT7-KTC5jGhadSYQCYtAM6iIFU4d9L-mNTdZavcHunQSWDrWwVrAoSajh-YVFQA0sV5NtV7iIMo3STKAqiudI9rXtPhABIKyzKQV6lOnCYzQMrea6WDDr6gfUBISQjh0cc2BuQPhB_fKXLgvNBkK8LYrQSPUCBbUekvadfRnKPhCT06enmwHmorEmOkuwDDjOANyCDcHDjQSeiwISCix_hA_HcQFVZT3JRk7JGPHETZoAl08E7bAIm5xULkzMaCWjeURTBEZNID5SPYY7APMDhA7I4HdH2xPiIlwOoYKjvHSBkK8HulGdJ7TOWPzA2wfvw7tW2BuQNDhpQcdEx02Qy9HNxmKGXhmb6enRHKCSBlRURn6yJQw2wY3SOdMqJYYV3qrAP6hWIIm6CjBpYSLGukLgB-AUZCcBZ5aQ4pAUICtdPQBIgIPaGEVnzarGCbOMviBiMnhnLhc8CJMgJkpfVRnCjR-n8YRpGf4LfrfxKKiMLI0TdeCoKZMkcBV09MIycEYZYYG8BdjagCZZIFbfYcyhv6HoZ5gA7BzHKgBSwQOgzbSulV9UYBEYaunHgsL51MwYo0cTBmC8S8INM-JnNM7joCdElQYdJfLRM9A7z0vyR55AAa0YfY5F2dqR4oHyQtofZm10vdZ7VK5I1yd0AnJdFxfMquhuESnzO6EqiiiQZjYYOxncFREDq2GFkaMxGn_0_tQz6ZSBzHWWiQaeekSLFjxQwILLZGXQhzgfFmVyRGnvgVIgNLAAocTexhniXCAEQWfYCCGwSzHQ1B7Ecfr5SLrgEgO-KDdTpn9gDIBDDNzjarbLrEoEYYe0j5a3Mxpks6TCT9UTtT42FhkkMh5R9JY9KgWWRL9xMZKDxKJnrAfd6xQwEBNxcLCf3KACM49djpYPQEpAX8zFySQCdgBVCWs5qQkfRN6oQWaA207gCSOceJ5UKeKEcVYpHpXuKuWMTpQWcZLYdeUAPgx4CtJfVkMPI1k7oU1nmsjICWs9ADWs2YAQAO1m9sSRxzJXCQfJbUD2QyB7ZvSB4Fva7CsAN8QKs17jsMuDpx0w2TGybCSps45SAEMqwTGX1l5xW2A-0lDg0MujgBIVOm_KJ7SG6PKjHKHSGyfTD6M4riAi3biRUfM27GHF8wqtHe43iHyRZAX6TJFZ8R8SI7QcbT7pHqAS6iUT7rdFXW6uqEdnbIAtmulXGpwAeupMKC6BAKeZrXjI5n4KVSxiWaZqLcXyT-SUJY1gMGTHwGoqjSGohg8M27EnJ6Zg8LKLkBA6HqDd8ASdM8Dns8uy13AYbfSa9l_SW9nuNcHJmlYZqZoeuSMNeWo8SN9lLVVUoo1EGrvgfqxHyeUbLcDuR5aSqAq0D-xQwfZZNoTsJxxT9K4crDL2DIDK3YKGDkc7OByRMOIfpURi3YSKDCpJpyMc7_DUcg_hhSL2qioX2wAc6gB3gOEqIPGwyBlMSxmDXPavFbSRiKdloHQ9EgGYA6GglRRyFQaBJ-oy6x0eFeyWuFMIS1BTmWKc27LISErmiDhyKONxScOH9Z8QekqUlANkfQZkp5ufZyolOeaclGzkUlY8A4lSgqbYazlwgWzlojfXrklQZjYlHvbU4pkjmc5zkF0QRwGc8TaIlGAGVwuzlWDXTkSeK3ByxMLlGjFgaVtD2bMIJHoehBOohTW4pJcys7uc5EqslJEZIDHznclZznM2ZmCmUnhJ-zXvSWlF0DXTY8A5cltAcNCCoiERUgNc7oA09GEDKPHEKaYWwByoOEoWESJq-2IS6FclgbRc9EZR7XdBecspiCeIbnTqVLklcwZjJzbLkjc6blEtAij1eWbltcmo5Akxf5Tc0JBgwcAjYlA7n-Q1XYFXIuqzcsbmjcn3YbcsLkDuVeo8c27kaKfaofQJriUeZnCRckr5Rk17kaKLHgNw5ZIrc_bka2P5aXc-eZzuHc5clL7miMPLmElf7mpc4rkDU7xp2sC7nYlbG4KElmKZYWbkDuCbkJc_wSGcnETs9bKqxVTHmrQkpQFLFeqzlCWrqcrUzSEJrgHQqdB0eXtDuKKnndNX0410A6HM87hKHFSyAToYZowOW8RTsm9mBSBdmurM9lQc7IhBgDkY0aJGyLs-Dlwc6QgwlYRrLWUnarskQj_kVA7S07Hr0lEsrjVAZofVbZrq8gLlIyeko6aRmpa8kpBKcnKqJYe3Z8QW4pCc57m57MrCY9EGxwlZaC1YKcotTHvCg9XCiu8oCLfWbDl_cJ24m7SUD4seDmbTdlpE8diL1eYPkszYcKAxf5JT0YVogpBspQpTpL5qQpLBzKmJ2sYOaLUqmIowBHlNNeSDfsrxrxiXjlmlATkeValL1yXLLKNITlwNNHkfUp2ZhMCqlC_Kzxv8YDxE8FtE0U-ADFALxpUxU-ZeiafxreLxoKRSLYfQQflr41Amz-FWjqU8flavWfxE8Q9xeNSYFrElvn7wtvnSODvkgpPep55HvlWePvlWeLFLPBJep4lc0RgwQjw7oFeRkeSICVw6_gEuApbtAMhzb8hexDQmzx8UXmnyRRZz582sCohU4LqM2fwqI1ak_82l49-IIj4tRflWeZfmnA4hFJNerx_GNIBsSIlCnHZVQjWPokCFJFKKRGoLHcjDybyHKpcE5DTocmsrOaDVjZABsp88ydmzsQXkAyM8DLszSiRkI9R8c3vTi8ydZS89zSI9Z9lSpBXkvkJ9wuaFXndQVgVXkfzkAbWEra82Xln4M24G8g4iMHWEom8uAhSC-EwbNZTmHMu6oV84dZwzYcrK4NQ4HkF8jgUF3l18zrkCifgXI2Cii6C26rWLYSzPVbZqB84fDB8v2T7NTLnh8z6oZDKPmnHGPkZaEcLx8zfnyAGgXWUZPnV1SGIZ84jmRbKHIQRPPmj855bi1MSzH8v9Al880QMC8vl_GSvkR8zPYqCtIB6C3sk7Uvc5N8_mnZ8g6pXAdvmJ8rwXYXLvlKOXvlByfvkr6cflRCj_m2UL_kEeSynw0qfmGU2fmP-eSD6vGqhVC_An18yNzQCuBI5VOAVYcqXiICkPnWFVAVCFLPkbcejlgEfyE4C2Kp4C5OgOaboz3s3JBkCn6SUCmsCAyIOw881iRYyJdnYXUgVYyKXkoyHYWaCwS4JVf2RS8JhzstChz7Ci4VoyCNRHCsmTkMPoWYchAUPC7EDdcPYUJyLGT1aLpSW0npRoQDcyZ3ViDKtO2kuFWW4Ogan5eFHwqWss0BHabMGJAnSJ0cKjjptbgp55I7T8XbC6_bcJQSgLC7ECg3D_MUi5TbTbSKtMlZ9FAO7twdgw0ATgxV7XgyeoAiQkfVrRXaVhnZWRHTbKNyB4SQqxsivCQWdHjoISLkX-0pzq8i3xm6gdkVuQT1kTWXSwkWSixuCQqyMcKUXOANwRQdTeb8izDhw6XXjY6O-mScJYoqi5DhqiwCy3aA4o7smVyrvSWA4YQwQ1pL9IFDawzGc4Rz9lOVL-THaKEKeOxXYTPkhOc9LQRDA5ypGK7lnfNJp5doCOABjBZgZHxCFDBbmAbRnBUR0z8iFFlbdVrZLZFK5AaQShUxT9kceb9kEHZ1Q7hYAIhjffJu5DMV2_HJyXfWALei8caW8mBIpjO4U10JMVH5SqHYQFRyJ0TyiADBvIbdUWoycgJLOZe2zBMWI70pSjwhUDznLHD3bB7T-z1eenbQ8_ZwoHW8qjjVcDzQK3nWoK4DDin7kElUcVhJPiYGaKHhXADQQMiQaJ8QM8CpFCUAQSIgAEslVBYgGVz9lan6bgg8XDYwvqBdC0BGQE9ZmgUlwyuX7mVw8HqK1e7BamU8X7imHgdIcUwAeJ8B0AC0AGisTmFcAUAKiJ6BvsTdC9iO1gfFEMo5VAVmtLGNQulLcXZab4jRqMOh32GVwW5Stwmc6XajSI8U_c0TLABC3ZfYXCWcOaA5VizjE2pIpwejArCYS4RztHSOE53BXjI-dCWHimiWWKKTmABViWCuLMW25RmrESxRw1bCLg5VP9QJix0w42ccD42J8rEVTiWDMF8qU2amzlnd6LSStXIDuESrY9aaTHNYKTIS-1SoS6SX3ijRTC1MaRaSzVSocxMaxVJkoaKKhTSS5nDqSxxpxPBMX1eYSU-hCTqGKefYqoAQxNGISppcujzhKF7ZjNdFZI7X9Y2Gaarw0fMJwOJKCDMkSDlyFRn11RegznPEUf7S6w1nbnx1nO_bfbO05UHUHIaXfQDhSmqR4CKKXj3ViBZFIbCfsLaiQKKfQqcqwyoQ_ao8qWAxZVa0YfnO_bxLZXJ6GJ7nOGDAAyuOWLuKOAz50A4jdikyUCUasQO4M0U5QdjZjgY0UX0YaVVoTqUkSmyWxiryU_cqEpqbGsSTSnIhz6KwKTNRzkiOREojiwZzV1KIBoAAViTSyzkskIaWAYpvZupMABhsMAAY-L7DXSrgCfi3ZkCAbdDJRG2iScJ4aJ5Ca4wUU6Xmix6aXSi6B3S0GoAyh6XOA56VKkbkiouShyUSn-rfSkaW8tQTxyxSaT7wgGWEFJXoLiwZygwAGUnZCGq4lO6hoy15yYysWqJYGaA4y26h4yrsIEykGoEUQVK53bcSHSwDHHNfaXXyGGXQ8AK6qzFqWcObUigoNKBky0GCMyumWGCXsJW4VCGfsyThVsoWWgQj4AsnO465RcWUngZKRqCw86M8maWWi6NTh4WWUl4QIo9lSUqUeTmVn2H-pclNWV40BBTBhRPyRE526BQ_MbkHCQ4NSibywXDPTy8xlT_naU6dyWU4J7XmwW-dEgIXES7d7dXnc00qVPiCSDmnEfbUudNBgpGaCMuM2X-3ScoSyqcKScZYR4CbjxA6T4Q6xUHStmHmQWc7ibSCP9QqKCAAQ4JyjTUekDMMLKSdEUGB16S4LCy-WX22aOUngTWV7UASiSDJHmuy2ky1YIOV2UUwXcVbyr-yo9yjQRehAi_4pdyp_Crnb3RTKSUWtYBUWigMxYRbLuVWLDuXtOTrgBqPNgPMRdSPSBeUiSXBJNcVCFn6EfQZov1C91C_ShEKBbMivZAOKaXD8GbeVCGXsQaGbyXSyrxSjGEs7aLAKUVnP9bBSiZa6XSblunbwVCXAkXeyu-bqxROqB2HKVsAPKXeLLa7UAGKVl0OKXqHQkUJ7T_bNTGI6EHVKV39HYCQXC06tnH-UAIMHKAKv4CRSkBXRShZoqmKqUKymqU6sOqVMkBBVm-Vk7NS6UCtS1eToADqXXynAi9Sp7n9SoTaIOFaU7WcaWmis6XTS2iWzS60XGuR2iLSzbC2yM6VCbMmVaOBaXzirkqr1JkhsKs6W6OBaRMleRUSQORU_S8xKqKnKCbTW6LibDRUsyyc5wEXRX6NBwwTuQOWvTdyDyeJ0EIilVnJAlhjbis0B7iqGA8KnETacroArQHsX5cjXK4bG6ihlQBp2oPBS6Komh9SfAETSwDFYtceY0U7YDXIEJWGCDPgRKgG7mCOOY43UvKZYYWWxy-UBiyzbDCyuk5HIK_Z_oCuUkxXWgCiREqzShU5DoGOXRNLWVKK80Xg8zaXRzGnGJ0fw4yUVJVwHeUDxy87zVy0Ujs7VZGiVcxnbAFBUj7Wq4ZLT3SUiiIDhtWkV0ydyVpczyVfzDC4fyzEXenMhqpKipV1y3WhOy3KIc41YlkHBdwCUJZU3cGU7pShPYjHKcaIRWaqPyBeUSSZeVnK6rRUsHYDry0Riby6SKd1M_R7ywQzXzZM5L3RmAbmUhCgi1VqnwBOCHsLUBMSC_hNwK_gVifBCzAXnhicyiTK3C8SoQC0BYgJiTn84VHwqq954oFN5hIlFUfAItBHaWtltYetlqAu5m0MpKAts1tpGydtlEGTtl1tG2lMSLBXAKmAi23NpUAgWlU4Kn4imHeuyaAJiTmC4yRhwLFVFwVhR8QAVgqcTIDMYE2V-1O4D9lGs5PKzQwaGNaDhgcJTfsG8DhACIBE4OXC1sboDqNXTCs88wDTJRgACsR5VUaaqCTK1mIvKzACGqk1W448pJ8sRVVrGVADVQeLTWq5VX2BGrRVQDXo24b9j2BQ8kv0eUm8w1UmsIdODVQTAoKQewL8HHj7VQPSCjTPlgr8CSTVQDVwYeSRgtQbKDrQDDxSAAVhNQToyCq4VVwgVRgTic9CTK6cS7iKxhzCTsRTmTyX5qwcQLCVdCJq8MCNiTADlqrsQIYK1VKq6gCrCOtVTmZ1VcsYcRMyr5hCq4lD12Pxw8Kc9Dtq3JTVsM2KP0b4QwQNLpATGtD70BtAgmdECZ1MVWMlKaTIIKMBsqToRZ0VaICUJTS6gB5gbKwEkhYN95-KchCUIcUDNAMfQJi7BhREXBgsHH07WoXEAYAUYAqILsClBeWQRUdIBp0BUCjoleQHqrkTdoAbA_qzv7hQENQpURWDnHOY6WQM2T2AKszmQwkHsoOEr7AfJrLVbTD-_QDUA4OGA8xSlkXAOWjdDIQBwCOUBZSdqRsqo4AHGCdiASKqoUjVABOULKSPPN5kd0J6FxdTp6j-UYAWs2_o20kvZaERWBMQaI65yy3pbDELH8BLKRKmIQBoaDZmGrKJoG1WygjgYPksHUqjlQIgAn_O9UwavuTwa8ICIa1UrIa39VAajsXrUmk7IaF7h_0GgBqcBIA4mBwhLkJ_D3qk4CEg2NYvq5AJvqncQGcVDXfqjTWoatQooa0dFJaKVKZ0D9CHq8STHqncSnqyHg4EX3aJQX0WFpJ8DboLMCSYUygsgWWhcYc5LqOIMV0ILug2UGgBkFUDEtAcjyV0ReK-8mmW-a1LWUId-wWax9XWJa4zWUHLCkEHzVBxSWAnqvWA2TV7gkamEwbMh1ZLkOuLVancTvWA4wMIurUYbbIzJ4bmVNamhTfII9X5a9rXPSM4yEALrVksmJmiVEjWC0JEinUEjUgEcbVeqVmhC0QmjLasCrPEJ3SN6UmJiMNbXpUZnCdaq3DLalC7WvIbCt6C2KnaFVCu6KVIAEbbUv6URR1S6gBfQJO6wKDGgqoTeVjhJhxHXdkgl0TqowgUCGHoCWV0ebrW3qWzw_qMcLkBe5jO3Fhjn4FyVEYJ3Bq4QOL_MXcgfoLEAEIQiXdQYWV0eCc5z4bHXuKASV61RiU0K_HV8OI5XfZdKA7S1koAXShXrSuLRjbY5pU6okpjbCSG_OS4TbZTuQ_cvXJs6rcVdZdwXz4dHXA4c7BByOCLQ5OOgG5HcLWJMbaH2f_TUAd-TN1F7ZuxbNJ4ckAyZc6iXb5KXUvbcYSyDG7p0nN2JwEgynk5QU7DoYl4LQIaB0ALRWF1YdDW-EAgm6yJqE8yhj-NQTxfqNeB7oCWWKVGTSFmAHVyy2cCe6xMre6kvDXynIVxoX-RWeWVV0APFJBNKRpJK3ArZazZUYeF3W3KiuW-66IBe65PUpAP3XgEUnWKcp7WLylNRu6ulCXxELDPa2YCvat9gF6mgABiaHV5RXPUSSW6SoQphzF61AAva0BXsJQHVchf5jqDWeX4KALUqoC-yXCn7LNAc4ibatHWLyJwyiOeUhfQSRoNKobDWJY2XVWSqjagZ6CyQOcAlzBSU6wLuWZSvfD7ZefVp2RcCmSiNS2AJfVPUFfVCBaZ4eFJK7Lec_XceDDz1eLuV1SrWhDDLPg-mW6TZZdeJVhRhzeXBXgSwVybqNbfWiVQnAKKk9zwAIORAOUaDtAcPTEy7qB58IHCv4XFV88BtmEq5tmtsslXgWClW0ELm7FisyVW4aMTJ9ZnANTLPkCYOX6uuASDT7eSDTMgKhHAGaBWyQA36POyV6aiobFFW9XY9ASiB6TbA_yXDSZYUBSh6zbDVGOJQYAWrBhyWrDOqgVi1YXpWiG3gRGsCQ21JPa7tee1R1Kv_ULEVcD1VTLD10QpUv0ShayIwehFoDcZ8MAOSoQGAV6waqAALS3UHq1rXbiDIC960RyFuJJrPai_ba6vnDGG0w1Z0VMINcbdW7q1_mB0KPVwYWw3N6i_a_sOyhOGtXXz4Twg_oSiDuGjnCQZSrz2BSRiJgL6C88dblGGqejaYM8CnqpJrY4dSRP6otU-maqAhYR_UtlZ_WogdI1y4YghoGViBaSXI2SGco0YAYo2s4I1i5G7TB1Gh5i1Gm5VJfZI0foXljS4Yo1z6-uDCgBo1o6-IrGy4o1hyaqBhyYo0iMURj6UYY0xGd-SjGmY2YwYY3_yTGCjGpY2RAFo0naalL9G2nAMGXdTlsYo1AivnB5DOADVQA41yGryRJNWI21gRgDMquzYwEAmBc_cQ0laQWZz4R41fMIA1fYKTaxoXVUO4HtUiqqzyTKu1X_MAVh4VZmjFGpdzmqwE0WsB3CM0S-WYAME0XoRtU2qqzzOq6qAiGh3Dwmy41J_V43IIJubRweE0pqn42ZquRhUy8Y3UMEHA22HdUKqQC5fYavWUSTHW-AKQ1PGsfRz4T42cMQk29qiBlK9AE3AAWk3Qmo1X_GiE08mxk1fMGE1UaeE0NqhVVNq21VQPB_IYmqzxCmh5jAml-74m6RjsmkVWYmrEhJNKQDxG82CXG-uhaKIei6Gu3q9ycITF0RnzF0SgASMVQ030eRiHysVjA4XeA7CQzSO9GMSHCIe4pieaitq-RQ5YFIQbOQtUvCKczYmwViMsSQYhMYU1AsEM2JiS5BjQzGBlq_03Fqv-RsaWM2UiAQRem-ERSKd02MsclhpmmsDw6mvgUCEVi5mvxSOKSkSFm3NhqqnJRZmvFjRKMo2aSN4qlm6s1OcY2Wumse5vaw43lbecRWiSUT2iTtWkIftVOYLMzysWqXmsHYA5KYc0oCcM2Cscc1iSRRTDquSLI66lhzm9NjZKE1hLmjRhVGus0CiStjZscBS9G0dDTm041HGgNiEXJHJfQD5UKtL27FtF2ROFH5Xjs3dgACKgDz7fJD0QMJF6fGvwPMAdjYAJiSYAOjTOQHVrfmWeA_mu9hGtckU6wK_r1weYDuSVd5IQfkEBCZ3Rjac6gTaGC3TaIMxHaDBlQ6M5krhC5m8MhJnXMtjq3MmhlLvcVndqSVm2waVnrKFEX_aJ1p3suBaZoTZaUgbSZ3MJiiZnWUCeLXPiPrAtqMWjaBFtUkVMi7dksijTqtYIfyWAQqg26eXRu8WTqFWKUXCW0S1Q6cS2q8FTox005TSW35SiWt5aSW4XQqWo2RqWmTqKW09nKWoS2qW7BnOAFTj0cNDr4WgJCLJOTonKRHRaWkS3GW0y1uQeizvLVXiWW7UDidMtL1MuFQeM8VluW8KxBbPDg81doAyJWtlWWjyy3M2Kyns5DjCdO2CBWcy2-Wqy3HKaK3HLWK3eW-K0jJO95WW3zo7JH0z9AM8TfhR82n9KTVGUWcATwX5ncY-em_7SSavDZzLdoWlr99PapETWTUtrNWoX0ABLE5flWEC8PSFW9pACgNfap6dKjvyF-zHWWfTjqg2iIgaADZLQa1WIK2S-ski1KGci2dqV9CXTfbRJQSplzOVk4YHEqjFQdC1YM85lJQDDiXMxJk3M7tQ0Mp_CjW3a2YWxEXYWppnHW_C2nWwXSdCVa3rWgJwaueyVP9MMpoAW2CYaK_SHlb63Jm360WlbEBrWjXZwCcqqHyaUDaKLhSUAcUArLLXbbm3hRorb9ZGXOniVnaaqhS5GgBzUkgACAJCLLIDZo7Tu6slQOxY28PS42qtC4ZELXxXXHLCmZyh9qFeS80Em042vZamxCqS45Ddj0Wkm7r09pb0pCIDmEAFkg5J2wrlZLX9qKspK2IUbSCWSbGIHERyal8D4gGASlMpw4bmj4aBAAgBeUYIDlWxzjeVYgrE2_SZdIJm1pLRk6FjYm37aK8wIiSkBk2nThAKK81E2uBym2uG362t3Y_aoGZGuFq3brBq2BzZZbNmYKj02423YgO21bLC20l5OsY83M221LfbSti220m2mG2h2n_B7LAbBDyr0TJW3jpxWly1YWTK3uWmeUEXI-VKYH-a5tfNorDXTQO2nlbjGXRbSJby2yddO3-WiK2qJWVZ9qb8IW2m_RO2k6712xZZV6nXWryJh55gPpkA6IO2v1ZHhQ2_20MW8O02FTq3SYFnrh6f7C3SNjCIgTXAFAKVyUbEHK9lPih-S5G2Py1G3Py1w3Pik2iybRe2o7ZxaE2okqB2Be2Ura_bE5LG207S6xXJQe2KwC20X2jA7T26to6QFIDz2ne2vhANbmDP22628Tbb22xZ16S2XbKo21wOe5a72q20H2-BRAOzi21MjahH21-1UeJnZSzNRaxZdQqB2YB0uyO5ofsl6aQ8BB3KIKXbcS9_JW4K-1f27HnYOnE7x6nmLZXSB1oOpnax9cPSMJJCIE0X-0ltdB3LVcXaQ8Gh3gLV6XH7CPLXuQh2w2gO2LLbHnsOnB0q7epVqFK7hR2zXC32uFASO_XBhJJDnjAcXavoJu1UDB-0i23SAUeYUAz2_XBz2hIDH24OR6ZV-JAzSgLeIGB2MO4BazAZFAYOyNZK2Qx0nXagaUOe0qf2yR17LCm0p5Y65UDDm10DXh0x2wO2uOigbuOp8AWgIJ0WgdQZwDeABY26KYK7ORqZLOBam7LhKVGbszirA9K2Wwy3aW7BnqW85a128LQ_2vnb7aIdRvy5fTJOwS2igGS0OWsy2p2yu25rPs5OO_XAN26p3hO6O0rLOp12kn1ZLMwggcWlYZ16Ogye6MAAD2xp1bLLp0j26srsAW2BAWvFiYiKG2T2xVTu6Eu09Oge31vI6jqaUVBjOoph0KyZ2rRFZ0SeUZ08g4C0TOlnr_YJYA_whYULWZS4-3agyRAAYyU6zR2P2nR1duWB06caKo6XBJ1mGZ1oGXD8DjGdg7fDJW0fwbYDTHNR1msjm2i2nVzFuCqT1iRGFniHm0g5OKg4spWyModu1NUOUByYP24FROBx6O4KbsHEdKjLXtBQ27MDHgFgBOvXWqYrLggP22e2zgF-22LIiK1M2F21gVhwE5T2A5Or3Yn26l0guvTIfQWl0g5el2mO3J1MunVySaSf66wGWhrMlB2UO69bUuiDl_DT2DS0SWAWyUF21gTx0Su90BSu1wCBRal0VAXyhIuuu4ou5Ghou3yLFQCh2dOql06uSWiYwUoy6wX815gXp0s9ZyiyDBoI5AKKHlQLSCbky6yoQS50vyiDTnUFUygaMSQM0HFkGxEcCHTEsmIMLfqpUGuDr0WGS1mj4YR25GhOUdekgGCqTrsIfKV2bLqw2SvqW9JW202wBnqrBTTkQUwQD9IjytQchaGu2RWzABmgM29N3D6mSjs1bzAqrLQpSYUyiZJS3ojgVhy2oG0zbyd0BCaoIBUMdODphe4wbEHUyqmPrUeGFUweGS53LxJpCQW1aTQW1AFwWxvSPay6yX1CqkjuwmjxmdvjzUD2Sfk3virgJd3s0Fd2JmUGALa-GlkadbW9awgCbumsAqzUVCgwEYAqqjKZpQId2XWK90fwQ9BwGTuygEa92NmbQhp6gnbgEd92owFRykmdHj24HlK-4AHlQ9C91CmPq0vMnGrdWo1jdMtfZTWy2hxu7yoiIT_DclYG0vW7KIauOfAku7R1ku3R33OiwL2y5Q1x67vVMkFUpRQXLjokMYCy5TAq5cNg78YT4wXEAjXCsmgAeVLgAAmIyj2oafa70pqJoLPtaEMX0rcpRIC8pTBiCjS9ZCe3lJu7UVAjAa3wFxMnKDvCnL5gazxjAK2SqVanGioGACyeij1KQQygQwPLh-y-rXni2j3qe17gwAc8XkehT0sMeBbKQEOmAYLd1MaID3CekD3zc7HleGK914c1AAhGTT0vugpbee8qAhGGT0fwAL0ee-Izk8xcwOeq9BOe0PCge5nocxNz0jAU3Wee3z2Jerz2m6uAABetL0Zel93xGMIj5XWjQRe4D3Relz3JzeL0-e0AhpcpL3leoL0FLEYDVet93ZesL3x0ABwyWaqUD8_UC08CACOe3lIj1PbkUiDwxde5z32c5AYMGpWwX9WTAPmo1hHqdgBiLCRZXTY3paCHEAKw7fq2MTsDritnjZwGAyj0GRYQ8eeAYgUdbCsuYDPi8xj7aSwY6cAq1GseaaBlWAEoetfZHe86h16fHbXTdEQXe9b3OYdkG7ESD1inCYwkOkZoqzY73YgU73RTeb1ZyL_V8QTB2Ene737afHaqSkKajW-b0D2A4jbWgOlFEH73Y8nh2zzKwZRk8JGSLdkrfu2XD4CeH2VmSNyYaeH05lVF7v4VGalDa15KxZ65rnIp0PaVJ32WsS0NACS2ZOsM4RbH735OmXwSnC_YqcTYALgd-TBUFRUluwmh5Ed-Q9EHDRbglDRkKnn022Pn1BAKACC-rdxRVPsqBrJfSWusagT2rwg4ezYJ4eu51mOxlb_2kE76KHZ3jOtZ37OrwgcqO00x0sHaeLAk5BZJEZtTK8gFnO-V6XB-UbZFJnQTZ73z7OTCsOH6i0YK6Yre9AAaCX8wQ8eR4LgHsQyPZyjtSXMbNek0BEKgflP8uoQxesGDze0U2n6HH0G27eVOlFUyjWt11fydmiS-ybKsOIP3ri8CaC9WjDYrDW35Mh4z9of10nu2DRhujW3WDJ-l2HLKVZgDW1_DAAojpIhhhi6dZgFS6wzLbYxX6OQ5ygUqKq0E0BWySnYvc8xICQDCJwLHq1wevPKRgOf0ZpcxI3evPJm7b32bXNQA3dd70b-nTKrgMJKvesNive71Dl7V7hg7fapNcYH0moVu11S5R2RgMHa92tp2v4DM5V7LM67aJ_0DnD3kt4As5ytP4VNaeoqPmQ9w7mQsSjsfcR8QJTw3gHSz-MgOknw0e34M1K1wBmz3qVB5SywWAMBMs178WqYBkMpAOeWT7QqGaCS0EAJCGgFSrW-LDBqeo0zsAPAMEMggNs6X5TEB0gNC9a3zWMiajPAXyiy0EJ48kLEmns2gNp2iJns6KJmoB6gORgfgP0BogP1s5gOlRf5BYYcYTPUcgD4CcW1onJyhxfR0z-UGIAMBCbxZSOIj2EIlGTUVGie-QvLu0zy1TAIF7WdOgNZmHpCU4I3XtNNQR8fPckZakslXANSo-tTt05cJGkGBxvCEydwNRQPSCeBg8g3gckQYo8N6ZoL-kRQBGAtvTSB9AN-Z8fLimWaNACRKohmSk6Bb8YKeJocdnQ523YCwgEXBcPfOXRHWE6SgMXYOARta2CC5L4uUpAx0s8AQSLsZ3gXDwUjWahkacwTDW-BjqncqWHMiwAdjfQCinBoPqAZDZM7boPXeNlqaYQYNc0bkgwsi3nlHAuI0ABQTk6iPDwJdU43jfLpBxB5gvM6ajQBosC0hGFnOUPhDOAWWD1AFYNNIDGhDDA2AijE9baIPeAWu90BevR8GoAN-K5y6Y5FEwHjCgM1m4gX52SAXYMYBw9zrgsaIjDWfp5teKTZwB-wLsETBSgmZBsqlLX5SSTALGZYknwuISVAPnpbyIYBPuyoIcAb4YYnY6wwh00iS9SZay9dgC0EewlEYScD5YawCWEHIDnuGFmwTfEOEho4CpAEkPZdYWSduzYMTbcryz9NXp4hgkOKiD1j0hwhjkiZkNHASkOijHKoCYKbo3UUkMBnPYPcYfrpfEYn43rGOkyQDwBmIPhBwADgAqof35LAaAEahjwD9lE2X-_agP_hMl44-NKDQA_UMIB-d3Gh28z8YA0OwKvZBzGMa3_WQrhvuUGQPwZ8UKoOGyxYUipOh1IAuhpfb9fS6yqhpTBYAG0PHAJ2QxGIXoKocMyhhuYw_HFhhKQK4A5AfjCFcfnxDa6MMqKtABP4PA7k5HVypyWUCTIkpR5exlAe-fEAphguj--csDHai3JC9bUPUBnIBWydmzE2W8zzQG8XvFOOjmhMvL--FIDJUd_CZhpMxC9HNIMeslk2k_LBthomL--DwBdhrHA9ho4D-VQqADhq2RtMrHAjhlc5P4icP5YTMPU4gfD4gSQASQOend6icZxhMJCsAc2lF0qpSrBoYCxccqChKafYqKBUStyIpjWu8wAKh82w7pU9lRYTTgw2m8y3SPAC2wD-A_hn6C2wfso9hpJi2wdgC0IgM4EM2AOzhisqKwSyB4kS1BIByCOFQQLq7hiYyW2kCPckPYOYBq3zWeU7AgRsCOYRsRlQR1oawRzpCWoAiMHWo71pQbf6Q8ciP-M7CMiKPCOH0DAOER6gPERuCORgWiMX-hXiS5e0NMscE5p0B_AqmM9W-AIXoQAFUzj6jgCBdSMABRcqDPiz8yEnWfrSRoXrNAQLpfeq7hURxSMyRpSOGUP6WqR10NOARzagR4yA6-bYysAJYDWMMkCWR8YBkaQexuUf92XSbYwLUMyM_QcyNWRmYC2RpwD2RhXi3meYwzAKyNORsjTmRjyO4bLVU6wUdDw2EJ5vuWfrQByCOgycu4ehyKNzgQLoxRwiMPweKMG0SKO3mZKO3vFiOOnXllIhjpZPhoURzHJHLZPPoDce3N23hhyj3h5Fmj21AQvuDwDn0NthQeukqWBVNhvhhqNJMC8MhVb8nHOzjr1Rj8MBeMN1uaNqMbZDZafhmqaMgBqNNRvmDOYVATQS2KrFABUN_PJtGweAQAbcaRwKhuDxLATaOweFDycgKFKEXcaOKhygC1ILAAAeW6QKh7xBFoO0VogFFxUIAMQA6AMQeAC_Iz-ix0BJebAugKAAbjdDa3qT6MLgXDwKh0GB1rapQLgDcas5EqX_RrrJ3RoDhQx0Tyr0T_jSR4VC0nOGMTuWXJAIhAJQxtehpQYoAKQAFJYxtECoeUpXlirBgExzk1ktI_3qATPpPgLvWaDC-z9aI5BFoeJZCBcELhy-UAKQbdgO6mujAeOIiQAbN5AJQmOHR7O0DR9dxnRi6MjRtLlnAOXk6-CaOcCetyDRmaM4HLqOkOrmOPhm8xKh7AA_iq6M9AG6Oc88tJ8sVECchrASDNGkOljUGSdIFm40-U2NZMWLmIoCDjxEEx3pNARTw2QwjG0PGRC9cITUjYmwuxo2j2xjgD-VC2OFQeaBI0azx5EdWISdAaNqq1ED3uUVXzR8YyBc-5zPGpbWJxtaUOSyTKwZX9x8IRkCAuctSdOfxYyGeTzAvfAOHSJFDLi1NjmBmdp0B0GAaCRr2bUA2P8Ie5xaKb9iGxmkM9javhZxiVAMeOWMLRiNTVB2oOJAQFwFxrzz4B-VWeJBuOkOo6NqObAANRr8MZcte1FHQ2ASQSQAAAPXBCs0A9kyrsNevAB8ywAChgBUA3jgT14A28ZRgu8f3joME3jR8Z3je8c5AkjnQgvjC2ASTA9CoUa5ExRw-g2pzgSYqgG1S5Bfjp0C91GMfe5n8bOKg2p_jWFBzKUUGFQzOHHD0Eea1lqBAT0ZXAI_8YVOprD1jfEAVDDUdcA4sYF8N5kvkcwQugS0aZeu0feA60Z2jq0feAKQA2jpCeuIFCb38BUChSMdJFjPz0wTysZwTJ_h1DssYYTjUafxc0cyqFQ1iqaCcGjGCcRj2sb38nRgjj08YETs8aSCewFwT88afDNU3ET67kfjaZlVjk4HVjAia1j2CekTrCdLSjmlQE9mEH0NACVDjceVj-icP0_KAugeiZ4gBiamAgXXEDyhkiZlgGFjU0dOjjIFMTr0C_Do0fWAEUcBsyseoDanqQj6UDsTggcYDUgcNAMgb6jExhGAwqo7jHiZiScsaMjanqcTxTCelv7g1jWABjjt0kX53cfjjmmCYELCqeFsVQ4TYscRjqAjUkPCb3DOVXeeDWkADvbE4s-9THZEAYk6ffll0EjNYswgc6ATLy5eiL05A1bOl0_fkIMxBjOU-kSzMzOnkgzOkCgk8YV43RyQO1luYO1R16Tr3BvAooFu0adKH8KKibZllizMQnFFALsDnktgZrABHDxCTsDgkfH07VEnSWTKydItayfgkGydssWZnAkGHV2UQ9Iw6vymnK6wGisooEs6x1J0T3RnhFLoMRFNisk4fydzBbbQWTCvC0il4Wos14VvCWZgOhhfLNKJHnMi8kHMiEyfPNaEGADjEWYid8AaTXPF8wDS3vMQzMAZWgh4sQYgri8Pxx1jxkXiAIi2GA8EjoPxiaCDcLHCENqsA-kTk6fcJqsyYkqFWahLCeVDP5XfIA8ZDna9UXH5Tn_ElstlJJs8kBT8GXlJTCotoIZ_IG900ADEQqZiACqbFTmAwlTXISpe0qZ5TcqdAI7QCT98oGVTnXsiJaqbMAMGQd4T-K98MqbyoLaSd8T0PmoZQbb4ZKYZTY4WCm2U1UsZKZ2ETqdlTLisGY5iShKoPprK8foEV2AWv5JXwOIMAPdlvAwP1kvlLFgJPq8MAKyi5Qxsd9qbPETLJY8H3NFOu9MKkkaZaCl1hn4d4F54xERoicjqzgTDlfsConxsq4EcoHqdlTwrCZ23qfQkZadzSMZCzgWPDJTKBVVknjEbTRsmbTGBTtoVgRn4VNkChMwr9OGqf3g4WG6lcoAaV-N3wUIaddTcx3akHeCIwrEKX2kkRsM7QClTa6aIiWcFGhVaZcuCokLT5sGxTKGz5awwbQI0_ErTViR3T8wFGhFFRvTdPl-im2HXTe6bhQl6al9xyoXisVXXTwtxqTjMGAD1trLqt5ogDp8GeYp-H_NZrQwQE6Eta9rRtaP5gtay8Hik1rQgztrSQz-_iUkHuuiACJjk-8SHG0KANgtM2gTM81CYkugFWDXhRdMYbP0hxrKygIAeoAqwaYk02DagWkj_p3KsYzOUGYzJqeXgV_W0G_532G8lhEQHgAwQ1_R2GUuH0Aqt21gZ4AP6_C25VkmaqEkBoqWg21n60lh3EnWHykecSWWA_UuOTlRm2T4jm2qy1229vQB2ANXywOq2TeT6UDoecWW2pfQI2FgEhd5HxHggk26Ey2xu2NvW_G11EMoHFxFkVwFlonmcISUPC74JN3AmJZW7tfPSFpt1HNoGPvRGYuG3WRvRi96UBH9Uieu89QCM1FxCRycmC5eoWbCz7md_93Qn96iM1ytYV2j9UE0t6XXSc2V2ypTFEFLGr_VT6Z6y3qLHnUz3IyFGuI2VGo9uF58QFJtbWEmiefCiQaNLzOuAzCQrmf7KefF-9Q2GVA0vP6z6JB2ME6AQI0U0a6Gx2R6gaeT6pxR9AOnH4igCZWzIp0GcnFzLFZHvJIx7i-wrmeFWkfSjmhHqKIefGWzL7xlKcJQaACosiG7AF1UiKEa65_ph4N2d1AP4sxI52a965HAwA12duzC_h1UP6CezqMCfmxhQVF72c0qmmEOz7syG9S6s2wn2Zl6pSDtDUOcizo3KDDcOahMF2dKQxBwrKG2ehzMXN1qH0HhzG2YkWjWoRz6Uy25VtEiAkDG4i40zYz6AA4ztlEMGUJh6zUOyJzL71HOTqyhz7U2ZjKFAFIX2aOzn3Sq5GszDGtYC5zDGyg4naawAOTDZ6ZOUwKCYwEow2ex5efDL2oUeGzSwdn6fkn2S2mlRQHWfNglQblDp7LvG3gzQIybwBqhiGMGOWb6QOXgRz_ZQtqNIBGzg_qhMo0s1YlLsCQnWZTm7KDNzlub9I1uZWzr6FEln7Dz4JOyN16YVJyQNX7Qj5WT6OO1lyL5SDzzMDfKDo0Ku_Oc6mTUplsdudCSyc1kzlkHD0TOf7QoMDjzagEO5jvTyuHJ3RqSc2JmY7p4zombM1pQja1OeeGz-eahMg3iLzKCibkdUvq86eevWkycQlFsRLqLYyzqc3UujGY3NGmKHx4w-e_Kb7NG-pYzJOG9Sm6w-oUzHCwEwVVB5sjhzLgzVALs--wngtTBcE1vjhA7yQaAVx2z2kgBvgUsHMzLUjaoHYqaoMJz7yI4Eso_QsYwFwBxDbIYT6zY1nzg-dqz18BsEDctls24mCostBIj0QFgRpY25Gs60uOCfQCUC1H9Q7eRPdJMFEYDKE4WxXTeGRAA-GvE38WzlGakx9Fn2U-bSKY50gLrjXnARRhhArKHgLBXQKja9LKEP-ZEWc4H_zcEaALU3UdMs61dgDQEw4lgFawPtOGKWnSKoEBaEM0BcILY4HIA8BdvWpgYbGyCH3Zr-a9ac3W1G7w2ljl1nrGJThVMEQElgXbjfz18Dzk44pIiRAD5O4harGkhfSgeWQuggPE8lwzmDDm3KvQ0hYLuQQmQLTezmkbcfeGA-pROiRX7zbY2pogmT7zKhb1s3qGBjZheQLvmQQ0wWrcdBaQ_ipQG8L5gABSIRdogg0i5EroDio_fGGmu4hHmG40moFGRHS3w1wmAPGKAWWqJ5D-SAi9XiweBayGwphcsLCklPTkYDLj0Tr5kNcbuzABYIAdBbWoyKBEAsbncLahfuI8TqX2vNFLGbRYVEpwesoEVRUG-6ZVMvarbOzglukZRbyUFRa7GjZHZQUbuylWTGrjExZMde-3IKvRc39dUoDzuNlUiIeZ8iQHDcLEhdULkebZ4z5QUyFNnjz8kvl5ACqm62xccLTRbK5heb5EiXJCLRUwhKgxf48kghsmXRbRp6AGWLdgGUq7foIApY3T9QaHjGGg3q80IwG2i-cODIoDsA_eZFDW9WZkcmEDavQzXgL4oeMImDmQUgiSkpwFakfwcC64oeZkafFrgwjmw1k3S3q63ruSyQHoWCUnfMDUnbSJdmaAsx2PBnX2jp-XWoWcRFI4CsGCoOim-gMJLSkJI3QLzRBltIgGEQ5JepT3QFPECsClgyQFIzRweowpgjxLTDClA0tskwVyPy6ZrnrQcuGcgRKHuMp_UF6ABV79_ajZkT-YQLcoDhLGJxHCzMlQYMyDZ4wVB6-18BBDz4bPEph1FtgXSF62LJnZkYGqLtRdgaIBbtsDUxG6SBbpA6J3GO4-2aA3GYCGHVvy6LpeJLn-ZY8sx0aChGv98LHltGBK2fzxfQSLDw0I1Dxc-GBwEDLwo3ZQ0YQtwZZX3y3ay0-E02nAwkzn6xfTxz6I2m9SwBz2X_1xDS_RX6SAgwW6w2FG2GvcgZwxnZV0wCYlgV0z7kGEzt_W7L0VXfGrJEXGstDXpSzzYmRIwGAeQCcoXI1tmY5dm6n-amiAKxKMhboSktfLkWf7LgWCJavGstDbKfrU2DPUw3GjjuEKMXv1GB4yJGu5ZPGGQ3njC5ePGxxTnGo5YfLpIzTGzxvmgUwrFUR40RLj5ZPZufqAMhoxi9lOY_TExnTQ1kEzqooHUZBd1g41TnlI78nArayEgrQrxX91tH_LkQAQrD7nUZRRWnABQFLQNhilLqaDPA8FfNAmFaFe2FaPqKQDwrKFciAz4rArJFYEAgQUYCp4dgrRFcxgGFYYr2fmorRAFnTH2HpS_YoUG_pYW99pamAXTn-8mZYimYlaKLzmxnQvizzj3YzTLx4EFMUlc3qQPvMmUleBjr7ryLSWxTTUlYddWwCCw-C13pyUgammwekLS-zmQ06l0r6MSbmssUErm9U4GDvqkrn6EEQUQFTzFldXc0hex5KoSFetMc_UDxbfiMBbcrHVA8rVha8rfgQcrthdCrnktTz7F2Cr_leTmU9URMaHFpjDtGG5TlYSrr4IKotMc-KmmEErArV8Oy8o4gllc8rCVYpO2VcmyLqBA0wxfOSq-cso-RrLKKzL1gaDECAHJY6ofJZfLbZdVQQ3QMoxUEyrSjv4w69LewNgBBWqCkECvTqeoctBLsovWmmhDmnsndXv85qrIcypSocJRar49hbbjx5dHoXhagAvhZi86JAUrMAG2r9UxXYkOHft6NQnQJzCKrIVeMQ2oxVzizSgAutjSks-HnqrldME09URR0Qf8S7lYeLAYheri9QDE71cIAtMe-rVleWwH5kurA8GurwQxVMM_G35OnBTzBBXmgJCR8i8YcEq28qBLYuSOAYkvS5dofaiWxZ4DcNeOLMshjzRxZxrCeZ4qSzkiJBxARrZ1aY21Cs4cqNV9T6m2R66NUiJEipIlZMu8E7AFMtooD5UgujKwlAFrTnbOaWWsDoA-QD5w9QDWttrubpUVAWGvXvzyHZcP6gLMIo7KVkkLaFfBmfu25WGHSD7Omiz7zJ79atTVL7SwINusAtc3QFfBaHEkARVEMoglGIK_lYtrIXNdKwacRKEQCFrtBBTmFOakTVZdG5dZetoj4vDTkfnlrrNdsoAJdH0DKfJ1H0FzGIJqDQWWkiA0LhgqADs2wf9Ikr5zWUrM6FUrmXNzGGldRqGlZuL2AAN-2JGx6txWDzeVeLrzMEyw80CjrZdbUA_R2YrhFdrKF5J8FipEEwguwVo9oXBYkRJ_KApQ3IOtfPAetej6Btf4gtXONr00yqoWwCIy5taSrVtaF6ttbyrDtfX1V7qSr7eURMBVFfdmGevYDJg9kUdc8liCBDrkyoQTA2CjrFtc-iSVeL0ndcyrJ9bk-BVA-OuVf8rf1cRqndf3p3kjozsFb-rV5nUZnxqjrf1eZwdFYgrWFcPq69DwrP9bYr9FaQrIBME2O2dvrTlcBroPAEoUdemuHnBgrqaBgbZiEYrIkA7rIdZgbE_qIA7FbQbp_kBJflacr4SzgbndYpO3Ms7rrMu717TmRkC4xfLQY2rr-dcdrehhl6dxXsCINc8rq1ZCLm0xlAW1f9Lr7tTckRO2r7w3iMVPrLm15d_LxvAYbWAFfdPDYwqUhVY946FkKf0RYbT3v5YY5dBgUjcuC7DdCrnDaKLjCVkbh1b4b2PKzrfDZLSwJZyq95Z_Lr5ZPZ3eYeMXYGGacNfIrJRTnGBNX0LEiW_K_Ln0hF9tTGuFWPrE2SNU35Qvr_jcxrqanWLcPk2L6hZISMDf2LFchJr9xCJr2AHJr1i0XrcnzQ4y9avra9ZT1G9cRMHsmRr5qrzr0jZGquFUmVBTfiM6Gv0UgTaSrpTcvrOUDQ4FTd8bK9eqbEkEyr9TcB4njcU-TTeFGAVcbw1TZpK5jdiqoJYXzfPT---QF9ABlbzAB9xZAGaZ3Li5aCzJSD56EJZeZ0JeALcJZHA4jYPYd9TOgLwfcAdVt3pOtSSIpgjRLcRxS4rUnfG2Ba3qJtjNLPNgtLzVDUA1peSATJZazhudAa-RUXL12vcLtubeb8BAKLl5Qh62AGvKoefvwVEfcLm2ZklpNYOLcTYVyZNdOL3EU_KhJxBbypVKbyguPAJdZfr9dfTcjdZIFzdbOc-lfbrypQ5zApHUbmjaYbGVAeGCso-gFtbBg5zevgb8SqbbPDKbVuEyrVLZBbmVdKbxCIpOzLd2LYuwpObLfwN_gG_u54M5bOhZpb7TfPBvLeJjl4xvLkjcVIzeaBi9jzw2ctiUb1iwMb3MqJbMrfK5fIhYbtLdSbxDpZbdLfK5A2AMb2rZygBVF1bXLeNb6AAKopTcNbWrYpOZreFb3LcRO1rc1bo9HwA_Lf0h9rdbGNsdFbBQGdb_TYjUkrYkbPyYWshhxKetgAME9emL2U9pYb82Zv8vthzjdoq_gcAAjb6nNzjGzi2c8becEgOAZLbPgS5hgnWrBjYxlgGN2rRk1BOSg35EctEOmGHsUGQo1EyVgAaWrGmmA_I1BG5h3QApjLb95QA7oU2Fc2lKS0OVwCDZTwEfutDw_uDDwFbv93_ucKr2G-gHQgQJgPgRkGRg4IULlWwEiAr0AtAyYBnhlNKMgs8IQJi0xgl2RbLFN3P8EOcaLbhgkJczMByYhbeo81rdlzaiPmDuAqTbKbeL2KCfXqU2zDbybcGcUrlTb0bfoBONa6q_ghkLhWQfbH7accUbecM_7aP9b7L-lqbGulJ31WlBVaP9DI305_ghnzr7aA7EemL2csRjbv7aB5u4kzb5IkP9vCYjU2T3DbwHcYe4HaclwheMOKez2oKc1bqWe0O2rWxFABAX0FzHaL2_7f7KJdOCbiUvuiqTfSbJrfNzsAEMDVcHUZcqAZMOJn6tf-v7Oh2x-bWNdtkWYSY7zMEJszQFlyBezUASnaSb2PRVb0jqLmxvDAAAFRCaKjbwd62HLyijb5EvzaJsUuUklboFdbFtf2LGnaJ1fEBGAdoaNbFtZh92PRGA2OZc7jTc1yFKUEo8XO1tcDlTbAFBAIobbQ7zmxA7_7cw7P7erkvxdTbXNxJlFLZ8AHDWPr5tBYSQnbAbeQFE7iJnE7LzIS7tYCc7dYGabSVbJZEQEE7bnAy7VXLE77iBc5jLeSAyXZXr62zS75XZE7qACq7_Vry7iRmSAHXIvrNBqa7RTAq7WXbk-OXe25CATHEZFxTrVuGHFLDf6D7lzTkoxeDmhhzmLXzjlbx4CW7g9h87ChLjoXx2Tmhh1xuM-sI7NdCcZA2yqDjFHVg0zxcyJufeFPYsSLknBgbieX9iloznGyZYSixJyumiu2UQx0zX9Fjre7iFUXmp41jQHMi07xUELbu8HBjJsTjEc43GrrS1LqQQCOkMYVNi7TmRrOhQdl3kYKYd5URghIHp8MvSuwo8HgAwwBGlbEURguPZ4COUDFMC8E5ArjZf9VhjtD6AERgm9I8kIiLTogOGtA24nXd0YURgjoZOQYSGDcxUGh4N5BmzQnLZ7s1IbIVPbiuYOCAkSZgKYxuxOQF0BOQwzn_S6YbKmr3BOQy7HMA-4Q57aAEl7H4Ael34sRj4RpiMwEpwbb2rAVbrjzyfHwZECPYc7GZjQAr6eOAHPZiMWvZBzX4s1MP4v17WAEN7oErkE4ErX25vYKglvcEl2BtwK1KTBgKvbQAD8Bt7MRkbIVMc177QEAAxn9vgSBMbMsmpZMDpQJRwGxYALXvDOelAAQamPtAQAARpAn2rcDPxIymgAgSyF5_exuLLe86VTYmssB2edpXVH7ccU4eJoEMCq4IKCqY-MvB1aIrc1GLbdgA13267v_BqLRYBDLHrFTFusBjNAh1_NuZpVDOP3EdBudAtIh1p-5mgzVBFaJ5e8mCVFSpV-1G1uVb0U-LaPa9glM6LRlzU7WNOb5WNnKHWFUxQCNnYHs9JG4CYgiOxdf3vuDRpDBZ90A2LmwNjTYHz-4GxZzV_3yzSWbf-3Lgo2A8UuHWZgCWPrhV1BFAAB2ib62CAP_RJSxWWCHgvDuWwrgF_2EJS2BQcMbdz5JWcD-xfJGlu87_YnAAiw3oW5BFlE_fIHQR-78I-6zGnzALtrBGjvKEoqIw5JBjV0eZhUxQoHQJ-35tvlNP2Dzj4qscJ-kWuAQ7HWEwOUWiwOtquPJ_fL5or2pudCOlwOblDwOPrZH42OQIPuwzwLcBt5mSB8wOLZVsk2_Sv3UOqKADzrZMa2pbay6GWogDR-X-B5_Qy1HEIDucfpj-9jzhBx1ZMi2OmLB1Mrj-1WScZP7521Jv29BwYOhTG4P5jC4P2SEYPWcoYOB1BsXR1Mj5UfH7ldiJDwHBySRMSKOpePRJ401An47aJlhjTi4POVish6DSb7mo6uGA-0R3XCNb7hnX0onTR0xj-52abRDSIfGEuIUBrjg1RKAI5WI6xrRNSJGWA26xmANFMWB_2SuFWbaWN_382A2a-h3_3Fzb0PuWLmwgByOVBh2MPAB-AOq2h2qslMVoYB6MPi2A9hEByGxlh8G3awpan--xbd_4E-A-lDPFQcBYxvkBgO67r8Lu2P8LB2YOzbY7uJgM2HwW-6WJL-FHwwVaBaJYIExUEHW1sxAfAKCExIdh1sge-x7cFLNABQEH8O64IP3JkOOxyajY0XltO0Kalx02OHsVIJPSLHCnv3hnTgPKzueh4xNjNKmjcUmBRbdIdn-t0R7QAF2HIIxFIQOXgJ75EBXAp94GQPugFCPIJL4OFePWNQYIEOlhngOdMCi1WchkOlB8SO2yzkO2B90BrGgyP_Czbyn6nOM4h_rghNvWNF6CQkQFqy0kHe05N-VLYpWw3YLebFUMCL0LA-zdQ6cjkhZcDqOpW4bK8GukOn-pRzcB8zJ-R-IPA6P-0tioyPUE9U1m8g2VjmhKPkahgQHwFKO5xjKOJ883taqi-zpWjkAlsLGszhTsB9UpgkTR5kO-R9Tm6xiuHjR7MKih1GtmUxQQyhwE3gGpaIqhzQIKBN6ApQHcqV6O8PC4LVh4xJGbUxOJEauTABrSqmPbS5lgEGujx4WJmPLUNe5FyvmrmcHGVOwymaaQ02PkyhGVWx4qJ2x0eUWx4ywBBKXtM7cwpemkjlQR0_xnMHAxsiN-rsiMcOKCIrdzh4zxe2CSKOtnXcm-64VyICa0UM_Bn7WkP3eVPypvNqBZM0Mx18Or5sgtMR0Qk-paKOqFtM0JKt6Ojmt1gMeOf2ghJPrjWAs1u9d7xzWADFurjt2iYsjx1J1yGax1MLJmgk7Sct6Omz6LAPP35LvBk_x68tdLR8tM0JBO5Lj3TM0FJccGVIONOh517Ome1t-wMhvbsDgyRfv3VVtDGMR_Zdb9GeJO6R0MKgqUWuxnLQupAk1gXXbZHS4jl0qvbU8nTYs-dipsawEFNFIhVJeKx96_xrtMxIMwtkgH_l0Q65QFIXpkJgN-wxNWKWi0BKXQxSEA1y9QX9NhwI5MNsAfgGMAtVm2td1rfnbjJ2sKhnwt9tAdz1WFAr0FXHFyFUoH5XHJEKHMJdw2seaRx5an71ndJHNkRODnXgP4cOSO8pFSPgRTSOhwv75tLAeOULPIPYqh2Mh6DWo61HNKxOdxP2RxjVkmlQ3tjoKP_x4FOCOpP3ZBxeOZOleOqOraOfJmBsgNkFMxzBD0DVvImMdl2FnR3z2XvLEtf7ZxOYtsLmeTtYxma0z0bK6lUypygUmei5tBbptgUpi1PCZvRtI-v70XJxrMYxxGpQp9WoUgLWoi2PwqkNpGPLR3SPu2gBPkrNlPn6baxZKxs4wp2NOIp_5MgpmYN5Qi1P4YlGSrksZOCKE1wyp-HhTtaGOQp5Wo1p-NP61LgPKIIBsyUgPg2_Y-PpVs-PbLItPGbimoyp0JtK5QNM6BzZchiPXAdjH9cMsuAQmuB9Pa2kJtANknxTRzPQtp1f3gZwWqfMs-cIZ7u2zJTDPeR_dPpp5P4rR6B07YMlPFp1DPcqJdPRp9dO5pf9PbWKlcERC2gupxoOUWir5BZajPhp8TPCfhtPs6FFPcpw9OPB4HQvx0YsfGWx1gp0zPVpyTPWZ7dP6VphN27gxy_p51swkGVOM4oXXsZ4lPN5qJ1MLItPuJg85aZx1Z6Z0LNsekM1YZjFO6Z81mre45FoZ4EPaphVOTuemFYnCkxd7SyPRGKJl6ckJtvwsHmqhkw7VAFEP5HSTBwfdgQcchw61Nk7PVIqNBMCjOQXZy7Jk5rrPSZnYECw3gk-5iM0Q50cxmojQj_Z8j07ruHoHuiW0dCOF0U5jjsp_dBliY_bPd7XHPtueVMSp6OFTZ2BsClnVNkZxbPuR3QPuuBzOsZ5_4cZzFb5p2J1Fp0P71Z3AoMaqvUsMLGtwy_I2aAuVsVp56atnLFKwNpiRi57Zc_Jr9PR5yXPWYuVtopqVMFR3TH4iMFdfp2bPoIhbOrMAI6Siy3aWdsHMNljHbsbaF0NixTd5pmlF3Z4g7fu_-AvZ9p3Y7fRPmGhdkVlkfPmtTLJ-05E1H_QqAaludcotqeWybaL3syBtcLzunPyQJnPPHc_PmO2kO1uTHqjR752e5_aPLCIAs-53gljrNLOkpjyP_wNLPWcjMtInfrbNpgfOn56erw9MHnpZ-fOMoqbswFsI6zFbvOfpo_OtlugBCFwAIcdm_OK6kLstdvzSmuCQuM5xJ52omAuGF8fPk52FFRGJwuE57wu9YEQuK5DnPZcP8TFCQXUa52zOlp14sV8BpMGVg3AG5wlOYR12o4JyMl3p39A-bu5x2uOgvyZ4ovsh0NOa6NPPcB9FPtVHoulbmou2_ZBPoGQLOa6CNOWZxNP5F3dP5lVQd1B53OUWnFOmvQKOAzjJcMJ-4ysJ9x1HFzQP0Z2lybJ9_K7J_rOqahaOFZw4AhRYhPMJ0xcHOmEuDF7XOThcngv5dLhoFQuBTWO4Otkn458h3K7cBXGP3lbYU_0xeb7btbbSkI327h833tYJuOm4Lq1bWghnXh7P3inaU7mfaz74J50uGfSU6jLdXbZOsv2UnYMu0nfzxHLc5abmX5bM0CFaEre5bwrW8tgJ0ctk7WlbU7dBJZl7UVuVbUvG2gxKKrK5PN1U2bUXfc7Dp6uhhXQa6CUvARdzZjav7aTbFlmcuEMDra-HUPbAkA8vrl5sPAnIbAnJ0VkiR2ly32B5OiB95P_ir5P5eRIOxl90u5LSz6FLR8tFpwy6Q9sSswCE1PLUGVOnB2YuIl47HtXQR74l43PugAZbxl0z6MnbCuRR5sILlyCI2F42QZYs1ONZ_EPTF-Evwx_q7yVyDkcV-ov8V90uTLeU6Zl1Za4VzrafSA7bq5va1PjXAVeV0sQHbcivgV3cGMavNMsbb46IG_3PSV7bb-na8u75zpwa5tCky6AzalV2Ha3l2ksqVyiuaV7I7vHU06XHXKvtklopEihm7N-gTkNuiDkd1tkAllr_1D50JshmncvuknjawcozadV9YXbMu_gU5n_OMms8uY7fcu0lmzwcmNQvIeHLnTVwUP0VwyuRV3ravV3LNPV_AAG7b8Xr7dstb7Syu2_fMuMrX5all2R0eV4qu-V16ugNpqui1yqvHZw7boIDNFsgH_Np1h3PgRV3O6a9IEnRIWvRV8WuPV66uvV8bt4ueGv3uyquq1xDh0ALWuVhpLmw17guI19zTTudOYwx-gvMV_oAk1xba5Zi2vbl2WuM17Yv_fCBPUrU5Z0rWna_LekvzF1DtNVy8vtVyqusBWovil3SvrDHaaB2RuZw7quOGl-uOHQLBHSUMYUeEVehYLYnBYVbMAUVbuBUQF6A4ANjAgRw-Y-DQyL0qIE8kgPnAbCDApeEWsgjtFssnRBXA2CDpJaexaAtlkdpqGchIjrQpdtYodacLVczfYvJZqVUpICDJrpkJOuEURYUw0Re-J-l0OYZ-zWAlirRvRl0zpwmYQGHE0xuRdLzpxdALpCOJmgSN-gaoLOxv-zEboTdCjoi9NxbuVXpJykIaK-IHhxLIMSrj05MUNdOgbBzUrbtQOVGJ7sL2lEXwbXtTBvVRNnZn11wU7KLpumezWbYlFGZTXfBu3gLEBO1TwlDlyRPB7hah95nmr9k-CbhDI6gXN7WBMNFdTKpL2t5NNJTqTOlg3k4prUCRiikEdahltTlwIEfOb5jQmgcN6RbcLSxdczasbXRBhv4t_hvLNH0QAFMpAbl_OulbfZOSGUjkfl6tE_lySOpoICuKR8WG5JKCvWgniufdIXp4VPuvc_LOurcPfITp-wUkzbKhUFC1OSqLLk7JDGbODXjR-NJEBxNF4uG13TPtrajtkt-Dz4iFlvF6JL7RBxzV_Fwxv6t5YBFp166D15_QX5EBkyp9XOFB3wPmt-_g2DQAuZt8mb5t1oOat6vpmNzTpWN0IHVtySvfi-L6u7JtvCaCLQm16Nb4bAqghV-Bp-txmgrcN1urECAReaOL6rZLtOrE2YmuKjCEhNutumt39Ojtyk1RGLJv5Nxsp-k6RvgGwNuscHmrFXAavkapMrAtbPgR3GXQiNNvLrPN1Pz5Txs3N5cAsd94vNZ9FW99RcQCdzPQiNOaqSd9ju-e-aqFt9GuaBzDu2Zy1vzqMzhRNJjAONKP7ibH1uwFO1uxNEJphd8VBOuFNuOridvYt3NuXtzwbaaMTa8t2BIWk6Ruhk_RYcAMzoOd34uZp5duON2LpLYBLoJ8tQOMl_IulNDJo5NC2Odt5mv_fHxvBk9rp91xivU12rvM8Pbv2B5boBzCJuzdHdusDc4PZ19tvWd4Uvch3zASlyons6NeuqlwCKV7jLx6l6zBpbiBnutMDFjzEQAAJJLAzzMa1YM1uPzWjuPl4F659LDJmOHljIN7v-BIhdRuawKcpJrEKovE-XbBkvIkCA1FYYrDXaawC1YLLLZZ2N16yH0v0u70k-PQzvhYy93svR7ViDEBwKvwa2Tc5K85hC9_rxM-V92jpKLqIIjUGhg6mwZ9-eAaOV2EqYsvvGyKPuytxB3vR1TFbJCOFUOQfJ9l1ppK0orGsjqfY4k-egZeFjFZu1olf4OtXRMmzCo09w7w9ruJX9ynWCGxQdObGm439zdlhFX_vFnK2h6DckciJ7-Ep-vnZy_ceBg3v4IFBqs1C6vhK7fnPhkD_N8cnBLZfMhtJYrhLaGlhW2dbKoXUNFvTUgpSVJYIKBoQqJl87PMYErgkBL-d-8yHNiUyD6LJFjCEZ2gIwAGD6QefQMwf9KQbreD3weDdSI2yxVhhJMPSkKgnJgR0n_lsAM5ErZysgcg7EA8g8kBs2h2A7AH_k2IpanNiAZKX9_l4zqCz4rvGLVKAkUQtD-OSdD1NhqmW9L60DfqKjJHvv8M-3MGOjR4gIf3z0GHJe0PzlPCJVBL98v619yMJqCiYV6ko8u0FFpLPDDRp60v4fd92ogzk3PdHJy6dnJ4HK7N7yOAVwCRPJ5SOqt82mwV-QOP2jXuqBwNLXuNqpd5PjanRXEFlWAvYWp91YK8JeuNt2lznD9IE8j2AeEl9XvWrG9PzdxUeh5D6bYlwP1aj7ivDd93udIi7vwx7WlRt_8VYpx0fWV7el1ePh1nAL0eg9yEe2j3tVhj1mv6965YkgU3ulEtFYVEnCuOClVytCuJtbZ39OfDwiz6kqxz5JByOOrFyOZ15ku9j1sfCl8TVox4zOKxeUus7ZUuLh01pARa3qbh2uPwIEnLtYvhJU5b3OfqCwluMBbclJPUfEOPKKZRYPu-5XcGCJ2iO4j3cVjl5ApGXEIBGQ9iqIj9rBCt9EfflzCfSt6xByt15OUj774_J17uR5SCex5W4JJj-cfmzTMfN-sMeL17cfzAFHv4x48fFx4zB6-yoxN2WAGk96MphC21nl1lgOT1Kmxn1ALncBtnbqBaoPKurye4kwKeX-0KfGT1bTLWRFKmVfKfC5ERr3j2q0yJCeIHUzCrzQJeJB4EpJyBfeIwObOzXxCRm0WxlQ4IPRAKM_EBw2Ww9J2yae4N70ZYzPBb5LLevGRVJulJNye-NvgpvBVwK62iyeJWGyeaVYqej8NyqbjTfgjtLb7dtO2d5LMuOVtCW0yRTeJUt_HTE6TbBBdKnT06ZRaiLGfvPT7lPxTw9I2tujtJ5wtNzYtYvnNtJWt6leyBeWByheXXgwNiwKx54tn9y0TP02_nGkNsf6WdtmOUpvDF0hANhH_XlliPbFUzg_HQCBRo0RBQez-T3NUzbtCNWsy83ckN5x66nqfp2QuqqBdOf0vTBz2BXI0u9CUhZz0923HpthQDh7PkxeAbUxeTJEOfy1rdrAODSwUn7hdkQtzyez5hcyn3T0oRHveWeKBZWelzy7mW8IcLVrOueLJiKAGSkwfcdsDZUbJI0NPT9nOD4KB3QwbRHQ8DRxyM7ynSIOdAL2D0yWQmfwJEmfk6amf9QN7xrUKDrUbQp3wmwRWSYGeBli1i3jwC3WJ0kcJqALVxfz2Beg6txFVO_83EG6sH5SERfsbSRecW23XWIHuhQL85ymD6Oma6G6LcLzf46L9I311EOeRT5Fohzrv7vJKsLXz-sKxL-ocXyCwLRTz3h1q7wIlLwIQjOyLmUBGpfySHTvNL8fgpT5GQy-zCFzd9OLASX7zu7H-euD9wLxLwhfvedhf9BZZfwLzVNtL-RRYL1OQzBdjsNi_hemL5i2WL2Cg2L-Rfa1D9ZHLzRfrFkJfoK4xfCL75e4SqRfcWxxeeMCFfeL-YB-L3ntBLxgBm8yJfmU8fJaAK0plUHloyzpjgKHL9sz0kbVw4JArPTliKmLXiLbJ1XsSr-5N97SBsol7kuf5W6bHN3vaC_dho-d-sBMNKkZn5Erv0dwoub8CA1-EGBs82qWMmFFXdckMNfhmjeffnsQojrBCY5zFvS6r_tYiNOOY5PhqYt6XRa1TBtfJzCten5OzQZzKKZJzGgMydpJfprxJfsADd15r1xOXL_oB8dsNevT5deagM5gbr9xzctc0od0LlfJoilor5DfInluGfKDMVeHfVIs-s5GQXfVKkJFIDfhkL9sexqDfvczQB__b1Yh0PaeOTFlx0oDdronZ7oxYH0Y9jNIpZFDxcIk0jldADUpmSNlf5Y4kQmlMkpvr-0oQzxNI0U7HceVVLHt7hAH4aACR5Se8VLexFvhsZMTLe8KZOb-01XcD3pvM0bQzC7QBLezOYBb3Kx04FLfEjPDTQt7zfur2Ck1ADjBTYiughZPQ8-wPDRqgBLwpQFCY-bWM5MR8yhmiLWYXQGreFM-5BEtGsszABreDWY1wwkRLwaxDX4DxOzfc4fWbxAsfhh4D8ZLe1pAlJ-8VPb5BBvb5Kpbbww97b0SjHbw7g9CaRhhQNo9-3drfvABHevmPnBpjhpAQ71reHb6n4nb4eTY72sYFSTOYw78KjE78ghk735GbbxaeLiPHesAEXeAntnfjyTTbK79XeS7-ze0SmqFkTFq8rgOCEoYB_CwAHATkwAHe8IEHefQmneK7xneZtJHfs78iYC7zrfM75Hf-Dqnfy71PeE7zPek7xPe84PneG78vfi73Pey75reR7-HfN7zXfo7wIBINwE9676Penb_wdm7-yU1QseScWuwBO793fe7_3eNQIPf1bwveN72PeV70feTyYveq7wfem7-egvANffj7zOZ27_feu73pAe733eDMF7eaAObfuIMPff743fs7-vfz77Pe_nYA-W78ffhTGA-H75A-n7zA_A73A_g7-_e0H0nf4tNo8pTZOJlb9gAMURLecjL5FB3qpBLe8iY-Psw_JmG7e7CHfe2hWABLe0A_pwIK95cWUZaEZb2u5WKpI5Zb3WWdfBE0NX4jCKcBtgFzeYC3x8FIOw_NIELeNN67GxbzAAWH5kaWyqAKdPj-gLQCFUmEUY-fyZb2DjMo_VH2C7VRJ3e4CVATcuD7fErjh8Ob8sSrHx96WKdzeCbGLk9CKOiMUSZAsAPA-d73beP707eKHwdhlVYgBq9a7fhYSE9cHwa9An3JBSH_vfP78Xewn1KbEABZArmACQyEZXBTb9o-eeswJh0BusvoJ4VCpEeZMwl0MHq4QeTAj2szxJmE1log-P73rfU_FiCASL7en7Sfe2Hz4BCHwPfiH5pAnH0p8XH1DBDID0-X730-FytE00AP7eIbIZAZnz4A5n8_eRQIPevpbEp8s8Ro-cI4-lJyZwGH4HSRn7A-CAHw_OH3E-aqIs_mmAc_JmFg_BH3kArgCpB5n8M-7n4ZBbn5b3OYf22Tq6gBLexyi2eFcBeDwk_Gn6Pfmn3oSS2OOGon-egXn-xO4BL8-kn4XfU_AC-sQYgBEAK4AtS0cBz0C_d5IP6Anl3ubxHzAofb-o_WICLeKBjcY-HzqZZbwO7CACS-tYXYRYySgOoTE-AS-LGS1YKwAUgBbIsACQBlQHWszigQBuAOEAwAGG9FALQjkwPYAVQykBaEf29YELewsAPy_tQCK_EESK_GEf29-3rK-FX5G9ZXyy--KnABJX9K-vXvy-koCK_LILq-CQW_FEYC8HdX7vDJiVDBLIEK_pX_y_zwLQiFIFK-FIDq-FIHAT-X_YAWUHgBZXyn4NX8q-EYOu3fX8mArX_2824eiBYAF6-I3k-CnAOgAA36_DQ3_qA9ICK_7ABDZXAEZB438m_d4bK_IoPG-zXwO8oYJm-k3ym_ZX1m-M31DB7AFm_MCjm_i31m_9QM6_i3xG9AEfG-i33K-B3pm_FX7m-i3wm-C3-m_m3_28LQOW-S37K-q3_W-AEW2-G34W_63y2-K31AAzX_YBkwHW_i3yO_O33O_ZXz2-u3xG9ZX7q_rX7a_7Xzq-BX7q_LX8mBllC_6KX2A-FQ788DQ0sAz37CHohOSzzH_LfliQZAAn3cwlH3e-3H9UAOkaa7-HzffvAM8-SAnKJwX7AAiX8A-rn3ax4YKo-V0C-ang_F8ugJgsRMN8g0ACgTVWBG9SaapB4cH8_kn7C-gX5mhUP9C-nzGiAWn0C_4X4i-KqNIQpH_gJxAoTZjAJ2KgXyHghWdq0XwERg1lhUuzAKe8zTUmpDb4LfVnyEBRb0EJxbwteNytjAX38S_ZqW4-LH8ZB_H4o-dn2J-4T6qJcxhkBDnzE-ceIIT8XNS-75tqzvXmHBSkCkBACLQ9UICIID4PGy12-hBXiaAhTTW149IBISdvhAAdMLOA3wHJ_tgCLDfH0WAHmPA-B2cAG6cwzmS8A-vwRQ5nfQNtZc93PB2EGjSmJDyg0ac8y3aXBnZ4MF-BeTcACgHyr5Fkjlc8yzneR2zmAOxH0Qv2OA3actIjN--u_1pA9gAB7Ij49jJeAM4AUYBbJZoJvR4HoUBHc0REAv1kB1wO1bSdmjSEvzV_xmKrnmc81-zy4KAAErnnMcwAGnj72wBM0Jmq8yIgTwJ5_VT-5AkS9yqYsDsAzJGOrQyyJnhv1mAUX3Nx51WshmDahRSkC7AF3sBZ8VLqAIJNDpjlMQACAJzH9dzNQ68wAJc8-bnW85W7Ledgtohhjzoj1kMxCqmIZyCFgugGzNozAqweXCLU-oM0AMg-bA-EMQ9CjStr5QH-pE8sHNXv9kaPv9nY_vwD_bgED_JGhQ1S8_jkyMGMB2gDD_Af5D-pBm_ogJJQ5YEkBQP0FkMdsrENKydjhtMF0BUxDtkLbPj-6l5j_1cPMBa1O0BCOJ2oV5PbUDpF9_6i1d_wf2T_af-yggf3EWnwElBiDf0BSDVNAV5MUAKDV0AjgBvzHeiAk8f_qRuf-9-SYFyJnQLUsWlQlcsmNNgh-v7d5fwT_af8ukDJvPh5sKuxMxrhUTkEiZCQHHQIf4r-3VLnQ4UNpgjfzp3riMDxxMJb-Ff5IISYMNJHwIwqE6E7__XC7-7diN7pgBgAdO2t-LAE4IjgC-JhI-JhJBVb_3fxtUSPTTivNeRxQMPH_1R8EQ1F0n-XkNb_jplM7H4iM5AugFpLAPhJOAZCWTjmRwsWcsS8uGgo8gAOlsurp-QqBEAq-D1gS_y8yGQKccO-llJquAZUAzpYAi_yTG7AF3_t-j5nb4ttyiwK5BIxcKAK4CNXnKkzGWe3FQ3v-7_9c2uHCIdIADmXm4QcAJBzKM8GZIJIBf2JIB4crQD0f3D_Mf082_0OH-y_x307f7r_rf7z9MaJX-lICARSCLYBg7D_h-gPPQafzf-R_3f_dNWdyDMG3-yOC9-3P7E_jAYPUqx6ujI526iVMjIbv4-mC8gsbxDgqn-jupliuf--Nax_jAByv51gtcQSDAeSApkpIin5ugBQ4J-lNABqICwASr-qSTn_kbwmqB3ZlkUmqAMNKQBHOY-RLLkQdLzhggB9lAQ5u9gC4DXSg1M4whq9mtKrBqn5sSUvzo-JPi0tTCKqlr-ZiBaxvAApAGfoAnO7UR6QGQ0flbIKI1IRmDz4Jt-PcQ7fnt-54CAAbr-iZjd1AGKE1AjpAP01BqYpNpgf2QyuoA0M0A1wI26QIzCgBOk0oAMLJs2BwaAMr4IJvCVyMYBH6ACAY1IZgF3ULbw0IRTrudOiAG2ktDQHAHtbNOA3AGo1Jqg8pA0KLAikYAxQPB2vnaR_urgjdZpQEwBnDRsATjYpOS9bsEBvqpTAFbICQFcARbq1A5pAX_-wQENTP8ImMwjECUB00xpQB2mrQyfGlN-mLQiAaEAYgGw8EImkgEYAVwuRChZAY3WLCCGsokB7RJksnkB00zcAWQ0mJAJAUIAWoiQ4BryCOCVATW0oLSbVoOU4bAY8tjY5_5V8FwAuNaE2KsB6AA-AJkBvQFCrPUIkeabAVgA9nZn_vwBV6AfcDMB04BzAdtWawH_ElXwDdh2hocBlMQXAXyE8wGGNleg0_Cj0K-6Tf6_OEtIICCQWmlA9QFZRGMg9yRPDNtWWUQqzGdydwFTHCAuRGDKAX-oLxrvAW6GcIH4RJKUUIFxUB5w3MhxUIF0UIEdejCB5Ma2kg_ObcZ9AZJgyIEeyoJkiIFxUKSB0ab7zhSBavabBqRUZLJ3AdkBcv7SpFA212C4gcN-3crnnqDUUIFhhlSB7-5BRIiBYYYYgeEYs_Q4gZvmeiD4gQrSrIGOVsSBx1j8gfvk5IHcyHyBmpyAHh5EQoEPARqBjIHvAcyBlrxPAb0B4wFhAT8WdwF_AVsAzlaNvJsqjKBdAf0BPxaDATW03AHdzo7Semwx-gM-zlAugNF0UwB6QNo8WAGx3iZgEpZBAb0B2QGVyCqgQdKGULXguwFDAcEAYEZyAYVA0YGr1HaBA6j52iCMm1q1JM6ozwG7iK64-gDcesoBz4DHvDSAUBpsOJwB00x6AvsM2YGScP6WuICKwGD--oHXSkegpLq3oMHMmYGpahpuCYFzXPCAzYGsQF7MAHi9oNEekTQqGvvC_oo5HNa4S1CGAa4B-8IhYKYBVngWAcwwcmATQAyAcwAagBa6gvRNgTKGdwa5UO2Bq4HyQGOBSvTF6huB3HpeASt08ECH0MggeECgrHuBscSTgKMAlYGSxiEW14E4AL4B5KSJNAlsYAFXnqQcYg5mrqacR_T3UNBGBQB_BhTqRdRjAbwEBQHXuAkBCQwFtAj-pS5p_m-B9SoHEK2BGYHnge9qknDjAdeB1YGbYOf-ICagHksBWNaE2AkBQYG5AcEBhoHBAB1yL5SAQUkYRwEwtodueAGKYN_ueJTLAacBIiBbARJKmwZrASLu6YFzAQcBV6BrAccB-WArAWcBT6hsQfUI1wFbAaZS5_5kiOEB5qBggaaB5ADykHZQKMDhgddK2QFlJirG11DjAWCBTwyvumSIlCTWgZJgxoHvAVJB5oEk_pvOOrikQf_M4wFB2r0KNBxqQZ8Bk3ijAMTGTJCkQSxBPcpsQYbah1zbEMEBYEErDMtAFfbO9Lr-wAEgJiGQUc6UpAkBWzxZQP_M_85VkoqU9kFsQSuB3HrgGhWB-YEo-vRBOcbtBpaseAFtBjRBbNioHPxBgYFJAfhBEYGzAT5EqkYEQUBB7zqcnFjWvEEMQesBzEGMQTsBRYGzAfsBL5SHAdxBJwFlUHxBhYEhAS8BQkHCXr52_thduMMW_2bpQPEQ8QBEgfpBtTD0oKyapS5wAeAkHQHyQXKBC1C4QblB9IH6Qe5qRUH5QZcBN5BUylpBOUE2gdlBdUHrQbeU2IF6QW_AkFoGQSzM2VSWQXcB6kEWFjnGeP46bO1BHkEgiF5BBDpAARvEiKD-QZqOr4GVkrUeeUZxfpamc36u4NXmUZAufjG0TwBjgFJmkMyjfuHwqDw5wKg8R2j95vwsOkgvmkSiJHzJFMneS8AFbpamfq7YDITgHHbJFNUMKSQSKq_g9drYDNIQBBoC1h70m2DvxpG4gv5STsL-ZBrsAOL-OIpEYNL-KCioeIaOsaA8TvkW1qDZzDEMdAEtpkjI-AHgJMgogAHjAbw0ggwBSMEWB3QGAfzaE8Ab8jjaUJiy_paBJMZ6uFIBcj4eADj2UdRqwXguVTS19ANBL_4S8lGAcdBehLd-3iQxDK9BlursjPXY2kA2arJodmpRgPY6PGAryAjaOQpwLrMBGEGmHCKWsth6rCx4asFD_mOEoIhZMIJ4WGBqwSLK4BqbbFNAkgBYAIRmtSKa_g-BgVzQwQNBbkCoPOfEbsHqnI6k33p4wXrO2djwwed-5MKXSpPMfCYgGtgkZjCZwRHORLSiNKnBnYBjXlkwogGu2EmY9DyXzKI2FMbcwVEkSKA37k1MoWofxMpBcaT1eKN8-MGW1L-mfX7_piDBY45_wD4wkMEPDugIZYgBPC8Oo9qjwRHwgxg_to6ab8BimJsAUQC3yH7c7EqFXHxw0HAUcDgAQnB4cMro4nDgytJwEfpycGJmMVQRqHdIWJ7BlEr2CvAYQYb4FtzXwe5OmWCMsNtMALAICGKq_8CrwRPgYhQ0HCKCddwryE8Msi5iNIsGZ2oHdo-GddyfLqOOeICK3KSwDN6MqpIAdN4_EBPB2sD_Kr3AgKrLwIF0aOQfJGhwB-aX8P1oln4cqlxmjw4gqs8OHfavDuwAYGRnljMGZwGanlKAegYBPAiqGGZZNthmo2gqwHhmfIIoWkRmycAdLlxOKoYNRiEwzib_uOqIXE6uJmDur0BGJtGcUSazAB3GmaBBJjduISYkBvqAOE4h3MAGNp7V8NxYAJBkMtfSDyYw_KGcFgB4Bu9ccDIISHJuNHBuCDeOJzIYWtgykE5IBvIhl9LzTpQyGG5EqvQyjDL2IQ500Eh6IU8meiEj0pZYpFoT0lhYgjKt7oYhzFyhMh4y8njwSLLoPjJ-MqohMdxEbqBa1i5Rnl7c1i6G3NkQD3i23FxIwzRtINJupUhDgQB8YDZy-HLiCPiFJFxWYbA9bjQGDiFeIYPSPiFGyNwy49L8MoEhM9InhnTma6RpBIqWAjx49kEAXOhtauXS_GDHbN5QHQyZhNHU-LoXENM8LAB0oLyy_SE9AFS8urjnJFnKJNy0YMumpCxWILkymtpYYFMhn9IToIrAN8AzQJmENLQgFi4SmOzz0mjkXlCn4Mcc6abNAKgI71BPiLOsdKTLEqrowsj3SryypIYqquvSY6zcINLaKrbfIHj2LWCywEkQ0ghuUOM2ioyvIDxgP8Q5ltX6vLJxUFg-gBTGbPC6I4ATpCDMnDyCPMM6Z4DhtGwgHyEzIH3q6jIPwEEIAgDsVv2UtwBQABFqTgg6cIeACogngHqel4Dg7k-ArGgkobTGV3DkgPYAR35-lIyh7gAkofKQVWoVoE-AUMCQypA4fhA8yCmoT9az9EOGoqDKIaPScnS6_HKwrKGwcP4A9waoEneU_KEFlrP0YqGWWO7AdYYqobZY7sAyBjq46qGkBuKhLAacgGVg_wAvGJJgKtpq2uYABLIGNsFMhKHEobKhy2oKoaPQFVC2Jg4h-Ab2JrduTAaGgFbICiEMBsh0oSYydqE2PkziIT5I7iaWdnLGbiaugLLk3qGSBsohhNiWJsGh-gDcQaKg2Ob4ugKhRwCBdHGh1iZkshmh4O7cRIkA4yopqMkAVshP1huQYvT0ZEu4x1h2hsWh1ixjIXxmcKCMoUd-HwBLcAUh-wRFIUuQmWBJBJlgeaGRoLVgQqGBdOAy7Fa1YB2hm2BdoZ6gPaHqMgH-mvKNxtmhkiEuJoig06ETIYSsGnif8E-4wiFLoevQysYDYDWhJ4AJZL-4c7BHSDwua6EFAOQ6nuQ3mOJoKagdRoNGU0TRJoyAviaqelDYSwC5cL1Gq4BboSXgO6HV8Huh0kZLAPgmsLyEJmehu4jEJuwAv6H1dNtGgGGkJn-hVCaLGAdGPMQ2oQ2hKfjv2C-hEO4wYbgAKfjigFmO7UQ57CmhBZbRhIqhXigbkK3SZaG1gD4APxaYYRVQU_o6uJFQXaRJAWahTIaWoSw2buxIYdcQOgLXyLFgkjQMYVLA5ACRgIlm-aGiSE_WixjnvrP08NgfJDXIfZSdCPWhyGHmUO_YCoZ0Uu4QYmGzSL_KG5DTYAkA2yE0pDYe1qBEYdrMjqFEYFP6omFEoQ2hgQCyQHVYrGGyYexhnGG1ltxhx_RCvLP0FNJ8YcsSAmEehkJhnhrdweMAsmFwYWPYUmGf8DphTKHiYf4k_6qyYfphB0osYb5humG4ACZhXGHdoUvS8uJWYTgAcBJXvu1EBLKBdIJhi7yOYUFhXmGl4JXAanDyodEynmENoXi8kmGHofZUMmHBYbowbwQpRN5guRbSoSSh3CRjqsghsh4woEBM1CFVasJqAJCXqpug16poYKH-8-C2wHTmpWEDZAZqIpjmUKhh2Rh84IkQ7PjcIP9e3KhXEDjeDp6N6AeqI7DcIMAoFqAc5iH4FaBskAe68qFzapkQemCE0ItqVEqxoKYQZzhq4KdQ9qEbYWQQC2EOIMtq8ubA0MhqyegWoDx8o2EHYfHga2GZGA14Y2FhYEdhMBZlLENgXWF2MDlAHWEtVGZQqBJ1zo3gW-r7ahagnBDlYIQhd2a4IQ0AOABO0lNoHF4CUEdqnU4wFuJE6kgbpG6wISKbYO5UXaD-AHuqzcHrqrr-xRQpqBDh7vYvIEThUoEhYLShaORX_lzghCELYQThRJRsobKhMvCTsD3oxyiaPtx-wEgM4biaFhq7iM8Wc2BtQKQQVOHQ1u4QG6r4uIQBrmB04Z_AwhLaDsr2DFoVoDiItqHO5mihCuGrcDohvHR6IbdoSwBGIfR0JiEIMuYhooD_qtpg4-DooYSWPgwNAHghOACm4c4qgsBK4UmY8uEYocIUTOEi4T5BHRC7aN-gpjKJwRbhMOFVarzhrGFi4WkAT6oG4ImqpBCdEB7hpDrc4bCYln5X4BDgfOFdgBVq7tDS4K5qN2F4QHdh-lAZYc9h-lC1II3gfAzc_uThsAHdoAh6eEAZ4XGEWeEfYQ_qrXiwAJ4sm6Dp7vDwLADcVjJQmf5h4ZLAnuFFinSuaQH14TFWV2EfoJ0Q1kBP2nKgWjj7tvuq9v7u4S3hd2CPvH4ACqEuZIBc80A64fx0TiFNssNwDDJ_fBiiuepmILXAeADo9INBoELrVgZgqSptADXkuBwsAVskGHghYGDsp3oV6iTAEQAb4a84iFBTtjQAaTYB6lfhB-FQTHKQ9-EEAAVQahR2GjbYDCC-UB9qO-FF6tpg5-GO-pfhksr7DI_hWSoLfh_hahTAEVIspmEtAPR6T6TQAFwQ9KQXbCsgG7DgrP666LinGqjqm2FGLoXIObaZRKcap2bH4bYuCjTZug6AihreanNhEO6XujvW7Aid1BpBy7q4mDwhlqCgwIlm5PIU1vmARJroADbuk-j2zBTuBxAyIcxgvBHM7sVACnpFEMIR8wCiERTuvkQqVGpUqFyCUFIR2QB8EczQxNjGepIRPBGqETHWPxaJJqwO2PQpNrU2fHaWtpk2GepYZvSYOTZXuloR7O4MEVRoB9bW8qCYZXb9di12bXYtRq4ymnRnKBEh3jJ2wH4y1AanUPT24OFXENDeLrrenGk85O6wmhFAyhEyERERbqxk7u_gFtaHaivW_Gx9doiAA3atdtl21XYsxOJEVxCODPjsE6EnfmA81XKPqMOquBFGLn3hBQAD4QQUSZBu4ZQY4eF-JJFgstDoxiPqpSASErtofeHZGKgAwkCvINPqdUrrgp6oniztEZr2ueE94W0RuvopAJURQJyi4SMRlBiDEZ0RnqghXgKu_mSB_q0RMxFRqGgAXRF1aI3hGRBlEWsRcxEWXtReAB4A5LwaI-GrEZgA6xHzEQcREkAPZtPwowA9EdYstxSXgLMAJNwqoNcRGk7nQMds0xHDILMR2uCJXtQG61JcEfEADRES4TURwyB1EYCRk-F1hjJGIWDN4fi49RF-AAEmDxHGEjo0BxDgkbLQHDQDpgJQqJEBMt3hIJGoQOURs4ATEW9aZYrQkaPhsJFYkQ84E-EDntW6aQYW4ZkGzEDquiOARGqzQOsA8AJECuocJ9RFXvacTV4WMi1eg14TSOvqTAgSQJdaNiGBLpXGYOglHMdYJFBtIPXUa2bygLbAaE6GdLbAs9SA3J_imWDQ3FFAtWBg3MKRCpHHtHYhQESfsCRQX7ZcdmzYql7xSkfsmOqmkaZO85wATBaRnU4eLgns1DgHKuYEtpF_oJyRcpwWToR6l2FNrlTEwVxBTI0cJPhs3FkuhAB5LhHmS5yYkFKRECAykUGRsmiRkelUHXBByA949gSGkaB20ZEhkSKkTpER5uYku3ZPLK6RP2KxoHh2YogZ8oiczLZTbKC2K57k-ng0z2CRQbkm2Fw1XkSKFbrZHuzqVYS-kWBs_pFRRGYq3JGDrlAcYZGWkQeQ0pFzjO4uGrD9kYeW8ZHNkRwISZFMUEaRzfL2kpOGeZEJCOaIOcYI8hy2oBCdkSGRZZHu1O_yivz6PJlMfZ5-nL2RjeDDkdkU-5HJ4Km27crThChqTBpUKjLYgNqukeXO0F7O-sOcmpF3Xojej5HHkcGR6CpPkdVe0S5V7KjhJSBn6OtepPYnXukOO16AUfOYMGDAkWQQ3ESUQKZQVBEtETQRDhG57MHmuRHDnBHWROzpXhsWyFGSXvHW2PQ22M2hhMibBMUhkPhlSPkhmwSFIQRRbWTQDEh6BxBukQ6RHpF2ys0RMPAM-HGswyA14aGgPZZOYRh4gXL2kd3sHpFVEdng4grjij8cDFF9Ed3YAxG7EXcRbNgQ_uThJLaPoBBRqdD12KDEZ4DiwUz2amzDoD0Q8lS2OregHCT6ESFMg5HqHIeRHwoasF-2sFE4AKyR3gon1G-R1lCVXnaRX5HNXuG0mpFgbAH-u5E10E6sahqx6mAAxhr96sEalOF-aoKhesA2GrdklUCAwPUEHH4JXFx-NxgTcL4akpy_4S6qTerRUezgvhrr4VlA2uBbGm6oSVGb4Z6oMRpW4DyarZHr-u0ktdBY4IwA1i6CeBoIhqreZPCa_fBlUb_A8Jqu7FVRS1xRtiAQYBDwmvpQ1UBTGsGknl5qAHoa3diDePCaQl7VQEJe8Jom4arhsVHG4Q7hwjjwmkIAIgDh4alRMJFIPIJ4uFGkUS2h5FGVpNVAC1EjIfhR4yEUURaqw8zOZE42BQA5YIDA8gDNUedQ4JicviB4AFFa4JOYx1HpUHqYZ1FHXkte2QDFGvcay8yb0NlR09CmMvSaE0FFUbksJVFdjC_QvBKNUjagECDVQBGRv8BZFDVRxewg0ZORxezXURagrVHnUPCaP1iDeF1RAl7ZvIJ4fVHAAANRgnhDUY7hqVE40eNRA8wvgNNR7Rq4ke3I-LjwmmtRdDAbUfsMB1HAAJTRZFGbUZWk8JrBZLqYADb7Ud_gwVF-OHg2x1JfLh4g3aAYonjAgnj6UKdRhqoXUZtej1FC0edQt1HVQPdRu17zmE9RlxqvUe_gJNHNcB9RzxofGo3QWSHdKndQFBCVGiUgsNEAwMAAbVGANOmgxbwLGu1R3VHMwCjRqV5o0YA0GNFY0YA0Bl494PjsUNE2XmdeV14FUoTRU1Fj4alR0uHbUTdQz1H5YErRf6BgMLfQ_WDFDjVhM0jLwZvAcMyYaP2ObY6PviVOlQ4Vjk0OD5HnXuWOE5S3Xm7R-ZzDnMnRmdFaXmaRni4emh0IWdGmTnWRL4i-mhXw65olIHnRmaDBESW6jezzDjWAU2Fo3hqATdEbRItectHLXl2OWAjbXsngx17zmI2OkqiR0USU7MDcIEmOYf7nUJXRJdEnmpamI9EM3gN-gIGjfuf-IIFktgCQuNo0ANlw-8wOfhvRBADZcP8WN4AFUNIyvjL3aEcst25ToLUw8kAellDApYwj1GeAdlDwpgQAu9HZcCPUrtIc4Jx4Y4DP0SR4ckQ0KFvRfqj80Y0Am9EH0UfRadqyMnsoNsDn0dWmWTBX0bQWN9FZMHfR6X7v0WeAX9HlcIgxo6Af0U_RtlAv0cugR462UEAi29EAMbvRQCLAMcfRYDFn0b8oF9HQMfKA19G30VOg99FIMZ_ReDFGQK_RaDHyQJ7mTDHf0ZmgNCj4Mf_R4UCT3MQxNsaH0aQxp9EQMRQxUDFrUDAxpEaelvv4dDGsMfKA4dgEAEAiLDGtLOgxyXiKMcwxODEPjrZQsCIEMXwxLWDaMXAxa1A4AEIxoDEiMWxu4jHSPtQxsDG0Mc-hcjGBiJgxNACwIsoxD9HpKowxjjFQwJwxEIDuMboxEUBRAYYxNLYmMTIyZjGQMdagl9FWMVIx_jEyMbYxKjGP0X4xzjHv0WoxTjGaMTWA19E-MVcANDGCMSAxQTEISOQx2-ihMVQx7QAZMWtQCDExMfIxY0qwMfExqjHlMRExnjEpMXBGW7ZpMdhg9THQEpkxwjE5MaIxeTHv9AUx1RZbtjYx1qD0MegxZ4A9MXpAlTFsMdUx0QBbtrUxK6Dn_lEmXDwAeA44NcFNAa7YWjjonmiAjHYLUDxg-TJgAFsxP1jw4GR6GBiqgUcRH0DalN9gn-44ARoM9kEU9G3h5URXMVMBOVbpQJr-EFTXMYuYTQFPMbnsIkp0QUcAPEY_WFZ2PGCK5BRBLzFgAMzYQvQQVFbIjzGeqK-6afAfADggjgCYAKnsEADccOTkWAA1UMUO5_5CiAsxa1C1wbxEqzGiSHaU-grw4GixHAHAkcmG2pSHMfg61qAnMVCxlZAJipcx3dh3_n4WsVZ0sVLkCYroQSI42djP0cLgXB41rin2sNgeZqBU6wCzMbOwn_AYsdfAWLFp0Gnw6zEScn_BkGHPxoMwmv6u2JKo5_6NAc0BmCZOTpr-hZwRqAB4TLCygEdgKSa1qvtwIAFLoLw0z9HjXuqxnRjn_v5AEOpOTlJBTQbkiDnKCKCgoe4ABLGn5tYIA0GljGKxyKDHQWaBo6KvoI_2ksA0AWNBGjZesdJBb9ECAHJB7UQwsvaxoKCOsR-AoUbKsa7Y4gGIxmNBirGn5vUBg5pZwKhA-8yr0c0I2bEZovckYTEjqpoilrGfxjsAORSLMSqxn_DeZuWxCbEtAY0OeBDr0CKxiQBisbkYDbGSuNWxM4iJGPg88zFtsZixSzEc4IKxWHKtse6xfbFKiJtAokrn_hgCcVCAgfvAwIEkYKPQzrER_v8BPgz4tDOxwOC5sTsYnwE4oCdBGAIxmHI2434gtKux4cD5sbMWfkBmgbUwkLGQWtAhf0GY5DKelw7baNYuKp5_KlqAn64kQCQhU8FPDuWIFCGnwM0ucECtLtuOH5hMSNghdgDQ4TnAdOHEIZQhr4LcKDSY_AQIWmBu-GbcIau6vCE3iBcmU9KYcCroNyaC6KPSSwAocWnSShjXJoNwmHGbJlSqGbT71EdooXYxAO-26Hb_tneYIMGAZgm0Vtzu4W8A6SG4Tp4szgBMccN0J4bULJYINngj7JM2M-zNAJBxp8jQcdSmtGCVVmlIFW4aQCYIImA1qBxAKh7DFpsM4k6TYD4A5yQbsLxAdmqLwNjmaAYZaAEyfxHystJ6iJhQcXCYoUB_gLdIiWbeQP2UYAB2hnYAUkZEANTQgXREYZxgoMB6QHEIgXSFoY5x8MC1xoI42ObWcelAtnHYwC5xLQBksrZxMCKNehOMlnE1yAW4o6pD0AGcuSzT9FOqWoC1oPOki376auugV6p4MOhguVTIat1hYjpJcf1hxmqoAKZqGXETYd5q5QCAhGz4OXF9Ya1h6egdYQBquUAx1D1hIQx9YSlmg2F0KCNh-2HjYQcQ7XFhYPTRS1GM0V9IJ2FuYD1x1NGEUUR6xxEL0GOAN4DogGNQ78h7UbOA5WpdcWrgQ3GtoZWkn2EoaN9hguFXkUlKNpyTUV9wTOCjpHhRy3GNOFUEzJhs0XNxVVgmUZqqUxH74OxxKOxwbOt-ZOE4VmdxhYQf7h1BRwBbSJzYQqyp0MFQ80CiZJ9xp3FzgAVE1zCzcSkAF1jc4eygk3Es9MDx5WpSUY9xIPHMhN_gRuHjcQQAEPHTcZjAUPF9REtxy1E5YNBhAeE2GMvE3uGJcSNqhsGcEDtxYJH-hCHh71HKQd5g4PFTcXgA6PFWFGPYOHFocesmhHHeuNsmuyZpit9-QYjNABVE4BpceAxRo_iQ8f9x79hM8fhxtyb8WPk4xYRBIHCAoMrLQJlMgUHz4ILxY1D08ZD4qmHD4d5qNPFC8WXST3H8LtgADXHpmijxeAAzccLxGPGKwAdxWPEI8ZlxH6BK8UbxaPEm8c9xcOZm8YtRw3FbUfEsVuDzQEzxeHHa6BhxtDLK-FUh5bLD0kbIVuBXAJ7xvDJi8azx_Fi1oA0Anyb6xFdxplGa8crx9vG68Rn2rmoJ8XTxSfEvznrxiBHr0uzxw3AGBla65grzgaieOsxu2CVQcwohTHEAIhHG8drxcPEO8TWQxuG08Srx2USi8d7xBHG-8Wzxbgi7JrDqDfEs9NXxsPFfSO8U3ES0-EhRPfGJ8TXxX0hWyJXx0hF98RRWF1hs2MPxAc404Q9xs_Hf4IN4pBHEkXnh_fGr8RsWC_E11tagHYzIsqQQE4SjyNFMx_H5UQJQZ_HGBGOATfGo-DDxK_GVQGvxbyoFEQPAD9R_YeQRruwPwGNROIj9VCDh7RA31gVRQNEJrBDUKFDyyknGu2EFTPXYBOQaXiAJfVwbWir6fFBekfXxC9Bj4SYeG1qOYe3hOlGk_sgJsJH4FJMRruGq0ePhQJECrHNcdNKy4TcUBc6c2M92Vhh-ODEmxAm7iKgI3ESOUB3GdJhONsdKLcjUcfSaruxGXn-gZnhPtoA0WGCwdpNWx1iCjPK43ay8ciLIgCrUYO0sHt6pujh271CiKvwJPgg5lvnYyJzSCEXxi4FklvlIxlaj1mFEkHZXShyOTMb0UWFE_qa3yJwBKcbcgUIECkBsxmYJDWTvZmQ0FgBgwDQJjIAw8O9mXOwO7HA4SQAAfOgAzAlDzg9AWzgeEDdxwxAbkKw4qBGSCJfIE1CmCNqojAkJAD4JdU73zMwJptrFFOKuwk5eCcwJf8q1gGsW4kqhoXjYsuRMCZIIdnYAsUbOgpG2CMwJbnaF1HkJDTpONqOunjBxxtyQQc5J5HKYS1AsgNnYVyHxhlTONKRvALXC1P6mUaVxQgCJAGxxHgCIrAEJgwnRLKgIjXrRCu0JIRqBCYDOYwlfJIq2dkG5VoHYngk6NMwJ1QkboROuM5BYYCOkUzYTUK0J_PItoBOEXQk6_tdxIwlM2GMJEFHg_D9InQkQIPbhtSzDUYiQNP7j8dvxJfjzRsTGwwlizGMJkso4is4AHSEjYfLO1DYVCSwJADbl1JXUxOQ4LqTMuaQHql-g0wlwAD8J-DyJEMlUOebXuPGI3cwhtNEEIErF7PPI_7ZpkMzgTgn0Dg9OPMSAiYkJlwElFiLGADaxTFnQMImgwGSJxRSNkKnQ0-qp8X9gMIlwiVw8CInCgEiJwoxTpqeRvNExJg1YieZF1OxEAe6sAZgJExj3FJbR-ezoUSX4W24f8RQRsmjTGEe6N1HA4RdxTmCcEJkJ3jTB5kjRinbqibE2LHZaiVI2zUG8xIZ2wowaNuq2txa-duy0BjaFQCZ28thYQQGhONYAtmXgK3asJElWMTbE1qHmCTbkQcHOkpHQQWzYy1zQCbIKXAkuQY-cjcZ4iSyBCQjmdpAATEGRibLkM_Cptkp2ckovxKFyIdhgdmQIRbamUp8cVexvto-2kXYGNrG2Uia-2CEsCbaRNMUJBYkMCYA0S4YKErdBrkGLUDh2CzjcGHawPsDQAOz-gpHPMddQ1omGQaF4xQTcETBAx9btLH_SdGr1iW5UrHp_GOx67gDSAE68XVLViRrWsxxjOJ7ASkByYNjA8MC1_lhqc-T5gJ_mcmCYAM-8lcBcEMfW0giz7PwAUSY9iJ082Jx3QbIJ7lQjifi65gDqAIXY3azhilFQtGD9WtsGK5ZYallILbr-oD3kjbajNs1g2jJZuhaAkgDU2HdBpIYX2GgwsUj-UJaWoJj5SPpQI3Q02k-I-d7GGBKW-Zb0_k_aigz--lj-wk53QdY82XT53ieJj3xnicOJqmCXiTkMx1h-NtZ2BVSudvS27P7C0dMYZOShVN1Ax9ay5FRJ9xj_TNAwxXbSCOH6zDyRAoxJC1BarF3kHwwTgGxJIACz7DOYnTx4Sbbyo4k9Qfl2xXY_FouJQ4YheNWRGN4nUdRJclRz4MfWxUD6ULdR2rgpdhJAMklVianyMqiTmCgGx9aBdP4Rypg86vNwk5hFUJ3IWrastvS2s_QmSRaYZkmcYMyhEPqYmNBxacCpiASY0QBEmK4KCvDsEbWWndgEUKdQzUh5SBOKgDTzQIJxbkDCccZxb8ynYAZJH8AWSd5AR37pwVcAEUnCcR7I9PboAI_hGUmr1olJaZjs_kl2jD60SdN6xNhPYfiAU_pFSXV2hUlz4F12somgbMDh5UnauO8JowmMgI2QfBQsiQ5ydwATQRYAQ6F3UPnRt1BGttNcZnhatnv41TYq4F9xOvEGoE_ieDbw3Fq2QqFDSa62T9ajSfPg40m18YvMT-LOfBV4YYkwQcsR857XCS1c-NHf8aXSW_EP8Qn4ccYo9jKo0wl3Zqxx0wlOrAdJCVDGjk8JJ0nZeLwIc5GK8Y3xGfGQ8C3x6HFt8aPSxjEzKPBk54BwSPkRWAmsNIHhCWQh4ZfxiqRj4UleJESnCQX0BRG9CZQA5XEyUAfxzghH8TCJM3YQlAeqiMn9CdMJvv7m_rYAXFCU8ZKwrwRs-JlAVar1DlEaUFGXgd7R4uHKiW0o5DBE0SgJsawC4b9hlPGuajjJAwmIrJDJOaTFcaDJGC7wLqzJj4A8yQQJEMR4yTjJ-vGMGtOAHWGKCsUOD7HR0bU4MPS_wNPREmg0ybtxaAhT8KGa6wD3yIWOVdEbMOKJtD490R2xuokq3kbJ9dxyCbXRHD53CY7hKsm58E7x61GHcd_gcIjnLkDxGfG2ydrJikn3GEPRDm54QLdR3smz0c1GMXEY7AzemSFpIZzYo34UfgveIHFrLKfA7fhgcVoh6CFwQH3AQKqkIW325CE38EpIqUlwmLhmiFrwcTHeqFrEbqMUHDLYcFRYtlj-IQ0hU9Iz0umeAOg7IGOqWtEATJOq1aAJcTOqyXHKiJVxKGA3qsMRLRHZcXVKLWHREItoNXHOanVxIwCSyRYA63G_YZtxasnh4b_xm2Fg8WPhUOEE8fhRkWDrvP7h2AmB4X6YxQrPVNBBpPEoCeDJguHsyb3JbpyDyWvJ_4CYXKPJIzov8fVxk8kUENg26zHMdkJehlHyXs9etHIQUZdx3OFnyQZKTNT68sj2GAnvgVYYRrByoHKgO4hsCdGRL5BPnljQxkTcgcHx05F_oB9uDvaaiS8Jz5E20bfhZ7p3UB9umvYPyaApz8ldhMDmUi7cREaw6l6FPmBgQClEYF9gACmoACQpUaBxCIZQ5CmUKdTQVjgsMLQpoMZHACgO6cZcEXSBSkBYYPAAuhCWgHigQEgQUrVyPwAWgBNANLQWgOH-C0zY9MPJY7azgPYAVLw6cBNuRbKcMqXJ_FjlyQIyTSHKtvpCsin_BJnwUFbRMmSyXFZC9IopJcl1IbwyASGVyUIyASbWUtYsw8mUmn_AVzREKQIQ9JoEKbKQhpgMKWQpDzAt4FzQfTbxyLc0TOwYEIwkfKRL8aM6RQw_NMiJAPCgCiC0K4zqrgbJPUn5YA_JVuBSKZopcinM4IziWikTBDopy9IwuNXweQocxhvykLS_uDAcafDSRpvQu_IXTJXAg6Q7AAxCwH5urJXA3NEakVT6XNbH6mMAS6ZMUEQp-UhOVO0s7UipMtXqPByn9Nl0cJQMaqmBvCgP1LYpbzS01pIEwYGdYcPJNVTBzCiJjgpHkZG4CCmGyU7Rf_ooUYmUBFBCXq8-2dG4DND6RPo3UIkpinxpKe8K8FxJKdopFXb_ctkp7MZYAHPiNymWQFUKFhAVKepOEwjLEloEtSnZ-N8m0C7SgdpWXYmaUTAYL_rVuopmFgCBdE0pa6QFHBPATlTGKNuJVsjcHH1gdQxAqRWWzfRwlu9wLLI82HFQ7fi8lkMMM0BdVqVQz1DFwAwwNpZ62LCpCKnFdDN0c2agjDrUwmyiuvCp7IYmoUbYFBZMTnOAaAAWQJx-yLiEatV0JiClMlVUsglcYFtu-yFyYGugNxiQfkyG83oJgEaWxwAP1NIpKQBHKdnABritlhuJCwyM4tMh2imyavVIoqnEqXKAqSlyKRV2EWHcsi8MHgiKfEqp6SlqqTSpVSa1gGKpDymB9E8pRaDGqQn0FhB4NjapxfSvgssWtKkQSTbYCk6a0O9wA4muVJ8yE4m1ctipMknWunpsPmbLtiJgGtZZMlSAOeGiqSd0Y8nTKaEprTblcB1Rm_iTlJKJSal1jBKppynpKfTyGald3Nihq4yEtEu45SmWqVUpU6B2qXDcVZiImM6pUuTTcOvq0FGOnkvxb8kSkeD4-6bloUs4fRB-SKKcXBF5EAyYdTaNqUSMDJjX1mQJt6hUvHDW9vLY-tiOf6CRCDR4NBBgnNuJ76CVKR30Q6RjTkVWoIx-mNlIrkDIgI9Wf4EgyQQJaWG0Un1EFqnS4MWp_IY5ys3wcwQ2yMdYNcAgLkWUDJiD4QgJWyRqiVI28nY20YTYj6kqdimpAT7aiWoABok8ckaJItiaNjIqSMiWibLYMhSr1GqJPEZ41pMBRrZ2trJKhxbvPq-UhQnyrr8W7anLHFZJrrY8tj52RfbDphJJ-nGpNk6JFrZocP-UZLJOqY3W1dRBNqRJzolX1iJU1dR-SS0Ar7pZybSYE0GGEZlJdkmKmOKYxhFFUMZJrGmamO_yQUluSawRnklKcfHMhIF5EMhpsri-pF94iJyNSbjxIOB84NAYiWaVeCzMWGCu2mf0UmAAAL08dhNQLHhoqoKy1GHEMOJ6kRJSXrzs5CzZdOKgGFLv4EC08RDdqXPgPsbOYCl2falJVoVAxUDNvMxJGmmfFkkBo4y6ukoMuB7atLhgNvIe2LGpSJbSCHeoPbYygRpkcnyVqUJRkWzCHsdY2ggyYH5Q9KQBacfQT1DbiFm67Ugpunqp4JweooA0l6ki4FkAN6kpgYk0Z0E6uKw4RVC9ehgsrazvcDAoisBSgLUEhYCmaZOJ6oG2ODqAvqk2cA127Nz9qfopF9YtDH0Q_alQRiIyFMzQMJsAcqkllF6p2cD1abVynsDVmBBJzZgQ7ohptgDemKiAZiDlmDU2zGndaZZpxXZyVEVpOGm1Nnj0rmnOqXWGAam6epDAFuKQLo1pjnZJVlvhxGntEkVpozjHWP4yZWmgofeJtYQtaUYq2tjNaTk8lcBaSFZpgcoVbP7slADLaeFJSVaA9ClJF2meqDdpLDh3aZn6SAy57H_mz2kfacuCgoFNaQ9mFhDa4N9plVALadewAOmuaWhwb3Qg6ak2Wkhbaa9w7BF4cokAqMAraYZxDGmpeNEAyOmfaRgAVmmcaWaYbGnqrDTpLoAdaQzpltD09u_yk9GuSQNo7klIws3qXkn9aJtByP4nybup8sacYSTpp2ltiUTpWACm6okAHdjk6UJxcJhdSaAQ1OktaajpxXbs6Q4g9PYLsO9pPjStaVfWLGmM6dxpANyi-nxpiHFTQPyYaOY3UF3M0mn0keLpsum1lgRyukkmZtJpDynSGPJpLMyAVOmphylyKdh6WrY-trOAhGmDKs64w6kGaTgAuADJzMombYlh6XNMYuzJzPg2zMwSSV2pxXZFdqk2cu6sAB1paekmthnpomk9ZPj4iJwQAUKUPunngtKpsOZICfzJYunlaj_-PZDSaf5hqADB2HfMWSZS6VZy5nbgad4gcincAUC2QHCx6fUmuAAwabLkzwTNFlC2CYlWBMTJw8nSqQEkvem0HFgA_5Qd6f8EcNY4AIkAc-n6qaXpWqnqMrjc26l-0TBwdCrmUHcRBxA5ac7SBunQmOMpsaBEOEY-8MCHOh5x0UzZAZtM2MkhKa7qwcxXaeygVwCKQQRQUSk3UEspsSlY4PEp5jQl6QUAZenopNmp8ADnKfo051ROzIWph6kKwK8pp6kn-M-BMC7xppby7eYANjLJJYoVSg8eZgD1yT8EpYix0cma8dHdjvjwTMlKfsXRqsk6yRQIWsn6yajR3slDoO-p1BlYKWnRHtGWyXKwerAZ0Sie1PCByVgZEDIDsvexjHFwybcOie720h8egXRRyd7hTzaxyVHhikiUIQNGHcbhoZXqFSEeIWKREgYOJh6hNHHAjrRmmiFwwQ4huiH90lrhcW4SMlIypjFyMp20xHHBxNWyxN5jqtdJfBnNYct-BJYBSHdJaXIrSTlgzHalJqOkrTxRAFAAQQY8YHhWt6mtuDJQlLInyQvJluG-4ZQgT0HJbO1IpxRX4PAMvlFfMWukx0C8cdKW_HH5SCBxSKGvDNEZc8ni4V7hluEsBJEZgzARGbEAURlE8WnQDTL6GZMohhnJWNtOm2D09njh7_SUkdUZoua4vs2qqpFw5qwAdrCY4SS0olQ22G4Z8QCeGRgA3hnckI86AlDEyXAIvRnFgACBBPFu8CroIuh4cHeEzgB06KJwai4eEB0h0WB-cHfa1ix7BNbhXQCgSgsB-PGW4ahhzTBteE6s_m4c0plg6uFi6Jrh7sCBdI4GH0CnGXbA5xnCocDJ8-CMyirhjuGBGTDhGxnLMF_xCVB2Hp2g1X6O4VsZTmFQidpofxksNufEj0nJ8d1wPCbvyW6c7UmpzJ1JYjrQmb8JTmDHyfvgSxkDqu2hcsxNMREx417FGZIypRnZMclYegqkftgsRTHXwB0oB1r88LiZbTEEmbVgrgAYmSSZbPg4mQYZ-JkUWHoKJ_bEmdYxKfaMmXiZJ9FGGbrIXqxg8aiZTmABirCgdzFDYG1JiJnR0GZxIQAfwF3Jn6CCmWrgs-mLGfg8ySR3AMKZBACvutbp93EpGSqZWOYaNlnQ8pmqmSwcr7oE5iEaBpkHaHqZC9BmmWqZr7oDnlvpZpmfoBaZKJnKmYkQ1pkfcAKZzplCmSwcWGnd6rz-GfGo-I4ZzwkZcnzJ8fFAmcI4_xmgmcdJyfFqFBLJspnamfbgbUGmXlqZKAkSyeTJi0CUyVZO5LSAqbP06eiewYzKtmgvGSq2QYFyYDU-BrRu2DbxH9jSLHLG4GyBdLewxyQyQFoIMyCsTK1QiVDNAGqWe4mf4NZQJozxEDOWcnF8hvMhPbbNdM3hp1jNlrKp0UjOUG6ppaFVWGCsnEHkhjMhBGFshkwITLJMCNsGumnmAEpApgh6EWap0akjOnBqw1HhmQGZT0n0XggYxQlBaudJDmbAmWvRIWBPGVXs7xnasa625EgugMBqolQHmcnxCiqxXGqWJGFaYe7Y0JwuqZVIqto0YeRp23JtIZsZWrZ2hjcZN9L6IcKhs_QvmZnxDnEwWYN4Gf65JiNcb5CGHt6JzWrxoSKZ0hlBodYmG6FqbPOhsKCjQFGhyhmhJgahVgT4WXtQG1IWzsBZMAD_GUvpK6HoWZmhzqEKGdoZt9IXGcsSeFnYWeDuNEkvfnuZWraFoZNGDFk5ofHqgREfoNeZU2y3mVp2-ZlhmSw23OFiWS-It5mmoOfJ9IlXkbDWA5pL8XGZnpkxEnHxmmrLcKiZfnBPma3psnZXlNkJxNiqWTTg_zEyUSkZEFHb6eHqqABlCYVk1ln2mRrkrOQpGcpquj5llEfx9pmz6SzYDwlymR6ZauDL6T5Z5UAymdDQHSFwkQ2eSplcPDqZKiBlCY9OOR4KiDCZZ3rSabZZ3AncjNjWPEZmWXcAVnYz8IlZFln3blZZ6lkoCbZZ9lkOuvg8EelpQIGqG4bIGaOiiVnxmb_K6-qZWUlZlpn-WYaZWlmBXH0QnIaJWdZZRVkUyXcG1LHWKQuAe4QE1gOaa2msAJ1ZSxnV5JTaATp5EONZypkBiBaAYgBAIQqIlN7ygAK6wDQryEq65kGiVEq66hGU0gbqsVxWWe2sFEyWEPbp0PD3ZqMykwAhUEie4tYLgMkAKYY83oVAXQysANLWllojUDsAjs7R2vbpEF4Ohpr2S8KakptZXNa_KQqA9JHe2ubm4oD26eFBYGlMQTkJw4Dg2ezgeVk8OtJpLMmJqqnsNemAkgPggFSDWWiRzCL3bhEAmmzfWeEYkYA_wu1EANnGCHamARZAzK6B36q5bOFBB6raQIlZ9RaabKtxLJH02UsZIAEN4QSIbenQ2aZZCogI2VDu43a8NNDhOAAwmaQQclkLgO8ZmJCGHCogR97lWcwyhoZn_m0ch5J0WXLZXNZ5GekpwRnAKVnkgBTqCQ6AqAln2K2YPeTXiUfI7OBQhh0hZqw0frKJlqxtHHaGlVlc1lLZwxnXqmHWQtkTGcMUPwgbhLMZyHCicN5BOrhS2bVRi1I7GTDhXAlBBn0A6nLSRmVwENi5zmNxlel7yb9hu3b9bAzwlrGwkVvcu5g73HvcdjwPfJ48QIDEgFUA3gBqhL-Ab8w1vGiClZQvQp48enqQwIXZIACdtv0Ak5Y4gp48Iza4QOn0fjAmcb18U8A3wDIsBRwb9AwhWdkggLnZ2ryn3NL8gNDA_MzAWEAV2b18h9R8JNFC-8zj0FqADjzLxkAiOADZcEjAEfwRYp-xhcCz2WK8SMDGUq9C09ktwLPZekCQwDgAFITb2a_QWp5bsLPZ2MCH2YfZy9mFPABae9mH2VG8kUBH2ZSCV4jHsKews9nUcojAS-L5fOK0xnCmcPEQ5nBcop48y8akvIfZcmLIQlEWr4h32Xp619knmJnuS_hmPMvG-9l6eiZw0kGvUsfZnCHIWvnJrBGz2UZAl9lP2fl83hR9AL4UHhTeADg5B9n4ORN8hDlUgjCK1wIIObg5EMAUOeV8fcCMISiqd9nMcow50FJEoqw5CDmkvIjAHDmO_EjBwqJvmj1as9mf2VvZkHzmnrveVp40ZjaeSDbswmfcj9yIACO2X9z6Qqw8Mjnfrvhe19koblss69kH2afCkHx5waI5t5Ll2cfZgjnVACjBmdRowYzCc9k4AHw519kSGZoAd9kP2dfZzDnWgOvZuDmL2QGCUCwriD3ZuAA20rLwthQp2RAGqjyRfi68SADovEtw_QwMIcSgejwKAEdRQAA",__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:r,Map:ha}},n.a.createElement(ha,{viewport:{center:[.026,123.61],zoom:5}})))}}])&&Ea(r.prototype,a),s&&Ea(r,s),t}();Sa.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-map-map.0a7f7e152d78393fcab4.js.map