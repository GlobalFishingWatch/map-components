(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports=JSON.parse('{"version":8,"glyphs":"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true","sprite":"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites","metadata":{"mapbox:groups":{"basemap-background":{"name":"basemap-background"},"static":{"name":"static"},"temporal":{"name":"temporal"},"tracks":{"name":"tracks"},"basemap-foreground":{"name":"basemap-foreground"}},"gfw:basemap-layers":[{"id":"satellite","label":"Satellite"},{"id":"graticules","isOption":true},{"id":"bathymetry","isOption":true}],"gfw:styles":{"selected":{"fill":{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},"circle":{"circle-stroke-width":[2,0.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},"highlighted":{"circle":{"circle-stroke-color":["#fff","#000"]}}}},"sources":{"6":{"metadata":{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{"id":"nama"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"satellite":{"tiles":["https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}","https://mt2.google.com/vt/lyrs=s&x={x}&y={y}&z={z}","https://mt3.google.com/vt/lyrs=s&x={x}&y={y}&z={z}"],"type":"raster","tileSize":256,"attribution":"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href=\'https://www.google.com/intl/en-GB_US/help/terms_maps.html\'>Terms of Use</a><br>"},"north-star":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256},"labels":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256},"graticules":{"metadata":{"gfw:carto-sql":"select * from graticules where scalerank=4"},"type":"vector"},"bathymetry":{"metadata":{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},"type":"vector"},"mpant":{"metadata":{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector"},"mparu":{"metadata":{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector"},"eez":{"metadata":{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, \'eez:\' || mrgid as region_id, geoname as reporting_name, \'eez:\' || mrgid as reporting_id FROM eez","gfw:popups":[{"id":"name"}]},"type":"vector","attribution":"EEZs: marineregions.org"},"highseas":{"metadata":{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{"id":"regionid"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"protectedplanet":{"metadata":{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector","attribution":"MPAs: www.protectedplanet.net"},"rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, \'rfmo:\' || rfb as reporting_id, \'rfmo:\' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{"id":"rfb"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"cp_rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, id, id as rfb FROM carrier_portal_rfmo_hi_res","gfw:popups":[{"id":"rfb"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"bluefin_rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id FROM bluefin_rfmo"},"type":"vector"},"falklands_conservation":{"metadata":{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{"id":"full_name"},{"id":"zone"},{"id":"area_sqkm"}]},"type":"vector"},"encounters_ais":{"type":"vector","tiles":[]},"events_fishing":{"type":"vector","tiles":["https://gateway.api.globalfishingwatch.org/datasets/indonesia:latest/events/fishing/tiles/{z}/{x}/{y}"]},"events_encounter":{"type":"vector","tiles":["https://gateway.api.globalfishingwatch.org/datasets/indonesia:latest/events/encounter/tiles/{z}/{x}/{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_gap":{"type":"vector","tiles":["https://gateway.api.globalfishingwatch.org/datasets/indonesia:latest/events/gap/tiles/{z}/{x}/{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_port":{"type":"vector","tiles":["https://gateway.api.globalfishingwatch.org/datasets/indonesia:latest/events/port/tiles/{z}/{x}/{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_encounter_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"events_gap_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"events_port_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"rulers":{"type":"geojson","data":{"type":"FeatureCollection","features":[]}},"rulers-points":{"type":"geojson","data":{"type":"FeatureCollection","features":[]}}},"layers":[{"id":"background","metadata":{"mapbox:group":"basemap-background"},"type":"background","layout":{"visibility":"visible"},"paint":{"background-color":"#001436"}},{"id":"satellite","metadata":{"mapbox:group":"basemap-background"},"type":"raster","source":"satellite","layout":{"visibility":"visible"}},{"id":"north-star","metadata":{"mapbox:group":"basemap-background"},"type":"raster","source":"north-star"},{"id":"bathymetry","metadata":{"mapbox:group":"basemap-background"},"type":"fill","source":"bathymetry","source-layer":"bathymetry","paint":{"fill-color":["step",["get","depth"],"#1e346c",1000,"#1a2f63",2000,"#142655",3000,"#101f4a",4000,"#0d1b43",5000,"#0a163b",6000,"#061132",7000,"#030d2a",8000,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{"id":"mpant","metadata":{"mapbox:group":"static"},"type":"fill","source":"mpant","source-layer":"mpant"},{"id":"mpant-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"mpant","source-layer":"mpant","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"mparu","metadata":{"mapbox:group":"static"},"type":"fill","source":"mparu","source-layer":"mparu"},{"id":"mparu-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"mparu","source-layer":"mparu","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"eez","metadata":{"mapbox:group":"static"},"type":"fill","source":"eez","source-layer":"eez"},{"id":"eez-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"eez","source-layer":"eez","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"highseas","metadata":{"mapbox:group":"static"},"type":"fill","source":"highseas","source-layer":"highseas"},{"id":"highseas-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"highseas","source-layer":"highseas","layout":{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"rfmo","source-layer":"rfmo"},{"id":"cp_rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"cp_rfmo","source-layer":"cp_rfmo"},{"id":"bluefin_rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"bluefin_rfmo","source-layer":"bluefin_rfmo"},{"id":"rfmo-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"rfmo","source-layer":"rfmo","layout":{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"6","metadata":{"mapbox:group":"static"},"type":"fill","source":"6","source-layer":"6"},{"id":"6-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"6","source-layer":"6","layout":{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"protectedplanet","metadata":{"mapbox:group":"static"},"type":"fill","source":"protectedplanet","source-layer":"protectedplanet"},{"id":"protectedplanet-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"protectedplanet","source-layer":"protectedplanet","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"falklands_conservation","metadata":{"mapbox:group":"static"},"type":"fill","source":"falklands_conservation","source-layer":"falklands_conservation"},{"id":"falklands_conservation-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"falklands_conservation","source-layer":"falklands_conservation","layout":{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"events_fishing","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"type":"circle","source":"events_fishing","source-layer":"default","paint":{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_encounter","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"type":"circle","source":"events_encounter","source-layer":"default","paint":{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"encounters_ais","type":"circle","source":"encounters_ais","source-layer":"points","metadata":{"gfw:temporal":true,"gfw:temporalField":"timeIndex","mapbox:group":"temporal"},"paint":{"circle-color":"#e5647d","circle-radius":3,"circle-opacity":0.9,"circle-stroke-opacity":0}},{"id":"encounters_ais_outline","type":"circle","source":"encounters_ais","source-layer":"points","metadata":{"gfw:temporal":true,"gfw:temporalField":"timeIndex","gfw:mainColorPaintProperty":"circle-stroke-color","mapbox:group":"temporal"},"paint":{"circle-color":"hsla(0, 0%, 0%, 0)","circle-stroke-color":"#e5647d","circle-stroke-width":1,"circle-radius":6}},{"id":"events_gap","type":"circle","source":"events_gap","source-layer":"default","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"paint":{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_port","type":"circle","source":"events_port","source-layer":"default","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"paint":{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_encounter_vessel","source":"events_encounter_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["encounter_highlight","encounter"]}}},"layout":{"icon-image":"encounter","icon-allow-overlap":true}},{"id":"events_encounter_vessel_number","source":"events_encounter_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"events_gap_vessel","source":"events_gap_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["gap_highlight","gap"]}}},"layout":{"icon-image":"gap","icon-allow-overlap":true}},{"id":"events_gap_vessel_number","source":"events_gap_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"events_port_vessel","source":"events_port_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["port_highlight","port"]}}},"layout":{"icon-image":"port","icon-allow-overlap":true}},{"id":"events_port_vessel_number","source":"events_port_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"graticules-lines","metadata":{"mapbox:group":"basemap-foreground"},"type":"line","source":"graticules","source-layer":"graticules","filter":["==","$type","LineString"],"paint":{"line-color":"#174084","line-opacity":{"base":1,"stops":[[0,0.7],[8,0.7],[9,0.2]]},"line-width":0.5}},{"id":"graticules-labels","metadata":{"mapbox:group":"basemap-foreground"},"type":"symbol","source":"graticules","source-layer":"graticules","filter":["==","$type","LineString"],"layout":{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{"base":1,"stops":[[3,500],[8,1000]]},"text-size":{"base":1,"stops":[[3,7],[7,12]]},"text-letter-spacing":0.2},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-width":0.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{"base":1,"stops":[[0,1],[8,1],[9,0]]}}},{"id":"labels","metadata":{"mapbox:group":"basemap-foreground"},"type":"raster","source":"labels"},{"id":"rulers","source":"rulers","type":"line","metadata":{"mapbox:group":"tools"},"paint":{"line-dasharray":[2,1],"line-width":["case",["==",["get","isNew"],true],1.5,1]}},{"id":"ruler-labels","source":"rulers","type":"symbol","layout":{"text-field":"{label}","symbol-placement":"line","text-allow-overlap":true,"text-offset":[0,-0.8],"text-font":["case",["==",["get","isNew"],true],["literal",["Roboto Medium"]],["literal",["Roboto Mono Light"]]],"text-size":["case",["==",["get","isNew"],true],13,12]},"metadata":{"mapbox:group":"tools"}},{"id":"rulers-points","source":"rulers-points","type":"circle","paint":{"circle-radius":["case",["==",["get","isNew"],true],6,3],"circle-opacity":1,"circle-stroke-opacity":0}}]}')},"./src/map/glmap/map.css":function(e,t,r){e.exports={map:"map_map__1TLha",googleLogo:"map_googleLogo__3lQ1y"}},"./src/map/lib/Pack.js":function(e,t,r){"use strict";var o={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},n=function(e,t,r,o,n){void 0==r&&(r=e.length),void 0==t&&(t=0),void 0==n&&(n=t);for(var a=t;a<r;a++)o[a-t+n]=255&e.charCodeAt(a)},a=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},i={typemap:{byname:o,byarray:{}},pack:function(e,t,r){var o=new ArrayBuffer(e.size);return new DataView(o)[e.setter](0,t,r),a(o)},arrayBufferToString:a,stringToArrayBuffer:function(e,t,r){void 0==r&&(r=e.length),void 0==t&&(t=0);var o=new Uint8ClampedArray(r-t);return n(e,t,r,o,0),o.buffer},writeStringToArrayBuffer:n};for(var s in i.typemap.byname){var l=i.typemap.byname[s];l.name=s,i.typemap.byarray[l.array]=l}t.a=i},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Pack__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/map/lib/Pack.js");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PelagosClient=function(){function PelagosClient(){_classCallCheck(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return _createClass(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(r,o){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=r,this.reject=o,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient},"./src/map/map.mdx":function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return So}));var o=r("./node_modules/react/index.js"),n=r.n(o),a=r("./node_modules/@mdx-js/tag/dist/index.js"),i=r("./node_modules/docz/dist/index.m.js"),s=r("./node_modules/redux/es/redux.js"),l=r("./node_modules/react-redux/es/index.js"),c=r("./node_modules/lodash/throttle.js"),u=r.n(c),p=r("./node_modules/prop-types/index.js"),d=r.n(p),A={id:d.a.string.isRequired,url:d.a.string,data:d.a.object,color:d.a.string,type:d.a.oneOf(["geojson","pelagos",void 0]),layerTemporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),fitBoundsOnLoad:d.a.bool},g=(d.a.string.isRequired,d.a.string,d.a.string,d.a.bool,d.a.number,d.a.number,d.a.arrayOf(d.a.shape({hue:d.a.number,filterValues:d.a.object})),d.a.shape({endpoints:d.a.object,colsByName:d.a.object,temporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),temporalExtentsLess:d.a.bool}).isRequired,d.a.bool,d.a.string,d.a.bool,d.a.string.isRequired,d.a.bool,d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.number,d.a.string,d.a.bool,d.a.bool,d.a.arrayOf(d.a.arrayOf(d.a.string)),d.a.bool,d.a.oneOf([void 0,"geojson","raster"]),d.a.string,d.a.object,d.a.object,d.a.node,d.a.number.isRequired,d.a.number.isRequired,d.a.number,d.a.arrayOf(d.a.number),r("./node_modules/reselect/es/index.js")),m=r("./node_modules/immutable/dist/immutable.es.js"),f=function(e,t,r){var o=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==r?"".concat(r,"_").concat(o):o}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),r},h=function(e){return function(t,r){t({type:"COMPLETE_LOADER",payload:e});var o=r();o.map.module.loaders.length||void 0===o.map.module.onLoadComplete||o.map.module.onLoadComplete()}},y=function(e){return function(t,r){var o=r(),n=o.map.module.onViewportChange;if(void 0!==n){var a=o.map.viewport;n({interactionState:e,zoom:a.viewport.zoom,center:[a.viewport.latitude,a.viewport.longitude],bounds:a.bounds,canZoomIn:a.canZoomIn,canZoomOut:a.canZoomOut,mouseLatLong:a.mouseLatLong})}}},E=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}},w=function(e){return e.map.module.temporalExtent};function b(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function v(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){B(e,t,r[t])}))}return e}function B(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var I=Object(g.a)((function(e){return e.map.tracks.data}),(function(e){return e.filter((function(e){return void 0!==e.data}))})),C=function(e,t){return{sources:v({},e.sources,t.sources),layers:[].concat(b(e.layers),b(t.layers))}},M=function(e,t){var r=t.start,o=t.end;if(!e||!e.features)return null;var n=e.features.reduce((function(e,t){if(t.properties&&t.properties.coordinateProperties&&t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var n=t.geometry.coordinates.reduce((function(e,n,a){var i=t.properties.coordinateProperties.times[a];return i>=r&&i<=o&&(e.coordinates.push(n),e.times.push(i)),e}),{coordinates:[],times:[]});if(!n.coordinates.length)return e;var a=v({},t,{geometry:v({},t.geometry,{coordinates:n.coordinates}),properties:v({},t.properties,{coordinateProperties:{times:n.times}})});e.push(a)}return e}),[]);return v({},e,{features:n})},S=Object(g.a)([w,I],(function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce((function(e,t){if(!t.data)return e;var r="".concat(t.id,"Track"),o={sources:B({},r,{type:"geojson",data:M(t.data,n)}),layers:[{id:"".concat(t.id,"Lines"),source:r,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:r,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return C(e,o)}),{sources:{},layers:[]})})),T=Object(g.a)([function(e){return e.map.module.highlightTemporalExtent},I],(function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var n={start:e[0].getTime(),end:e[1].getTime()};return t.reduce((function(e,t){if(!t.data)return e;var r="".concat(t.id,"HighlightedTrack"),o={sources:B({},r,{type:"geojson",data:M(t.data,n)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:r,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return C(e,o)}),{sources:{},layers:[]})})),j=Object(g.a)([S,T],(function(e,t){return t?C(e,t):e})),k=r("./node_modules/@turf/area/index.js"),D=r.n(k),L="ZOOM",Q={NORMAL:0,BULLSEYE:2},O=0,x=1,F="geojson",R="raster",P=r("./node_modules/lodash/difference.js"),U=r.n(P),Y=r("./node_modules/lodash/uniq.js"),N=r.n(Y),G=r("./node_modules/lodash/uniqBy.js"),_=r.n(G),J=r("./node_modules/lodash/pull.js"),H=r.n(J),V=r("./node_modules/lodash/sumBy.js"),K=r.n(V),z=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),W=r("./node_modules/@globalfishingwatch/map-convert/index.js"),Z=r.n(W),q=r("./node_modules/lodash/template.js"),X=r.n(q),$=r("./node_modules/lodash/templateSettings.js"),ee=r.n($),te=function(e,t){return ee.a.interpolate=/{{([\s\S]+?)}}/g,X()(e)(t)},re=r("./src/map/lib/pelagosClient.js");function oe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e))&&"[object Arguments]"!==Object.prototype.toString.call(e))return;var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var ne=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=[];return(t||[null]).forEach((function(t,n){var a={};null!==t&&!0!==r.temporalExtentsLess&&(a.startTimeISO=new Date(t[0]).toISOString(),a.endTimeISO=new Date(t[1]).toISOString()),r.tileCoordinates&&(a.x=r.tileCoordinates.x,a.y=r.tileCoordinates.y,a.z=r.tileCoordinates.zoom);var i=te(e,a);(!0===r.temporalExtentsLess||!r.temporalExtentsIndices||r.temporalExtentsIndices.indexOf(n)>-1)&&o.push(i)})),o},ae=function(e,t,r){for(var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=[],a=ne(e,r,o),i=0,s=a.length;i<s;i++)n.push((new re.a).obtainTile(a[i],t));return n},ie=function(e){return e.filter((function(e){return null!==e}))},se=function(e,t){var r,o={},n=K()(e,(function(e){return e.longitude.length})),a=t.filter((function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)}));a.forEach((function(e){o[e]=new Float32Array(n)}));for(var i=0,s=function(e){o[e].set(r[e],i)},l=0,c=e.length;l<c;l++)r=e[l],a.forEach(s),i+=r.longitude.length;return o},le=function(e,t,r){return Object.keys(r).every((function(o){return void 0!==e[o]&&r[o].indexOf(e[o][t])>-1}))},ce=function(e,t,r,o,n){for(var a=[],i=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var r=e[t];if(void 0===r)return"continue";for(var o=function(e){var o=r.worldX[e],c=r.worldY[e];if((!n.length||function(e,t,r){return r.filter((function(e){return!0!==e.pass})).some((function(r){return le(e,t,r.filterValues)}))}(r,e,n))&&o>=i-l&&o<=i+l&&c>=s-l&&c<=s+l){var u={};Object.keys(r).forEach((function(t){u[t]=r[t][e]})),u.timeIndex=t,a.push(u)}},c=0;c<r.worldX.length;c++)o(c)},u=r;u<o;u++)c(u);return a},ue=r("./node_modules/@mapbox/tile-cover/index.js"),pe=r.n(ue),de=r("./node_modules/lodash/debounce.js"),Ae=r.n(de),ge=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function me(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var fe=function(e){var t=Math.ceil(e+.5),r=!0;return t>10&&(t=10,r=!1),{min_zoom:t,max_zoom:t,tilesAvailable:r}},he=function(){return function(e,t){var r=t();if(!r.map.heatmapTiles.currentToLoadTileUids.length){var o=r.map.heatmapTiles.currentToReleaseTileUids;e(De(o)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},ye=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(he())}},Ee=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r(),n=o.map.heatmapTiles.currentVisibleTiles,a=[],i=[];if(!0===e)a=n;else{var s=o.map.heatmapTiles.currentLoadedTiles;n.forEach((function(e){void 0===s.find((function(t){return t.uid===e.uid}))&&a.push(e)})),s.forEach((function(e){void 0===n.find((function(t){return t.uid===e.uid}))&&i.push(e.uid)}))}var l=a.map((function(e){return e.uid}));a.forEach((function(e){t(ke(e))})),t({type:"SET_CURRENTLY_LOADED_TILES",payload:n}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:i}}),t(Le()),t(he())}},we=Ae()((function(e){e(Ee())}),500),be=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r().map.viewport,n=o.viewport;if(n.width&&n.height&&null===o.currentTransition){var a=new ge.a(n),i=[a.unproject([0,0]),a.unproject([n.width,n.height])],s=i[0],l=i[1],c=[s[0],l[1],l[0],s[1]],u=c[0],p=c[1],d=c[2],A=c[3],g=[],m=fe(n.zoom);if(!1!==m.tilesAvailable||!0===e){if(d>180||u<-180){var f=d>180?u:u+360,h=d>180?d-360:d;g.push([[[f,A],[179.999,A],[179.999,p],[f,p],[f,A]]]),g.push([[[-180,A],[h,A],[h,p],[-180,p],[-180,A]]])}else g.push([[[u,A],[d,A],[d,p],[u,p],[u,A]]]);var y={type:"MultiPolygon",coordinates:g},E=pe.a.tiles(y,m),w=pe.a.indexes(y,m),b=[];E.forEach((function(e,t){var r=w[t];e[2]>=2&&b.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:r})})),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:b}),!1===(o.prevZoom!==n.zoom)?t(Ee(e)):we(t)}}}},ve=function(e,t){return function(r,o){var n={type:"Point",coordinates:[e.longitude,e.latitude]},a=o().map.viewport.viewport.zoom,i=[a,a-1,a+1].map((function(e){return fe(e)})).map((function(e){return pe.a.indexes(n,e)})).map((function(e){return e[0]}));r(function(e,t){return function(r,o){var n=o(),a=function(e,t,r){var o=e.map.heatmap.heatmapLayers,n=r[0],a=r[1],i=[];Object.keys(o).forEach((function(e){var r=o[e];if(!0===r.visible){var s=t.uids.map((function(e){return r.tiles.find((function(t){return t.uid===e}))})).filter((function(e){return void 0!==e&&void 0!==e.data})),l=r.filters;if(s.length){var c=s[0];i.push({layer:r,vessels:ce(c.data,t,n,a,l)})}}}));var s,l,c,u,p,d=i.filter((function(e){return e.vessels.length>0}));if(0===d.length)c=!0;else if(d.length>1)s=!0;else{var A=(u=d[0]).vessels;if(0===A.length)c=!0;else A.filter((function(e){return e.id<0})).length?s=!0:l=(p=_()(A,(function(e){return e.series}))).length>1}var g=void 0===u?{}:u.layer;return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:p,layer:g}}(n,e,t),i=a.layer,s=a.isEmpty,l=a.isCluster,c=a.isMouseCluster,u=a.foundVessels;!0===l||void 0!==i.id||n.map.heatmap.highlightedVessels.layerId!==i.id?r({type:"HIGHLIGHT_VESSELS",payload:{layer:void 0===i?null:{id:i.id,tilesetId:i.tilesetId,subtype:i.subtype,header:i.header},isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:u}}):r(Oe())}}(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){me(e,t,r[t])}))}return e}({},e,{uids:i}),t))}};function Be(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Ie(e,t,r[t])}))}return e}function Ie(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ce(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Me(e,t){var r=e[0].getTime(),o=e[1].getTime(),n=[];return t.forEach((function(e,t){var a=e[0];e[1]>=r&&a<=o&&n.push(t)})),n}function Se(e,t,r,o,n){var a=n.url,i=n.temporalExtents,s=n.temporalExtentsLess;if(void 0===a)throw new Error("URL/endpoints object is not available on this tilesets header");var l=ae(a,r,i,{tileCoordinates:t,temporalExtentsIndices:o,temporalExtentsLess:s}),c=Promise.all(l);return new Promise((function(t){c.then((function(r){t({loadedLayerId:e,rawTileData:r})}))}))}function Te(e,t,r,o){var n,a=ie(e);return n=se(a,Object.keys(t)),0===Object.keys(n).length?[]:function(e,t,r,o){var n=void 0===o?[]:o,a=r.zoom,i=Z.a.getZoomFactorRadius(a),s=Z.a.getZoomFactorRadiusRenderingMode(a),l=Z.a.getZoomFactorOpacity(a),c={},u=Object.keys(t);u.forEach((function(e){c[e]=!0}));var p=[].concat(u);!0===c.sigma&&p.push("radius"),!0===c.weight&&p.push("opacity"),!0===c.longitude&&(p.push("worldX"),p.push("worldY")),!0===c.id&&p.push("series"),["latitude","longitude","datetime"].forEach((function(e){void 0!==t[e]&&!0!==t[e].hidden||H()(p,e)})),H()(p,"sigma","weight"),p=N()(p);for(var d=e.latitude.length,A={},g=[],m=function(t,r){var o={};u.forEach((function(r){o[r]=e[r][t]}));var n=c.timeIndex?o.timeIndex:Z.a.getOffsetedTimeAtPrecision(o.datetime),a=oe(Object(z.d)([o.longitude,o.latitude],1),2),d=a[0],m=a[1];if(o.worldX=d,o.worldY=m,c.sigma&&(o.radius=Z.a.sigmaToRadius(o.sigma,s,i)),c.weight&&(o.opacity=Z.a.weightToOpacity(o.weight,l)),c.id&&(o.series=o.id),!A[n]){g.push(n);var f={};return p.forEach((function(e){f[e]=[o[e]]})),A[n]=f,"continue"}var h=A[n];p.forEach((function(e){h[e].push(o[e])}))},f=0,h=d;f<h;f++)m(f);return g.forEach((function(e){n[e]=A[e]})),n}(n,t,r,o)}function je(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(o,n){var a=n(),i=f(o,a,e.join("-")),s=a.map.module.token,l=a.map.heatmap.heatmapLayers,c={};e.forEach((function(e){c[e]=Ce(l[e].tiles)}));var u=[];e.forEach((function(e){var n=l[e].header,a=Be({},n),i=a.temporalExtents,p=a.temporalExtentsLess,d=a.colsByName,A=n.endpoints.tiles;t.forEach((function(t){var n=c[e].find((function(e){return e.uid===t.uid}));n||(n={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(n));var a=void 0===r?l[e].visibleTemporalExtentsIndices:r[e],g=U()(a,n.temporalExtentsIndicesLoaded),m=Se(e,t.tileCoordinates,s,g,{url:A,temporalExtents:i,temporalExtentsLess:p});u.push(m),m.then((function(e){var r=e.loadedLayerId,a=e.rawTileData;n.temporalExtentsIndicesLoaded=N()(n.temporalExtentsIndicesLoaded.concat(g)),n.data=Te(a,d,t.tileCoordinates,n.data),o({type:"UPDATE_HEATMAP_TILE",payload:{layerId:r,tile:n}})}))}))})),Promise.all(u).then((function(){o(h(i)),o(ye(t.map((function(e){return e.uid}))))}))}}function ke(e){return function(t,r){t({type:"ADD_REFERENCE_TILE",payload:e});var o=r().map.heatmap.heatmapLayers,n=Object.keys(o).filter((function(e){return!0===o[e].visible}));n.length&&t(je(n,[e]))}}var De=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}},Le=function(){return{type:"UPDATE_LOADED_TILES"}};function Qe(e){return function(t,r){var o=r().map.heatmap.referenceTiles;t(je([e],o))}}function Oe(){return{type:"HIGHLIGHT_VESSELS",payload:{isEmpty:!0,clickableCluster:!1}}}var xe=function(e,t){return function(r,o){if(null!==e){var n=o().map.heatmap.heatmapLayers;e.forEach((function(e){var o,a,i=e.id,s=n[i];void 0===s?r((o=e,a=t,function(e){var t=o.header.temporalExtents;e({type:"ADD_HEATMAP_LAYER",payload:Be({},o,{visibleTemporalExtentsIndices:Me(a,t)})}),!0===o.visible&&e(Qe(o.id))})):(s.visible!==e.visible&&!0===e.visible&&r(Qe(i)),s.visible===e.visible&&s.hue===e.hue&&s.opacity===e.opacity&&s.filters===e.filters&&s.interactive===e.interactive||r({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))})),Object.keys(n).forEach((function(t){var o;e.find((function(e){return e.id===t}))||r((o=t,function(e){e({type:"REMOVE_HEATMAP_LAYER",payload:{id:o}})}))}))}else console.warn("New layers in updateHeatmapLayers can't be null")}},Fe=r("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js"),Re=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(n){n({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:r,zoom:o}}),n(be()),n(y())}},Pe=function(){return function(e){e({type:"TRANSITION_END"}),e(be()),e(y())}},Ue=function(e){return function(t,r){var o=r(),n=Object(Fe.a)({bounds:[[e.minLng,e.minLat],[e.maxLng,e.maxLat]],width:o.map.viewport.viewport.width,height:o.map.viewport.viewport.height,padding:50});t(Re(null,n.latitude,n.longitude,n.zoom))}};function Ye(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Ne=function(e){return(Math.pow(10,-6)*D()(e.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})},Ge=function(e,t,r){var o={properties:e.properties},n=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=t&&void 0!==t.metadata&&void 0!==t.metadata["gfw:popups"]?t.metadata["gfw:popups"]:[],o=e.properties,n=Object.keys(e.properties).filter((function(e){return 0===r.length||void 0!==r.find((function(t){return t.id===e}))})),a=n.map((function(t){var n="POLYGON_LAYERS_AREA"===t?Ne(e):o[t],a=r.find((function(e){return e.id===t}))||{},i=a.label||t;return{id:t,label:i,value:n,title:"".concat(i,": ").concat(n),isLink:a.isLink,isMain:a.isMain}})),i=a.find((function(e){return!0===e.isMain}))||a.find((function(e){return"name"===e.id}))||a.find((function(e){return"id"===e.id}))||a[0];return void 0!==i&&(i.isMain=!0),a}(e,r);o.fields=n;var a=n.find((function(e){return!0===e.isMain}));return o.title=void 0===a?t:a.value,o},_e=function(e,t,r,o,n){return function(a,i){"click"===e&&a({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s,l=i().map.style.mapStyle.toJS(),c={latitude:t,longitude:r,features:[]},u=i().map.heatmap.highlightedVessels;if(!0!==u.isEmpty){var p=void 0===u.foundVessels?[]:u.foundVessels,d=0===p.length?[]:p[0],A=!0===u.clickableCluster,g=!0===A&&!1===u.highlightableCluster?-1:p.length;s={isCluster:A,count:g,layer:{id:u.layer.id,group:"legacyHeatmap"},properties:d},c.features.push(s)}var m=[];(o||[]).forEach((function(e){var t=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source}(e),r=l.sources[t],o=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Ye(e,t,r[t])}))}return e}({layer:{id:t,group:e.layer.metadata&&e.layer.metadata["mapbox:group"]}},Ge(e,t,r));if(!0===e.properties.cluster){var a=function(e,t){var r=e.properties.cluster_id,o=t(e.source);return new Promise((function(t,n){o.getClusterExpansionZoom(r,(function(a,i){o.getClusterLeaves(r,99,0,(function(r,s){(a||r)&&n();var l=s.map((function(t){return Ge(t,e.layer.id,o)}));t({zoom:i,childrenFeatures:l})}))}))}))}(e,n).then((function(e){o.cluster=e,o.count=e.childrenFeatures.length}));m.push(a),o.isCluster=!0}else o.isCluster=!1;c.features.push(o)})),Promise.all(m).then((function(){c.isCluster=c.features.length>1||c.features.some((function(e){return!0===e.isCluster})),void 0!==s&&-1===s.count?c.count=-1:c.count=c.features.reduce((function(e,t){return e+(t.count||1)}),0),1===c.count&&(c.feature=c.features[0]);var o=!0===i().map.module.autoClusterZoom,n=i().map.module.isCluster(c);if(c.isCluster=n,o&&"click"===e&&!0===c.isCluster){a({type:"HIGHLIGHT_VESSELS",payload:{isEmpty:!0,clickableCluster:!1}});var l=c.features[0].cluster&&c.features[0].cluster.zoom;a(function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return function(o){o(Re(1,e,t,r))}}(t,r,l))}var u=c.features.length?"pointer":null;!0===c.isCluster&&(u="zoom-in"),a({type:"SET_MAP_CURSOR",payload:u});var p="click"===e?i().map.module.onClick:i().map.module.onHover;void 0!==p&&p(c)}))}},Je=r("./node_modules/@babel/runtime/regenerator/index.js"),He=r.n(Je),Ve=r("./node_modules/react-map-gl/dist/esm/index.js"),Ke=(r("./node_modules/mapbox-gl/dist/mapbox-gl.css"),r("./node_modules/pixi.js/lib/index.js")),ze=function(e,t,r){var o=e%360/parseFloat(360)*6,n=100===t?1:t%100/parseFloat(100),a=100===r?1:r%100/parseFloat(100),i=Math.floor(o),s=o-i,l=a*(1-n),c=a*(1-s*n),u=a*(1-(1-s)*n),p=i%6,d=[a,c,l,l,u,a][p],A=[u,a,a,c,l,l][p],g=[l,l,u,a,a,c][p];return{r:Math.round(255*d),g:Math.round(255*A),b:Math.round(255*g)}},We=function(e){return ze(e,50,100)},Ze=function(e){var t=We(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")},qe=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},Xe=function(e){return 12*e},$e=function(e){return Math.round(e/360*30)},et=function(e){return e%360};function tt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function rt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var ot=function(){function e(t,r,o){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];tt(this,e),this.stage=new PIXI.particles.ParticleContainer(2e5,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===n&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var a=new PIXI.Rectangle(0,0,16,16);this.mainVesselTexture=new PIXI.Texture(t,a),this._setTextureFrame(r,o),this.clearSpriteProps()}var t,r,o;return t=e,(r=[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(2e5),y:new Float32Array(2e5),a:new Float32Array(2e5),s:new Float32Array(2e5)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,r,o){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=r,this.spritesProps.s[this.spritesPropsCount]=o,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.mainVesselTexture.frame.clone();if(null!==e&&(r.x=16*e+e),null!==t){var o=$e(t);30===o&&(o=0),r.y=8*o*2,o>0&&(r.y+=o)}this.mainVesselTexture.frame=r,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var r=this.stage.children[t],o=this.spritesProps.s[t];r.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],o,o),r.alpha=this.spritesProps.a[t]}for(var n=this.stage.children.length,a=e;a<n;a++)this.stage.children[a].x=-100}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),r=0;r<t;r++)this.stage.removeChildAt(0);if(e>0){var o=Math.max(5e3,e);this._addSprites(o)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var r=new PIXI.Sprite(this.mainVesselTexture);r.anchor.x=.5,r.anchor.y=.5,r.x=-100,this.stage.addChild(r)}}}])&&rt(t.prototype,r),o&&rt(t,o),e}();function nt(e){return(nt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function at(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e))&&"[object Arguments]"!==Object.prototype.toString.call(e))return;var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function it(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function st(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function lt(e,t){return!t||"object"!==nt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ct(e){return(ct=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ut(e,t){return(ut=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}ot.__docgenInfo={description:"",methods:[{name:"clearSpriteProps",docblock:null,modifiers:[],params:[],returns:null},{name:"pushSpriteProps",docblock:null,modifiers:[],params:[{name:"x",type:null},{name:"y",type:null},{name:"a",type:null},{name:"s",type:null}],returns:null},{name:"setRenderingStyleIndex",docblock:null,modifiers:[],params:[{name:"renderingStyleIndex",type:null}],returns:null},{name:"destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_setTextureFrame",docblock:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used\n@heatmapStyle bool whether to use heatmap style or solid circle style\n@hue number hue value between 0 and 360",modifiers:[],params:[{name:"renderingStyleIndex"},{name:"hue"}],returns:null,description:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used"},{name:"resizeSpritesPool",docblock:null,modifiers:[],params:[],returns:null},{name:"_addSprites",docblock:null,modifiers:[],params:[{name:"num",type:null}],returns:null}],displayName:"HeatmapSubLayer"};var pt=function(e,t,r){return[1/1.5*(r[0]*e+r[4]*t+r[12]),1/1.5*(r[5]*t+r[13])]},dt=function(e){function t(){return it(this,t),lt(this,ct(t).apply(this,arguments))}var r,o,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ut(e,t)}(t,e),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"UNSAFE_componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,r=e.rootStage,o=e.useRadialGradientStyle,n=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:n,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(o),this.stage=new Ke.Container,r.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Q.NORMAL;this.brushRenderingStyle="string"===typeof e?Q[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?O:x,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===Q.NORMAL?this.brushZoomRenderingStyle:0,r=this.brushRenderingStyle+t;r!==this.renderingStyleIndex&&(this.renderingStyleIndex=r,Object.values(this.subLayers).forEach((function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)})))}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.filters,o=t.baseTexture,n=t.layer;if(null!==n&&void 0!==n&&void 0!==n.tiles&&!1!==n.visible){this.stage.visible=!0,this.stage.alpha=n.opacity;for(var a=n.tiles,i=n.hue,s=void 0!==r&&r.length?r.filter((function(e){return!0!==e.pass})).map((function(e){return void 0===e.hue?"0":e.hue.toString()})):[i.toString()],l=Object.keys(this.subLayers),c=N()(s.concat(l)),u=0;u<c.length;u++){var p=c[u];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(o,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(a.forEach((function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:r.length,defaultHue:i})})),s.forEach((function(t){e.subLayers[t].render()})))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,r=e.numFilters,o=e.defaultHue;if(t)for(var n=this.props,a=n.startIndex,i=n.endIndex,s=n.viewport,l=n.filters,c=n.viewportLeft,u=n.viewportRight,p=a;p<i;p++){var d=t[p];if(d)for(var A=0,g=d.worldX.length;A<g;A++){var m=void 0;void 0!==l&&l.length||(m=o);for(var f=0;f<r;f++){var h=l[f];if(le(d,A,h.filterValues)){m=h.hue;break}}if(void 0!==m){var y=d.worldX[A];c>0&&y<c?y+=512:c<0&&y>u&&(y-=512);var E=y*s.scale,w=d.worldY[A]*s.scale,b=s.pixelProjectionMatrix,v=at(0===s.pitch?pt(E,w,b):Object(z.h)([E,w],b),2),B=v[0],I=v[1];B>-10&&B<s.width+10&&I>-10&&I<s.height+10&&this.subLayers[m].pushSpriteProps(B,I,d.opacity?d.opacity[A]:this.renderingStyle.defaultOpacity,d.radius?d.radius[A]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,r){var o=new ot(e,t,r,this.brushRenderingStyle===Q.BULLSEYE);return this.stage.addChild(o.stage),o}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}])&&st(r.prototype,o),n&&st(r,n),t}(n.a.Component),At=dt;function gt(e){return(gt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function mt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Bt(e,t,r[t])}))}return e}function ft(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e))&&"[object Arguments]"!==Object.prototype.toString.call(e))return;var r=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function ht(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function yt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Et(e,t){return!t||"object"!==gt(t)&&"function"!==typeof t?bt(e):t}function wt(e){return(wt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function bt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function vt(e,t){return(vt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Bt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}dt.__docgenInfo={description:"",methods:[{name:"UNSAFE_componentWillReceiveProps",docblock:null,modifiers:[],params:[{name:"nextProps",type:null}],returns:null},{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"setBrushRenderingStyle",docblock:null,modifiers:[],params:[{name:"style",type:null}],returns:null},{name:"setBrushZoomRenderingStyle",docblock:null,modifiers:[],params:[{name:"useRadialGradientStyle",type:null}],returns:null},{name:"_setBrushRenderingStyleIndex",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_setSubLayersSpritePropsForTile",docblock:null,modifiers:[],params:[{name:"{ data, numFilters, defaultHue }",type:null}],returns:null},{name:"_createSublayer",docblock:null,modifiers:[],params:[{name:"baseTexture",type:null},{name:"renderingStyleIndex",type:null},{name:"hue",type:null}],returns:null},{name:"_destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_destroySubLayer",docblock:null,modifiers:[],params:[{name:"subLayer",type:null}],returns:null}],displayName:"HeatmapLayer",props:{layer:{type:{name:"object"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},filters:{type:{name:"array"},required:!1,description:""},baseTexture:{type:{name:"object"},required:!1,description:""},useRadialGradientStyle:{type:{name:"bool"},required:!1,description:""},customRenderingStyle:{type:{name:"object"},required:!1,description:""},viewportLeft:{type:{name:"number"},required:!1,description:""},viewportRight:{type:{name:"number"},required:!1,description:""}}};var It=function(e){function t(){var e,r;ht(this,t);for(var o=arguments.length,n=new Array(o),a=0;a<o;a++)n[a]=arguments[a];return Bt(bt(r=Et(this,(e=wt(t)).call.apply(e,[this].concat(n)))),"state",{pixiReady:!1}),Bt(bt(r),"onTouchStart",(function(e){e.touches.length&&r.queryCoords(e.touches[0].clientX,e.touches[0].clientY)})),Bt(bt(r),"onMouseMove",(function(e){r.queryCoords(e.clientX,e.clientY)})),Bt(bt(r),"_onTick",(function(){!0===r.heatmapFadingIn&&r.heatmapStage.alpha<1&&r._heatmapFadeinStep()})),r}var r,a,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&vt(e,t)}(t,e),r=t,(a=[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"UNSAFE_componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,r=e.height;this.pixi=new Ke.Application({width:t,height:r,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var o=function(e,t){var r=document.createElement("canvas"),o=r.getContext("2d"),n=2*e;r.width=3*n+2,r.height=31*n+31;for(var a=0;a<31;a++){var i=n*a+a,s=i+e,l=e,c=o.createRadialGradient(l,s,e*t,l,s,e),u=Xe(a),p=Ze(u);c.addColorStop(0,p);var d=ze(et(u+30),80,100);c.addColorStop(1,"rgba(".concat(d.r,", ").concat(d.g,", ").concat(d.b,", 0)")),o.fillStyle=c,o.fillRect(0,i,n,n),l+=n+1,o.beginPath(),o.arc(l,s,e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),l+=n+1,o.beginPath(),o.arc(l,s,.4*e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),o.beginPath(),o.arc(l,s,.95*e,0,2*Math.PI,!1),o.lineWidth=1,o.strokeStyle=p,o.stroke()}return r}(8,.15);this.baseTexture=Ke.Texture.fromCanvas(o),this.heatmapStage=new Ke.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_destroy",value:function(){this.pixi.destroy()}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every((function(e){return!0!==e.interactive}))){var r=this._context.viewport,o=ft(r.unproject([e,t]),2),n=o[0],a=o[1],i=n;i>180?i-=360:i<-180&&(i+=360);var s=ft(Object(z.d)([i,a],1),2),l=s[0],c=s[1],u=10/r.scale;this.props.queryHeatmapVessels({longitude:i,latitude:a,worldX:l,worldY:c,toleranceRadiusInWorldUnits:u},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,r){var o={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},n=[];return void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty?(o=mt({highlightLayerData:o},r.find((function(t){return t.id===e.layer.id}))),n=e.foundVessels.map((function(e){return{hue:312,filterValues:{series:[e.series]}}}))):null!==t&&(o=mt({highlightLayerData:o},r.find((function(e){return e.id===t.layer.id}))),n=[{hue:312,filterValues:{series:[t.id]}}]),{highlightLayerData:o,highlightFilters:n}}},{key:"_render",value:function(){var e=this,t=this.props,r=t.zoom,a=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightedVessels,l=t.highlightedClickedVessel,c=t.leftWorldScaled,u=t.rightWorldScaled,p=this._context.viewport,d=this.state.pixiReady,A=i[0],g=i[1],m=function(e){return e<6}(r);if(!0!==s.isEmpty&&this.toggleHeatmapDimming(!0),!0===s.isEmpty&&this._startHeatmapFadein(),this.renderer&&this.renderer.gl&&void 0!==this.renderer.gl.getError){var f=this.renderer.gl.getError();0!==f&&console.log(f)}var h=this._getHighlightData(s,l,a),y=h.highlightLayerData,E=h.highlightFilters;return n.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===d&&n.a.createElement(o.Fragment,null,a.map((function(t){return n.a.createElement(At,{key:t.id,layer:t,filters:t.filters||[],viewport:p,startIndex:A,endIndex:g,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:m,customRenderingStyle:{},viewportLeft:c,viewportRight:u})})),void 0!==this.stage&&n.a.createElement(At,{key:"highlighted",layer:y,filters:E,viewport:p,startIndex:A,endIndex:g,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:m,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:c,viewportRight:u})))}}])&&yt(r.prototype,a),i&&yt(r,i),t}(Ve.a);It.propTypes={zoom:d.a.number,heatmapLayers:d.a.array,temporalExtentIndexes:d.a.array,highlightedVessels:d.a.object,highlightedClickedVessel:d.a.object,queryHeatmapVessels:d.a.func,exportNativeViewport:d.a.func,leftWorldScaled:d.a.number,rightWorldScaled:d.a.number},It.contextTypes={viewport:d.a.object};var Ct=It;function Mt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var St=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],(function(e){return Object.keys(e).map((function(t){return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Mt(e,t,r[t])}))}return e}({},e[t])}))})),Tt=Object(g.a)([w],(function(e){var t=e[0].getTime(),r=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[Z.a.getOffsetedTimeAtPrecision(t),Z.a.getOffsetedTimeAtPrecision(r)]})),jt=Object(l.b)((function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:St(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:Tt(e)}}),(function(e,t){return{queryHeatmapVessels:function(t,r){e(ve(t,r))},exportNativeViewport:function(t){var r;e((r=t,function(e){var t=[0,0],o=[r.width,r.height],n=Object(z.e)(t,r.pixelUnprojectionMatrix),a=Object(z.e)(o,r.pixelUnprojectionMatrix),i=n[0]/r.scale,s=a[0]/r.scale,l=r.unproject(t),c=r.unproject(o);e({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:i,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}))}}}))(Ct),kt=r("./src/map/glmap/map.css"),Dt=r.n(kt);function Lt(e){return(Lt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Qt(e,t,r,o,n,a,i){try{var s=e[a](i),l=s.value}catch(c){return void r(c)}s.done?t(l):Promise.resolve(l).then(o,n)}function Ot(e){return function(){var t=this,r=arguments;return new Promise((function(o,n){var a=e.apply(t,r);function i(e){Qt(a,o,n,i,s,"next",e)}function s(e){Qt(a,o,n,i,s,"throw",e)}i(void 0)}))}}function xt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Ft(e){return(Ft=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Rt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Pt(e,t){return(Pt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ut(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Yt=function(e){var t=e.latitude,r=e.longitude,o=e.children,a=e.closeButton,i=e.onClose;return n.a.createElement(Ve.c,{latitude:t,longitude:r,closeButton:a,onClose:i,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},o)};Yt.defaultProps={onClose:function(){}};var Nt=function(e){function t(e){var o,n,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,a=Ft(t).call(this,e),o=!a||"object"!==Lt(a)&&"function"!==typeof a?Rt(n):a,Ut(Rt(o),"onLoad",(function(){void 0!==o.props.onLoad&&o.props.onLoad(o.getBounds())})),Ut(Rt(o),"setBounds",(function(){var e=o.getBounds();null!==e&&void 0!==o.props.setBounds&&o.props.setBounds(e)})),Ut(Rt(o),"getBounds",(function(){if(!o.glMap)return null;var e=o.glMap.getBounds(),t=e._ne,r=e._sw;return{north:t.lat,south:r.lat,west:r.lng,east:t.lng}})),Ut(Rt(o),"loadObserver",Ot(He.a.mark((function e(){var t;return He.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("ResizeObserver"in window!==!1){e.next=5;break}return e.next=3,r.e(0).then(r.bind(null,"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"));case 3:t=e.sent,window.ResizeObserver=t.ResizeObserver||t.default;case 5:o._containerResizeObserver=new ResizeObserver(o.handleResizeObserver),o._containerResizeObserver.observe(o._mapContainerRef);case 7:case"end":return e.stop()}}),e)})))),Ut(Rt(o),"handleResizeObserver",(function(e){var t=e[0].contentRect,r=t.width,n=t.height,a=o.props,i=a.viewport,s=a.setViewport;r===i.width&&n===i.height||s(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Ut(e,t,r[t])}))}return e}({},i,{width:r,height:n}))})),Ut(Rt(o),"onViewportChange",(function(e,t){var r=o.props.viewport;r.latitude===e.latitude&&r.longitude===e.longitude&&r.zoom===e.zoom&&r.bearing===e.bearing&&r.pitch===e.pitch||o.props.setViewport(e,t)})),Ut(Rt(o),"onMapInteraction",(function(e,t){o.props.mapInteraction(t,e.lngLat[1],e.lngLat[0],e.features,o.glGetSource)})),Ut(Rt(o),"onHover",(function(e){o.onMapInteraction(e,"hover")})),Ut(Rt(o),"onClick",(function(e){o.onMapInteraction(e,"click")})),Ut(Rt(o),"getRef",(function(e){null!==e&&(o.glMap=e.getMap(),o.glGetSource=o.glMap.getSource.bind(o.glMap))})),Ut(Rt(o),"getCursor",(function(e){var t=e.isDragging,r=o.props.cursor;return null===r?t?"grabbing":"grab":r})),Ut(Rt(o),"transformRequest",(function(e,t){var r=o.props.token;if(null!==r&&"Tile"===t&&e.match("gateway.api"))return{url:e,headers:{Authorization:"Bearer "+r}}})),o.state={mouseOver:!0},o._mapContainerRef=null,o}var o,a,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Pt(e,t)}(t,e),o=t,(a=[{key:"componentDidMount",value:function(){null!==this._mapContainerRef&&this.loadObserver(),this.setBounds()}},{key:"componentDidUpdate",value:function(){this.setBounds()}},{key:"componentWillUnmount",value:function(){this._containerResizeObserver&&this._containerResizeObserver.disconnect()}},{key:"render",value:function(){var e=this,t=this.props,r=t.viewport,o=t.maxZoom,a=t.minZoom,i=t.transitionEnd,s=t.mapStyle,l=t.onClosePopup,c=t.clickPopup,u=t.hoverPopup,p=t.hasHeatmapLayers,d=t.markers,A=t.interactiveLayerIds;return n.a.createElement("div",{id:"map",className:Dt.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},n.a.createElement(Ve.d,Object.assign({},r,{ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:i,onLoad:this.onLoad,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:s,maxZoom:o,minZoom:a,onViewportChange:this.onViewportChange,interactiveLayerIds:A,clickRadius:4,disableTokenWarning:!0}),!1!==p&&n.a.createElement(jt,null),void 0!==c&&null!==c&&n.a.createElement(Yt,{latitude:c.latitude,longitude:c.longitude,closeButton:!0,onClose:l},c.content),!0===this.state.mouseOver&&void 0!==u&&null!==u&&n.a.createElement(Yt,{latitude:u.latitude,longitude:u.longitude,closeButton:!1},u.content),null!==d&&d.length>0&&d.map((function(e,t){return n.a.createElement(Ve.b,{key:t,latitude:e.latitude,longitude:e.longitude},e.content)}))),n.a.createElement("div",{className:Dt.a.googleLogo}))}}])&&xt(o.prototype,a),i&&xt(o,i),t}(n.a.Component);Nt.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapInteraction:function(){},onLoad:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,markers:null,interactiveLayerIds:null,setBounds:void 0};var Gt=Nt;Nt.__docgenInfo={description:"",methods:[{name:"onLoad",docblock:null,modifiers:[],params:[],returns:null},{name:"setBounds",docblock:null,modifiers:[],params:[],returns:null},{name:"getBounds",docblock:null,modifiers:[],params:[],returns:null},{name:"loadObserver",docblock:null,modifiers:["async"],params:[],returns:null},{name:"handleResizeObserver",docblock:null,modifiers:[],params:[{name:"entries",type:null}],returns:null},{name:"onViewportChange",docblock:null,modifiers:[],params:[{name:"viewport",type:null},{name:"interactionState",type:null}],returns:null},{name:"onMapInteraction",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"type",type:null}],returns:null},{name:"onHover",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"onClick",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"getRef",docblock:null,modifiers:[],params:[{name:"ref",type:null}],returns:null},{name:"getCursor",docblock:null,modifiers:[],params:[{name:"{ isDragging }",type:null}],returns:null},{name:"transformRequest",docblock:null,modifiers:[],params:[{name:"url",type:null},{name:"resourceType",type:null}],returns:null}],displayName:"Map",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},mapInteraction:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoad:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},transitionEnd:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},markers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:{latitude:{name:"number",required:!0},longitude:{name:"number",required:!0},content:{name:"node",required:!1}}}},required:!1,description:""},interactiveLayerIds:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:""},setBounds:{defaultValue:{value:"undefined",computed:!0},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"object"},required:!0,description:""},mapStyle:{type:{name:"object"},required:!0,description:""},maxZoom:{type:{name:"number"},required:!0,description:""},minZoom:{type:{name:"number"},required:!0,description:""},setViewport:{type:{name:"func"},required:!0,description:""},hasHeatmapLayers:{type:{name:"bool"},required:!0,description:""}}};var _t=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],(function(e){return Object.keys(e).length>0})),Jt=Object(g.a)([function(e){return e.map.style.staticLayers}],(function(e){return e.reduce((function(e,t){return t.interactive&&t.visible?(void 0!==t.gl?t.gl.layers.forEach((function(r,o){if(1===t.gl.layers.length||void 0!==r.metadata&&!0===r.metadata["gfw:interactive"]){var n=r.id||o>0?"".concat(t.id,"-").concat(o):t.id;e.push(n)}})):e.push(t.id),e):e}),[])})),Ht=Object(g.a)([function(e){return e.map.style.mapStyle},j],(function(e,t){if(!t)return e;var r=e.toJS().layers.filter((function(e){return void 0!==e.metadata})).map((function(e){return e.metadata["mapbox:group"]})).lastIndexOf("temporal")+1,o=e.mergeIn(["sources"],t.sources),n=e.get("layers");return t.layers.forEach((function(e,t){n=n.insert(r+t,Object(m.a)(e))})),o=o.set("layers",n)})),Vt=Object(g.a)([function(e){return e.map.interaction.cursor},function(e){return e.map.module.cursor}],(function(e,t){return null!==t?t:e})),Kt=Object(l.b)((function(e){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,onLoad:e.map.module.onLoad,cursor:Vt(e),token:e.map.module.token,mapStyle:Ht(e),hasHeatmapLayers:_t(e),interactiveLayerIds:Jt(e)}}),(function(e){return{setViewport:function(t,r){e(function(e,t){return function(r){r({type:"SET_VIEWPORT",payload:e}),r(be()),r(y(t))}}(t,r))},setBounds:function(t){e(function(e){return{type:"SET_BOUNDS",payload:e}}(t))},mapInteraction:function(t,r,o,n,a,i){e(_e(t,r,o,n,a))},transitionEnd:function(){e(Pe())},onClosePopup:function(){e((function(e,t){var r=t();void 0!==r.map.module.onClosePopup&&r.map.module.onClosePopup()}))}}}))(Gt),zt=r("./src/map/glmap/gl-styles/style.json");function Wt(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Zt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){qt(e,t,r[t])}))}return e}function qt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Xt,$t=N()(Object.keys(zt.sources).map((function(e){return zt.sources[e].attribution})).filter((function(e){return void 0!==e}))),er=function(e){if(void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),void 0===e.metadata&&(e.metadata={}),!0===e.metadata["gfw:temporal"]){var t=void 0===e.metadata["gfw:temporalField"]?"timestamp":e.metadata["gfw:temporalField"];e.filter=["all",[">",t,0],["<",t,999999999999]]}return void 0===e.metadata["mapbox:group"]&&(e.metadata["mapbox:group"]="temporal"),"visible"!==e.layout.visibility&&(e.layout.visibility="none"),e},tr={mapStyle:Object(m.a)((Xt=zt,Xt.layers.forEach((function(e){er(e)})),Xt)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:$t},rr=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function or(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){nr(e,t,r[t])}))}return e}function nr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ar(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var ir="INIT_MAP_STYLE",sr="SET_MAP_STYLE",lr="MARK_CARTO_LAYERS_AS_INSTANCIATED",cr="SET_STATIC_LAYERS",ur="SET_BASEMAP_LAYERS",pr=function(e,t){if("vector"!==e.type)return e;var r=e.tiles,o=void 0===t?[]:[t];return or({},e,{tiles:void 0!==r&&r.length>0?N()([].concat(o,ar(r))):o})},dr=function(e){return{type:sr,payload:e}},Ar=function(e,t,r){for(var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=t().map.style,a=n.mapStyle,i=a.toJS(),s=i.layers,l=Math.round(r[0].getTime()/1e3),c=Math.round(r[1].getTime()/1e3),u=Z.a.getOffsetedTimeAtPrecision(r[0].getTime()),p=Z.a.getOffsetedTimeAtPrecision(r[1].getTime()),d=0;d<s.length;d++){var A=s[d];if(void 0!==A.metadata&&!0===A.metadata["gfw:temporal"]&&!(!0===o&&!0!==A.metadata["gfw:temporal:throttled"]||!1===o&&!0===A.metadata["gfw:temporal:throttled"])){var g=a.getIn(["layers",d,"filter"]).toJS();if(null===g)throw new Error("filter must be preset on style.json for temporal layer: ",A.id);var f=A.metadata&&"timeIndex"===A.metadata["gfw:temporalField"];g[1][2]=f?u:l,g[2][2]=f?p:c,a=a.setIn(["layers",d,"filter"],Object(m.a)(g))}}e(dr(a))},gr=u()((function(e,t,r){Ar(e,t,r,!0)}),400),mr=function(e){return function(t,r){Ar(t,r,e),gr(t,r,e)}},fr=function(e,t,r){var o=e.toJS().layers,n=e,a=o.findIndex((function(e){return e.id===t})),i=o.find((function(e){return e.id===t}));if(n=function(e,t,r){var o=!0===t.visible?"visible":"none";return e.setIn(["layers",r,"layout","visibility"],o)}(n,r,a),!0===r.isBasemap)return n;var s=void 0===r.opacity?1:r.opacity;switch(i.type){case"fill":n=n.setIn(["layers",a,"paint","fill-opacity"],s).setIn(["layers",a,"paint","fill-outline-color"],r.color).setIn(["layers",a,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":var l=r.color||i.paint&&i.paint["line-color"];n=n.setIn(["layers",a,"paint","line-opacity"],s).setIn(["layers",a,"paint","line-color"],l);break;case"symbol":if(i.metadata&&!0===i.metadata["gfw:isLabel"]){var c="visible"===n.getIn(["layers",a,"layout","visibility"])&&!0===r.showLabels?"visible":"none";if(n=n.setIn(["layers",a,"layout","visibility"],c),!0!==r.showLabels)break}n=n.setIn(["layers",a,"paint","text-opacity"],s),void 0!==r.color&&(n=n.setIn(["layers",a,"paint","text-color"],r.color));break;case"circle":if(n=n.setIn(["layers",a,"paint","circle-opacity"],s).setIn(["layers",a,"paint","circle-stroke-opacity"],s),void 0!==r.color){var u=i&&i.metadata&&i.metadata["gfw:mainColorPaintProperty"]?i.metadata["gfw:mainColorPaintProperty"]:"circle-color";n=n.setIn(["layers",a,"paint",u],r.color)}break;case"raster":n=n.setIn(["layers",a,"paint","raster-opacity"],s)}return n=function(e,t,r,o){var n=e,a=e.toJS(),i=r.type,s=a.metadata["gfw:styles"],l=r.metadata;return["selected","highlighted"].forEach((function(e){var a=t["".concat(e,"Features")],c=a&&a.style?a.style[i]:{},u=null!==a&&void 0!==a&&a.values.length>0,p=t[e],d=or({},s[e][i]||{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{},c);Object.keys(d).length&&Object.keys(d).forEach((function(e){var i,s=d[e][0],l=d[e][1],c=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===u&&!0!==p&&!1!==p){var A=zt.layers.find((function(e){return e.id===r.id}));i=void 0!==A?r.metadata&&r.metadata["gfw:mainColorPaintProperty"]===e?null:A[c][e]:null}else if(!0===p||!1===p)i=!0===p?s:l;else{var g="";if(null!==t.color&&void 0!==t.color){var m=qe(t.color);g="".concat(m.r,",").concat(m.g,",").concat(m.b)}i=["match",["get",a.field],a.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",g),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",g)]}void 0!==i&&null!==i&&(n=n.setIn(["layers",o,c,e],i))}))})),n}(n,r,i,a)},hr=function(e,t,r,o){return function(n,a){var i=a().map.style.mapStyle,s=i.toJS();if(void 0===s.sources[t]){var l={type:e};e===F?l.data=o:e===R&&(l.tiles=[r],l.tileSize=256),i=i.setIn(["sources",t],Object(m.a)(l))}if(void 0===s.layers.find((function(e){return e.id===t}))){var c=e===F?function(e){var t=e.features.map((function(e){var t=e.geometry;return void 0===t?null:t.type})),r=rr.map((function(e){var r=0;return t.forEach((function(t){e.geoJSON.indexOf(t)>-1&&r++})),{gl:e.gl,num:r}})),o="fill",n=0;return r.forEach((function(e){e.num>n&&(o=e.gl,n=e.num)})),o}(o):e,u=Object(m.a)({id:t,source:t,type:c,layout:{},paint:{}}),p=e===R?s.layers.length-1-s.layers.filter((function(e){return"labels"!==e.id})).reverse().findIndex((function(e){return"raster"===e.type})):s.layers.length-1;i=i.set("layers",i.get("layers").splice(p,0,u))}n(dr(i))}},yr=function(e){return function(t,r){t({type:lr,payload:e.map((function(e){return e.sourceId}))});var o=e.map((function(e){return r=(t=e).sourceId,o=t.sourceCartoSQL,n={layers:[{id:r,options:{sql:o}}]},a=encodeURIComponent(JSON.stringify(n)),i="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG".replace("$MAPCONFIG",a),new Promise((function(e){fetch(i).then((function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(r)),Promise.reject(),null):e.json()})).then((function(t){e({layergroupid:t.layergroupid,sourceId:r})})).catch((function(e){console.warn(e)}))}));var t,r,o,n,a,i}));Promise.all(o.map((function(e){return e.catch((function(e){return e}))}))).then((function(o){var n=r().map.style.mapStyle,a=n.toJS();o.forEach((function(t){var r="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt".replace("$LAYERGROUPID",t.layergroupid),o="".concat(t.sourceId,"-instanciated");n=(n=n.setIn(["sources",o],Object(m.a)({type:"vector",tiles:[r]}))).deleteIn(["sources",t.sourceId]),a.layers.forEach((function(r,a){if(r.source===t.sourceId){n=(n=n.setIn(["layers",a,"source"],o)).setIn(["layers",a,"metadata","gfw:id"],t.sourceId);var i=e.find((function(e){return e.refLayer.id===t.sourceId})).refLayer;n=fr(n,r.id,i)}}))})),t(dr(n))})).catch((function(e){console.warn(e)}))}},Er=function(e,t){return function(r,o){r({type:cr,payload:e}),r({type:ur,payload:t});var n=[].concat(ar(e),ar(t.map((function(e){return or({},e,{isBasemap:!0})})))),a=o().map.style.mapStyle.toJS().sources,i=n.filter((function(e){return void 0!==e.gl}));i.length&&r(function(e){return function(t,r){var o=r(),n=o.map.style.mapStyle;e.forEach((function(e){var t=e.id,r=e.gl,o=pr(r.source,e.url),a=(n=n.setIn(["sources",t],Object(m.a)(o))).get("layers").toJS().map((function(e){return e.id}));r.layers.filter((function(e,r){var o=e.id||r>0?"".concat(t,"-").concat(r):t;return!a.includes(o)})).forEach((function(e,o){var a=e.id||o>0?"".concat(t,"-").concat(o):t,i=or({},er(e),{id:a,source:t});if("vector"===r.source.type){var s=void 0===e["source-layer"]?t:e["source-layer"];i["source-layer"]=s}var l=n.get("layers"),c=i.metadata["mapbox:group"],u=l.findLastIndex((function(e){return c===e.toJS().metadata["mapbox:group"]}));n=n.set("layers",l.splice(u,0,Object(m.a)(i)))}))})),t(dr(n)),t(mr(o.map.module.temporalExtent))}}(i));var s=n.filter((function(e){return!0===e.isCustom&&void 0===a[e.id]}));s.length&&s.forEach((function(e){r(hr(e.subtype,e.id,e.url,e.data))}));var l=o().map.style,c=l.mapStyle,u=c.toJS(),p=u.layers,d=u.sources,A=[];e.forEach((function(e){var t=e.id;if(void 0!==a[t]&&!0===e.visible&&(void 0!==e.data&&(c=c.setIn(["sources",t,"data"],Object(m.a)(e.data))),void 0!==e.url)){var r=pr(a[t],e.url);c=c.setIn(["sources",t],Object(m.a)(r))}}));for(var g=function(e){var t=p[e],r=t.source,o=d[r],a=void 0!==t.metadata&&t.metadata["gfw:id"]||r,i=n.find((function(e){return e.id===a}));if(void 0===i)return t.type,"continue";var s=void 0!==o.metadata&&o.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var u=l.cartoLayersInstanciated.indexOf(r)>-1;return!0!==i.visible||u||A.find((function(e){return e.sourceId===r}))||A.push({sourceId:r,sourceCartoSQL:s,refLayer:i}),"continue"}c=fr(c,t.id,i)},f=0;f<p.length;f++)g(f);A.length&&r(yr(A)),r(dr(c))}},wr=r("./node_modules/lodash/cloneDeep.js"),br=r.n(wr),vr=r("./node_modules/redux-thunk/es/index.js"),Br=r("./node_modules/react-map-gl/dist/esm/utils/transition/viewport-fly-to-interpolator.js"),Ir=r("./node_modules/d3-ease/src/index.js");function Cr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Mr(e,t,r[t])}))}return e}function Mr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Sr={transitionDuration:500,transitionInterpolator:new Br.a,transitionEasing:Ir.a},Tr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800,bounds:{}},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};var jr=s.d;Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).MAP_REDUX_REMOTE_DEBUG||Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).REACT_APP_MAP_REDUX_REMOTE_DEBUG;var kr=Object(s.e)((function(){}),{},jr(Object(s.a)(vr.a))),Dr=kr,Lr=r("./node_modules/@turf/bbox/index.js"),Qr=r.n(Lr),Or=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach((function(e){e.properties&&e.properties.coordinateProperties&&e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach((function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)}))})),[t.start,t.end]},xr=function(e){var t=Qr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}};function Fr(e){return function(t,r){var o=e.id,n=e.url,a=e.type,i=e.fitBoundsOnLoad,s=e.layerTemporalExtents,l=e.color,c=e.data,u=r(),p=u.map.module.token;if(console.log("loadTrack -> token",p),!u.map.tracks.data.find((function(e){return e.id===o}))){var d={id:o,url:n,type:a,color:l,fitBoundsOnLoad:i},A=void 0!==e.data&&null!==e.data,g=void 0!==n&&null!==n&&""!==n;if(A&&(d.data=c,d.geoBounds=xr(c)),t({type:"ADD_TRACK",payload:d}),!A&&g){var m=f(t,u);if("geojson"!==a){var y=u.map.module.token,E=ae(n,y,s);Promise.all(E.map((function(e){return e.catch((function(e){return e}))}))).then((function(e){var r=ie(e);if(r.length){var n=function(e){for(var t,r=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"track",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"LineString";return{type:"Feature",geometry:{type:r,coordinates:[]},properties:{type:t,segId:e,coordinateProperties:{times:[]}}}},o=e.series[0],n=r(o),a=r("fishing","fishing","MultiPoint"),i=[],s=0,l=0,c=e.latitude.length;l<c;l++){var u=e.series[l],p=e.longitude[l],d=e.latitude[l],A=e.weight[l];t&&(p-t<-180?s+=360:p-t>180&&(s-=360));var g=[p+s,d];u!==o&&0!==l&&(i.push(br()(n)),n=r(u)),n.geometry.coordinates.push(g),A>0&&(a.geometry.coordinates.push(g),a.properties.coordinateProperties.times.push(e.datetime[l])),n.properties.coordinateProperties.times.push(e.datetime[l]),o=u,t=p}return i.push(a),{type:"FeatureCollection",features:i}}(se(r,["latitude","longitude","datetime","series","weight","sigma"])),a=Or(n),i=xr(n);t({type:"UPDATE_TRACK",payload:{id:o,data:n,geoBounds:i,timelineBounds:a}}),t(h(m))}}))}else fetch(n,{headers:{Authorization:"Bearer "+p}}).then((function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()})).then((function(e){var r=Or(e),n=xr(e);t({type:"UPDATE_TRACK",payload:{id:o,data:e,geoBounds:n,timelineBounds:r}}),i&&function(e){var t=kr.getState().map.tracks.data.find((function(t){return t.id===e.toString()}));kr.dispatch(Ue(t.geoBounds)),t.timelineBounds}(o)})).catch((function(e){return console.warn(e)})).finally((function(){return t(h(m))}))}}}}var Rr=function(e){return{type:"REMOVE_TRACK",payload:{trackId:e}}},Pr=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,r){var o=r().map.tracks.data;e&&e.forEach((function(e){var r=e.id,n=o.find((function(e){return e.id===r}));void 0===n?t(Fr(e)):n.color!==e.color&&t({type:"UPDATE_TRACK",payload:{id:e.id,color:e.color}})})),o.forEach((function(r){e&&e.find((function(e){return e.id===r.id}))||t(Rr(r.id))}))}},Ur=function(e,t){return function(e){return e}};function Yr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Nr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Gr(e,t,r[t])}))}return e}function Gr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var _r={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,cursor:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoad:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},Jr=Ur("module",{loaders:d.a.arrayOf(d.a.number),token:d.a.string,temporalExtent:d.a.arrayOf(d.a.instanceOf(Date)),onViewportChange:d.a.func,onHover:d.a.func,onClick:d.a.func,onLoad:d.a.func,onLoadStart:d.a.func,onLoadComplete:d.a.func,onClosePopup:d.a.func,onAttributionsChange:d.a.func})((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_r,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return Nr({},e,t.payload);case"SET_TEMPORAL_EXTENT":return Nr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return Nr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var r=null!==e.loaders?Yr(e.loaders):[];return r.push(t.payload),Nr({},e,{loaders:r});case"COMPLETE_LOADER":var o=Yr(e.loaders),n=o.findIndex((function(e){return e===t.payload}));return o.splice(n,1),Nr({},e,{loaders:o});case"SET_MODULE_CURSOR":return Nr({},e,{cursor:t.payload});default:return e}}));function Hr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Vr(e,t,r[t])}))}return e}function Vr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Kr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var zr={data:[]},Wr=Ur("tracks",{data:d.a.arrayOf(d.a.exact(Hr({},A,{data:d.a.object,timelineBounds:d.a.array,geoBounds:d.a.exact({minLat:d.a.number,minLng:d.a.number,maxLat:d.a.number,maxLng:d.a.number})})))})((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:zr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADD_TRACK":var r=[].concat(Kr(e.data),[t.payload]);return Hr({},e,{data:r});case"UPDATE_TRACK":var o=t.payload,n=e.data.map((function(e){return e.id!==o.id?e:Hr({},e,o)}));return Hr({},e,{data:n});case"REMOVE_TRACK":var a=t.payload.trackId,i=e.data.filter((function(e){return e.id!==a}));return Hr({},e,{data:i});default:return e}}));function Zr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function qr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){Xr(e,t,r[t])}))}return e}function Xr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var $r={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function eo(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){to(e,t,r[t])}))}return e}function to(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ro={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]};function oo(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?Object(arguments[t]):{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){no(e,t,r[t])}))}return e}function no(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ao={cursor:"progress"},io=Object(s.c)({module:Jr,tracks:Wr,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:$r,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case"UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES":var r=e.heatmapLayers;return r[t.payload.layerId].visibleTemporalExtentsIndices=t.payload.newVisibleTemporalExtentsIndices,r[t.payload.layerId].tiles.forEach((function(e){e.temporalExtentsIndicesLoaded=U()(e.temporalExtentsIndicesLoaded,t.payload.indicesRemoved)})),qr({},e,{heatmapLayers:r});case"ADD_HEATMAP_LAYER":var o=Object.assign({},e.heatmapLayers,Xr({},t.payload.id,qr({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:o});case"UPDATE_HEATMAP_LAYER_STYLE":var n=t.payload,a=qr({},e.heatmapLayers[n.id],n),i=qr({},e.heatmapLayers,Xr({},n.id,a));return qr({},e,{heatmapLayers:i});case"REMOVE_HEATMAP_LAYER":var s=Object.assign({},e.heatmapLayers);return delete s[t.payload.id],Object.assign({},e,{heatmapLayers:s});case"ADD_REFERENCE_TILE":return Object.assign({},e,{referenceTiles:[].concat(Zr(e.referenceTiles),[t.payload])});case"UPDATE_HEATMAP_TILE":var l=t.payload.layerId,c=t.payload.tile,u=qr({},e.heatmapLayers[l]),p=Zr(u.tiles),d=p.findIndex((function(e){return e.uid===c.uid}));-1===d?p.push(c):p=[].concat(Zr(p.slice(0,d)),[c],Zr(p.slice(d+1))),u.tiles=p;var A=qr({},e.heatmapLayers,Xr({},l,u));return qr({},e,{heatmapLayers:A});case"RELEASE_HEATMAP_TILES":var g=t.payload,m=Object.keys(e.heatmapLayers),f=qr({},e.heatmapLayers);m.forEach((function(e){var t=qr({},f[e]);g.forEach((function(e){var r=t.tiles.findIndex((function(t){return t.uid===e}));r>-1&&t.tiles.splice(r,1)}))}));var h=Zr(e.referenceTiles);return g.forEach((function(e){var t=h.findIndex((function(t){return t.uid===e}));t>-1&&(h=[].concat(Zr(h.slice(0,t)),Zr(h.slice(t+1))))})),qr({},e,{heatmapLayers:f,referenceTiles:h});case"UPDATE_LOADED_TILES":var y=qr({},e.heatmapLayers);return qr({},e,{heatmapLayers:y});case"HIGHLIGHT_VESSELS":return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return qr({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return qr({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ro,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":var r=[].concat(t.payload);return eo({},e,{currentVisibleTiles:r});case"SET_CURRENTLY_LOADED_TILES":var o=[].concat(t.payload);return eo({},e,{currentLoadedTiles:o});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var n=N()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),a=N()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids)),i=n.filter((function(e){return-1===a.indexOf(e)}));return eo({},e,{currentToLoadTileUids:i,currentToReleaseTileUids:a});case"MARK_TILES_UIDS_AS_LOADED":var s=e.currentToLoadTileUids,l=t.payload,c=s.filter((function(e){return-1===l.indexOf(e)}));return eo({},e,{currentToLoadTileUids:c});case"RELEASE_MARKED_TILES_UIDS":return eo({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:tr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case ir:var r=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return Zt({},e,{mapStyle:r});case sr:return Zt({},e,{mapStyle:t.payload});case cr:return Zt({},e,{staticLayers:t.payload});case ur:return Zt({},e,{basemapLayers:t.payload});case lr:var o=[].concat(Wt(e.cartoLayersInstanciated),Wt(t.payload));return Zt({},e,{cartoLayersInstanciated:o});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Tr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return Cr({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"SET_BOUNDS":return Cr({},e,{bounds:t.payload});case"UPDATE_VIEWPORT":var r=Cr({},e.viewport,t.payload);return Cr({},e,{viewport:r,prevZoom:r.zoom});case"SET_ZOOM_INCREMENT":var o=e.viewport.zoom,n=Math.min(e.maxZoom,t.payload.zoom||o+t.payload.increment),a=Cr({},e.viewport,Sr,{zoom:n,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return Cr({},e,{viewport:a,canZoomIn:n<e.maxZoom,canZoomOut:n>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:L});case"SET_MOUSE_LAT_LONG":return Cr({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return Cr({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return Cr({},e,t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ao,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return oo({},e,{cursor:t.payload});default:return e}}});function so(e){return(so="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function lo(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function co(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function uo(e,t){return!t||"object"!==so(t)&&"function"!==typeof t?Ao(e):t}function po(e){return(po=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ao(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function go(e,t){return(go=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function mo(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var fo=Object(s.c)({map:io});Dr.replaceReducer(fo);var ho=u()((function(e){Dr.dispatch(mr(e)),Dr.dispatch(function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}}(e))}),16),yo=function(e){var t;Dr.dispatch((t={latitude:e.center[0],longitude:e.center[1],zoom:e.zoom},function(e){e({type:"UPDATE_VIEWPORT",payload:t}),e(be())}))},Eo=function(e){function t(){var e,r;lo(this,t);for(var o=arguments.length,n=new Array(o),a=0;a<o;a++)n[a]=arguments[a];return mo(Ao(r=uo(this,(e=po(t)).call.apply(e,[this].concat(n)))),"state",{initialized:!1,error:null,errorInfo:null}),r}var r,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&go(e,t)}(t,e),r=t,(o=[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){var e,t,r;void 0!==this.props.viewport&&yo(this.props.viewport),null!==this.props.glyphsPath&&Dr.dispatch((e={glyphsPath:this.props.glyphsPath},t=e.glyphsPath,{type:ir,payload:{glyphsPath:t}})),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(Dr.getState().map.style.attributions),Dr&&void 0===Dr.getState().map.module.token&&Dr.dispatch((r={token:this.props.token,autoClusterZoom:this.props.autoClusterZoom,isCluster:this.props.isCluster,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoad:this.props.onLoad,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange},function(e){e({type:"INIT_MODULE",payload:r})})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&Dr.dispatch(E(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&Dr.dispatch(Er(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&Dr.dispatch(Pr(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&ho(this.props.temporalExtent),this.setState({initialized:!0}),null!==this.props.heatmapLayers&&Dr.dispatch(xe(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){var t;this.props.tracks!==e.tracks&&Dr.dispatch(Pr(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&Dr.dispatch(xe(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&(this.props.basemapLayers===e.basemapLayers&&this.props.staticLayers===e.staticLayers||Dr.dispatch(Er(this.props.staticLayers||[],this.props.basemapLayers||[]))),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||Dr.dispatch((t=this.props.loadTemporalExtent,function(e,r){var o=r(),n=o.map.heatmap.heatmapLayers,a={};Object.keys(n).forEach((function(r){var o=n[r],i=o.header.temporalExtents,s=o.visibleTemporalExtentsIndices,l=Me(t,i),c=U()(l,s),u=U()(s,l);(c.length||u.length)&&e({type:"UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",payload:{layerId:r,newVisibleTemporalExtentsIndices:l,indicesRemoved:u}}),c.length&&(a[r]=c)}));var i=Object.keys(a);i.length&&e(je(i,o.map.heatmap.referenceTiles,a))}))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||ho(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||Dr.dispatch(E(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&Dr.dispatch(E(this.props.highlightTemporalExtent));var r,o=Dr.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===Dr.getState().map.viewport.currentTransition&&(o.latitude===this.props.viewport.center[0]&&o.longitude===this.props.viewport.center[1]&&o.zoom===this.props.viewport.zoom||(1===Math.abs(o.zoom-this.props.viewport.zoom)?Dr.dispatch((r=this.props.viewport,function(e){e(Re(null,r.center[0],r.center[1],r.zoom))})):yo(this.props.viewport))),this.props.cursor!==e.cursor&&Dr.dispatch({type:"SET_MODULE_CURSOR",payload:this.props.cursor})}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),n.a.createElement("div",null,n.a.createElement("h2",null,"Map component crashed!"),n.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),n.a.createElement("div",null,"Component Stack Error Details:"),n.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:n.a.createElement(l.a,{store:Dr},n.a.createElement(Kt,this.props))}}])&&co(r.prototype,o),a&&co(r,a),t}(n.a.Component);Eo.defaultProps={token:null,glyphsPath:null,autoClusterZoom:!0,isCluster:function(e){return!0===e.isCluster},highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,cursor:null,onViewportChange:function(){},onLoad:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var wo=Eo;Eo.__docgenInfo={description:"",methods:[{name:"componentDidCatch",docblock:null,modifiers:[],params:[{name:"error",type:null},{name:"errorInfo",type:null}],returns:null}],displayName:"MapModule",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},glyphsPath:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},autoClusterZoom:{defaultValue:{value:"true",computed:!1},type:{name:"bool"},required:!1,description:""},isCluster:{defaultValue:{value:"(event) => event.isCluster === true",computed:!1},type:{name:"func"},required:!1,description:""},highlightTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},tracks:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"exact",value:"import { trackTypes } from './proptypes/tracks'",computed:!0}},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},heatmapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},temporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},loadTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},basemapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},staticLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},onViewportChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoad:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadStart:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadComplete:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onAttributionsChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!0,description:""}}};zt.metadata["gfw:basemap-layers"];function bo(e){return(bo="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function vo(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}function Bo(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Io(e,t){return!t||"object"!==bo(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Co(e){return(Co=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Mo(e,t){return(Mo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var So=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=Io(this,Co(t).call(this,e))).layout=null,r}var r,o,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Mo(e,t)}(t,e),r=t,(o=[{key:"render",value:function(){var e=this.props,t=e.components,r=vo(e,["components"]);return n.a.createElement(a.MDXTag,{name:"wrapper",components:t},n.a.createElement(a.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"description"}},"Description"),n.a.createElement(a.MDXTag,{name:"p",components:t},"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),n.a.createElement(a.MDXTag,{name:"ul",components:t},n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}},"Map client")),n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}},"Vessel profiles")),n.a.createElement(a.MDXTag,{name:"li",components:t,parentName:"ul"},n.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}},"Data portal"))),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"available-properties"}},"Available properties"),n.a.createElement(a.MDXTag,{name:"p",components:t},"TODO: fix crash on PropsTable docz component"),n.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),n.a.createElement(i.e,{__codesandbox:"",__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:r,Map:wo}},n.a.createElement(wo,{viewport:{center:[.026,123.61],zoom:5}})))}}])&&Bo(r.prototype,o),s&&Bo(r,s),t}(n.a.Component);So.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-map-map.f4c91952f6774d356a6e.js.map