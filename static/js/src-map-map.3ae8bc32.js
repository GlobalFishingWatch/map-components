(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports=JSON.parse('{"version":8,"glyphs":"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true","sprite":"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites","metadata":{"mapbox:groups":{"basemap-background":{"name":"basemap-background"},"static":{"name":"static"},"temporal":{"name":"temporal"},"tracks":{"name":"tracks"},"basemap-foreground":{"name":"basemap-foreground"}},"gfw:basemap-layers":[{"id":"satellite","label":"Satellite"},{"id":"north-star","label":"North Star"},{"id":"labels","isOption":true},{"id":"graticules","isOption":true},{"id":"bathymetry","isOption":true}],"gfw:styles":{"selected":{"fill":{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},"circle":{"circle-stroke-width":[2,0.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},"highlighted":{"circle":{"circle-stroke-color":["#fff","#000"]}}}},"sources":{"6":{"metadata":{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{"id":"nama"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"satellite":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256,"attribution":"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href=\'https://www.google.com/intl/en-GB_US/help/terms_maps.html\'>Terms of Use</a><br>"},"north-star":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256},"labels":{"tiles":["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],"type":"raster","tileSize":256},"graticules":{"metadata":{"gfw:carto-sql":"select * from graticules where scalerank=4"},"type":"vector"},"bathymetry":{"metadata":{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},"type":"vector"},"mpant":{"metadata":{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector"},"mparu":{"metadata":{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector"},"eez":{"metadata":{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, \'eez:\' || mrgid as region_id, geoname as reporting_name, \'eez:\' || mrgid as reporting_id FROM eez","gfw:popups":[{"id":"name"}]},"type":"vector","attribution":"EEZs: marineregions.org"},"highseas":{"metadata":{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{"id":"regionid"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"protectedplanet":{"metadata":{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{"id":"name"},{"id":"wdpaid","label":"WDPA ID"},{"id":"iucn_cat","label":"IUCN Category"},{"id":"desig_eng","label":"Designation"},{"id":"rep_area"},{"id":"no_take"},{"id":"status"},{"id":"status_yr"},{"id":"gov_type"},{"id":"mang_auth"},{"id":"verif"},{"id":"iso3"}]},"type":"vector","attribution":"MPAs: www.protectedplanet.net"},"rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, \'rfmo:\' || rfb as reporting_id, \'rfmo:\' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{"id":"rfb"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"cp_rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, id, id as rfb FROM carrier_portal_rfmo_hi_res","gfw:popups":[{"id":"rfb"},{"id":"POLYGON_LAYERS_AREA"}]},"type":"vector"},"bluefin_rfmo":{"metadata":{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id FROM bluefin_rfmo"},"type":"vector"},"falklands_conservation":{"metadata":{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{"id":"full_name"},{"id":"zone"},{"id":"area_sqkm"}]},"type":"vector"},"encounters_ais":{"type":"vector","tiles":[]},"events_fishing":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},"events_encounter":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_gap":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_port":{"type":"vector","tiles":["https://events.api.dev.globalfishingwatch.org/datasets/indonesia/events/port/tiles/{z},{x},{y}"],"metadata":{"gfw:popups":[{"id":"event_id"}]}},"events_encounter_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"events_gap_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"events_port_vessel":{"type":"geojson","cluster":true,"clusterMaxZoom":10,"data":{"type":"FeatureCollection","features":[]}},"rulers":{"type":"geojson","data":{"type":"FeatureCollection","features":[]}},"rulers-points":{"type":"geojson","data":{"type":"FeatureCollection","features":[]}}},"layers":[{"id":"background","metadata":{"mapbox:group":"basemap-background"},"type":"background","layout":{"visibility":"visible"},"paint":{"background-color":"#001436"}},{"id":"satellite","metadata":{"mapbox:group":"basemap-background"},"type":"raster","source":"satellite","layout":{"visibility":"visible"}},{"id":"north-star","metadata":{"mapbox:group":"basemap-background"},"type":"raster","source":"north-star"},{"id":"bathymetry","metadata":{"mapbox:group":"basemap-background"},"type":"fill","source":"bathymetry","source-layer":"bathymetry","paint":{"fill-color":["step",["get","depth"],"#1e346c",1000,"#1a2f63",2000,"#142655",3000,"#101f4a",4000,"#0d1b43",5000,"#0a163b",6000,"#061132",7000,"#030d2a",8000,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{"id":"mpant","metadata":{"mapbox:group":"static"},"type":"fill","source":"mpant","source-layer":"mpant"},{"id":"mpant-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"mpant","source-layer":"mpant","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"mparu","metadata":{"mapbox:group":"static"},"type":"fill","source":"mparu","source-layer":"mparu"},{"id":"mparu-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"mparu","source-layer":"mparu","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"eez","metadata":{"mapbox:group":"static"},"type":"fill","source":"eez","source-layer":"eez"},{"id":"eez-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"eez","source-layer":"eez","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"highseas","metadata":{"mapbox:group":"static"},"type":"fill","source":"highseas","source-layer":"highseas"},{"id":"highseas-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"highseas","source-layer":"highseas","layout":{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"rfmo","source-layer":"rfmo"},{"id":"cp_rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"cp_rfmo","source-layer":"cp_rfmo"},{"id":"bluefin_rfmo","metadata":{"mapbox:group":"static"},"type":"fill","source":"bluefin_rfmo","source-layer":"bluefin_rfmo"},{"id":"rfmo-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"rfmo","source-layer":"rfmo","layout":{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"6","metadata":{"mapbox:group":"static"},"type":"fill","source":"6","source-layer":"6"},{"id":"6-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"6","source-layer":"6","layout":{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"protectedplanet","metadata":{"mapbox:group":"static"},"type":"fill","source":"protectedplanet","source-layer":"protectedplanet"},{"id":"protectedplanet-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"protectedplanet","source-layer":"protectedplanet","layout":{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"falklands_conservation","metadata":{"mapbox:group":"static"},"type":"fill","source":"falklands_conservation","source-layer":"falklands_conservation"},{"id":"falklands_conservation-labels","metadata":{"gfw:isLabel":true,"mapbox:group":"static"},"type":"symbol","source":"falklands_conservation","source-layer":"falklands_conservation","layout":{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{"id":"events_fishing","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"type":"circle","source":"events_fishing","source-layer":"default","paint":{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_encounter","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"type":"circle","source":"events_encounter","source-layer":"default","paint":{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"encounters_ais","type":"circle","source":"encounters_ais","source-layer":"points","metadata":{"gfw:temporal":true,"gfw:temporalField":"timeIndex","mapbox:group":"temporal"},"paint":{"circle-color":"#e5647d","circle-radius":3,"circle-opacity":0.9,"circle-stroke-opacity":0}},{"id":"encounters_ais_outline","type":"circle","source":"encounters_ais","source-layer":"points","metadata":{"gfw:temporal":true,"gfw:temporalField":"timeIndex","gfw:mainColorPaintProperty":"circle-stroke-color","mapbox:group":"temporal"},"paint":{"circle-color":"hsla(0, 0%, 0%, 0)","circle-stroke-color":"#e5647d","circle-stroke-width":1,"circle-radius":6}},{"id":"events_gap","type":"circle","source":"events_gap","source-layer":"default","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"paint":{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_port","type":"circle","source":"events_port","source-layer":"default","metadata":{"gfw:temporal":true,"mapbox:group":"temporal"},"paint":{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":0.5,"circle-stroke-color":"#000000"}},{"id":"events_encounter_vessel","source":"events_encounter_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["encounter_highlight","encounter"]}}},"layout":{"icon-image":"encounter","icon-allow-overlap":true}},{"id":"events_encounter_vessel_number","source":"events_encounter_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"events_gap_vessel","source":"events_gap_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["gap_highlight","gap"]}}},"layout":{"icon-image":"gap","icon-allow-overlap":true}},{"id":"events_gap_vessel_number","source":"events_gap_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"events_port_vessel","source":"events_port_vessel","type":"symbol","metadata":{"mapbox:group":"temporal","gfw:styles":{"highlighted":{"icon-image":["port_highlight","port"]}}},"layout":{"icon-image":"port","icon-allow-overlap":true}},{"id":"events_port_vessel_number","source":"events_port_vessel","type":"symbol","metadata":{"mapbox:group":"temporal"},"filter":["has","point_count"],"layout":{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[0.8,-0.2]},"paint":{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{"id":"graticules-lines","metadata":{"mapbox:group":"basemap-foreground"},"type":"line","source":"graticules","source-layer":"graticules","filter":["==","$type","LineString"],"paint":{"line-color":"#174084","line-opacity":{"base":1,"stops":[[0,0.7],[8,0.7],[9,0.2]]},"line-width":0.5}},{"id":"graticules-labels","metadata":{"mapbox:group":"basemap-foreground"},"type":"symbol","source":"graticules","source-layer":"graticules","filter":["==","$type","LineString"],"layout":{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{"base":1,"stops":[[3,500],[8,1000]]},"text-size":{"base":1,"stops":[[3,7],[7,12]]},"text-letter-spacing":0.2},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-width":0.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{"base":1,"stops":[[0,1],[8,1],[9,0]]}}},{"id":"labels","metadata":{"mapbox:group":"basemap-foreground"},"type":"raster","source":"labels"},{"id":"rulers","source":"rulers","type":"line","metadata":{"mapbox:group":"tools"},"paint":{"line-dasharray":[2,1],"line-width":["case",["==",["get","isNew"],true],1.5,1]}},{"id":"ruler-labels","source":"rulers","type":"symbol","layout":{"text-field":"{label}","symbol-placement":"line","text-allow-overlap":true,"text-offset":[0,-0.8],"text-font":["case",["==",["get","isNew"],true],["literal",["Roboto Medium"]],["literal",["Roboto Mono Light"]]],"text-size":["case",["==",["get","isNew"],true],13,12]},"metadata":{"mapbox:group":"tools"}},{"id":"rulers-points","source":"rulers-points","type":"circle","paint":{"circle-radius":["case",["==",["get","isNew"],true],6,3],"circle-opacity":1,"circle-stroke-opacity":0}}]}')},"./src/map/glmap/map.css":function(e,t,a){e.exports={map:"map_map__1TLha",googleLogo:"map_googleLogo__3lQ1y"}},"./src/map/lib/Pack.js":function(e,t,a){"use strict";var r={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},i=function(e,t,a,r,i){void 0==a&&(a=e.length),void 0==t&&(t=0),void 0==i&&(i=t);for(var n=t;n<a;n++)r[n-t+i]=255&e.charCodeAt(n)},n=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},o={typemap:{byname:r,byarray:{}},pack:function(e,t,a){var r=new ArrayBuffer(e.size);return new DataView(r)[e.setter](0,t,a),n(r)},arrayBufferToString:n,stringToArrayBuffer:function(e,t,a){void 0==a&&(a=e.length),void 0==t&&(t=0);var r=new Uint8ClampedArray(a-t);return i(e,t,a,r,0),r.buffer},writeStringToArrayBuffer:i};for(var s in o.typemap.byname){var l=o.typemap.byname[s];l.name=s,o.typemap.byarray[l.array]=l}t.a=o,"undefined"!==typeof o&&o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"Pack",filename:"src/map/lib/Pack.js"}})},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),_Pack__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/map/lib/Pack.js"),PelagosClient=function(){function PelagosClient(){Object(_Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__.a)(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return Object(_Users_joseangel_Workspace_map_components_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__.a)(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(a,r){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=a,this.reject=r,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_2__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_2__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_2__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient,"undefined"!==typeof PelagosClient&&PelagosClient&&PelagosClient===Object(PelagosClient)&&Object.isExtensible(PelagosClient)&&Object.defineProperty(PelagosClient,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"PelagosClient",filename:"src/map/lib/pelagosClient.js"}})},"./src/map/map.mdx":function(e,t,a){"use strict";a.r(t);var r=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends.js"),i=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),n=a("../data-portal/node_modules/react/index.js"),o=a.n(n),s=a("./node_modules/@mdx-js/react/dist/index.es.js"),l=a("./node_modules/docz/dist/index.esm.js"),c=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),u=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),p=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),m=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),d=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),A=a("./node_modules/redux/es/redux.js"),g=a("./node_modules/react-redux/es/index.js"),f=a("./node_modules/lodash/throttle.js"),b=a.n(f),h=a("./node_modules/prop-types/index.js"),E=a.n(h),O={id:E.a.string.isRequired,url:E.a.string,data:E.a.object,color:E.a.string,type:E.a.oneOf(["geojson","pelagos",void 0]),layerTemporalExtents:E.a.arrayOf(E.a.arrayOf(E.a.number)),fitBoundsOnLoad:E.a.bool};"undefined"!==typeof O&&O&&O===Object(O)&&Object.isExtensible(O)&&Object.defineProperty(O,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"trackTypes",filename:"src/map/proptypes/tracks.js"}});var y={id:E.a.string.isRequired,tilesetId:E.a.string,subtype:E.a.string,visible:E.a.bool,hue:E.a.number,opacity:E.a.number,filters:E.a.arrayOf(E.a.shape({hue:E.a.number,filterValues:E.a.object})),header:E.a.shape({endpoints:E.a.object,colsByName:E.a.object,temporalExtents:E.a.arrayOf(E.a.arrayOf(E.a.number)),temporalExtentsLess:E.a.bool}).isRequired,interactive:E.a.bool};"undefined"!==typeof y&&y&&y===Object(y)&&Object.isExtensible(y)&&Object.defineProperty(y,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"heatmapLayerTypes",filename:"src/map/proptypes/layers.js"}});var j={id:E.a.string,visible:E.a.bool};"undefined"!==typeof j&&j&&j===Object(j)&&Object.isExtensible(j)&&Object.defineProperty(j,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"basemapLayerTypes",filename:"src/map/proptypes/layers.js"}});var v={id:E.a.string.isRequired,visible:E.a.bool,selected:E.a.bool,selectedFeatures:E.a.shape({field:E.a.string,values:E.a.arrayOf(E.a.string)}),highlighted:E.a.bool,higlightedFeatures:E.a.shape({field:E.a.string,values:E.a.arrayOf(E.a.string)}),opacity:E.a.number,color:E.a.string,showLabels:E.a.bool,interactive:E.a.bool,filters:E.a.arrayOf(E.a.arrayOf(E.a.string)),isCustom:E.a.bool,subtype:E.a.oneOf([void 0,"geojson","raster"]),url:E.a.string,data:E.a.object,gl:E.a.object};"undefined"!==typeof v&&v&&v===Object(v)&&Object.isExtensible(v)&&Object.defineProperty(v,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"staticLayerTypes",filename:"src/map/proptypes/layers.js"}});var _={content:E.a.node,latitude:E.a.number.isRequired,longitude:E.a.number.isRequired};"undefined"!==typeof _&&_&&_===Object(_)&&Object.isExtensible(_)&&Object.defineProperty(_,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"popupTypes",filename:"src/map/proptypes/shared.js"}});var I={zoom:E.a.number,center:E.a.arrayOf(E.a.number)};"undefined"!==typeof I&&I&&I===Object(I)&&Object.isExtensible(I)&&Object.defineProperty(I,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"viewportTypes",filename:"src/map/proptypes/shared.js"}});var B=a("./node_modules/reselect/es/index.js"),T=a("./node_modules/immutable/dist/immutable.es.js");864e5===Object(864e5)&&Object.isExtensible(864e5)&&Object.defineProperty(864e5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TIMELINE_STEP",filename:"src/map/config.js"}});864e5===Object(864e5)&&Object.isExtensible(864e5)&&Object.defineProperty(864e5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MIN_FRAME_LENGTH_MS",filename:"src/map/config.js"}});6===Object(6)&&Object.isExtensible(6)&&Object.defineProperty(6,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD",filename:"src/map/config.js"}});var C=8;"undefined"!==typeof C&&C&&C===Object(C)&&Object.isExtensible(C)&&Object.defineProperty(C,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_BASE_RADIUS",filename:"src/map/config.js"}});.15===Object(.15)&&Object.isExtensible(.15)&&Object.defineProperty(.15,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HEATMAP_BLUR_FACTOR",filename:"src/map/config.js"}});312===Object(312)&&Object.isExtensible(312)&&Object.defineProperty(312,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ACTIVITY_HIGHLIGHT_HUE",filename:"src/map/config.js"}});.5===Object(.5)&&Object.isExtensible(.5)&&Object.defineProperty(.5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HEATMAP_DIMMING_ALPHA",filename:"src/map/config.js"}});2===Object(2)&&Object.isExtensible(2)&&Object.defineProperty(2,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRACKS_DOTS_STYLE_ZOOM_THRESHOLD",filename:"src/map/config.js"}});var w=2e5;"undefined"!==typeof w&&w&&w===Object(w)&&Object.isExtensible(w)&&Object.defineProperty(w,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MAX_SPRITES_PER_LAYER",filename:"src/map/config.js"}});10===Object(10)&&Object.isExtensible(10)&&Object.defineProperty(10,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSEL_CLICK_TOLERANCE_PX",filename:"src/map/config.js"}});1===Object(1)&&Object.isExtensible(1)&&Object.defineProperty(1,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"CLUSTER_CLICK_ZOOM_INCREMENT",filename:"src/map/config.js"}});1===Object(1)&&Object.isExtensible(1)&&Object.defineProperty(1,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MIN_ZOOM_LEVEL",filename:"src/map/config.js"}});14===Object(14)&&Object.isExtensible(14)&&Object.defineProperty(14,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MAX_ZOOM_LEVEL",filename:"src/map/config.js"}});10===Object(10)&&Object.isExtensible(10)&&Object.defineProperty(10,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING",filename:"src/map/config.js"}});.5===Object(.5)&&Object.isExtensible(.5)&&Object.defineProperty(.5,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TILES_LOAD_ZOOM_OFFSET",filename:"src/map/config.js"}});var S="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG";S===Object(S)&&Object.isExtensible(S)&&Object.defineProperty(S,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"STATIC_LAYERS_CARTO_ENDPOINT",filename:"src/map/config.js"}});var R="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt";R===Object(R)&&Object.isExtensible(R)&&Object.defineProperty(R,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"STATIC_LAYERS_CARTO_TILES_ENDPOINT",filename:"src/map/config.js"}});"temporal"===Object("temporal")&&Object.isExtensible("temporal")&&Object.defineProperty("temporal","__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRACKS_LAYER_IN_FRONT_OF_GROUP",filename:"src/map/config.js"}});var D="dot-world-fishing";"undefined"!==typeof D&&D&&D===Object(D)&&Object.isExtensible(D)&&Object.defineProperty(D,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TILES_URL_NEEDING_AUTHENTICATION",filename:"src/map/config.js"}});"INIT_MODULE"===Object("INIT_MODULE")&&Object.isExtensible("INIT_MODULE")&&Object.defineProperty("INIT_MODULE","__filemeta",{enumerable:!0,configurable:!0,value:{name:"INIT_MODULE",filename:"src/map/module/module.actions.js"}});"SET_TEMPORAL_EXTENT"===Object("SET_TEMPORAL_EXTENT")&&Object.isExtensible("SET_TEMPORAL_EXTENT")&&Object.defineProperty("SET_TEMPORAL_EXTENT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_TEMPORAL_EXTENT",filename:"src/map/module/module.actions.js"}});"SET_HIGHLIGHT_TEMPORAL_EXTENT"===Object("SET_HIGHLIGHT_TEMPORAL_EXTENT")&&Object.isExtensible("SET_HIGHLIGHT_TEMPORAL_EXTENT")&&Object.defineProperty("SET_HIGHLIGHT_TEMPORAL_EXTENT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_HIGHLIGHT_TEMPORAL_EXTENT",filename:"src/map/module/module.actions.js"}});"START_LOADER"===Object("START_LOADER")&&Object.isExtensible("START_LOADER")&&Object.defineProperty("START_LOADER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"START_LOADER",filename:"src/map/module/module.actions.js"}});"COMPLETE_LOADER"===Object("COMPLETE_LOADER")&&Object.isExtensible("COMPLETE_LOADER")&&Object.defineProperty("COMPLETE_LOADER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"COMPLETE_LOADER",filename:"src/map/module/module.actions.js"}});"SET_MODULE_CURSOR"===Object("SET_MODULE_CURSOR")&&Object.isExtensible("SET_MODULE_CURSOR")&&Object.defineProperty("SET_MODULE_CURSOR","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MODULE_CURSOR",filename:"src/map/module/module.actions.js"}});var L=function(e){return function(t){t({type:"INIT_MODULE",payload:e})}};L&&L===Object(L)&&Object.isExtensible(L)&&Object.defineProperty(L,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"initModule",filename:"src/map/module/module.actions.js"}});var M=function(e,t,a){var r=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==a?"".concat(a,"_").concat(r):r}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),a};"undefined"!==typeof M&&M&&M===Object(M)&&Object.isExtensible(M)&&Object.defineProperty(M,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"startLoader",filename:"src/map/module/module.actions.js"}});var Y=function(e){return function(t,a){t({type:"COMPLETE_LOADER",payload:e});var r=a();r.map.module.loaders.length||void 0===r.map.module.onLoadComplete||r.map.module.onLoadComplete()}};"undefined"!==typeof Y&&Y&&Y===Object(Y)&&Object.isExtensible(Y)&&Object.defineProperty(Y,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"completeLoader",filename:"src/map/module/module.actions.js"}});var k=function(e){return function(t,a){var r=a(),i=r.map.module.onViewportChange;if(void 0!==i){var n=r.map.viewport;i({interactionState:e,zoom:n.viewport.zoom,center:[n.viewport.latitude,n.viewport.longitude],bounds:n.bounds,canZoomIn:n.canZoomIn,canZoomOut:n.canZoomOut,mouseLatLong:n.mouseLatLong})}}};k&&k===Object(k)&&Object.isExtensible(k)&&Object.defineProperty(k,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"onViewportChange",filename:"src/map/module/module.actions.js"}});var x=function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}};x&&x===Object(x)&&Object.isExtensible(x)&&Object.defineProperty(x,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setTemporalExtent",filename:"src/map/module/module.actions.js"}});var Q=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}};Q&&Q===Object(Q)&&Object.isExtensible(Q)&&Object.defineProperty(Q,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setHighlightTemporalExtent",filename:"src/map/module/module.actions.js"}});var P=function(){return function(e,t){var a=t();void 0!==a.map.module.onClosePopup&&a.map.module.onClosePopup()}};P&&P===Object(P)&&Object.isExtensible(P)&&Object.defineProperty(P,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"closePopup",filename:"src/map/module/module.actions.js"}});var G=function(e){return{type:"SET_MODULE_CURSOR",payload:e}};G&&G===Object(G)&&Object.isExtensible(G)&&Object.defineProperty(G,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setCursor",filename:"src/map/module/module.actions.js"}});var F=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),H=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),U=function(e){return e.map.module.temporalExtent};U&&U===Object(U)&&Object.isExtensible(U)&&Object.defineProperty(U,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTemporalExtent",filename:"src/map/module/module.selectors.js"}});var N=function(e){return e.map.module.highlightTemporalExtent};function K(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Z(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?K(a,!0).forEach((function(t){Object(H.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):K(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}N&&N===Object(N)&&Object.isExtensible(N)&&Object.defineProperty(N,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getHighlightTemporalExtent",filename:"src/map/module/module.selectors.js"}});var J=function(e){return e.map.tracks.data};J&&J===Object(J)&&Object.isExtensible(J)&&Object.defineProperty(J,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTracksData",filename:"src/map/tracks/tracks.selectors.js"}});var q=Object(B.a)(J,(function(e){return e.filter((function(e){return"geojson"===e.type}))}));"undefined"!==typeof q&&q&&q===Object(q)&&Object.isExtensible(q)&&Object.defineProperty(q,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getGeojsonTracks",filename:"src/map/tracks/tracks.selectors.js"}});var V=Object(B.a)(q,(function(e){return e.filter((function(e){return void 0!==e.data}))}));"undefined"!==typeof V&&V&&V===Object(V)&&Object.isExtensible(V)&&Object.defineProperty(V,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getGeojsonTracksReady",filename:"src/map/tracks/tracks.selectors.js"}});var W=function(e,t){return{sources:Z({},e.sources,{},t.sources),layers:[].concat(Object(F.a)(e.layers),Object(F.a)(t.layers))}},z=function(e,t){var a=t.start,r=t.end;if(!e||!e.features)return null;var i=e.features.reduce((function(e,t){if(t.properties&&t.properties.coordinateProperties&&t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var i=t.geometry.coordinates.reduce((function(e,i,n){var o=t.properties.coordinateProperties.times[n];return o>=a&&o<=r&&(e.coordinates.push(i),e.times.push(o)),e}),{coordinates:[],times:[]});if(!i.coordinates.length)return e;var n=Z({},t,{geometry:Z({},t.geometry,{coordinates:i.coordinates}),properties:Z({},t.properties,{coordinateProperties:{times:i.times}})});e.push(n)}return e}),[]);return Z({},e,{features:i})},X=Object(B.a)([U,V],(function(e,t){var a=e&&e.length>0,r=t&&t.length>0;if(!a||!r)return null;var i={start:e[0].getTime(),end:e[1].getTime()};return t.reduce((function(e,t){if(!t.data)return e;var a="".concat(t.id,"Track"),r={sources:Object(H.a)({},a,{type:"geojson",data:z(t.data,i)}),layers:[{id:"".concat(t.id,"Lines"),source:a,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:a,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return W(e,r)}),{sources:{},layers:[]})})),$=Object(B.a)([N,V],(function(e,t){var a=e&&e.length>0,r=t&&t.length>0;if(!a||!r)return null;var i={start:e[0].getTime(),end:e[1].getTime()};return t.reduce((function(e,t){if(!t.data)return e;var a="".concat(t.id,"HighlightedTrack"),r={sources:Object(H.a)({},a,{type:"geojson",data:z(t.data,i)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:a,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return W(e,r)}),{sources:{},layers:[]})})),ee=Object(B.a)([X,$],(function(e,t){return t?W(e,t):e}));"undefined"!==typeof ee&&ee&&ee===Object(ee)&&Object.isExtensible(ee)&&Object.defineProperty(ee,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTracksStyles",filename:"src/map/tracks/tracks.selectors.js"}});var te=a("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),ae=a("./node_modules/@turf/area/index.js"),re=a.n(ae);"rgba(0,0,0,0)"===Object("rgba(0,0,0,0)")&&Object.isExtensible("rgba(0,0,0,0)")&&Object.defineProperty("rgba(0,0,0,0)","__filemeta",{enumerable:!0,configurable:!0,value:{name:"GL_TRANSPARENT",filename:"src/map/constants.js"}});var ie={ZOOM:"ZOOM"};"undefined"!==typeof ie&&ie&&ie===Object(ie)&&Object.isExtensible(ie)&&Object.defineProperty(ie,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRANSITION_TYPE",filename:"src/map/constants.js"}});"Encounters"===Object("Encounters")&&Object.isExtensible("Encounters")&&Object.defineProperty("Encounters","__filemeta",{enumerable:!0,configurable:!0,value:{name:"ENCOUNTERS",filename:"src/map/constants.js"}});var ne={NORMAL:0,BULLSEYE:2};"undefined"!==typeof ne&&ne&&ne===Object(ne)&&Object.isExtensible(ne)&&Object.defineProperty(ne,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"BRUSH_RENDERING_STYLE",filename:"src/map/constants.js"}});var oe={RADIAL_GRADIENT:0,CIRCLE:1};"undefined"!==typeof oe&&oe&&oe===Object(oe)&&Object.isExtensible(oe)&&Object.defineProperty(oe,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"BRUSH_ZOOM_RENDERING_STYLE",filename:"src/map/constants.js"}});"POLYGON_LAYERS_AREA"===Object("POLYGON_LAYERS_AREA")&&Object.isExtensible("POLYGON_LAYERS_AREA")&&Object.defineProperty("POLYGON_LAYERS_AREA","__filemeta",{enumerable:!0,configurable:!0,value:{name:"POLYGON_LAYERS_AREA",filename:"src/map/constants.js"}});var se={geojson:"geojson",raster:"raster"};"undefined"!==typeof se&&se&&se===Object(se)&&Object.isExtensible(se)&&Object.defineProperty(se,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"CUSTOM_LAYERS_SUBTYPES",filename:"src/map/constants.js"}});var le=a("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),ce=a("./node_modules/lodash/difference.js"),ue=a.n(ce),pe=a("./node_modules/lodash/uniq.js"),me=a.n(pe),de=a("./node_modules/lodash/uniqBy.js"),Ae=a.n(de),ge=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),fe=a("./node_modules/lodash/pull.js"),be=a.n(fe),he=a("./node_modules/lodash/sumBy.js"),Ee=a.n(he),Oe=a("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),ye=a("./node_modules/@globalfishingwatch/map-convert/index.js"),je=a.n(ye),ve=a("./node_modules/lodash/template.js"),_e=a.n(ve),Ie=a("./node_modules/lodash/templateSettings.js"),Be=a.n(Ie),Te=function(e,t){return Be.a.interpolate=/{{([\s\S]+?)}}/g,_e()(e)(t)},Ce=a("./src/map/lib/pelagosClient.js"),we=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=[];return(t||[null]).forEach((function(t,i){var n={};null!==t&&!0!==a.temporalExtentsLess&&(n.startTimeISO=new Date(t[0]).toISOString(),n.endTimeISO=new Date(t[1]).toISOString()),a.tileCoordinates&&(n.x=a.tileCoordinates.x,n.y=a.tileCoordinates.y,n.z=a.tileCoordinates.zoom);var o=Te(e,n);(!0===a.temporalExtentsLess||!a.temporalExtentsIndices||a.temporalExtentsIndices.indexOf(i)>-1)&&r.push(o)})),r},Se=function(e,t,a){for(var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=[],n=we(e,a,r),o=0,s=n.length;o<s;o++)i.push((new Ce.a).obtainTile(n[o],t));return i};"undefined"!==typeof Se&&Se&&Se===Object(Se)&&Object.isExtensible(Se)&&Object.defineProperty(Se,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTilePromises",filename:"src/map/utils/heatmapTileData.js"}});var Re=function(e){return e.filter((function(e){return null!==e}))};"undefined"!==typeof Re&&Re&&Re===Object(Re)&&Object.isExtensible(Re)&&Object.defineProperty(Re,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getCleanVectorArrays",filename:"src/map/utils/heatmapTileData.js"}});var De=function(e,t){var a,r={},i=Ee()(e,(function(e){return e.longitude.length})),n=t.filter((function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)}));n.forEach((function(e){r[e]=new Float32Array(i)}));for(var o=0,s=function(e){r[e].set(a[e],o)},l=0,c=e.length;l<c;l++)a=e[l],n.forEach(s),o+=a.longitude.length;return r};"undefined"!==typeof De&&De&&De===Object(De)&&Object.isExtensible(De)&&Object.defineProperty(De,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"groupData",filename:"src/map/utils/heatmapTileData.js"}});var Le=function(e,t,a,r){var i=void 0===r?[]:r,n=a.zoom,o=je.a.getZoomFactorRadius(n),s=je.a.getZoomFactorRadiusRenderingMode(n),l=je.a.getZoomFactorOpacity(n),c={},u=Object.keys(t);u.forEach((function(e){c[e]=!0}));var p=[].concat(u);!0===c.sigma&&p.push("radius"),!0===c.weight&&p.push("opacity"),!0===c.longitude&&(p.push("worldX"),p.push("worldY")),!0===c.id&&p.push("series"),["latitude","longitude","datetime"].forEach((function(e){void 0!==t[e]&&!0!==t[e].hidden||be()(p,e)})),be()(p,"sigma","weight"),p=me()(p);for(var m=e.latitude.length,d={},A=[],g=function(t,a){var r={};u.forEach((function(a){r[a]=e[a][t]}));var i=c.timeIndex?r.timeIndex:je.a.getOffsetedTimeAtPrecision(r.datetime),n=Object(Oe.d)([r.longitude,r.latitude],1),m=Object(ge.a)(n,2),g=m[0],f=m[1];if(r.worldX=g,r.worldY=f,c.sigma&&(r.radius=je.a.sigmaToRadius(r.sigma,s,o)),c.weight&&(r.opacity=je.a.weightToOpacity(r.weight,l)),c.id&&(r.series=r.id),!d[i]){A.push(i);var b={};return p.forEach((function(e){b[e]=[r[e]]})),d[i]=b,"continue"}var h=d[i];p.forEach((function(e){h[e].push(r[e])}))},f=0,b=m;f<b;f++)g(f);return A.forEach((function(e){i[e]=d[e]})),i};"undefined"!==typeof Le&&Le&&Le===Object(Le)&&Object.isExtensible(Le)&&Object.defineProperty(Le,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTilePlaybackData",filename:"src/map/utils/heatmapTileData.js"}});var Me=function(e){e.hasFishing=[],e.worldX=[],e.worldY=[];for(var t=0,a=e.weight.length;t<a;t++){var r=Object(Oe.d)([e.longitude[t],e.latitude[t]],1),i=Object(ge.a)(r,2),n=i[0],o=i[1];e.worldX[t]=n,e.worldY[t]=o,e.hasFishing[t]=e.weight[t]>0}return e};"undefined"!==typeof Me&&Me&&Me===Object(Me)&&Object.isExtensible(Me)&&Object.defineProperty(Me,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"addTracksPointsRenderingData",filename:"src/map/utils/heatmapTileData.js"}});var Ye=function(e){for(var t=[],a=0,r=e.series.length;a<r;a++){var i=e.datetime[a],n=je.a.getOffsetedTimeAtPrecision(i);if(t[n]){var o=t[n];o.worldX.push(e.worldX[a]),o.worldY.push(e.worldY[a]),o.series.push(e.series[a]),o.hasFishing.push(e.hasFishing[a])}else{var s={worldX:[e.worldX[a]],worldY:[e.worldY[a]],series:[e.series[a]],hasFishing:[e.hasFishing[a]]};t[n]=s}}return t};"undefined"!==typeof Ye&&Ye&&Ye===Object(Ye)&&Object.isExtensible(Ye)&&Object.defineProperty(Ye,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTracksPlaybackData",filename:"src/map/utils/heatmapTileData.js"}});var ke=function(e,t,a){return Object.keys(a).every((function(r){return void 0!==e[r]&&a[r].indexOf(e[r][t])>-1}))};ke&&ke===Object(ke)&&Object.isExtensible(ke)&&Object.defineProperty(ke,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"vesselSatisfiesFilters",filename:"src/map/utils/heatmapTileData.js"}});var xe=function(e,t,a,r,i){for(var n=[],o=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var a=e[t];if(void 0===a)return"continue";for(var r=function(e){var r=a.worldX[e],c=a.worldY[e];if((!i.length||function(e,t,a){return a.filter((function(e){return!0!==e.pass})).some((function(a){return ke(e,t,a.filterValues)}))}(a,e,i))&&r>=o-l&&r<=o+l&&c>=s-l&&c<=s+l){var u={};Object.keys(a).forEach((function(t){u[t]=a[t][e]})),u.timeIndex=t,n.push(u)}},c=0;c<a.worldX.length;c++)r(c)},u=a;u<r;u++)c(u);return n};xe&&xe===Object(xe)&&Object.isExtensible(xe)&&Object.defineProperty(xe,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"selectVesselsAt",filename:"src/map/utils/heatmapTileData.js"}});var Qe=a("./node_modules/@mapbox/tile-cover/index.js"),Pe=a.n(Qe),Ge=a("./node_modules/lodash/debounce.js"),Fe=a.n(Ge),He=a("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function Ue(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}"SET_CURRENTLY_VISIBLE_TILES"===Object("SET_CURRENTLY_VISIBLE_TILES")&&Object.isExtensible("SET_CURRENTLY_VISIBLE_TILES")&&Object.defineProperty("SET_CURRENTLY_VISIBLE_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_CURRENTLY_VISIBLE_TILES",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"SET_CURRENTLY_LOADED_TILES"===Object("SET_CURRENTLY_LOADED_TILES")&&Object.isExtensible("SET_CURRENTLY_LOADED_TILES")&&Object.defineProperty("SET_CURRENTLY_LOADED_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_CURRENTLY_LOADED_TILES",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"SET_CURRENTLY_SWAPPED_TILE_UIDS"===Object("SET_CURRENTLY_SWAPPED_TILE_UIDS")&&Object.isExtensible("SET_CURRENTLY_SWAPPED_TILE_UIDS")&&Object.defineProperty("SET_CURRENTLY_SWAPPED_TILE_UIDS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_CURRENTLY_SWAPPED_TILE_UIDS",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"MARK_TILES_UIDS_AS_LOADED"===Object("MARK_TILES_UIDS_AS_LOADED")&&Object.isExtensible("MARK_TILES_UIDS_AS_LOADED")&&Object.defineProperty("MARK_TILES_UIDS_AS_LOADED","__filemeta",{enumerable:!0,configurable:!0,value:{name:"MARK_TILES_UIDS_AS_LOADED",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"RELEASE_MARKED_TILES_UIDS"===Object("RELEASE_MARKED_TILES_UIDS")&&Object.isExtensible("RELEASE_MARKED_TILES_UIDS")&&Object.defineProperty("RELEASE_MARKED_TILES_UIDS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"RELEASE_MARKED_TILES_UIDS",filename:"src/map/heatmap/heatmapTiles.actions.js"}});var Ne=function(e){var t=Math.ceil(e+.5),a=!0;return t>10&&(t=10,a=!1),{min_zoom:t,max_zoom:t,tilesAvailable:a}},Ke=function(){return function(e,t){var a=t();if(!a.map.heatmapTiles.currentToLoadTileUids.length){var r=a.map.heatmapTiles.currentToReleaseTileUids;e(ot(r)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},Ze=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(Ke())}};"undefined"!==typeof Ze&&Ze&&Ze===Object(Ze)&&Object.isExtensible(Ze)&&Object.defineProperty(Ze,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"markTileAsLoaded",filename:"src/map/heatmap/heatmapTiles.actions.js"}});var Je=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,a){var r=a(),i=r.map.heatmapTiles.currentVisibleTiles,n=[],o=[];if(!0===e)n=i;else{var s=r.map.heatmapTiles.currentLoadedTiles;i.forEach((function(e){void 0===s.find((function(t){return t.uid===e.uid}))&&n.push(e)})),s.forEach((function(e){void 0===i.find((function(t){return t.uid===e.uid}))&&o.push(e.uid)}))}var l=n.map((function(e){return e.uid}));n.forEach((function(e){t(nt(e))})),t({type:"SET_CURRENTLY_LOADED_TILES",payload:i}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:o}}),t(st()),t(Ke())}},qe=Fe()((function(e){e(Je())}),500),Ve=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,a){var r=a().map.viewport,i=r.viewport;if(i.width&&i.height&&null===r.currentTransition){var n=new He.a(i),o=[n.unproject([0,0]),n.unproject([i.width,i.height])],s=o[0],l=o[1],c=[s[0],l[1],l[0],s[1]],u=c[0],p=c[1],m=c[2],d=c[3],A=[],g=Ne(i.zoom);if(!1!==g.tilesAvailable||!0===e){if(m>180||u<-180){var f=m>180?u:u+360,b=m>180?m-360:m;A.push([[[f,d],[179.999,d],[179.999,p],[f,p],[f,d]]]),A.push([[[-180,d],[b,d],[b,p],[-180,p],[-180,d]]])}else A.push([[[u,d],[m,d],[m,p],[u,p],[u,d]]]);var h={type:"MultiPolygon",coordinates:A},E=Pe.a.tiles(h,g),O=Pe.a.indexes(h,g),y=[];E.forEach((function(e,t){var a=O[t];e[2]>=2&&y.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:a})})),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:y}),!1===(r.prevZoom!==i.zoom)?t(Je(e)):qe(t)}}}};Ve&&Ve===Object(Ve)&&Object.isExtensible(Ve)&&Object.defineProperty(Ve,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateHeatmapTilesFromViewport",filename:"src/map/heatmap/heatmapTiles.actions.js"}});var We=function(e,t){return function(a,r){var i={type:"Point",coordinates:[e.longitude,e.latitude]},n=r().map.viewport.viewport.zoom,o=[n,n-1,n+1].map((function(e){return Ne(e)})).map((function(e){return Pe.a.indexes(i,e)})).map((function(e){return e[0]}));a(At(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Ue(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Ue(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},e,{uids:o}),t))}};function ze(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Xe(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?ze(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ze(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}We&&We===Object(We)&&Object.isExtensible(We)&&Object.defineProperty(We,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"queryHeatmapVessels",filename:"src/map/heatmap/heatmapTiles.actions.js"}});"ADD_HEATMAP_LAYER"===Object("ADD_HEATMAP_LAYER")&&Object.isExtensible("ADD_HEATMAP_LAYER")&&Object.defineProperty("ADD_HEATMAP_LAYER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"ADD_HEATMAP_LAYER",filename:"src/map/heatmap/heatmap.actions.js"}});"UPDATE_HEATMAP_LAYER_STYLE"===Object("UPDATE_HEATMAP_LAYER_STYLE")&&Object.isExtensible("UPDATE_HEATMAP_LAYER_STYLE")&&Object.defineProperty("UPDATE_HEATMAP_LAYER_STYLE","__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_HEATMAP_LAYER_STYLE",filename:"src/map/heatmap/heatmap.actions.js"}});var $e="ADD_REFERENCE_TILE";"undefined"!==typeof $e&&$e&&$e===Object($e)&&Object.isExtensible($e)&&Object.defineProperty($e,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ADD_REFERENCE_TILE",filename:"src/map/heatmap/heatmap.actions.js"}});var et="HIGHLIGHT_VESSELS";"undefined"!==typeof et&&et&&et===Object(et)&&Object.isExtensible(et)&&Object.defineProperty(et,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HIGHLIGHT_VESSELS",filename:"src/map/heatmap/heatmap.actions.js"}});"INIT_HEATMAP_LAYERS"===Object("INIT_HEATMAP_LAYERS")&&Object.isExtensible("INIT_HEATMAP_LAYERS")&&Object.defineProperty("INIT_HEATMAP_LAYERS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"INIT_HEATMAP_LAYERS",filename:"src/map/heatmap/heatmap.actions.js"}});"REMOVE_HEATMAP_LAYER"===Object("REMOVE_HEATMAP_LAYER")&&Object.isExtensible("REMOVE_HEATMAP_LAYER")&&Object.defineProperty("REMOVE_HEATMAP_LAYER","__filemeta",{enumerable:!0,configurable:!0,value:{name:"REMOVE_HEATMAP_LAYER",filename:"src/map/heatmap/heatmap.actions.js"}});var tt="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES";"undefined"!==typeof tt&&tt&&tt===Object(tt)&&Object.isExtensible(tt)&&Object.defineProperty(tt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",filename:"src/map/heatmap/heatmap.actions.js"}});var at="UPDATE_HEATMAP_TILE";"undefined"!==typeof at&&at&&at===Object(at)&&Object.isExtensible(at)&&Object.defineProperty(at,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_HEATMAP_TILE",filename:"src/map/heatmap/heatmap.actions.js"}});"RELEASE_HEATMAP_TILES"===Object("RELEASE_HEATMAP_TILES")&&Object.isExtensible("RELEASE_HEATMAP_TILES")&&Object.defineProperty("RELEASE_HEATMAP_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"RELEASE_HEATMAP_TILES",filename:"src/map/heatmap/heatmap.actions.js"}});"UPDATE_LOADED_TILES"===Object("UPDATE_LOADED_TILES")&&Object.isExtensible("UPDATE_LOADED_TILES")&&Object.defineProperty("UPDATE_LOADED_TILES","__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_LOADED_TILES",filename:"src/map/heatmap/heatmap.actions.js"}});"HIGHLIGHT_CLICKED_VESSEL"===Object("HIGHLIGHT_CLICKED_VESSEL")&&Object.isExtensible("HIGHLIGHT_CLICKED_VESSEL")&&Object.defineProperty("HIGHLIGHT_CLICKED_VESSEL","__filemeta",{enumerable:!0,configurable:!0,value:{name:"HIGHLIGHT_CLICKED_VESSEL",filename:"src/map/heatmap/heatmap.actions.js"}});function rt(e,t){var a=e[0].getTime(),r=e[1].getTime(),i=[];return t.forEach((function(e,t){var n=e[0];e[1]>=a&&n<=r&&i.push(t)})),i}function it(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(r,i){var n=i(),o=M(r,n,e.join("-")),s=n.map.module.token,l=n.map.heatmap.heatmapLayers,c={};e.forEach((function(e){c[e]=Object(le.a)(l[e].tiles)}));var u=[];e.forEach((function(e){var i=l[e].header,n=Xe({},i),o=n.temporalExtents,p=n.temporalExtentsLess,m=n.colsByName,d=i.endpoints.tiles;t.forEach((function(t){var i=c[e].find((function(e){return e.uid===t.uid}));i||(i={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(i));var n=void 0===a?l[e].visibleTemporalExtentsIndices:a[e],A=ue()(n,i.temporalExtentsIndicesLoaded),g=function(e,t,a,r,i){var n=i.url,o=i.temporalExtents,s=i.temporalExtentsLess;if(void 0===n)throw new Error("URL/endpoints object is not available on this tilesets header");var l=Se(n,a,o,{tileCoordinates:t,temporalExtentsIndices:r,temporalExtentsLess:s}),c=Promise.all(l);return new Promise((function(t){c.then((function(a){t({loadedLayerId:e,rawTileData:a})}))}))}(e,t.tileCoordinates,s,A,{url:d,temporalExtents:o,temporalExtentsLess:p});u.push(g),g.then((function(e){var a=e.loadedLayerId,n=e.rawTileData;i.temporalExtentsIndicesLoaded=me()(i.temporalExtentsIndicesLoaded.concat(A)),i.data=function(e,t,a,r){var i,n=Re(e);return i=De(n,Object.keys(t)),0===Object.keys(i).length?[]:Le(i,t,a,r)}(n,m,t.tileCoordinates,i.data),r({type:at,payload:{layerId:a,tile:i}})}))}))})),Promise.all(u).then((function(){r(Y(o)),r(Ze(t.map((function(e){return e.uid}))))}))}}function nt(e){return function(t,a){t({type:$e,payload:e});var r=a().map.heatmap.heatmapLayers,i=Object.keys(r).filter((function(e){return!0===r[e].visible}));i.length&&t(it(i,[e]))}}"CLEAR_HIGHLIGHT_CLICKED_VESSEL"===Object("CLEAR_HIGHLIGHT_CLICKED_VESSEL")&&Object.isExtensible("CLEAR_HIGHLIGHT_CLICKED_VESSEL")&&Object.defineProperty("CLEAR_HIGHLIGHT_CLICKED_VESSEL","__filemeta",{enumerable:!0,configurable:!0,value:{name:"CLEAR_HIGHLIGHT_CLICKED_VESSEL",filename:"src/map/heatmap/heatmap.actions.js"}}),nt&&nt===Object(nt)&&Object.isExtensible(nt)&&Object.defineProperty(nt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getTile",filename:"src/map/heatmap/heatmap.actions.js"}});var ot=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}};"undefined"!==typeof ot&&ot&&ot===Object(ot)&&Object.isExtensible(ot)&&Object.defineProperty(ot,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"releaseTiles",filename:"src/map/heatmap/heatmap.actions.js"}});var st=function(){return{type:"UPDATE_LOADED_TILES"}};function lt(e){return function(t,a){var r=a().map.heatmap.referenceTiles;t(it([e],r))}}"undefined"!==typeof st&&st&&st===Object(st)&&Object.isExtensible(st)&&Object.defineProperty(st,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateLoadedTiles",filename:"src/map/heatmap/heatmap.actions.js"}});var ct=function(e,t){return function(a){var r=e.header.temporalExtents;a({type:"ADD_HEATMAP_LAYER",payload:Xe({},e,{visibleTemporalExtentsIndices:rt(t,r)})}),!0===e.visible&&a(lt(e.id))}};ct&&ct===Object(ct)&&Object.isExtensible(ct)&&Object.defineProperty(ct,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"addHeatmapLayer",filename:"src/map/heatmap/heatmap.actions.js"}});var ut=function(e){return function(t){t({type:"REMOVE_HEATMAP_LAYER",payload:{id:e}})}};function pt(e){return function(t,a){var r=a(),i=r.map.heatmap.heatmapLayers,n={};Object.keys(i).forEach((function(a){var r=i[a],o=r.header.temporalExtents,s=r.visibleTemporalExtentsIndices,l=rt(e,o),c=ue()(l,s),u=ue()(s,l);(c.length||u.length)&&t({type:tt,payload:{layerId:a,newVisibleTemporalExtentsIndices:l,indicesRemoved:u}}),c.length&&(n[a]=c)}));var o=Object.keys(n);o.length&&t(it(o,r.map.heatmap.referenceTiles,n))}}ut&&ut===Object(ut)&&Object.isExtensible(ut)&&Object.defineProperty(ut,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"removeHeatmapLayer",filename:"src/map/heatmap/heatmap.actions.js"}}),pt&&pt===Object(pt)&&Object.isExtensible(pt)&&Object.defineProperty(pt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateLayerLoadTemporalExtents",filename:"src/map/heatmap/heatmap.actions.js"}});var mt=function(e,t,a){var r=e.map.heatmap.heatmapLayers,i=a[0],n=a[1],o=[];Object.keys(r).forEach((function(e){var a=r[e];if(!0===a.visible){var s=t.uids.map((function(e){return a.tiles.find((function(t){return t.uid===e}))})).filter((function(e){return void 0!==e&&void 0!==e.data})),l=a.filters;if(s.length){var c=s[0];o.push({layer:a,vessels:xe(c.data,t,i,n,l)})}}}));var s,l,c,u,p,m=o.filter((function(e){return e.vessels.length>0}));if(0===m.length)c=!0;else if(m.length>1)s=!0;else{var d=(u=m[0]).vessels;if(0===d.length)c=!0;else d.filter((function(e){return e.id<0})).length?s=!0:l=(p=Ae()(d,(function(e){return e.series}))).length>1}return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:p,layer:void 0===u?{}:u.layer}};function dt(){return{type:et,payload:{isEmpty:!0,clickableCluster:!1}}}function At(e,t){return function(a,r){var i=r(),n=mt(i,e,t),o=n.layer,s=n.isEmpty,l=n.isCluster,c=n.isMouseCluster,u=n.foundVessels;if(!0===l||void 0!==o.id||i.map.heatmap.highlightedVessels.layerId!==o.id){var p=void 0===o?null:{id:o.id,tilesetId:o.tilesetId,subtype:o.subtype,header:o.header};a({type:et,payload:{layer:p,isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:u}})}else a(dt())}}dt&&dt===Object(dt)&&Object.isExtensible(dt)&&Object.defineProperty(dt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"clearHighlightedVessels",filename:"src/map/heatmap/heatmap.actions.js"}}),At&&At===Object(At)&&Object.isExtensible(At)&&Object.defineProperty(At,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"highlightVesselFromHeatmap",filename:"src/map/heatmap/heatmap.actions.js"}});var gt=function(e,t){return{type:"HIGHLIGHT_CLICKED_VESSEL",payload:{id:e,layerId:t}}};gt&&gt===Object(gt)&&Object.isExtensible(gt)&&Object.defineProperty(gt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"highlightClickedVessel",filename:"src/map/heatmap/heatmap.actions.js"}});var ft=function(){return{type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"}};ft&&ft===Object(ft)&&Object.isExtensible(ft)&&Object.defineProperty(ft,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"clearHighlightedClickedVessel",filename:"src/map/heatmap/heatmap.actions.js"}});var bt=function(e,t){return function(a,r){if(null!==e){var i=r().map.heatmap.heatmapLayers;e.forEach((function(e){var r=e.id,n=i[r];void 0===n?a(ct(e,t)):(n.visible!==e.visible&&!0===e.visible&&a(lt(r)),n.visible===e.visible&&n.hue===e.hue&&n.opacity===e.opacity&&n.filters===e.filters&&n.interactive===e.interactive||a({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))})),Object.keys(i).forEach((function(t){e.find((function(e){return e.id===t}))||a(ut(t))}))}else console.warn("New layers in updateHeatmapLayers can't be null")}};bt&&bt===Object(bt)&&Object.isExtensible(bt)&&Object.defineProperty(bt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateHeatmapLayers",filename:"src/map/heatmap/heatmap.actions.js"}});var ht=a("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js");"SET_BOUNDS"===Object("SET_BOUNDS")&&Object.isExtensible("SET_BOUNDS")&&Object.defineProperty("SET_BOUNDS","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_BOUNDS",filename:"src/map/glmap/viewport.actions.js"}});"SET_VIEWPORT"===Object("SET_VIEWPORT")&&Object.isExtensible("SET_VIEWPORT")&&Object.defineProperty("SET_VIEWPORT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_VIEWPORT",filename:"src/map/glmap/viewport.actions.js"}});"UPDATE_VIEWPORT"===Object("UPDATE_VIEWPORT")&&Object.isExtensible("UPDATE_VIEWPORT")&&Object.defineProperty("UPDATE_VIEWPORT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_VIEWPORT",filename:"src/map/glmap/viewport.actions.js"}});"SET_ZOOM_INCREMENT"===Object("SET_ZOOM_INCREMENT")&&Object.isExtensible("SET_ZOOM_INCREMENT")&&Object.defineProperty("SET_ZOOM_INCREMENT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_ZOOM_INCREMENT",filename:"src/map/glmap/viewport.actions.js"}});"SET_MOUSE_LAT_LONG"===Object("SET_MOUSE_LAT_LONG")&&Object.isExtensible("SET_MOUSE_LAT_LONG")&&Object.defineProperty("SET_MOUSE_LAT_LONG","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MOUSE_LAT_LONG",filename:"src/map/glmap/viewport.actions.js"}});"TRANSITION_END"===Object("TRANSITION_END")&&Object.isExtensible("TRANSITION_END")&&Object.defineProperty("TRANSITION_END","__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRANSITION_END",filename:"src/map/glmap/viewport.actions.js"}});"SET_NATIVE_VIEWPORT"===Object("SET_NATIVE_VIEWPORT")&&Object.isExtensible("SET_NATIVE_VIEWPORT")&&Object.defineProperty("SET_NATIVE_VIEWPORT","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_NATIVE_VIEWPORT",filename:"src/map/glmap/viewport.actions.js"}});var Et=function(e){return{type:"SET_BOUNDS",payload:e}};Et&&Et===Object(Et)&&Object.isExtensible(Et)&&Object.defineProperty(Et,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setBounds",filename:"src/map/glmap/viewport.actions.js"}});var Ot=function(e,t){return function(a){a({type:"SET_VIEWPORT",payload:e}),a(Ve()),a(k(t))}};Ot&&Ot===Object(Ot)&&Object.isExtensible(Ot)&&Object.defineProperty(Ot,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setViewport",filename:"src/map/glmap/viewport.actions.js"}});var yt=function(e){return function(t){t({type:"UPDATE_VIEWPORT",payload:e}),t(Ve())}};yt&&yt===Object(yt)&&Object.isExtensible(yt)&&Object.defineProperty(yt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateViewport",filename:"src/map/glmap/viewport.actions.js"}});var jt=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(i){i({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:a,zoom:r}}),i(Ve()),i(k())}},vt=function(e){return function(t){t(jt(null,e.center[0],e.center[1],e.zoom))}};vt&&vt===Object(vt)&&Object.isExtensible(vt)&&Object.defineProperty(vt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"transitionToZoom",filename:"src/map/glmap/viewport.actions.js"}});var _t=function(){return function(e){e({type:"TRANSITION_END"}),e(Ve()),e(k())}};_t&&_t===Object(_t)&&Object.isExtensible(_t)&&Object.defineProperty(_t,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"transitionEnd",filename:"src/map/glmap/viewport.actions.js"}});var It=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return function(r){r(jt(1,e,t,a))}};It&&It===Object(It)&&Object.isExtensible(It)&&Object.defineProperty(It,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"zoomIntoVesselCenter",filename:"src/map/glmap/viewport.actions.js"}});var Bt=function(e){return function(t,a){var r=a(),i=Object(ht.a)({bounds:[[e.minLng,e.minLat],[e.maxLng,e.maxLat]],width:r.map.viewport.viewport.width,height:r.map.viewport.viewport.height,padding:50});t(jt(null,i.latitude,i.longitude,i.zoom))}};Bt&&Bt===Object(Bt)&&Object.isExtensible(Bt)&&Object.defineProperty(Bt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"fitToBounds",filename:"src/map/glmap/viewport.actions.js"}});var Tt=function(e){return function(t){var a=[0,0],r=[e.width,e.height],i=Object(Oe.e)(a,e.pixelUnprojectionMatrix),n=Object(Oe.e)(r,e.pixelUnprojectionMatrix),o=i[0]/e.scale,s=n[0]/e.scale,l=e.unproject(a),c=e.unproject(r);t({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:o,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}};function Ct(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}Tt&&Tt===Object(Tt)&&Object.isExtensible(Tt)&&Object.defineProperty(Tt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"exportNativeViewport",filename:"src/map/glmap/viewport.actions.js"}});"SET_POPUP"===Object("SET_POPUP")&&Object.isExtensible("SET_POPUP")&&Object.defineProperty("SET_POPUP","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_POPUP",filename:"src/map/glmap/interaction.actions.js"}});"CLEAR_POPUP"===Object("CLEAR_POPUP")&&Object.isExtensible("CLEAR_POPUP")&&Object.defineProperty("CLEAR_POPUP","__filemeta",{enumerable:!0,configurable:!0,value:{name:"CLEAR_POPUP",filename:"src/map/glmap/interaction.actions.js"}});"SET_MAP_CURSOR"===Object("SET_MAP_CURSOR")&&Object.isExtensible("SET_MAP_CURSOR")&&Object.defineProperty("SET_MAP_CURSOR","__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MAP_CURSOR",filename:"src/map/glmap/interaction.actions.js"}});var wt=function(e){return(Math.pow(10,-6)*re()(e.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})},St=function(e,t,a){var r={properties:e.properties},i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=t&&void 0!==t.metadata&&void 0!==t.metadata["gfw:popups"]?t.metadata["gfw:popups"]:[],r=e.properties,i=Object.keys(e.properties).filter((function(e){return 0===a.length||void 0!==a.find((function(t){return t.id===e}))})),n=i.map((function(t){var i="POLYGON_LAYERS_AREA"===t?wt(e):r[t],n=a.find((function(e){return e.id===t}))||{},o=n.label||t;return{id:t,label:o,value:i,title:"".concat(o,": ").concat(i),isLink:n.isLink,isMain:n.isMain}})),o=n.find((function(e){return!0===e.isMain}))||n.find((function(e){return"name"===e.id}))||n.find((function(e){return"id"===e.id}))||n[0];return void 0!==o&&(o.isMain=!0),n}(e,a);r.fields=i;var n=i.find((function(e){return!0===e.isMain}));return r.title=void 0===n?t:n.value,r},Rt=function(e,t,a,r,i){return function(n,o){"click"===e&&n({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s,l=o().map.style.mapStyle.toJS(),c={latitude:t,longitude:a,features:[]},u=o().map.heatmap.highlightedVessels;if(!0!==u.isEmpty){var p=void 0===u.foundVessels?[]:u.foundVessels,m=0===p.length?[]:p[0],d=!0===u.clickableCluster,A=!0===d&&!1===u.highlightableCluster?-1:p.length;s={isCluster:d,count:A,layer:{id:u.layer.id,group:"legacyHeatmap"},properties:m},c.features.push(s)}var g=[];(r||[]).forEach((function(e){var t=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source}(e),a=l.sources[t],r=function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Ct(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Ct(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({layer:{id:t,group:e.layer.metadata&&e.layer.metadata["mapbox:group"]}},St(e,t,a));if(!0===e.properties.cluster){var n=function(e,t){var a=e.properties.cluster_id,r=t(e.source);return new Promise((function(t,i){r.getClusterExpansionZoom(a,(function(n,o){r.getClusterLeaves(a,99,0,(function(a,s){(n||a)&&i();var l=s.map((function(t){return St(t,e.layer.id,r)}));t({zoom:o,childrenFeatures:l})}))}))}))}(e,i).then((function(e){r.cluster=e,r.count=e.childrenFeatures.length}));g.push(n),r.isCluster=!0}else r.isCluster=!1;c.features.push(r)})),Promise.all(g).then((function(){c.isCluster=c.features.length>1||c.features.some((function(e){return!0===e.isCluster})),void 0!==s&&-1===s.count?c.count=-1:c.count=c.features.reduce((function(e,t){return e+(t.count||1)}),0),1===c.count&&(c.feature=c.features[0]);var r=!0===o().map.module.autoClusterZoom,i=o().map.module.isCluster(c);if(c.isCluster=i,r&&"click"===e&&!0===c.isCluster){n(dt());var l=c.features[0].cluster&&c.features[0].cluster.zoom;n(It(t,a,l))}var u=c.features.length?"pointer":null;!0===c.isCluster&&(u="zoom-in"),n({type:"SET_MAP_CURSOR",payload:u});var p="click"===e?o().map.module.onClick:o().map.module.onHover;void 0!==p&&p(c)}))}};Rt&&Rt===Object(Rt)&&Object.isExtensible(Rt)&&Object.defineProperty(Rt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"mapInteraction",filename:"src/map/glmap/interaction.actions.js"}});var Dt=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js"),Lt=a.n(Dt),Mt=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),Yt=a("./node_modules/react-map-gl/dist/esm/index.js"),kt=(a("./node_modules/mapbox-gl/dist/mapbox-gl.css"),a("./node_modules/pixi.js/lib/index.js"));31===Object(31)&&Object.isExtensible(31)&&Object.defineProperty(31,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HUES_INCREMENTS_NUM",filename:"src/map/utils/map-colors.js"}});12===Object(12)&&Object.isExtensible(12)&&Object.defineProperty(12,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"VESSELS_HUES_INCREMENT",filename:"src/map/utils/map-colors.js"}});var xt={orange:0,peach:22,yellow:60,green:85,brightGreen:145,lightBlue:182,blue:236,purple:284,pink:312};"undefined"!==typeof xt&&xt&&xt===Object(xt)&&Object.isExtensible(xt)&&Object.defineProperty(xt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"COLOR_HUES",filename:"src/map/utils/map-colors.js"}});var Qt=function(e,t){var a=null;return Object.entries(e).forEach((function(e){e[1]===t&&(a=e[0])})),a};Qt&&Qt===Object(Qt)&&Object.isExtensible(Qt)&&Object.defineProperty(Qt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getKeyByValue",filename:"src/map/utils/map-colors.js"}});var Pt=function(e,t,a){var r,i=e/255,n=t/255,o=a/255,s=Math.max(i,n,o),l=Math.min(i,n,o),c=s,u=s-l,p=0===s?0:u/s;if(s===l)r=0;else{switch(s){case i:r=(n-o)/u+(n<o?6:0);break;case n:r=(o-i)/u+2;break;case o:r=(i-n)/u+4;break;default:r=0}r/=6}return[r,p,c]};Pt&&Pt===Object(Pt)&&Object.isExtensible(Pt)&&Object.defineProperty(Pt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"rgbToHsv",filename:"src/map/utils/map-colors.js"}});var Gt=function(e,t,a){var r=e%360/parseFloat(360)*6,i=100===t?1:t%100/parseFloat(100),n=100===a?1:a%100/parseFloat(100),o=Math.floor(r),s=r-o,l=n*(1-i),c=n*(1-s*i),u=n*(1-(1-s)*i),p=o%6,m=[n,c,l,l,u,n][p],d=[u,n,n,c,l,l][p],A=[l,l,u,n,n,c][p];return{r:Math.round(255*m),g:Math.round(255*d),b:Math.round(255*A)}};Gt&&Gt===Object(Gt)&&Object.isExtensible(Gt)&&Object.defineProperty(Gt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hsvToRgb",filename:"src/map/utils/map-colors.js"}});var Ft=function(e){return Gt(e,50,100)},Ht=function(e){var t=Ft(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")};Ht&&Ht===Object(Ht)&&Object.isExtensible(Ht)&&Object.defineProperty(Ht,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToRgbString",filename:"src/map/utils/map-colors.js"}});var Ut=function(e,t){var a=["r","g","b"].map((function(t){var a=e[t],r=a.toString(16);return a<16&&(r="0".concat(r)),r})).join("");return"".concat(!0===t?"#":"0x").concat(a)};Ut&&Ut===Object(Ut)&&Object.isExtensible(Ut)&&Object.defineProperty(Ut,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"rgbToHexString",filename:"src/map/utils/map-colors.js"}});var Nt=function(e,t){var a=Ft(e);return Ut(a,t)};Nt&&Nt===Object(Nt)&&Object.isExtensible(Nt)&&Object.defineProperty(Nt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToRgbHexString",filename:"src/map/utils/map-colors.js"}});var Kt=function(e){if(void 0!==e&&null!==e){var t,a=Object.keys(xt).map((function(e){return xt[e]})),r=(t=e,a.reduce((function(e,a){return Math.abs(a-t)<Math.abs(e-t)?a:e})));return Qt(xt,r)}};Kt&&Kt===Object(Kt)&&Object.isExtensible(Kt)&&Object.defineProperty(Kt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToClosestColor",filename:"src/map/utils/map-colors.js"}});var Zt=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null};Zt&&Zt===Object(Zt)&&Object.isExtensible(Zt)&&Object.defineProperty(Zt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hexToRgb",filename:"src/map/utils/map-colors.js"}});var Jt=function(e,t){return"rgba(".concat(e.r,", ").concat(e.g,", ").concat(e.b,", ").concat(t,")")},qt=function(e,t){var a=Ft(e);return Jt(a,t)};qt&&qt===Object(qt)&&Object.isExtensible(qt)&&Object.defineProperty(qt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToRgbaString",filename:"src/map/utils/map-colors.js"}});var Vt=function(e,t){var a=Zt(e);return Jt(a,t)};Vt&&Vt===Object(Vt)&&Object.isExtensible(Vt)&&Object.defineProperty(Vt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hexToRgba",filename:"src/map/utils/map-colors.js"}});var Wt=function(e){return 12*e};Wt&&Wt===Object(Wt)&&Object.isExtensible(Wt)&&Object.defineProperty(Wt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueIncrementToHue",filename:"src/map/utils/map-colors.js"}});var zt=function(e){return Math.round(e/360*30)};zt&&zt===Object(zt)&&Object.isExtensible(zt)&&Object.defineProperty(zt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueToHueIncrement",filename:"src/map/utils/map-colors.js"}});var Xt=function(e){return e%360};Xt&&Xt===Object(Xt)&&Object.isExtensible(Xt)&&Object.defineProperty(Xt,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"wrapHue",filename:"src/map/utils/map-colors.js"}});var $t=function(e,t){return void 0!==t?Nt(t,!0):e};$t&&$t===Object($t)&&Object.isExtensible($t)&&Object.defineProperty($t,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"hueOrColorToHexColor",filename:"src/map/utils/map-colors.js"}});var ea=a("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),ta=a("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),aa=a("./node_modules/@babel/runtime/helpers/esm/createClass.js"),ra=a("./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),ia=a("./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),na=a("./node_modules/@babel/runtime/helpers/esm/inherits.js"),oa=function(){function e(t,a,r){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Object(ta.a)(this,e),this.stage=new PIXI.particles.ParticleContainer(w,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===i&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var n=new PIXI.Rectangle(0,0,2*C,2*C);this.mainVesselTexture=new PIXI.Texture(t,n),this._setTextureFrame(a,r),this.clearSpriteProps()}return Object(aa.a)(e,[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(w),y:new Float32Array(w),a:new Float32Array(w),s:new Float32Array(w)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,a,r){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=a,this.spritesProps.s[this.spritesPropsCount]=r,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=this.mainVesselTexture.frame.clone();if(null!==e&&(a.x=2*C*e+e),null!==t){var r=zt(t);30===r&&(r=0),a.y=r*C*2,r>0&&(a.y+=r)}this.mainVesselTexture.frame=a,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var a=this.stage.children[t],r=this.spritesProps.s[t];a.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],r,r),a.alpha=this.spritesProps.a[t]}for(var i=this.stage.children.length,n=e;n<i;n++){this.stage.children[n].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),a=0;a<t;a++)this.stage.removeChildAt(0);if(e>0){var r=Math.max(5e3,e);this._addSprites(r)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var a=new PIXI.Sprite(this.mainVesselTexture);a.anchor.x=.5,a.anchor.y=.5,a.x=-100,this.stage.addChild(a)}}}]),e}();"undefined"!==typeof oa&&oa&&oa===Object(oa)&&Object.isExtensible(oa)&&Object.defineProperty(oa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HeatmapSubLayer",filename:"src/map/heatmap/HeatmapSubLayer.js"}}),"undefined"!==typeof oa&&oa&&oa===Object(oa)&&Object.isExtensible(oa)&&Object.defineProperty(oa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HeatmapSubLayer",filename:"src/map/heatmap/HeatmapSubLayer.js"}});var sa=function(e,t,a){return[1/1.5*(a[0]*e+a[4]*t+a[12]),1/1.5*(a[5]*t+a[13])]},la=function(e){function t(){return Object(ta.a)(this,t),Object(ra.a)(this,Object(ia.a)(t).apply(this,arguments))}return Object(na.a)(t,e),Object(aa.a)(t,[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,a=e.rootStage,r=e.useRadialGradientStyle,i=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:i,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(r),this.stage=new kt.Container,a.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ne.NORMAL;this.brushRenderingStyle="string"===typeof e?ne[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?oe.RADIAL_GRADIENT:oe.CIRCLE,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===ne.NORMAL?this.brushZoomRenderingStyle:0,a=this.brushRenderingStyle+t;a!==this.renderingStyleIndex&&(this.renderingStyleIndex=a,Object.values(this.subLayers).forEach((function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)})))}},{key:"_redraw",value:function(){var e=this,t=this.props,a=t.filters,r=t.baseTexture,i=t.layer;if(null!==i&&void 0!==i&&void 0!==i.tiles&&!1!==i.visible){this.stage.visible=!0,this.stage.alpha=i.opacity;for(var n=i.tiles,o=i.hue,s=void 0!==a&&a.length?a.filter((function(e){return!0!==e.pass})).map((function(e){return void 0===e.hue?"0":e.hue.toString()})):[o.toString()],l=Object.keys(this.subLayers),c=me()(s.concat(l)),u=0;u<c.length;u++){var p=c[u];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(r,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(n.forEach((function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:a.length,defaultHue:o})})),s.forEach((function(t){e.subLayers[t].render()})))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,a=e.numFilters,r=e.defaultHue;if(t)for(var i=this.props,n=i.startIndex,o=i.endIndex,s=i.viewport,l=i.filters,c=i.viewportLeft,u=i.viewportRight,p=n;p<o;p++){var m=t[p];if(m)for(var d=0,A=m.worldX.length;d<A;d++){var g=void 0;void 0!==l&&l.length||(g=r);for(var f=0;f<a;f++){var b=l[f];if(ke(m,d,b.filterValues)){g=b.hue;break}}if(void 0!==g){var h=m.worldX[d];c>0&&h<c?h+=512:c<0&&h>u&&(h-=512);var E=h*s.scale,O=m.worldY[d]*s.scale,y=s.pixelProjectionMatrix,j=0===s.pitch?sa(E,O,y):Object(Oe.h)([E,O],y),v=Object(ea.a)(j,2),_=v[0],I=v[1];_>-10&&_<s.width+10&&I>-10&&I<s.height+10&&this.subLayers[g].pushSpriteProps(_,I,m.opacity?m.opacity[d]:this.renderingStyle.defaultOpacity,m.radius?m.radius[d]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,a){var r=new oa(e,t,a,this.brushRenderingStyle===ne.BULLSEYE);return this.stage.addChild(r.stage),r}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}]),t}(o.a.Component),ca=la;"undefined"!==typeof la&&la&&la===Object(la)&&Object.isExtensible(la)&&Object.defineProperty(la,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"HeatmapLayer",filename:"src/map/heatmap/HeatmapLayer.js"}});var ua=function(e){function t(){return Object(c.a)(this,t),Object(p.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(u.a)(t,[{key:"componentDidMount",value:function(){this._build()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"_build",value:function(){var e=this.props.rootStage;this.stage=new PIXI.Graphics,this.stage.nativeLines=!0,e.addChild(this.stage)}},{key:"clear",value:function(){this.stage.clear()}},{key:"_redraw",value:function(){var e=this,t=this.props,a=t.tracks,r=t.zoom,i=t.startIndex,n=t.endIndex,o=t.highlightTemporalExtentIndexes;if(this.clear(),a.length){var s=null===o?void 0:[Math.max(i,o[0]),Math.min(n,o[1])],l=s&&s[1]-s[0]>0?s:void 0,c=r>2,u=1+.5*(r-2),p=void 0!==l&&l[0]>0&&l[1]>0;a.forEach((function(t){e._drawTrack({data:t.data,startIndex:i,endIndex:n,drawFishingCircles:c,fishingCirclesRadius:u,color:"0x".concat(t.color.substr(1)),lineThickness:1,lineOpacity:1}),!0===p&&e._drawTrack({data:t.data,startIndex:o[0],endIndex:o[1],drawFishingCircles:c,fishingCirclesRadius:u,color:"0xFFFFFF",lineThickness:2,lineOpacity:1})}))}}},{key:"_drawTrack",value:function(e){var t,a,r,i=this,n=e.data,o=e.startIndex,s=e.endIndex,l=e.drawFishingCircles,c=e.fishingCirclesRadius,u=e.color,p=e.lineThickness,m=e.lineOpacity,d=e.worldOffset,A=void 0===d?0:d,g=this.props.viewport,f=0,b={x:[],y:[]};this.stage.lineStyle(p,u,m);for(var h=!1,E=o;E<s;E++){var O=n[E];if(O)for(var y=0,j=O.series.length;y<j;y++){var v=O.series[y];f++;var _=O.worldX[y]+A,I=O.worldY[y],B=Object(Oe.h)([_*g.scale,I*g.scale],g.pixelProjectionMatrix),T=Object(ge.a)(B,2),C=T[0],w=T[1];if(t!==v&&this.stage.moveTo(C,w),a&&Math.abs(_-a)>256){0===A&&(h=!0);var S=r+(I-r)/2,R=_-a<0,D=A+(512-1e-6),L=R?D:A,M=R?A:D,Y=Object(Oe.h)([L*g.scale,S*g.scale],g.pixelProjectionMatrix),k=Object(ge.a)(Y,2),x=k[0],Q=k[1];this.stage.lineTo(x,Q);var P=Object(Oe.h)([M*g.scale,S*g.scale],g.pixelProjectionMatrix),G=Object(ge.a)(P,2),F=G[0],H=G[1];this.stage.moveTo(F,H)}this.stage.lineTo(C,w),l&&!0===O.hasFishing[y]&&(b.x.push(C),b.y.push(w)),a=_,r=I,t=v}}if(l){this.stage.lineStyle(0),this.stage.beginFill(u,1);for(var U=0,N=b.x.length;U<N;U++)this.stage.drawCircle(b.x[U],b.y[U],c);this.stage.endFill()}return!0===h&&[-512,512].forEach((function(e){i._drawTrack({worldOffset:e,data:n,startIndex:o,endIndex:s,drawFishingCircles:l,fishingCirclesRadius:c,color:u,lineThickness:p,lineOpacity:m})})),f}},{key:"render",value:function(){return null}}]),t}(o.a.Component),pa=ua;function ma(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function da(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?ma(a,!0).forEach((function(t){Object(H.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):ma(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}"undefined"!==typeof ua&&ua&&ua===Object(ua)&&Object.isExtensible(ua)&&Object.defineProperty(ua,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TracksLayer",filename:"src/map/tracks/TracksLayer.js"}});var Aa=function(e){function t(){var e,a;Object(c.a)(this,t);for(var r=arguments.length,i=new Array(r),n=0;n<r;n++)i[n]=arguments[n];return(a=Object(p.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(i)))).state={pixiReady:!1},a.onTouchStart=function(e){e.touches.length&&a.queryCoords(e.touches[0].clientX,e.touches[0].clientY)},a.onMouseMove=function(e){a.queryCoords(e.clientX,e.clientY)},a._onTick=function(){!0===a.heatmapFadingIn&&a.heatmapStage.alpha<1&&a._heatmapFadeinStep()},a}return Object(d.a)(t,e),Object(u.a)(t,[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,a=e.height;this.pixi=new kt.Application({width:t,height:a,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var r=function(e,t){var a=document.createElement("canvas"),r=a.getContext("2d"),i=2*e;a.width=3*i+2,a.height=31*i+31;for(var n=0;n<31;n++){var o=i*n+n,s=o+e,l=e,c=r.createRadialGradient(l,s,e*t,l,s,e),u=Wt(n),p=Ht(u);c.addColorStop(0,p);var m=Gt(Xt(u+30),80,100);c.addColorStop(1,"rgba(".concat(m.r,", ").concat(m.g,", ").concat(m.b,", 0)")),r.fillStyle=c,r.fillRect(0,o,i,i),l+=i+1,r.beginPath(),r.arc(l,s,e,0,2*Math.PI,!1),r.fillStyle=p,r.fill(),l+=i+1,r.beginPath(),r.arc(l,s,.4*e,0,2*Math.PI,!1),r.fillStyle=p,r.fill(),r.beginPath(),r.arc(l,s,.95*e,0,2*Math.PI,!1),r.lineWidth=1,r.strokeStyle=p,r.stroke()}return a}(C,.15);this.baseTexture=kt.Texture.fromCanvas(r),this.heatmapStage=new kt.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_destroy",value:function(){this.pixi.destroy()}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every((function(e){return!0!==e.interactive}))){var a=this._context.viewport,r=a.unproject([e,t]),i=Object(ge.a)(r,2),n=i[0],o=i[1],s=n;s>180?s-=360:s<-180&&(s+=360);var l=Object(Oe.d)([s,o],1),c=Object(ge.a)(l,2),u=c[0],p=c[1],m=10/a.scale;this.props.queryHeatmapVessels({longitude:s,latitude:o,worldX:u,worldY:p,toleranceRadiusInWorldUnits:m},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,a){var r={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},i=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)r=da({highlightLayerData:r},a.find((function(t){return t.id===e.layer.id}))),i=e.foundVessels.map((function(e){return{hue:312,filterValues:{series:[e.series]}}}));else if(null!==t){r=da({highlightLayerData:r},a.find((function(e){return e.id===t.layer.id}))),i=[{hue:312,filterValues:{series:[t.id]}}]}return{highlightLayerData:r,highlightFilters:i}}},{key:"_render",value:function(){var e=this,t=this.props,a=t.zoom,r=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightTemporalExtentIndexes,l=t.highlightedVessels,c=t.highlightedClickedVessel,u=t.tracks,p=t.leftWorldScaled,m=t.rightWorldScaled,d=this._context.viewport,A=this.state.pixiReady,g=i[0],f=i[1],b=function(e){return e<6}(a);if(!0!==l.isEmpty&&this.toggleHeatmapDimming(!0),!0===l.isEmpty&&0===u.length&&this._startHeatmapFadein(),this.renderer&&this.renderer.gl&&void 0!==this.renderer.gl.getError){var h=this.renderer.gl.getError();0!==h&&console.log(h)}var E=this._getHighlightData(l,c,r),O=E.highlightLayerData,y=E.highlightFilters;return o.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===A&&o.a.createElement(n.Fragment,null,r.map((function(t){return o.a.createElement(ca,{key:t.id,layer:t,filters:t.filters||[],viewport:d,startIndex:g,endIndex:f,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:b,customRenderingStyle:{},viewportLeft:p,viewportRight:m})})),void 0!==this.stage&&o.a.createElement(ca,{key:"highlighted",layer:O,filters:y,viewport:d,startIndex:g,endIndex:f,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:b,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:p,viewportRight:m}),void 0!==this.stage&&o.a.createElement(pa,{tracks:u,viewport:d,zoom:a,startIndex:g,endIndex:f,highlightTemporalExtentIndexes:s,rootStage:this.stage})))}}]),t}(Yt.a);Aa.propTypes={zoom:E.a.number,heatmapLayers:E.a.array,temporalExtentIndexes:E.a.array,highlightTemporalExtentIndexes:E.a.array,highlightedVessels:E.a.object,highlightedClickedVessel:E.a.object,tracks:E.a.array,queryHeatmapVessels:E.a.func,exportNativeViewport:E.a.func,leftWorldScaled:E.a.number,rightWorldScaled:E.a.number},Aa.contextTypes={viewport:E.a.object};var ga=Aa;function fa(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}"undefined"!==typeof Aa&&Aa&&Aa===Object(Aa)&&Object.isExtensible(Aa)&&Object.defineProperty(Aa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ActivityLayers",filename:"src/map/activity/ActivityLayers.js"}});var ba=Object(B.a)([function(e){return e.map.heatmap.heatmapLayers}],(function(e){return Object.keys(e).map((function(t){return function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?fa(a,!0).forEach((function(t){Object(H.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):fa(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},e[t])}))})),ha=Object(B.a)([function(e){return e.map.tracks.data}],(function(e){return e.filter((function(e){return"geojson"!==e.type})).filter((function(e){return void 0!==e.data}))})),Ea=Object(B.a)([U],(function(e){var t=e[0].getTime(),a=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[je.a.getOffsetedTimeAtPrecision(t),je.a.getOffsetedTimeAtPrecision(a)]})),Oa=Object(B.a)([N],(function(e){if(void 0===e||null===e||!e.length)return null;var t=e[0].getTime(),a=e[1].getTime();return[je.a.getOffsetedTimeAtPrecision(t),je.a.getOffsetedTimeAtPrecision(a)]})),ya=Object(g.b)((function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:ba(e),tracks:ha(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:Ea(e),highlightTemporalExtentIndexes:Oa(e)}}),(function(e,t){return{queryHeatmapVessels:function(t,a){e(We(t,a))},exportNativeViewport:function(t){e(Tt(t))}}}))(ga),ja=a("./src/map/glmap/map.css"),va=a.n(ja);function _a(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}var Ia=function(e){var t=e.latitude,a=e.longitude,r=e.children,i=e.closeButton,n=e.onClose;return o.a.createElement(Yt.c,{latitude:t,longitude:a,closeButton:i,onClose:n,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},r)};Ia.defaultProps={onClose:function(){}};var Ba=function(e){function t(e){var r;return Object(c.a)(this,t),(r=Object(p.a)(this,Object(m.a)(t).call(this,e))).onLoad=function(){void 0!==r.props.onLoad&&r.props.onLoad(r.getBounds())},r.setBounds=function(){var e=r.getBounds();null!==e&&void 0!==r.props.setBounds&&r.props.setBounds(e)},r.getBounds=function(){if(!r.glMap)return null;var e=r.glMap.getBounds(),t=e._ne,a=e._sw;return{north:t.lat,south:a.lat,west:a.lng,east:t.lng}},r.loadObserver=Object(Mt.a)(Lt.a.mark((function e(){var t;return Lt.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("ResizeObserver"in window!==!1){e.next=5;break}return e.next=3,a.e(0).then(a.bind(null,"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"));case 3:t=e.sent,window.ResizeObserver=t.ResizeObserver||t.default;case 5:r._containerResizeObserver=new ResizeObserver(r.handleResizeObserver),r._containerResizeObserver.observe(r._mapContainerRef);case 7:case"end":return e.stop()}}),e)}))),r.handleResizeObserver=function(e){var t=e[0].contentRect,a=t.width,i=t.height,n=r.props,o=n.viewport,s=n.setViewport;a===o.width&&i===o.height||s(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?_a(a,!0).forEach((function(t){Object(H.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):_a(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},o,{width:a,height:i}))},r.onViewportChange=function(e,t){var a=r.props.viewport;a.latitude===e.latitude&&a.longitude===e.longitude&&a.zoom===e.zoom&&a.bearing===e.bearing&&a.pitch===e.pitch||r.props.setViewport(e,t)},r.onMapInteraction=function(e,t){r.props.mapInteraction(t,e.lngLat[1],e.lngLat[0],e.features,r.glGetSource)},r.onHover=function(e){r.onMapInteraction(e,"hover")},r.onClick=function(e){r.onMapInteraction(e,"click")},r.getRef=function(e){null!==e&&(r.glMap=e.getMap(),r.glGetSource=r.glMap.getSource.bind(r.glMap))},r.getCursor=function(e){var t=e.isDragging,a=r.props.cursor;return null===a?t?"grabbing":"grab":a},r.transformRequest=function(e,t){var a=r.props.token;if(null!==a&&"Tile"===t&&e.match(D))return{url:e,headers:{Authorization:"Bearer "+a}}},r.state={mouseOver:!0},r._mapContainerRef=null,r}return Object(d.a)(t,e),Object(u.a)(t,[{key:"componentDidMount",value:function(){null!==this._mapContainerRef&&this.loadObserver(),this.setBounds()}},{key:"componentDidUpdate",value:function(){this.setBounds()}},{key:"componentWillUnmount",value:function(){this._containerResizeObserver&&this._containerResizeObserver.disconnect()}},{key:"render",value:function(){var e=this,t=this.props,a=t.viewport,i=t.maxZoom,n=t.minZoom,s=t.transitionEnd,l=t.mapStyle,c=t.onClosePopup,u=t.clickPopup,p=t.hoverPopup,m=t.hasHeatmapLayers,d=t.markers,A=t.interactiveLayerIds;return o.a.createElement("div",{id:"map",className:va.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},o.a.createElement(Yt.d,Object(r.a)({},a,{ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:s,onLoad:this.onLoad,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:l,maxZoom:i,minZoom:n,onViewportChange:this.onViewportChange,interactiveLayerIds:A,clickRadius:4}),!1!==m&&o.a.createElement(ya,null),void 0!==u&&null!==u&&o.a.createElement(Ia,{latitude:u.latitude,longitude:u.longitude,closeButton:!0,onClose:c},u.content),!0===this.state.mouseOver&&void 0!==p&&null!==p&&o.a.createElement(Ia,{latitude:p.latitude,longitude:p.longitude,closeButton:!1},p.content),null!==d&&d.length>0&&d.map((function(e,t){return o.a.createElement(Yt.b,{key:t,latitude:e.latitude,longitude:e.longitude},e.content)}))),o.a.createElement("div",{className:va.a.googleLogo}))}}]),t}(o.a.Component);Ba.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapInteraction:function(){},onLoad:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,markers:null,interactiveLayerIds:null,setBounds:void 0};var Ta=Ba;"undefined"!==typeof Ba&&Ba&&Ba===Object(Ba)&&Object.isExtensible(Ba)&&Object.defineProperty(Ba,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"Map",filename:"src/map/glmap/Map.js"}});var Ca=Object(B.a)([function(e){return e.map.heatmap.heatmapLayers}],(function(e){return Object.keys(e).length>0})),wa=Object(B.a)([function(e){return e.map.style.staticLayers}],(function(e){return e.reduce((function(e,t){return t.interactive&&t.visible?(void 0!==t.gl?t.gl.layers.forEach((function(a,r){if(1===t.gl.layers.length||void 0!==a.metadata&&!0===a.metadata["gfw:interactive"]){var i=a.id||r>0?"".concat(t.id,"-").concat(r):t.id;e.push(i)}})):e.push(t.id),e):e}),[])})),Sa=Object(B.a)([function(e){return e.map.style.mapStyle},ee],(function(e,t){if(!t)return e;var a=e.toJS().layers.filter((function(e){return void 0!==e.metadata})).map((function(e){return e.metadata["mapbox:group"]})).lastIndexOf("temporal")+1,r=e.mergeIn(["sources"],t.sources),i=e.get("layers");return t.layers.forEach((function(e,t){i=i.insert(a+t,Object(T.a)(e))})),r=r.set("layers",i)})),Ra=Object(B.a)([function(e){return e.map.interaction.cursor},function(e){return e.map.module.cursor}],(function(e,t){return null!==t?t:e})),Da=Object(g.b)((function(e){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,onLoad:e.map.module.onLoad,cursor:Ra(e),token:e.map.module.token,mapStyle:Sa(e),hasHeatmapLayers:Ca(e),interactiveLayerIds:wa(e)}}),(function(e){return{setViewport:function(t,a){e(Ot(t,a))},setBounds:function(t){e(Et(t))},mapInteraction:function(t,a,r,i,n,o){e(Rt(t,a,r,i,n))},transitionEnd:function(){e(_t())},onClosePopup:function(){e((function(e,t){var a=t();void 0!==a.map.module.onClosePopup&&a.map.module.onClosePopup()}))}}}))(Ta),La=a("./src/map/glmap/gl-styles/style.json");function Ma(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Ya(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Ma(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Ma(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var ka=me()(Object.keys(La.sources).map((function(e){return La.sources[e].attribution})).filter((function(e){return void 0!==e}))),xa=function(e){if(void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),void 0===e.metadata&&(e.metadata={}),!0===e.metadata["gfw:temporal"]){var t=void 0===e.metadata["gfw:temporalField"]?"timestamp":e.metadata["gfw:temporalField"];e.filter=["all",[">",t,0],["<",t,999999999999]]}return void 0===e.metadata["mapbox:group"]&&(e.metadata["mapbox:group"]="temporal"),"visible"!==e.layout.visibility&&(e.layout.visibility="none"),e};xa&&xa===Object(xa)&&Object.isExtensible(xa)&&Object.defineProperty(xa,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"setLayerStyleDefaults",filename:"src/map/glmap/style.reducer.js"}});var Qa,Pa={mapStyle:Object(T.a)((Qa=La,Qa.layers.forEach((function(e){xa(e)})),Qa)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:ka},Ga=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function Fa(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Ha(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Fa(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Fa(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Ua="INIT_MAP_STYLE";"undefined"!==typeof Ua&&Ua&&Ua===Object(Ua)&&Object.isExtensible(Ua)&&Object.defineProperty(Ua,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"INIT_MAP_STYLE",filename:"src/map/glmap/style.actions.js"}});var Na="SET_MAP_STYLE";"undefined"!==typeof Na&&Na&&Na===Object(Na)&&Object.isExtensible(Na)&&Object.defineProperty(Na,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_MAP_STYLE",filename:"src/map/glmap/style.actions.js"}});var Ka="MARK_CARTO_LAYERS_AS_INSTANCIATED";"undefined"!==typeof Ka&&Ka&&Ka===Object(Ka)&&Object.isExtensible(Ka)&&Object.defineProperty(Ka,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MARK_CARTO_LAYERS_AS_INSTANCIATED",filename:"src/map/glmap/style.actions.js"}});var Za="SET_STATIC_LAYERS";"undefined"!==typeof Za&&Za&&Za===Object(Za)&&Object.isExtensible(Za)&&Object.defineProperty(Za,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_STATIC_LAYERS",filename:"src/map/glmap/style.actions.js"}});var Ja="SET_BASEMAP_LAYERS";"undefined"!==typeof Ja&&Ja&&Ja===Object(Ja)&&Object.isExtensible(Ja)&&Object.defineProperty(Ja,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"SET_BASEMAP_LAYERS",filename:"src/map/glmap/style.actions.js"}});var qa=function(e,t){if("vector"!==e.type)return e;var a=e.tiles,r=void 0===t?[]:[t];return Ha({},e,{tiles:void 0!==a&&a.length>0?me()([].concat(r,Object(le.a)(a))):r})},Va=function(e){var t=e.glyphsPath;return{type:Ua,payload:{glyphsPath:t}}};Va&&Va===Object(Va)&&Object.isExtensible(Va)&&Object.defineProperty(Va,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"initStyle",filename:"src/map/glmap/style.actions.js"}});var Wa=function(e){return{type:Na,payload:e}},za=function(e,t,a){for(var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=t().map.style,n=i.mapStyle,o=n.toJS(),s=o.layers,l=Math.round(a[0].getTime()/1e3),c=Math.round(a[1].getTime()/1e3),u=je.a.getOffsetedTimeAtPrecision(a[0].getTime()),p=je.a.getOffsetedTimeAtPrecision(a[1].getTime()),m=0;m<s.length;m++){var d=s[m];if(void 0!==d.metadata&&!0===d.metadata["gfw:temporal"]&&!(!0===r&&!0!==d.metadata["gfw:temporal:throttled"]||!1===r&&!0===d.metadata["gfw:temporal:throttled"])){var A=n.getIn(["layers",m,"filter"]).toJS();if(null===A)throw new Error("filter must be preset on style.json for temporal layer: ",d.id);var g=d.metadata&&"timeIndex"===d.metadata["gfw:temporalField"];A[1][2]=g?u:l,A[2][2]=g?p:c,n=n.setIn(["layers",m,"filter"],Object(T.a)(A))}}e(Wa(n))},Xa=b()((function(e,t,a){za(e,t,a,!0)}),400),$a=function(e){return function(t,a){za(t,a,e),Xa(t,a,e)}};$a&&$a===Object($a)&&Object.isExtensible($a)&&Object.defineProperty($a,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"applyTemporalExtent",filename:"src/map/glmap/style.actions.js"}});var er=function(e,t,a){var r=e.toJS().layers,i=e,n=r.findIndex((function(e){return e.id===t})),o=r.find((function(e){return e.id===t}));if(i=function(e,t,a){var r=!0===t.visible?"visible":"none";return e.setIn(["layers",a,"layout","visibility"],r)}(i,a,n),!0===a.isBasemap)return i;var s=void 0===a.opacity?1:a.opacity;switch(o.type){case"fill":i=i.setIn(["layers",n,"paint","fill-opacity"],s).setIn(["layers",n,"paint","fill-outline-color"],a.color).setIn(["layers",n,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":var l=a.color||o.paint&&o.paint["line-color"];i=i.setIn(["layers",n,"paint","line-opacity"],s).setIn(["layers",n,"paint","line-color"],l);break;case"symbol":if(o.metadata&&!0===o.metadata["gfw:isLabel"]){var c="visible"===i.getIn(["layers",n,"layout","visibility"])&&!0===a.showLabels?"visible":"none";if(i=i.setIn(["layers",n,"layout","visibility"],c),!0!==a.showLabels)break}i=i.setIn(["layers",n,"paint","text-opacity"],s),void 0!==a.color&&(i=i.setIn(["layers",n,"paint","text-color"],a.color));break;case"circle":if(i=i.setIn(["layers",n,"paint","circle-opacity"],s).setIn(["layers",n,"paint","circle-stroke-opacity"],s),void 0!==a.color){var u=o&&o.metadata&&o.metadata["gfw:mainColorPaintProperty"]?o.metadata["gfw:mainColorPaintProperty"]:"circle-color";i=i.setIn(["layers",n,"paint",u],a.color)}break;case"raster":i=i.setIn(["layers",n,"paint","raster-opacity"],s)}return i=function(e,t,a,r){var i=e,n=e.toJS(),o=a.type,s=n.metadata["gfw:styles"],l=a.metadata;return["selected","highlighted"].forEach((function(e){var n=t["".concat(e,"Features")],c=n&&n.style?n.style[o]:{},u=null!==n&&void 0!==n&&n.values.length>0,p=t[e],m=Ha({},s[e][o]||{},{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{},{},c);Object.keys(m).length&&Object.keys(m).forEach((function(e){var o,s=m[e][0],l=m[e][1],c=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===u&&!0!==p&&!1!==p){var d=La.layers.find((function(e){return e.id===a.id}));o=void 0!==d?a.metadata&&a.metadata["gfw:mainColorPaintProperty"]===e?null:d[c][e]:null}else if(!0===p||!1===p)o=!0===p?s:l;else{var A="";if(null!==t.color&&void 0!==t.color){var g=Zt(t.color);A="".concat(g.r,",").concat(g.g,",").concat(g.b)}o=["match",["get",n.field],n.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",A),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",A)]}void 0!==o&&null!==o&&(i=i.setIn(["layers",r,c,e],o))}))})),i}(i,a,o,n)},tr=function(e,t,a,r){return function(i,n){var o=n().map.style.mapStyle,s=o.toJS();if(void 0===s.sources[t]){var l={type:e};e===se.geojson?l.data=r:e===se.raster&&(l.tiles=[a],l.tileSize=256),o=o.setIn(["sources",t],Object(T.a)(l))}if(void 0===s.layers.find((function(e){return e.id===t}))){var c=e===se.geojson?function(e){var t=e.features.map((function(e){var t=e.geometry;return void 0===t?null:t.type})),a=Ga.map((function(e){var a=0;return t.forEach((function(t){e.geoJSON.indexOf(t)>-1&&a++})),{gl:e.gl,num:a}})),r="fill",i=0;return a.forEach((function(e){e.num>i&&(r=e.gl,i=e.num)})),r}(r):e,u=Object(T.a)({id:t,source:t,type:c,layout:{},paint:{}}),p=e===se.raster?s.layers.length-1-s.layers.filter((function(e){return"labels"!==e.id})).reverse().findIndex((function(e){return"raster"===e.type})):s.layers.length-1;o=o.set("layers",o.get("layers").splice(p,0,u))}i(Wa(o))}},ar=function(e){return function(t,a){t({type:Ka,payload:e.map((function(e){return e.sourceId}))});var r=e.map((function(e){return a=(t=e).sourceId,r=t.sourceCartoSQL,i={layers:[{id:a,options:{sql:r}}]},n=encodeURIComponent(JSON.stringify(i)),o=S.replace("$MAPCONFIG",n),new Promise((function(e){fetch(o).then((function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(a)),Promise.reject(),null):e.json()})).then((function(t){e({layergroupid:t.layergroupid,sourceId:a})})).catch((function(e){console.warn(e)}))}));var t,a,r,i,n,o}));Promise.all(r.map((function(e){return e.catch((function(e){return e}))}))).then((function(r){var i=a().map.style.mapStyle,n=i.toJS();r.forEach((function(t){var a=R.replace("$LAYERGROUPID",t.layergroupid),r="".concat(t.sourceId,"-instanciated");i=(i=i.setIn(["sources",r],Object(T.a)({type:"vector",tiles:[a]}))).deleteIn(["sources",t.sourceId]),n.layers.forEach((function(a,n){if(a.source===t.sourceId){i=(i=i.setIn(["layers",n,"source"],r)).setIn(["layers",n,"metadata","gfw:id"],t.sourceId);var o=e.find((function(e){return e.refLayer.id===t.sourceId})).refLayer;i=er(i,a.id,o)}}))})),t(Wa(i))})).catch((function(e){console.warn(e)}))}},rr=function(e,t){return function(a,r){a({type:Za,payload:e}),a({type:Ja,payload:t});var i=[].concat(Object(le.a)(e),Object(le.a)(t.map((function(e){return Ha({},e,{isBasemap:!0})})))),n=r().map.style.mapStyle.toJS().sources,o=i.filter((function(e){return void 0!==e.gl}));o.length&&a(function(e){return function(t,a){var r=a(),i=r.map.style.mapStyle;e.forEach((function(e){var t=e.id,a=e.gl,r=qa(a.source,e.url),n=(i=i.setIn(["sources",t],Object(T.a)(r))).get("layers").toJS().map((function(e){return e.id}));a.layers.filter((function(e,a){var r=e.id||a>0?"".concat(t,"-").concat(a):t;return!n.includes(r)})).forEach((function(e,r){var n=e.id||r>0?"".concat(t,"-").concat(r):t,o=Ha({},xa(e),{id:n,source:t});if("vector"===a.source.type){var s=void 0===e["source-layer"]?t:e["source-layer"];o["source-layer"]=s}var l=i.get("layers"),c=o.metadata["mapbox:group"],u=l.findLastIndex((function(e){return c===e.toJS().metadata["mapbox:group"]}));i=i.set("layers",l.splice(u,0,Object(T.a)(o)))}))})),t(Wa(i)),t($a(r.map.module.temporalExtent))}}(o));var s=i.filter((function(e){return!0===e.isCustom&&void 0===n[e.id]}));s.length&&s.forEach((function(e){a(tr(e.subtype,e.id,e.url,e.data))}));var l=r().map.style,c=l.mapStyle,u=c.toJS(),p=u.layers,m=u.sources,d=[];e.forEach((function(e){var t=e.id;if(void 0!==n[t]&&!0===e.visible&&(void 0!==e.data&&(c=c.setIn(["sources",t,"data"],Object(T.a)(e.data))),void 0!==e.url)){var a=qa(n[t],e.url);c=c.setIn(["sources",t],Object(T.a)(a))}}));for(var A=function(e){var t=p[e],a=t.source,r=m[a],n=void 0!==t.metadata&&t.metadata["gfw:id"]||a,o=i.find((function(e){return e.id===n}));if(void 0===o)return t.type,"continue";var s=void 0!==r.metadata&&r.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var u=l.cartoLayersInstanciated.indexOf(a)>-1;return!0!==o.visible||u||d.find((function(e){return e.sourceId===a}))||d.push({sourceId:a,sourceCartoSQL:s,refLayer:o}),"continue"}c=er(c,t.id,o)},g=0;g<p.length;g++)A(g);d.length&&a(ar(d)),a(Wa(c))}};rr&&rr===Object(rr)&&Object.isExtensible(rr)&&Object.defineProperty(rr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"commitStyleUpdates",filename:"src/map/glmap/style.actions.js"}});var ir=a("./node_modules/@turf/bbox/index.js"),nr=a.n(ir),or=a("./node_modules/redux-thunk/es/index.js"),sr=a("./node_modules/react-map-gl/dist/esm/utils/transition/viewport-fly-to-interpolator.js"),lr=a("./node_modules/d3-ease/src/index.js");function cr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function ur(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?cr(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):cr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}500===Object(500)&&Object.isExtensible(500)&&Object.defineProperty(500,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"TRANSITION_DURATION",filename:"src/map/glmap/viewport.reducer.js"}});var pr={transitionDuration:500,transitionInterpolator:new sr.a,transitionEasing:lr.a},mr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800,bounds:{}},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};var dr=A.d;Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).MAP_REDUX_REMOTE_DEBUG||Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).REACT_APP_MAP_REDUX_REMOTE_DEBUG;var Ar=Object(A.e)((function(){}),{},dr(Object(A.a)(or.a))),gr=function(e){var t=Ar.getState().map.tracks.data.find((function(t){return t.id===e.toString()}));return Ar.dispatch(Bt(t.geoBounds)),t.timelineBounds};"undefined"!==typeof gr&&gr&&gr===Object(gr)&&Object.isExtensible(gr)&&Object.defineProperty(gr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"targetMapVessel",filename:"src/map/store/index.js"}});var fr=function(e){Ar.dispatch(Bt(e)),setTimeout((function(){null!==Ar.getState().map.viewport.currentTransition&&Ar.dispatch(_t())}),501)};fr&&fr===Object(fr)&&Object.isExtensible(fr)&&Object.defineProperty(fr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"fitToBounds",filename:"src/map/store/index.js"}});var br=Ar;"undefined"!==typeof Ar&&Ar&&Ar===Object(Ar)&&Object.isExtensible(Ar)&&Object.defineProperty(Ar,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"store",filename:"src/map/store/index.js"}});var hr="ADD_TRACK";"undefined"!==typeof hr&&hr&&hr===Object(hr)&&Object.isExtensible(hr)&&Object.defineProperty(hr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"ADD_TRACK",filename:"src/map/tracks/tracks.actions.js"}});var Er="UPDATE_TRACK";"undefined"!==typeof Er&&Er&&Er===Object(Er)&&Object.isExtensible(Er)&&Object.defineProperty(Er,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"UPDATE_TRACK",filename:"src/map/tracks/tracks.actions.js"}});"REMOVE_TRACK"===Object("REMOVE_TRACK")&&Object.isExtensible("REMOVE_TRACK")&&Object.defineProperty("REMOVE_TRACK","__filemeta",{enumerable:!0,configurable:!0,value:{name:"REMOVE_TRACK",filename:"src/map/tracks/tracks.actions.js"}});var Or=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach((function(e){e.properties&&e.properties.coordinateProperties&&e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach((function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)}))})),{geojson:e,timelineBounds:[t.start,t.end]}},yr=function(e){var t=nr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}},jr=function e(t){for(var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r={start:1/0,end:0},i={minLat:1/0,maxLat:-1/0,minLng:1/0,maxLng:-1/0},n=0,o=t.datetime.length;n<o;n++){var s=t.datetime[n];s<r.start?r.start=s:s>r.end&&(r.end=s);var l=t.latitude[n];l<i.minLat?i.minLat=l:l>i.maxLat&&(i.maxLat=l);var c=t.longitude[n];!0===a&&c<0&&(c+=360),c<i.minLng?i.minLng=c:c>i.maxLng&&(i.maxLng=c)}return i.maxLng-i.minLng>350&&!1===a?e(t,!0):{time:[r.start,r.end],geo:i}};function vr(e){return function(t,a){var r=e.id,i=e.url,n=e.type,o=e.fitBoundsOnLoad,s=e.layerTemporalExtents,l=e.color,c=e.data,u=a();if(!u.map.tracks.data.find((function(e){return e.id===r}))){var p={id:r,url:i,type:n,color:l,fitBoundsOnLoad:o},m=void 0!==e.data&&null!==e.data,d=void 0!==i&&null!==i&&""!==i;if(m&&(p.data=c,p.geoBounds=yr(c)),t({type:hr,payload:p}),!m&&d){var A=M(t,u);if("geojson"!==n){var g=u.map.module.token,f=Se(i,g,s);Promise.all(f.map((function(e){return e.catch((function(e){return e}))}))).then((function(e){var a=Re(e);if(a.length){var i=De(a,["latitude","longitude","datetime","series","weight","sigma"]),n=Me(i),o=jr(i);t({type:Er,payload:{id:r,data:Ye(n),geoBounds:o.geo,timelineBounds:o.time}}),t(Y(A))}}))}else fetch(i).then((function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()})).then((function(e){var a=Or(e),i=a.geojson,n=a.timelineBounds,s=yr(e);t({type:Er,payload:{id:r,data:i,geoBounds:s,timelineBounds:n}}),o&&gr(r)})).catch((function(e){return console.warn(e)})).finally((function(){return t(Y(A))}))}}}}var _r=function(e){return{type:"REMOVE_TRACK",payload:{trackId:e}}},Ir=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,a){var r=a().map.tracks.data;e&&e.forEach((function(e){var a=e.id,i=r.find((function(e){return e.id===a}));void 0===i?t(vr(e)):i.color!==e.color&&t({type:Er,payload:{id:e.id,color:e.color}})})),r.forEach((function(a){e&&e.find((function(e){return e.id===a.id}))||t(_r(a.id))}))}};Ir&&Ir===Object(Ir)&&Object.isExtensible(Ir)&&Object.defineProperty(Ir,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"updateTracks",filename:"src/map/tracks/tracks.actions.js"}});var Br=function(e,t){return function(e){return e}},Tr=Br;function Cr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function wr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Cr(a,!0).forEach((function(t){Object(H.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Cr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}Br&&Br===Object(Br)&&Object.isExtensible(Br)&&Object.defineProperty(Br,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"withReducerPropTypes",filename:"src/map/utils/withReducerTypes.js"}});var Sr={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,cursor:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoad:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},Rr=Tr("module",{loaders:E.a.arrayOf(E.a.number),token:E.a.string,temporalExtent:E.a.arrayOf(E.a.instanceOf(Date)),onViewportChange:E.a.func,onHover:E.a.func,onClick:E.a.func,onLoad:E.a.func,onLoadStart:E.a.func,onLoadComplete:E.a.func,onClosePopup:E.a.func,onAttributionsChange:E.a.func})((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Sr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return wr({},e,{},t.payload);case"SET_TEMPORAL_EXTENT":return wr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return wr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var a=null!==e.loaders?Object(F.a)(e.loaders):[];return a.push(t.payload),wr({},e,{loaders:a});case"COMPLETE_LOADER":var r=Object(F.a)(e.loaders),i=r.findIndex((function(e){return e===t.payload}));return r.splice(i,1),wr({},e,{loaders:r});case"SET_MODULE_CURSOR":return wr({},e,{cursor:t.payload});default:return e}}));function Dr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Lr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Dr(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Dr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Mr={data:[]},Yr=Tr("tracks",{data:E.a.arrayOf(E.a.exact(Lr({},O,{data:E.a.object,timelineBounds:E.a.array,geoBounds:E.a.exact({minLat:E.a.number,minLng:E.a.number,maxLat:E.a.number,maxLng:E.a.number})})))})((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Mr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case hr:var a=[].concat(Object(le.a)(e.data),[t.payload]);return Lr({},e,{data:a});case Er:var r=t.payload,i=e.data.map((function(e){return e.id!==r.id?e:Lr({},e,{},r)}));return Lr({},e,{data:i});case"REMOVE_TRACK":var n=t.payload.trackId,o=e.data.filter((function(e){return e.id!==n}));return Lr({},e,{data:o});default:return e}}));function kr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function xr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?kr(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):kr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Qr={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function Pr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Gr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Pr(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Pr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Fr={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]};function Hr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function Ur(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Hr(a,!0).forEach((function(t){Object(te.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Hr(a).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var Nr={cursor:"progress"},Kr=Object(A.c)({module:Rr,tracks:Yr,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Qr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case tt:var a=e.heatmapLayers;return a[t.payload.layerId].visibleTemporalExtentsIndices=t.payload.newVisibleTemporalExtentsIndices,a[t.payload.layerId].tiles.forEach((function(e){e.temporalExtentsIndicesLoaded=ue()(e.temporalExtentsIndicesLoaded,t.payload.indicesRemoved)})),xr({},e,{heatmapLayers:a});case"ADD_HEATMAP_LAYER":var r=Object.assign({},e.heatmapLayers,Object(te.a)({},t.payload.id,xr({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:r});case"UPDATE_HEATMAP_LAYER_STYLE":var i=t.payload,n=xr({},e.heatmapLayers[i.id],{},i),o=xr({},e.heatmapLayers,Object(te.a)({},i.id,n));return xr({},e,{heatmapLayers:o});case"REMOVE_HEATMAP_LAYER":var s=Object.assign({},e.heatmapLayers);return delete s[t.payload.id],Object.assign({},e,{heatmapLayers:s});case $e:return Object.assign({},e,{referenceTiles:[].concat(Object(le.a)(e.referenceTiles),[t.payload])});case at:var l=t.payload.layerId,c=t.payload.tile,u=xr({},e.heatmapLayers[l]),p=Object(le.a)(u.tiles),m=p.findIndex((function(e){return e.uid===c.uid}));-1===m?p.push(c):p=[].concat(Object(le.a)(p.slice(0,m)),[c],Object(le.a)(p.slice(m+1))),u.tiles=p;var d=xr({},e.heatmapLayers,Object(te.a)({},l,u));return xr({},e,{heatmapLayers:d});case"RELEASE_HEATMAP_TILES":var A=t.payload,g=Object.keys(e.heatmapLayers),f=xr({},e.heatmapLayers);g.forEach((function(e){var t=xr({},f[e]);A.forEach((function(e){var a=t.tiles.findIndex((function(t){return t.uid===e}));a>-1&&t.tiles.splice(a,1)}))}));var b=Object(le.a)(e.referenceTiles);return A.forEach((function(e){var t=b.findIndex((function(t){return t.uid===e}));t>-1&&(b=[].concat(Object(le.a)(b.slice(0,t)),Object(le.a)(b.slice(t+1))))})),xr({},e,{heatmapLayers:f,referenceTiles:b});case"UPDATE_LOADED_TILES":var h=xr({},e.heatmapLayers);return xr({},e,{heatmapLayers:h});case et:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return xr({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return xr({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Fr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":var a=[].concat(t.payload);return Gr({},e,{currentVisibleTiles:a});case"SET_CURRENTLY_LOADED_TILES":var r=[].concat(t.payload);return Gr({},e,{currentLoadedTiles:r});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var i=me()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),n=me()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids)),o=i.filter((function(e){return-1===n.indexOf(e)}));return Gr({},e,{currentToLoadTileUids:o,currentToReleaseTileUids:n});case"MARK_TILES_UIDS_AS_LOADED":var s=e.currentToLoadTileUids,l=t.payload,c=s.filter((function(e){return-1===l.indexOf(e)}));return Gr({},e,{currentToLoadTileUids:c});case"RELEASE_MARKED_TILES_UIDS":return Gr({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Pa,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Ua:var a=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return Ya({},e,{mapStyle:a});case Na:return Ya({},e,{mapStyle:t.payload});case Za:return Ya({},e,{staticLayers:t.payload});case Ja:return Ya({},e,{basemapLayers:t.payload});case Ka:var r=[].concat(Object(le.a)(e.cartoLayersInstanciated),Object(le.a)(t.payload));return Ya({},e,{cartoLayersInstanciated:r});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:mr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return ur({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"SET_BOUNDS":return ur({},e,{bounds:t.payload});case"UPDATE_VIEWPORT":var a=ur({},e.viewport,{},t.payload);return ur({},e,{viewport:a,prevZoom:a.zoom});case"SET_ZOOM_INCREMENT":var r=e.viewport.zoom,i=Math.min(e.maxZoom,t.payload.zoom||r+t.payload.increment),n=ur({},e.viewport,{},pr,{zoom:i,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return ur({},e,{viewport:n,canZoomIn:i<e.maxZoom,canZoomOut:i>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:ie.ZOOM});case"SET_MOUSE_LAT_LONG":return ur({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return ur({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return ur({},e,{},t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Nr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return Ur({},e,{cursor:t.payload});default:return e}}}),Zr=Kr;"undefined"!==typeof Kr&&Kr&&Kr===Object(Kr)&&Object.isExtensible(Kr)&&Object.defineProperty(Kr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"mapReducer",filename:"src/map/store/reducers.js"}});var Jr=Object(A.c)({map:Zr});br.replaceReducer(Jr);var qr=b()((function(e){br.dispatch($a(e)),br.dispatch(x(e))}),16),Vr=function(e){br.dispatch(yt({latitude:e.center[0],longitude:e.center[1],zoom:e.zoom}))},Wr=function(e){function t(){var e,a;Object(c.a)(this,t);for(var r=arguments.length,i=new Array(r),n=0;n<r;n++)i[n]=arguments[n];return(a=Object(p.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(i)))).state={initialized:!1,error:null,errorInfo:null},a}return Object(d.a)(t,e),Object(u.a)(t,[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){void 0!==this.props.viewport&&Vr(this.props.viewport),null!==this.props.glyphsPath&&br.dispatch(Va({glyphsPath:this.props.glyphsPath})),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(br.getState().map.style.attributions),br&&void 0===br.getState().map.module.token&&br.dispatch(L({token:this.props.token,autoClusterZoom:this.props.autoClusterZoom,isCluster:this.props.isCluster,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoad:this.props.onLoad,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&br.dispatch(Q(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&br.dispatch(rr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&br.dispatch(Ir(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&qr(this.props.temporalExtent),this.setState({initialized:!0}),null!==this.props.heatmapLayers&&br.dispatch(bt(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){this.props.tracks!==e.tracks&&br.dispatch(Ir(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&br.dispatch(bt(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&(this.props.basemapLayers===e.basemapLayers&&this.props.staticLayers===e.staticLayers||br.dispatch(rr(this.props.staticLayers||[],this.props.basemapLayers||[]))),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||br.dispatch(pt(this.props.loadTemporalExtent))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||qr(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||br.dispatch(Q(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&br.dispatch(Q(this.props.highlightTemporalExtent));var t=br.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===br.getState().map.viewport.currentTransition&&(t.latitude===this.props.viewport.center[0]&&t.longitude===this.props.viewport.center[1]&&t.zoom===this.props.viewport.zoom||(1===Math.abs(t.zoom-this.props.viewport.zoom)?br.dispatch(vt(this.props.viewport)):Vr(this.props.viewport))),this.props.cursor!==e.cursor&&br.dispatch(G(this.props.cursor))}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),o.a.createElement("div",null,o.a.createElement("h2",null,"Map component crashed!"),o.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),o.a.createElement("div",null,"Component Stack Error Details:"),o.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:o.a.createElement(g.a,{store:br},o.a.createElement(Da,this.props))}}]),t}(o.a.Component);Wr.defaultProps={token:null,glyphsPath:null,autoClusterZoom:!0,isCluster:function(e){return!0===e.isCluster},highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,cursor:null,onViewportChange:function(){},onLoad:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var zr=Wr;"undefined"!==typeof Wr&&Wr&&Wr===Object(Wr)&&Object.isExtensible(Wr)&&Object.defineProperty(Wr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MapModule",filename:"src/map/map.js"}});var Xr=La.metadata["gfw:basemap-layers"];"undefined"!==typeof Xr&&Xr&&Xr===Object(Xr)&&Object.isExtensible(Xr)&&Object.defineProperty(Xr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"AVAILABLE_BASEMAPS",filename:"src/map/basemaps/index.js"}});var $r=zr;"undefined"!==typeof zr&&zr&&zr===Object(zr)&&Object.isExtensible(zr)&&Object.defineProperty(zr,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"__DOCZ_DUMMY_EXPORT_DEFAULT",filename:"src/map/index.js"}}),"undefined"!==typeof targetMapVessel&&targetMapVessel&&targetMapVessel===Object(targetMapVessel)&&Object.isExtensible(targetMapVessel)&&Object.defineProperty(targetMapVessel,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"targetMapVessel",filename:"src/map/index.js"}}),"undefined"!==typeof fitToBounds&&fitToBounds&&fitToBounds===Object(fitToBounds)&&Object.isExtensible(fitToBounds)&&Object.defineProperty(fitToBounds,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"fitToBounds",filename:"src/map/index.js"}}),"undefined"!==typeof AVAILABLE_BASEMAPS&&AVAILABLE_BASEMAPS&&AVAILABLE_BASEMAPS===Object(AVAILABLE_BASEMAPS)&&Object.isExtensible(AVAILABLE_BASEMAPS)&&Object.defineProperty(AVAILABLE_BASEMAPS,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"AVAILABLE_BASEMAPS",filename:"src/map/index.js"}}),a.d(t,"default",(function(){return ai}));var ei={},ti="wrapper";function ai(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(s.b)(ti,Object(r.a)({},ei,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"map"},"Map"),Object(s.b)("h2",{id:"description"},"Description"),Object(s.b)("p",null,"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}),"Map client")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}),"Vessel profiles")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}),"Data portal"))),Object(s.b)("h2",{id:"available-properties"},"Available properties"),Object(s.b)("p",null,"TODO: fix crash on PropsTable docz component"),Object(s.b)("h2",{id:"basic-usage"},"Basic usage"),Object(s.b)(l.c,{__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:a,Playground:l.c,PropsTable:l.PropsTable,Map:$r},__codesandbox:"",mdxType:"Playground"},Object(s.b)($r,{viewport:{center:[.026,123.61],zoom:5},mdxType:"Map"})))}ai&&ai===Object(ai)&&Object.isExtensible(ai)&&Object.defineProperty(ai,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/map/map.mdx"}}),ai.isMDXComponent=!0}}]);
//# sourceMappingURL=src-map-map.c5c821825f1e1669b71b.js.map