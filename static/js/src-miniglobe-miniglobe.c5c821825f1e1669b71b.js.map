{"version":3,"sources":["/Users/joseangel/Workspace/map-components/src/miniglobe/miniglobe.js","/Users/joseangel/Workspace/map-components/src/miniglobe/miniglobe.mdx","/Users/joseangel/Workspace/map-components/src/miniglobe/miniglobe.module.css"],"names":["DEFAULT_SETTINGS","minZoom","center","zoom","bounds","north","south","east","west","size","viewportThickness","MiniGlobe","state","projection","worldData","feature","jsonData","objects","land","features","this","setProjection","nextProps","props","recenter","latitude","longitude","geoOrthographic","translate","scale","clipAngle","rotate","setState","updatedProjection","undefined","console","error","viewportBoundsGeoJSON","type","geometry","coordinates","width","height","className","styles","globeSvg","globeBackground","cx","cy","r","map","d","i","key","geoPath","viewport","style","strokeWidth","Component","defaultProps","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","of","__position","__code","__scope","Playground","PropsTable","__codesandbox","isMDXComponent","module","exports"],"mappings":"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","file":"static/js/src-miniglobe-miniglobe.9f473453.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { geoOrthographic, geoPath } from 'd3-geo' // eslint-disable-line\nimport { feature } from 'topojson-client'\nimport styles from './miniglobe.module.css'\nimport jsonData from './ne_110m_land.json'\n\nconst DEFAULT_SETTINGS = {\n  minZoom: 2.5,\n  center: [0, 0],\n  zoom: 3,\n  bounds: {\n    north: 25,\n    south: -25,\n    east: 40,\n    west: -40,\n  },\n  size: 40,\n  viewportThickness: 6,\n}\n\nclass MiniGlobe extends Component {\n  constructor() {\n    super()\n    this.state = {\n      projection: null,\n    }\n\n    this.worldData = feature(jsonData, jsonData.objects.land).features\n  }\n\n  componentDidMount() {\n    this.setProjection()\n  }\n\n  componentDidUpdate(nextProps) {\n    if (\n      this.props.center[0] !== nextProps.center[0] ||\n      this.props.center[1] !== nextProps.center[1]\n    ) {\n      this.recenter()\n    }\n  }\n\n  setProjection() {\n    const { center, size } = this.props\n    const [latitude, longitude] = center\n    const projection = geoOrthographic()\n      .translate([size / 2, size / 2])\n      .scale(size / 2)\n      .clipAngle(90)\n    projection.rotate([-longitude, -latitude])\n    this.setState({ projection })\n  }\n\n  recenter() {\n    if (this.state.projection) {\n      const { center } = this.props\n      const [latitude, longitude] = center\n      const updatedProjection = this.state.projection\n      this.state.projection.rotate([-longitude, -latitude])\n      this.setState({ projection: updatedProjection })\n    }\n  }\n\n  render() {\n    const { zoom, bounds, size, viewportThickness } = this.props\n    if (bounds === undefined) {\n      console.error('MiniGlobe: bounds not specified')\n      return null\n    }\n\n    const { north, south, west, east } = bounds\n    const viewportBoundsGeoJSON = {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[west, north], [east, north], [east, south], [west, south], [west, north]]],\n      },\n    }\n\n    return (\n      <svg width={size} height={size} className={styles.globeSvg}>\n        <circle className={styles.globeBackground} cx={size / 2} cy={size / 2} r={size / 2} />\n        <g>\n          {this.worldData.map((d, i) => (\n            <path key={`path-${i}`} d={geoPath().projection(this.state.projection)(d)} />\n          ))}\n          {zoom > DEFAULT_SETTINGS.minZoom && (\n            <path\n              key=\"viewport\"\n              d={geoPath().projection(this.state.projection)(viewportBoundsGeoJSON)}\n              className={styles.viewport}\n              style={{ strokeWidth: viewportThickness }}\n            />\n          )}\n        </g>\n      </svg>\n    )\n  }\n}\n\nMiniGlobe.propTypes = {\n  center: PropTypes.arrayOf(PropTypes.number).isRequired,\n  zoom: PropTypes.number.isRequired,\n  bounds: PropTypes.shape({\n    north: PropTypes.number,\n    south: PropTypes.number,\n    west: PropTypes.number,\n    east: PropTypes.number,\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  viewportThickness: PropTypes.number.isRequired,\n}\n\nMiniGlobe.defaultProps = {\n  center: DEFAULT_SETTINGS.center,\n  zoom: DEFAULT_SETTINGS.zoom,\n  bounds: DEFAULT_SETTINGS.bounds,\n  size: DEFAULT_SETTINGS.size,\n  viewportThickness: DEFAULT_SETTINGS.viewportThickness,\n}\n\nexport default MiniGlobe\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, PropsTable } from 'docz'\nimport MiniGlobe from './miniglobe'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"mini-globe\"\n    }}>{`Mini globe`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Shows viewport bounds or location on an orthogonal map to provide geographical context.`}</p>\n    <p>{`Currently used in:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GlobalFishingWatch/vessel-profiles/blob/b267dc5a94452228b71a18a77b0d597323abe0f0/src/profile/components/Info.js#L4\"\n        }}>{`Vessel profiles`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GlobalFishingWatch/data-portal/blob/64aa2982d2159fbcf13ef58d25ea0ae3e01e0af9/src/map/MapDashboard.jsx#L2\"\n        }}>{`Data portal`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"available-properties\"\n    }}>{`Available properties`}</h2>\n    <PropsTable of={MiniGlobe} mdxType=\"PropsTable\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<MiniGlobe />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      PropsTable,\n      MiniGlobe\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <MiniGlobe mdxType=\"MiniGlobe\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globeBackground\":\"miniglobe_globeBackground__fG8wu\",\"globeSvg\":\"miniglobe_globeSvg__2nKBD\",\"viewport\":\"miniglobe_viewport__1kQ_U\"};"],"sourceRoot":""}