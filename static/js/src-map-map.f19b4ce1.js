(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/map/glmap/gl-styles/style.json":function(e){e.exports={version:8,glyphs:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-glyphs/master/_output/{fontstack}/{range}.pbf?raw=true",sprite:"https://raw.githubusercontent.com/GlobalFishingWatch/map-gl-sprites/master/out/sprites",metadata:{"mapbox:groups":{"basemap-background":{name:"basemap-background"},static:{name:"static"},temporal:{name:"temporal"},tracks:{name:"tracks"},"basemap-foreground":{name:"basemap-foreground"}},"gfw:basemap-layers":[{id:"satellite",label:"Satellite"},{id:"north-star",label:"North Star"},{id:"labels",isOption:!0},{id:"graticules",isOption:!0},{id:"bathymetry",isOption:!0}],"gfw:styles":{selected:{fill:{"fill-color":["rgba($REFLAYER_COLOR_RGB, 0.5)","rgba(0,0,0,0)"]},circle:{"circle-stroke-width":[2,.5],"circle-stroke-color":["rgba(0,0,0,0)","rgba(0,0,0,0)"],"circle-radius":[15,0]}},highlighted:{circle:{"circle-stroke-color":["#fff","#000"]}}}},sources:{6:{metadata:{"gfw:carto-sql":"select * from kkp_regions","gfw:popups":[{id:"nama"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},satellite:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/sat/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256,attribution:"Map data \xa92018 Google, \xa92018 NASA, INEGI, TerraMetrics \xb7 <a href='https://www.google.com/intl/en-GB_US/help/terms_maps.html'>Terms of Use</a><br>"},"north-star":{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/ns/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},labels:{tiles:["https://gtiles-dot-world-fishing-827.appspot.com/v1/tileset/nslabels/tile?x={x}&y={y}&z={z}"],type:"raster",tileSize:256},graticules:{metadata:{"gfw:carto-sql":"select * from graticules where scalerank=4"},type:"vector"},bathymetry:{metadata:{"gfw:carto-sql":"SELECT * FROM bathymetry order by depth"},type:"vector"},mpant:{metadata:{"gfw:carto-sql":"select * FROM wdpa_no_take_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},mparu:{metadata:{"gfw:carto-sql":"SELECT * FROM wdpa_restricted_use_mpas","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector"},eez:{metadata:{"gfw:carto-sql":"SELECT cartodb_id, the_geom, the_geom_webmercator, geoname as name, 'eez:' || mrgid as region_id, geoname as reporting_name, 'eez:' || mrgid as reporting_id FROM eez","gfw:popups":[{id:"name"}]},type:"vector",attribution:"EEZs: marineregions.org"},highseas:{metadata:{"gfw:carto-sql":"SELECT *, lower(regionid) as region_id FROM highseas","gfw:popups":[{id:"regionid"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},protectedplanet:{metadata:{"gfw:carto-sql":"SELECT * from protectedplanet","gfw:popups":[{id:"name"},{id:"wdpaid",label:"WDPA ID"},{id:"iucn_cat",label:"IUCN Category"},{id:"desig_eng",label:"Designation"},{id:"rep_area"},{id:"no_take"},{id:"status"},{id:"status_yr"},{id:"gov_type"},{id:"mang_auth"},{id:"verif"},{id:"iso3"}]},type:"vector",attribution:"MPAs: www.protectedplanet.net"},rfmo:{metadata:{"gfw:carto-sql":"SELECT the_geom, the_geom_webmercator, cartodb_id, 'rfmo:' || rfb as reporting_id, 'rfmo:' || rfb as region_id, rfb as reporting_name, rfb FROM rfmo","gfw:popups":[{id:"rfb"},{id:"POLYGON_LAYERS_AREA"}]},type:"vector"},falklands_conservation:{metadata:{"gfw:carto-sql":"SELECT * FROM falklands_conservation","gfw:popups":[{id:"full_name"},{id:"zone"},{id:"area_sqkm"}]},type:"vector"},encounters_ais:{type:"vector",tiles:["https://api-dot-skytruth-pelagos-production.appspot.com/v2/tilesets/gfw-task-673-encounters-v3/{z},{x},{y}"]},events_fishing:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/fishing/tiles/{z},{x},{y}"]},events_encounter:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/encounter/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_gap:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/gap/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_port:{type:"vector",tiles:["https://events-dot-world-fishing-827.appspot.com/datasets/indonesia/events/port/tiles/{z},{x},{y}"],metadata:{"gfw:popups":[{id:"event_id"}]}},events_encounter_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_gap_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}},events_port_vessel:{type:"geojson",cluster:!0,clusterMaxZoom:10,data:{type:"FeatureCollection",features:[]}}},layers:[{id:"background",metadata:{"mapbox:group":"basemap-background"},type:"background",layout:{visibility:"visible"},paint:{"background-color":"#001436"}},{id:"satellite",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"satellite",layout:{visibility:"visible"}},{id:"north-star",metadata:{"mapbox:group":"basemap-background"},type:"raster",source:"north-star"},{id:"bathymetry",metadata:{"mapbox:group":"basemap-background"},type:"fill",source:"bathymetry","source-layer":"bathymetry",paint:{"fill-color":["step",["get","depth"],"#1e346c",1e3,"#1a2f63",2e3,"#142655",3e3,"#101f4a",4e3,"#0d1b43",5e3,"#0a163b",6e3,"#061132",7e3,"#030d2a",8e3,"#01081e"],"fill-outline-color":"hsla(0, 0%, 100%, 0)","fill-opacity":["interpolate",["linear"],["zoom"],3,0,4,1]}},{id:"mpant",metadata:{"mapbox:group":"static"},type:"fill",source:"mpant","source-layer":"mpant"},{id:"mpant-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mpant","source-layer":"mpant",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"mparu",metadata:{"mapbox:group":"static"},type:"fill",source:"mparu","source-layer":"mparu"},{id:"mparu-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"mparu","source-layer":"mparu",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"eez",metadata:{"mapbox:group":"static"},type:"fill",source:"eez","source-layer":"eez"},{id:"eez-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"eez","source-layer":"eez",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"highseas",metadata:{"mapbox:group":"static"},type:"fill",source:"highseas","source-layer":"highseas"},{id:"highseas-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"highseas","source-layer":"highseas",layout:{"text-field":"{regionid}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"rfmo",metadata:{"mapbox:group":"static"},type:"fill",source:"rfmo","source-layer":"rfmo"},{id:"rfmo-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"rfmo","source-layer":"rfmo",layout:{"text-field":"{reporting_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"6",metadata:{"mapbox:group":"static"},type:"fill",source:"6","source-layer":"6"},{id:"6-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"6","source-layer":"6",layout:{"text-field":"{nama}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"protectedplanet",metadata:{"mapbox:group":"static"},type:"fill",source:"protectedplanet","source-layer":"protectedplanet"},{id:"protectedplanet-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"protectedplanet","source-layer":"protectedplanet",layout:{"text-field":"{name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"falklands_conservation",metadata:{"mapbox:group":"static"},type:"fill",source:"falklands_conservation","source-layer":"falklands_conservation"},{id:"falklands_conservation-labels",metadata:{"gfw:isLabel":!0,"mapbox:group":"static"},type:"symbol",source:"falklands_conservation","source-layer":"falklands_conservation",layout:{"text-field":"{full_name}","text-font":["Roboto Mono Light"],"text-size":10}},{id:"events_fishing",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_fishing","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#FE81EB","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},type:"circle",source:"events_encounter","source-layer":"default",paint:{"circle-radius":3,"circle-color":"#E5647D","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"encounters_ais",type:"circle",source:"encounters_ais","source-layer":"points",metadata:{"gfw:temporal":!0,"gfw:temporalField":"timeIndex","mapbox:group":"temporal"},paint:{"circle-color":"#e5647d","circle-radius":3,"circle-opacity":.9}},{id:"encounters_ais_outline",type:"circle",source:"encounters_ais","source-layer":"points",metadata:{"gfw:temporal":!0,"gfw:temporalField":"timeIndex","gfw:mainColorPaintProperty":"circle-stroke-color","mapbox:group":"temporal"},paint:{"circle-color":"hsla(0, 0%, 0%, 0)","circle-stroke-color":"#e5647d","circle-stroke-width":1,"circle-radius":6}},{id:"events_gap",type:"circle",source:"events_gap","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#FFE7A0","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_port",type:"circle",source:"events_port","source-layer":"default",metadata:{"gfw:temporal":!0,"mapbox:group":"temporal"},paint:{"circle-radius":3,"circle-color":"#44A1B9","circle-stroke-width":.5,"circle-stroke-color":"#000000"}},{id:"events_encounter_vessel",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["encounter_highlight","encounter"]}}},layout:{"icon-image":"encounter","icon-allow-overlap":!0}},{id:"events_encounter_vessel_number",source:"events_encounter_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_gap_vessel",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["gap_highlight","gap"]}}},layout:{"icon-image":"gap","icon-allow-overlap":!0}},{id:"events_gap_vessel_number",source:"events_gap_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"events_port_vessel",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal","gfw:styles":{highlighted:{"icon-image":["port_highlight","port"]}}},layout:{"icon-image":"port","icon-allow-overlap":!0}},{id:"events_port_vessel_number",source:"events_port_vessel",type:"symbol",metadata:{"mapbox:group":"temporal"},filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Roboto Medium"],"text-size":12,"text-anchor":"bottom-left","text-offset":[.8,-.2]},paint:{"text-halo-color":"hsl(0, 0%, 100%)","text-halo-width":2}},{id:"graticules-lines",metadata:{"mapbox:group":"basemap-foreground"},type:"line",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],paint:{"line-color":"#174084","line-opacity":{base:1,stops:[[0,.7],[8,.7],[9,.2]]},"line-width":.5}},{id:"graticules-labels",metadata:{"mapbox:group":"basemap-foreground"},type:"symbol",source:"graticules","source-layer":"graticules",filter:["==","$type","LineString"],layout:{"text-field":"{degrees}\xba","text-font":["Roboto Medium Italic"],"symbol-placement":"line","symbol-spacing":{base:1,stops:[[3,500],[8,1e3]]},"text-size":{base:1,stops:[[3,7],[7,12]]},"text-letter-spacing":.2},paint:{"text-color":"hsl(0, 0%, 100%)","text-halo-width":.5,"text-translate":[-1,1],"text-halo-color":"hsla(0, 0%, 68%, 0.49)","text-opacity":{base:1,stops:[[0,1],[8,1],[9,0]]}}},{id:"labels",metadata:{"mapbox:group":"basemap-foreground"},type:"raster",source:"labels"}]}},"./src/map/glmap/map.css":function(e,t,r){e.exports={map:"map_map__1TLha",googleLogo:"map_googleLogo__3lQ1y"}},"./src/map/lib/Pack.js":function(e,t,r){"use strict";var o={Uint8:{size:Uint8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Int8:{size:Int8Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint8",setter:"setUint8"},Uint16:{size:Uint16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint16",setter:"setUint16"},Int16:{size:Int16Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt16",setter:"setInt16"},Uint32:{size:Uint32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getUint32",setter:"setUint32"},Int32:{size:Int32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getInt32",setter:"setInt32"},Float32:{size:Float32Array.BYTES_PER_ELEMENT,array:"Float32Array",getter:"getFloat32",setter:"setFloat32"},Float64:{size:Float64Array.BYTES_PER_ELEMENT,array:"Float64Array",getter:"getFloat64",setter:"setFloat64"}},a=function(e,t,r,o,a){void 0==r&&(r=e.length),void 0==t&&(t=0),void 0==a&&(a=t);for(var n=t;n<r;n++)o[n-t+a]=255&e.charCodeAt(n)},n=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},i={typemap:{byname:o,byarray:{}},pack:function(e,t,r){var o=new ArrayBuffer(e.size);return new DataView(o)[e.setter](0,t,r),n(o)},arrayBufferToString:n,stringToArrayBuffer:function(e,t,r){void 0==r&&(r=e.length),void 0==t&&(t=0);var o=new Uint8ClampedArray(r-t);return a(e,t,r,o,0),o.buffer},writeStringToArrayBuffer:a};for(var s in i.typemap.byname){var l=i.typemap.byname[s];l.name=s,i.typemap.byarray[l.array]=l}t.a=i},"./src/map/lib/pelagosClient.js":function(module,__webpack_exports__,__webpack_require__){"use strict";var _Pack__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/map/lib/Pack.js");function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PelagosClient=function(){function PelagosClient(){_classCallCheck(this,PelagosClient),this.MAGIC_COOKIE="tmtx"}return _createClass(PelagosClient,[{key:"obtainTile",value:function(e,t){return new Promise(function(r,o){if(this.request=null,"undefined"==typeof XMLHttpRequest)throw"XMLHttpRequest is disabled";this.request=new XMLHttpRequest,this.resolve=r,this.reject=o,this.request.open("GET",e,!0),t&&this.request.setRequestHeader("Authorization","Bearer ".concat(t)),this.request.responseType="arraybuffer",this.request.onload=this.handleData.bind(this),this.request.onerror=this.handleData.bind(this),this.request.send(null)}.bind(this))}},{key:"handleData",value:function handleData(){var self=this;if(this.request){if(this.error)return!0;if(4==this.request.readyState){var success=200==this.request.status||this.isFileUri&&0==this.request.status;if(!success)return void this.resolve(null)}if(this.request.response){var length=this.request.response.byteLength,response=this.request.response,dataView=new DataView(response);if(!(length<8)){if(null==self.headerLen){var cookie=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(0,4));if(cookie!=this.MAGIC_COOKIE)return void this.reject("Could not load "+this.url+" due to incorrect file format. Cookie: ["+this.cookie+"]");self.headerLen=dataView.getInt32(4,!0),self.offset=8}if(!(length<self.offset+self.headerLen)){if(!self.headerIsLoaded){self.header=JSON.parse(_Pack__WEBPACK_IMPORTED_MODULE_0__.a.arrayBufferToString(response.slice(self.offset,self.offset+self.headerLen))),self.rowLen=0,self.header.colsByName={};for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];col.idx=colidx,self.header.colsByName[col.name]=col,col.typespec=_Pack__WEBPACK_IMPORTED_MODULE_0__.a.typemap.byname[col.type],void 0!=col.multiplier&&void 0!=col.min&&(col.min=col.min*col.multiplier),void 0!=col.offset&&void 0!=col.min&&(col.min=col.min+col.offset),void 0!=col.multiplier&&void 0!=col.max&&(col.max=col.max*col.multiplier),void 0!=col.offset&&void 0!=col.max&&(col.max=col.max+col.offset),self.rowLen+=col.typespec.size}if(self.offset+=self.headerLen,self.offset+=(4-self.headerLen%4)%4,self.headerIsLoaded=!0,"rowwise"!=self.header.orientation&&"columnwise"!=self.header.orientation)return self.errorLoading({orientation:self.header.orientation,toString:function(){return"Could not load "+this.url+" due to unsupported file orientation. Orientation: "+this.orientation+". Supported orientations: rowwise, columnwise."}}),!0;if(!self.rowLen)return self.allLoaded(),!0}if("rowwise"==self.header.orientation){for(var result={};self.offset+self.rowLen<=length;self.rowidx++){for(var row={},colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx],val=dataView[col.typespec.getter](self.offset,!0);row[col.name]=val,self.offset+=col.typespec.size}result[col.name]=row}self.rowidx==self.header.length&&this.resolve(result)}else if("columnwise"==self.header.orientation){var colValues=null,result={};if(length>=self.offset+self.header.length*self.rowLen){for(var colidx=0;colidx<self.header.cols.length;colidx++){var col=self.header.cols[colidx];colValues=new(eval(col.typespec.array))(response.slice(self.offset,self.offset+col.typespec.size*self.header.length)),self.offset+=self.header.length*col.typespec.size,result[col.name]=colValues}return this.resolve(result),!0}}}}}}}}]),PelagosClient}();__webpack_exports__.a=PelagosClient},"./src/map/map.mdx":function(e,t,r){"use strict";r.r(t);var o=r("./node_modules/react/index.js"),a=r.n(o),n=r("./node_modules/@mdx-js/tag/dist/index.js"),i=r("./node_modules/docz/dist/index.m.js"),s=r("./node_modules/redux/es/redux.js"),l=r("./node_modules/react-redux/es/index.js"),c=r("./node_modules/lodash/throttle.js"),u=r.n(c),p=r("./node_modules/prop-types/index.js"),d=r.n(p),A={id:d.a.string.isRequired,url:d.a.string,data:d.a.object,color:d.a.string,type:d.a.oneOf(["geojson",void 0]),layerTemporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),fitBoundsOnLoad:d.a.bool},g=(d.a.string.isRequired,d.a.string,d.a.string,d.a.bool,d.a.number,d.a.number,d.a.arrayOf(d.a.shape({hue:d.a.number,filterValues:d.a.object})),d.a.shape({endpoints:d.a.object,isPBF:d.a.bool,colsByName:d.a.object,temporalExtents:d.a.arrayOf(d.a.arrayOf(d.a.number)),temporalExtentsLess:d.a.bool}).isRequired,d.a.bool,d.a.string,d.a.bool,d.a.string.isRequired,d.a.bool,d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.bool,d.a.shape({field:d.a.string,values:d.a.arrayOf(d.a.string)}),d.a.number,d.a.string,d.a.bool,d.a.bool,d.a.arrayOf(d.a.arrayOf(d.a.string)),d.a.bool,d.a.oneOf([void 0,"geojson","raster"]),d.a.string,d.a.object,d.a.object,d.a.node,d.a.number.isRequired,d.a.number.isRequired,d.a.number,d.a.arrayOf(d.a.number),r("./node_modules/reselect/es/index.js")),m=r("./node_modules/immutable/dist/immutable.es.js"),f=8,h=2e5,y="dot-world-fishing",E=function(e,t,r){var o=(new Date).getTime();return e({type:"START_LOADER",payload:void 0!==r?"".concat(r,"_").concat(o):o}),void 0!==t.map.module.onLoadStart&&t.map.module.onLoadStart(),r},w=function(e){return function(t,r){t({type:"COMPLETE_LOADER",payload:e});var o=r();o.map.module.loaders.length||void 0===o.map.module.onLoadComplete||o.map.module.onLoadComplete()}},b=function(e){return{type:"SET_HIGHLIGHT_TEMPORAL_EXTENT",payload:e}},B=function(e){return e.map.module.temporalExtent},v=function(e){return e.map.module.highlightTemporalExtent};function C(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function x(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){I(e,t,r[t])})}return e}function I(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var O=Object(g.a)(function(e){return e.map.tracks.data},function(e){return e.filter(function(e){return"geojson"===e.type})}),S=Object(g.a)(O,function(e){return e.filter(function(e){return void 0!==e.data})}),Q=function(e,t){return{sources:x({},e.sources,t.sources),layers:[].concat(C(e.layers),C(t.layers))}},D=function(e,t){var r=t.start,o=t.end;if(!e||!e.features)return null;var a=e.features.reduce(function(e,t){if(t.properties&&t.properties.coordinateProperties&&t.properties.coordinateProperties.times&&t.properties.coordinateProperties.times.length>0){var a=t.geometry.coordinates.reduce(function(e,a,n){var i=t.properties.coordinateProperties.times[n];return i>=r&&i<=o&&(e.coordinates.push(a),e.times.push(i)),e},{coordinates:[],times:[]});if(!a.coordinates.length)return e;var n=x({},t,{geometry:x({},t.geometry,{coordinates:a.coordinates}),properties:x({},t.properties,{coordinateProperties:{times:a.times}})});e.push(n)}return e},[]);return x({},e,{features:a})},L=Object(g.a)([B,S],function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var a={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"Track"),o={sources:I({},r,{type:"geojson",data:D(t.data,a)}),layers:[{id:"".concat(t.id,"Lines"),source:r,type:"line",paint:{"line-width":1,"line-color":t.color}},{id:"".concat(t.id,"Points"),source:r,type:"circle",filter:["match",["geometry-type"],["","Point"],!0,!1],paint:{"circle-radius":4,"circle-color":t.color}}]};return Q(e,o)},{sources:{},layers:[]})}),R=Object(g.a)([v,S],function(e,t){var r=e&&e.length>0,o=t&&t.length>0;if(!r||!o)return null;var a={start:e[0].getTime(),end:e[1].getTime()};return t.reduce(function(e,t){if(!t.data)return e;var r="".concat(t.id,"HighlightedTrack"),o={sources:I({},r,{type:"geojson",data:D(t.data,a)}),layers:[{id:"".concat(t.id,"HighlightedLines"),source:r,type:"line",paint:{"line-width":1,"line-color":"#fff"}}]};return Q(e,o)},{sources:{},layers:[]})}),G=Object(g.a)([L,R],function(e,t){return t?Q(e,t):e}),T=r("./node_modules/@turf/area/index.js"),_=r.n(T),k="ZOOM",F={NORMAL:0,BULLSEYE:2},Y=0,M=1,H="geojson",j="raster",J=r("./node_modules/lodash/difference.js"),U=r.n(J),P=r("./node_modules/lodash/uniq.js"),q=r.n(P),K=r("./node_modules/lodash/uniqBy.js"),Z=r.n(K),W=r("./node_modules/lodash/pull.js"),V=r.n(W),z=r("./node_modules/lodash/sumBy.js"),N=r.n(z),X=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js"),$=r("./node_modules/@globalfishingwatch/map-convert/index.js"),ee=r.n($),te=r("./node_modules/lodash/template.js"),re=r.n(te),oe=r("./node_modules/lodash/templateSettings.js"),ae=r.n(oe),ne=r("./src/map/lib/pelagosClient.js"),ie=r("./node_modules/pbf/index.js"),se=r.n(ie),le=r("./node_modules/@mapbox/vector-tile/index.js"),ce=function(e,t){return fetch(e,{headers:t?{Authorization:"Bearer ".concat(t)}:{}}).then(function(t){if(!t.ok)throw new Error("could not load tile ".concat(e));return t.blob().then(function(e){var t=new FileReader;return new Promise(function(r){t.addEventListener("loadend",function(){var e=new se.a(t.result),o=new le.VectorTile(e);return r(o)}),t.readAsArrayBuffer(e)})})}).catch(function(e){console.warn(e)})};function ue(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){a=!0,n=l}finally{try{o||null==s.return||s.return()}finally{if(a)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var pe=function(e,t,r){var o=[];return(t||[null]).forEach(function(t,a){var n={id:r.seriesgroup};null!==t&&!0!==r.temporalExtentsLess&&(n.startTimeISO=new Date(t[0]).toISOString(),n.endTimeISO=new Date(t[1]).toISOString()),r.tileCoordinates&&(n.x=r.tileCoordinates.x,n.y=r.tileCoordinates.y,n.z=r.tileCoordinates.zoom);var i=function(e,t){return ae.a.interpolate=/{{([\s\S]+?)}}/g,re()(e)(t)}(e,n);(!0===r.temporalExtentsLess||!r.temporalExtentsIndices||r.temporalExtentsIndices.indexOf(a)>-1)&&o.push(i)}),o},de=function(e,t,r,o){for(var a=[],n=pe(e,r,o),i=0,s=n.length;i<s;i++)!0===o.isPBF?a.push(ce(n[i],t)):a.push((new ne.a).obtainTile(n[i],t));return a},Ae=function(e){return e.filter(function(e){return null!==e})},ge=function(e,t){var r,o={},a=N()(e,function(e){return e.longitude.length}),n=t.filter(function(t){return!e[0]||void 0!==e[0][t]||(console.warn("column ".concat(t," is present in layerHeader.colsByName but not in tile data")),!1)});n.forEach(function(e){o[e]=new Float32Array(a)});for(var i=0,s=function(e){o[e].set(r[e],i)},l=0,c=e.length;l<c;l++)r=e[l],n.forEach(s),i+=r.longitude.length;return o},me=function(e,t,r,o,a){var n=void 0===a?[]:a,i=r.zoom,s=ee.a.getZoomFactorRadius(i),l=ee.a.getZoomFactorRadiusRenderingMode(i),c=ee.a.getZoomFactorOpacity(i),u={},p=Object.keys(t);p.forEach(function(e){u[e]=!0});var d=[].concat(p);!0===u.sigma&&d.push("radius"),!0===u.weight&&d.push("opacity"),!0===u.longitude&&(d.push("worldX"),d.push("worldY")),!0===u.id&&d.push("series"),["latitude","longitude","datetime"].forEach(function(e){void 0!==t[e]&&!0!==t[e].hidden||V()(d,e)}),V()(d,"sigma","weight"),d=q()(d);for(var A=function(t,a){var A=void 0;if(!0===o){var g=e.feature(t);A=g.properties;var m=g.toGeoJSON(r.x,r.y,i).geometry.coordinates;A.longitude=m[0],A.latitude=m[1]}else A={},p.forEach(function(r){A[r]=e[r][t]});var f=u.timeIndex?A.timeIndex:ee.a.getOffsetedTimeAtPrecision(A.datetime),h=ue(Object(X.g)([A.longitude,A.latitude],1),2),y=h[0],E=h[1];if(A.worldX=y,A.worldY=E,u.sigma&&(A.radius=ee.a.sigmaToRadius(A.sigma,l,s)),u.weight&&(A.opacity=ee.a.weightToOpacity(A.weight,c)),u.id&&(A.series=A.id),!n[f]){var w={};return d.forEach(function(e){w[e]=[A[e]]}),n[f]=w,"continue"}var b=n[f];d.forEach(function(e){b[e].push(A[e])})},g=0,m=!0===o?e.length:e.latitude.length;g<m;g++)A(g);return n},fe=function(e){e.hasFishing=[],e.worldX=[],e.worldY=[];for(var t=0,r=e.weight.length;t<r;t++){var o=ue(Object(X.g)([e.longitude[t],e.latitude[t]],1),2),a=o[0],n=o[1];e.worldX[t]=a,e.worldY[t]=n,e.hasFishing[t]=e.weight[t]>0}return e},he=function(e){for(var t=[],r=0,o=e.series.length;r<o;r++){var a=e.datetime[r],n=ee.a.getOffsetedTimeAtPrecision(a);if(t[n]){var i=t[n];i.worldX.push(e.worldX[r]),i.worldY.push(e.worldY[r]),i.series.push(e.series[r]),i.hasFishing.push(e.hasFishing[r])}else{var s={worldX:[e.worldX[r]],worldY:[e.worldY[r]],series:[e.series[r]],hasFishing:[e.hasFishing[r]]};t[n]=s}}return t},ye=function(e,t,r){return Object.keys(r).every(function(o){return void 0!==e[o]&&r[o].indexOf(e[o][t])>-1})},Ee=function(e,t,r,o,a){for(var n=[],i=t.worldX,s=t.worldY,l=t.toleranceRadiusInWorldUnits,c=function(t){var r=e[t];if(void 0===r)return"continue";for(var o=function(e){var t=r.worldX[e],o=r.worldY[e];if((!a.length||function(e,t,r){return r.filter(function(e){return!0!==e.pass}).some(function(r){return ye(e,t,r.filterValues)})}(r,e,a))&&t>=i-l&&t<=i+l&&o>=s-l&&o<=s+l){var c={};Object.keys(r).forEach(function(t){c[t]=r[t][e]}),n.push(c)}},c=0;c<r.worldX.length;c++)o(c)},u=r;u<o;u++)c(u);return n},we=r("./node_modules/@mapbox/tile-cover/index.js"),be=r.n(we),Be=r("./node_modules/lodash/debounce.js"),ve=r.n(Be),Ce=r("./node_modules/viewport-mercator-project/dist/esm/web-mercator-viewport.js");function xe(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Ie=function(e){var t=Math.ceil(e+.5),r=!0;return t>10&&(t=10,r=!1),{min_zoom:t,max_zoom:t,tilesAvailable:r}},Oe=function(){return function(e,t){var r=t();if(!r.map.heatmapTiles.currentToLoadTileUids.length){var o=r.map.heatmapTiles.currentToReleaseTileUids;e(Je(o)),e({type:"RELEASE_MARKED_TILES_UIDS"})}}},Se=function(e){return function(t){t({type:"MARK_TILES_UIDS_AS_LOADED",payload:e}),t(Oe())}},Qe=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r(),a=o.map.heatmapTiles.currentVisibleTiles,n=[],i=[];if(!0===e)n=a;else{var s=o.map.heatmapTiles.currentLoadedTiles;a.forEach(function(e){void 0===s.find(function(t){return t.uid===e.uid})&&n.push(e)}),s.forEach(function(e){void 0===a.find(function(t){return t.uid===e.uid})&&i.push(e.uid)})}var l=n.map(function(e){return e.uid});n.forEach(function(e){var r;t((r=e,function(e,t){e({type:ke,payload:r});var o=t().map.heatmap.heatmapLayers,a=Object.keys(o).filter(function(e){return!0===o[e].visible});a.length&&e(je(a,[r]))}))}),t({type:"SET_CURRENTLY_LOADED_TILES",payload:a}),t({type:"SET_CURRENTLY_SWAPPED_TILE_UIDS",payload:{tilesToLoadUids:l,tilesToReleaseUids:i}}),t(Ue()),t(Oe())}},De=ve()(function(e){e(Qe())},500),Le=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return function(t,r){var o=r().map.viewport,a=o.viewport;if(null===o.currentTransition){var n=new Ce.a(a),i=[n.unproject([0,0]),n.unproject([a.width,a.height])],s=i[0],l=i[1],c=[s[0],l[1],l[0],s[1]],u=c[0],p=c[1],d=c[2],A=c[3],g=[],m=Ie(a.zoom);if(!1!==m.tilesAvailable||!0===e){if(d>180||u<-180){var f=d>180?u:u+360,h=d>180?d-360:d;g.push([[[f,A],[179.999,A],[179.999,p],[f,p],[f,A]]]),g.push([[[-180,A],[h,A],[h,p],[-180,p],[-180,A]]])}else g.push([[[u,A],[d,A],[d,p],[u,p],[u,A]]]);var y={type:"MultiPolygon",coordinates:g},E=be.a.tiles(y,m),w=be.a.indexes(y,m),b=[];E.forEach(function(e,t){var r=w[t];e[2]>=2&&b.push({tileCoordinates:{x:e[0],y:e[1],zoom:e[2]},uid:r})}),t({type:"SET_CURRENTLY_VISIBLE_TILES",payload:b}),!1===(o.prevZoom!==a.zoom)?t(Qe(e)):De(t)}}}},Re=function(e,t){return function(r,o){var a={type:"Point",coordinates:[e.longitude,e.latitude]},n=o().map.viewport.viewport.zoom,i=[n,n-1,n+1].map(function(e){return Ie(e)}).map(function(e){return be.a.indexes(a,e)}).map(function(e){return e[0]});r(function(e,t){return function(r,o){var a=o(),n=qe(a,e,t),i=n.layer,s=n.isEmpty,l=n.isCluster,c=n.isMouseCluster,u=n.foundVessels;void 0!==i.id||a.map.heatmap.highlightedVessels.layerId!==i.id?r({type:Fe,payload:{layer:{id:i.id,tilesetId:i.tilesetId,subtype:i.subtype,header:i.header},isEmpty:s,clickableCluster:!0===l||!0===c,highlightableCluster:!0!==l,foundVessels:u}}):r(Ke())}}(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){xe(e,t,r[t])})}return e}({},e,{uids:i}),t))}};function Ge(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Te(e,t,r[t])})}return e}function Te(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _e(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var ke="ADD_REFERENCE_TILE",Fe="HIGHLIGHT_VESSELS",Ye="UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES",Me="UPDATE_HEATMAP_TILE";function He(e,t){var r=e[0].getTime(),o=e[1].getTime(),a=[];return t.forEach(function(e,t){var n=e[0];e[1]>=r&&n<=o&&a.push(t)}),a}function je(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return function(o,a){var n=a(),i=E(o,n,e.join("-")),s=n.map.module.token,l=n.map.heatmap.heatmapLayers,c={};e.forEach(function(e){c[e]=_e(l[e].tiles)});var u=[];e.forEach(function(e){var a=l[e].header,n=Ge({},a),i=n.temporalExtents,p=n.temporalExtentsLess,d=n.isPBF,A=n.colsByName,g=a.endpoints.tiles;t.forEach(function(t){var a=c[e].find(function(e){return e.uid===t.uid});a||(a={uid:t.uid,temporalExtentsIndicesLoaded:[]},c[e].push(a));var n=void 0===r?l[e].visibleTemporalExtentsIndices:r[e],m=U()(n,a.temporalExtentsIndicesLoaded),f=function(e,t,r,o,a){var n=a.url,i=a.temporalExtents,s=a.temporalExtentsLess,l=a.isPBF;if(void 0===n)throw new Error("URL/endpoints object is not available on this tilesets header");var c=de(n,r,i,{tileCoordinates:t,temporalExtentsIndices:o,temporalExtentsLess:s,isPBF:l}),u=Promise.all(c);return new Promise(function(t){u.then(function(r){t({loadedLayerId:e,rawTileData:r})})})}(e,t.tileCoordinates,s,m,{url:g,temporalExtents:i,temporalExtentsLess:p,isPBF:d});u.push(f),f.then(function(e){var r=e.loadedLayerId,n=e.rawTileData;a.temporalExtentsIndicesLoaded=q()(a.temporalExtentsIndicesLoaded.concat(m)),a.data=function(e,t,r,o,a){var n;if(!0===r){if(void 0===e||!e.length||void 0===e[0]||!Object.keys(e[0].layers).length)return[];n=e[0].layers.points}else{var i=Ae(e);if(n=ge(i,Object.keys(t)),0===Object.keys(n).length)return[]}return me(n,t,o,r,a)}(n,A,d,t.tileCoordinates,a.data),o({type:Me,payload:{layerId:r,tile:a}})})})}),Promise.all(u).then(function(){o(w(i)),o(Se(t.map(function(e){return e.uid})))})}}var Je=function(e){return{type:"RELEASE_HEATMAP_TILES",payload:e}},Ue=function(){return{type:"UPDATE_LOADED_TILES"}};function Pe(e){return function(t,r){var o=r().map.heatmap.referenceTiles;t(je([e],o))}}var qe=function(e,t,r){var o=e.map.heatmap.heatmapLayers,a=r[0],n=r[1],i=[];Object.keys(o).forEach(function(e){var r=o[e];if(!0===r.visible){var s=t.uids.map(function(e){return r.tiles.find(function(t){return t.uid===e})}).filter(function(e){return void 0!==e&&void 0!==e.data}),l=r.filters;if(s.length){var c=s[0];i.push({layer:r,vessels:Ee(c.data,t,a,n,l)})}}});var s,l,c,u,p,d=i.filter(function(e){return e.vessels.length>0}),A=d.filter(function(e){return"Encounters"===e.layer.subtype}).length>0;if(0===d.length)c=!0;else if(d.length>1&&!A)s=!0;else{var g=(u=A?d.find(function(e){return"Encounters"===e.layer.subtype}):d[0]).vessels;if(0===g.length)c=!0;else g.filter(function(e){return e.seriesgroup<0}).length?s=!0:l=(p=Z()(g,function(e){return e.series})).length>1}return{isEmpty:c,isCluster:s,isMouseCluster:l,foundVessels:p,layer:void 0===u?{}:u.layer}};function Ke(){return{type:Fe,payload:{isEmpty:!0,clickableCluster:!1}}}var Ze=function(e,t){return function(r,o){if(null!==e){var a=o().map.heatmap.heatmapLayers;e.forEach(function(e){var o,n,i=e.id,s=a[i];void 0===s?r((o=e,n=t,function(e){var t=o.header.temporalExtents;e({type:"ADD_HEATMAP_LAYER",payload:Ge({},o,{visibleTemporalExtentsIndices:He(n,t)})}),!0===o.visible&&e(Pe(o.id))})):(s.visible!==e.visible&&!0===e.visible&&r(Pe(i)),s.visible===e.visible&&s.hue===e.hue&&s.opacity===e.opacity&&s.filters===e.filters&&s.interactive===e.interactive||r({type:"UPDATE_HEATMAP_LAYER_STYLE",payload:{id:e.id,visible:e.visible,hue:e.hue,opacity:e.opacity,filters:e.filters,interactive:e.interactive}}))}),Object.keys(a).forEach(function(t){var o;e.find(function(e){return e.id===t})||r((o=t,function(e){e({type:"REMOVE_HEATMAP_LAYER",payload:{id:o}})}))})}else console.warn("New layers in updateHeatmapLayers can't be null")}},We=r("./node_modules/viewport-mercator-project/dist/esm/fit-bounds.js"),Ve=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return function(a){a({type:"SET_ZOOM_INCREMENT",payload:{increment:e,latitude:t,longitude:r,zoom:o}}),a(Le()),a(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var a=r.map.viewport;void 0!==a.bounds&&o({zoom:a.viewport.zoom,center:[a.viewport.latitude,a.viewport.longitude],bounds:a.bounds,canZoomIn:a.canZoomIn,canZoomOut:a.canZoomOut,mouseLatLong:a.mouseLatLong})}})}};function ze(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Ne(e,t,r[t])})}return e}function Ne(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Xe=function(e,t,r){var o=t.style.mapStyle.toJS().sources[e];return void 0===o&&console.warn("Couldnt find source when looking for fields of layer",e),"geojson"!==o.type?void 0===o.metadata||void 0===o.metadata["gfw:popups"]?null:o.metadata["gfw:popups"]:0===Object.keys(r.properties).length?null:Object.keys(r.properties).map(function(e){return{id:e}})},$e=function(e){return void 0!==e.layer.metadata&&e.layer.metadata["gfw:id"]||e.layer.source},et=function(e){if(void 0!==e&&e.length)for(var t=0;t<e.length;t++){var r=e[t],o=$e(r);if(void 0!==o)return{feature:r,staticLayerId:o}}},tt=function(e,t,r,o){return function(a,n){var i=n().map;a({type:"CLEAR_HIGHLIGHT_CLICKED_VESSEL"});var s=i.heatmap.highlightedVessels,l=s.layer,c=s.isEmpty,u=s.clickableCluster,p=s.foundVessels,d={type:null};if(!0===c){var A=et(r);if(void 0!==A){var g,m=Xe(A.staticLayerId,i,A.feature),f=A.feature.properties;null!==m&&(g=m.map(function(e){var t,r=e.id||e,o="POLYGON_LAYERS_AREA"===r?(t=A.feature,(Math.pow(10,-6)*_()(t.geometry)).toLocaleString("en-US",{maximumFractionDigits:0})):f[r];return{title:e.label||e.id,isLink:e.isLink,value:o}})),d.type="static",d.cluster=o,d.layer={id:A.staticLayerId},d.target={fields:g,properties:f}}}else d.type="activity",d.layer=l,!0===u?(a(function(e,t){return function(r){r(Ve(1,e,t))}}(e,t)),a(Ke()),d.target={isCluster:!0}):d.target=p[0];i.module.onClick&&i.module.onClick(ze({},d,{latitude:e,longitude:t}))}},rt=r("./node_modules/react-map-gl/dist/esm/index.js"),ot=(r("./node_modules/mapbox-gl/dist/mapbox-gl.css"),r("./node_modules/pixi.js/lib/index.js")),at=function(e,t,r){var o=e%360/parseFloat(360)*6,a=100===t?1:t%100/parseFloat(100),n=100===r?1:r%100/parseFloat(100),i=Math.floor(o),s=o-i,l=n*(1-a),c=n*(1-s*a),u=n*(1-(1-s)*a),p=i%6,d=[n,c,l,l,u,n][p],A=[u,n,n,c,l,l][p],g=[l,l,u,n,n,c][p];return{r:Math.round(255*d),g:Math.round(255*A),b:Math.round(255*g)}},nt=function(e){return at(e,50,100)},it=function(e){var t=nt(e);return"rgb(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")},st=function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},lt=function(e){return 12*e},ct=function(e){return e%360};function ut(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var pt=function(){function e(t,r,o){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.stage=new PIXI.particles.ParticleContainer(h,{scale:!0,alpha:!0,position:!0,uvs:!0}),!1===a&&(this.stage.blendMode=PIXI.BLEND_MODES.SCREEN),this.spritesPool=[];var n=new PIXI.Rectangle(0,0,2*f,2*f);this.mainVesselTexture=new PIXI.Texture(t,n),this._setTextureFrame(r,o),this.clearSpriteProps()}var t,r,o;return t=e,(r=[{key:"clearSpriteProps",value:function(){this.spritesProps={x:new Float32Array(h),y:new Float32Array(h),a:new Float32Array(h),s:new Float32Array(h)},this.spritesPropsCount=0}},{key:"pushSpriteProps",value:function(e,t,r,o){this.spritesProps.x[this.spritesPropsCount]=e,this.spritesProps.y[this.spritesPropsCount]=t,this.spritesProps.a[this.spritesPropsCount]=r,this.spritesProps.s[this.spritesPropsCount]=o,this.spritesPropsCount++}},{key:"setRenderingStyleIndex",value:function(e){this._setTextureFrame(e)}},{key:"destroy",value:function(){this.spritesPool=null,this.stage.destroy({children:!0})}},{key:"_setTextureFrame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=this.mainVesselTexture.frame.clone();if(null!==e&&(r.x=2*f*e+e),null!==t){var o=function(e){return Math.round(e/360*30)}(t);30===o&&(o=0),r.y=o*f*2,o>0&&(r.y+=o)}this.mainVesselTexture.frame=r,this.mainVesselTexture.update()}},{key:"render",value:function(){var e=this.spritesPropsCount;this.resizeSpritesPool();for(var t=0;t<e;t++){var r=this.stage.children[t],o=this.spritesProps.s[t];r.setTransform(this.spritesProps.x[t],this.spritesProps.y[t],o,o),r.alpha=this.spritesProps.a[t]}for(var a=this.stage.children.length,n=e;n<a;n++){this.stage.children[n].x=-100}}},{key:"resizeSpritesPool",value:function(){var e=this.spritesPropsCount-this.stage.children.length;if(e<-4999)for(var t=Math.min(100,-e),r=0;r<t;r++)this.stage.removeChildAt(0);if(e>0){var o=Math.max(5e3,e);this._addSprites(o)}}},{key:"_addSprites",value:function(e){for(var t=0;t<e;t++){var r=new PIXI.Sprite(this.mainVesselTexture);r.anchor.x=.5,r.anchor.y=.5,r.x=-100,this.stage.addChild(r)}}}])&&ut(t.prototype,r),o&&ut(t,o),e}();function dt(e){return(dt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function At(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){a=!0,n=l}finally{try{o||null==s.return||s.return()}finally{if(a)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function gt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function mt(e,t){return!t||"object"!==dt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ft(e){return(ft=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ht(e,t){return(ht=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}pt.__docgenInfo={description:"",methods:[{name:"clearSpriteProps",docblock:null,modifiers:[],params:[],returns:null},{name:"pushSpriteProps",docblock:null,modifiers:[],params:[{name:"x",type:null},{name:"y",type:null},{name:"a",type:null},{name:"s",type:null}],returns:null},{name:"setRenderingStyleIndex",docblock:null,modifiers:[],params:[{name:"renderingStyleIndex",type:null}],returns:null},{name:"destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_setTextureFrame",docblock:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used\n@heatmapStyle bool whether to use heatmap style or solid circle style\n@hue number hue value between 0 and 360",modifiers:[],params:[{name:"renderingStyleIndex"},{name:"hue"}],returns:null,description:"Updates the main texture frame offset to show different brush styles and hues\nBoth args are optional, if one is omitted, previous value is used"},{name:"resizeSpritesPool",docblock:null,modifiers:[],params:[],returns:null},{name:"_addSprites",docblock:null,modifiers:[],params:[{name:"num",type:null}],returns:null}],displayName:"HeatmapSubLayer"};var yt=function(e,t,r){return[1/1.5*(r[0]*e+r[4]*t+r[12]),1/1.5*(r[5]*t+r[13])]},Et=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),mt(this,ft(t).apply(this,arguments))}var r,o,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ht(e,t)}(t,a.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentWillUnmount",value:function(){this._destroy()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"componentWillReceiveProps",value:function(e){e.useRadialGradientStyle!==this.props.useRadialGradientStyle&&this.setBrushZoomRenderingStyle(e.useRadialGradientStyle)}},{key:"_build",value:function(){var e=this.props,t=e.layer,r=e.rootStage,o=e.useRadialGradientStyle,a=e.customRenderingStyle;this.subLayers={},this.renderingStyle=t.header&&t.header.rendering?t.header.rendering:a,this.setBrushRenderingStyle(this.renderingStyle.style),this.setBrushZoomRenderingStyle(o),this.stage=new ot.Container,r.addChild(this.stage)}},{key:"setBrushRenderingStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:F.NORMAL;this.brushRenderingStyle="string"===typeof e?F[e.toUpperCase()]:e,this._setBrushRenderingStyleIndex()}},{key:"setBrushZoomRenderingStyle",value:function(e){this.brushZoomRenderingStyle=!0===e?Y:M,this._setBrushRenderingStyleIndex()}},{key:"_setBrushRenderingStyleIndex",value:function(){var e=this,t=this.brushRenderingStyle===F.NORMAL?this.brushZoomRenderingStyle:0,r=this.brushRenderingStyle+t;r!==this.renderingStyleIndex&&(this.renderingStyleIndex=r,Object.values(this.subLayers).forEach(function(t){t.setRenderingStyleIndex(e.renderingStyleIndex)}))}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.filters,o=t.baseTexture,a=t.layer;if(null!==a&&void 0!==a&&void 0!==a.tiles&&!1!==a.visible){this.stage.visible=!0,this.stage.alpha=a.opacity;for(var n=a.tiles,i=a.hue,s=void 0!==r&&r.length?r.filter(function(e){return!0!==e.pass}).map(function(e){return void 0===e.hue?"0":e.hue.toString()}):[i.toString()],l=Object.keys(this.subLayers),c=q()(s.concat(l)),u=0;u<c.length;u++){var p=c[u];-1!==s.indexOf(p)?(-1===l.indexOf(p)&&(this.subLayers[p]=this._createSublayer(o,this.renderingStyleIndex,p)),this.subLayers[p].clearSpriteProps()):(this._destroySubLayer(this.subLayers[p]),delete this.subLayers[p])}s.length&&(n.forEach(function(t){e._setSubLayersSpritePropsForTile({data:t.data,numFilters:r.length,defaultHue:i})}),s.forEach(function(t){e.subLayers[t].render()}))}else this.stage.visible=!1}},{key:"_setSubLayersSpritePropsForTile",value:function(e){var t=e.data,r=e.numFilters,o=e.defaultHue;if(t)for(var a=this.props,n=a.startIndex,i=a.endIndex,s=a.viewport,l=a.filters,c=a.viewportLeft,u=a.viewportRight,p=n;p<i;p++){var d=t[p];if(d)for(var A=0,g=d.worldX.length;A<g;A++){var m=void 0;void 0!==l&&l.length||(m=o);for(var f=0;f<r;f++){var h=l[f];if(ye(d,A,h.filterValues)){m=h.hue;break}}if(void 0!==m){var y=d.worldX[A];c>0&&y<c?y+=512:c<0&&y>u&&(y-=512);var E=y*s.scale,w=d.worldY[A]*s.scale,b=s.pixelProjectionMatrix,B=At(0===s.pitch?yt(E,w,b):Object(X.k)([E,w],b),2),v=B[0],C=B[1];v>-10&&v<s.width+10&&C>-10&&C<s.height+10&&this.subLayers[m].pushSpriteProps(v,C,d.opacity?d.opacity[A]:this.renderingStyle.defaultOpacity,d.radius?d.radius[A]:this.renderingStyle.defaultSize)}}}}},{key:"_createSublayer",value:function(e,t,r){var o=new pt(e,t,r,this.brushRenderingStyle===F.BULLSEYE);return this.stage.addChild(o.stage),o}},{key:"_destroy",value:function(){Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this)),this.stage.destroy({children:!0}),this.props.rootStage.removeChild(this.stage)}},{key:"_destroySubLayer",value:function(e){this.stage.removeChild(e.stage),e.destroy()}},{key:"render",value:function(){return null}}])&&gt(r.prototype,o),n&&gt(r,n),t}(),wt=Et;function bt(e){return(bt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Bt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){a=!0,n=l}finally{try{o||null==s.return||s.return()}finally{if(a)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function vt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Ct(e,t){return!t||"object"!==bt(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function xt(e){return(xt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function It(e,t){return(It=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}Et.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"setBrushRenderingStyle",docblock:null,modifiers:[],params:[{name:"style",type:null}],returns:null},{name:"setBrushZoomRenderingStyle",docblock:null,modifiers:[],params:[{name:"useRadialGradientStyle",type:null}],returns:null},{name:"_setBrushRenderingStyleIndex",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_setSubLayersSpritePropsForTile",docblock:null,modifiers:[],params:[{name:"{ data, numFilters, defaultHue }",type:null}],returns:null},{name:"_createSublayer",docblock:null,modifiers:[],params:[{name:"baseTexture",type:null},{name:"renderingStyleIndex",type:null},{name:"hue",type:null}],returns:null},{name:"_destroy",docblock:null,modifiers:[],params:[],returns:null},{name:"_destroySubLayer",docblock:null,modifiers:[],params:[{name:"subLayer",type:null}],returns:null}],displayName:"HeatmapLayer",props:{layer:{type:{name:"object"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},filters:{type:{name:"array"},required:!1,description:""},baseTexture:{type:{name:"object"},required:!1,description:""},useRadialGradientStyle:{type:{name:"bool"},required:!1,description:""},customRenderingStyle:{type:{name:"object"},required:!1,description:""},viewportLeft:{type:{name:"number"},required:!1,description:""},viewportRight:{type:{name:"number"},required:!1,description:""}}};var Ot=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Ct(this,xt(t).apply(this,arguments))}var r,o,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&It(e,t)}(t,a.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){this._build()}},{key:"componentDidUpdate",value:function(){this._redraw()}},{key:"_build",value:function(){var e=this.props.rootStage;this.stage=new PIXI.Graphics,this.stage.nativeLines=!0,e.addChild(this.stage)}},{key:"clear",value:function(){this.stage.clear()}},{key:"_redraw",value:function(){var e=this,t=this.props,r=t.tracks,o=t.zoom,a=t.startIndex,n=t.endIndex,i=t.highlightTemporalExtentIndexes;if(this.clear(),r.length){var s=null===i?void 0:[Math.max(a,i[0]),Math.min(n,i[1])],l=s&&s[1]-s[0]>0?s:void 0,c=o>2,u=1+.5*(o-2),p=void 0!==l&&l[0]>0&&l[1]>0;r.forEach(function(t){e._drawTrack({data:t.data,startIndex:a,endIndex:n,drawFishingCircles:c,fishingCirclesRadius:u,color:"0x".concat(t.color.substr(1)),lineThickness:1,lineOpacity:1}),!0===p&&e._drawTrack({data:t.data,startIndex:i[0],endIndex:i[1],drawFishingCircles:c,fishingCirclesRadius:u,color:"0xFFFFFF",lineThickness:2,lineOpacity:1})})}}},{key:"_drawTrack",value:function(e){var t,r,o,a=this,n=e.data,i=e.startIndex,s=e.endIndex,l=e.drawFishingCircles,c=e.fishingCirclesRadius,u=e.color,p=e.lineThickness,d=e.lineOpacity,A=e.worldOffset,g=void 0===A?0:A,m=this.props.viewport,f=0,h={x:[],y:[]};this.stage.lineStyle(p,u,d);for(var y=!1,E=i;E<s;E++){var w=n[E];if(w)for(var b=0,B=w.series.length;b<B;b++){var v=w.series[b];f++;var C=w.worldX[b]+g,x=w.worldY[b],I=Bt(Object(X.k)([C*m.scale,x*m.scale],m.pixelProjectionMatrix),2),O=I[0],S=I[1];if(t!==v&&this.stage.moveTo(O,S),r&&Math.abs(C-r)>256){0===g&&(y=!0);var Q=o+(x-o)/2,D=C-r<0,L=g+(512-1e-6),R=D?L:g,G=D?g:L,T=Bt(Object(X.k)([R*m.scale,Q*m.scale],m.pixelProjectionMatrix),2),_=T[0],k=T[1];this.stage.lineTo(_,k);var F=Bt(Object(X.k)([G*m.scale,Q*m.scale],m.pixelProjectionMatrix),2),Y=F[0],M=F[1];this.stage.moveTo(Y,M)}this.stage.lineTo(O,S),l&&!0===w.hasFishing[b]&&(h.x.push(O),h.y.push(S)),r=C,o=x,t=v}}if(l){this.stage.lineStyle(0),this.stage.beginFill(u,1);for(var H=0,j=h.x.length;H<j;H++)this.stage.drawCircle(h.x[H],h.y[H],c);this.stage.endFill()}return!0===y&&[-512,512].forEach(function(e){a._drawTrack({worldOffset:e,data:n,startIndex:i,endIndex:s,drawFishingCircles:l,fishingCirclesRadius:c,color:u,lineThickness:p,lineOpacity:d})}),f}},{key:"render",value:function(){return null}}])&&vt(r.prototype,o),n&&vt(r,n),t}(),St=Ot;function Qt(e){return(Qt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Dt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){kt(e,t,r[t])})}return e}function Lt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],o=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(l){a=!0,n=l}finally{try{o||null==s.return||s.return()}finally{if(a)throw n}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Rt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Gt(e){return(Gt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Tt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _t(e,t){return(_t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function kt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Ot.__docgenInfo={description:"",methods:[{name:"_build",docblock:null,modifiers:[],params:[],returns:null},{name:"clear",docblock:null,modifiers:[],params:[],returns:null},{name:"_redraw",docblock:null,modifiers:[],params:[],returns:null},{name:"_drawTrack",docblock:"Draws a single track (line + points)\n\n@param data track points data in 'playback form' (ie organized by days)\n@param extent extent, in day indices\n@param offset object containing info about the current situation of the map viewport, used to compute screen coords\n@param drawFishingCircles whether to draw fishing circles or not\n@param fishingCirclesRadius radius of the fishing circles\n@param color\n@param lineThickness\n@param lineOpacity\n@param worldOffset offset to use when a track crosses the dateline (ie 512 to add a second world to the right)",modifiers:[],params:[{name:"{\n  data,\n  startIndex,\n  endIndex,\n  drawFishingCircles,\n  fishingCirclesRadius,\n  color,\n  lineThickness,\n  lineOpacity,\n  worldOffset = 0,\n}"}],returns:null,description:"Draws a single track (line + points)"}],displayName:"TracksLayer",props:{zoom:{type:{name:"number"},required:!1,description:""},rootStage:{type:{name:"object"},required:!1,description:""},viewport:{type:{name:"object"},required:!1,description:""},startIndex:{type:{name:"number"},required:!1,description:""},endIndex:{type:{name:"number"},required:!1,description:""},highlightTemporalExtentIndexes:{type:{name:"array"},required:!1,description:""},tracks:{type:{name:"array"},required:!1,description:""}}};var Ft=function(e){function t(){var e,r,o,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var n=arguments.length,i=new Array(n),s=0;s<n;s++)i[s]=arguments[s];return o=this,a=(e=Gt(t)).call.apply(e,[this].concat(i)),r=!a||"object"!==Qt(a)&&"function"!==typeof a?Tt(o):a,kt(Tt(r),"state",{pixiReady:!1}),kt(Tt(r),"onTouchStart",function(e){e.touches.length&&r.queryCoords(e.touches[0].clientX,e.touches[0].clientY)}),kt(Tt(r),"onMouseMove",function(e){r.queryCoords(e.clientX,e.clientY)}),kt(Tt(r),"_onTick",function(){!0===r.heatmapFadingIn&&r.heatmapStage.alpha<1&&r._heatmapFadeinStep()}),r}var r,n,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_t(e,t)}(t,rt["a"]),r=t,(n=[{key:"componentDidMount",value:function(){this._build(),this.setState({pixiReady:!0})}},{key:"componentWillReceiveProps",value:function(e){this.props.exportNativeViewport(this._context.viewport),e.viewport.width===this.props.viewport.width&&e.viewport.height===this.props.viewport.height||this._updateViewportSize(e.viewport.width,e.viewport.height)}},{key:"_build",value:function(){var e=this.props.viewport,t=e.width,r=e.height;this.pixi=new ot.Application({width:t,height:r,transparent:!0,antialias:!0}),this.renderer=this.pixi.renderer,this.canvas=this.pixi.view,this.canvas.style.position="absolute",this.container.appendChild(this.canvas),this.stage=this.pixi.stage;var o=function(e,t){var r=document.createElement("canvas"),o=r.getContext("2d"),a=2*e;r.width=3*a+2,r.height=31*a+31;for(var n=0;n<31;n++){var i=a*n+n,s=i+e,l=e,c=o.createRadialGradient(l,s,e*t,l,s,e),u=lt(n),p=it(u);c.addColorStop(0,p);var d=at(ct(u+30),80,100);c.addColorStop(1,"rgba(".concat(d.r,", ").concat(d.g,", ").concat(d.b,", 0)")),o.fillStyle=c,o.fillRect(0,i,a,a),l+=a+1,o.beginPath(),o.arc(l,s,e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),l+=a+1,o.beginPath(),o.arc(l,s,.4*e,0,2*Math.PI,!1),o.fillStyle=p,o.fill(),o.beginPath(),o.arc(l,s,.95*e,0,2*Math.PI,!1),o.lineWidth=1,o.strokeStyle=p,o.stroke()}return r}(f,.15);this.baseTexture=ot.Texture.fromCanvas(o),this.heatmapStage=new ot.Container,this.stage.addChild(this.heatmapStage),this.pixi.ticker.add(this._onTick)}},{key:"_updateViewportSize",value:function(e,t){this.renderer.resize(e,t)}},{key:"toggleHeatmapDimming",value:function(e){void 0!==this.heatmapStage&&(!0===e&&(this.heatmapFadingIn=!1),this.heatmapStage.alpha=!0===e?.5:1)}},{key:"queryCoords",value:function(e,t){if(!this.props.heatmapLayers.every(function(e){return!0!==e.interactive})){var r=this._context.viewport,o=Lt(r.unproject([e,t]),2),a=o[0],n=o[1],i=a;i>180?i-=360:i<-180&&(i+=360);var s=Lt(Object(X.g)([i,n],1),2),l=s[0],c=s[1],u=10/r.scale;this.props.queryHeatmapVessels({longitude:i,latitude:n,worldX:l,worldY:c,toleranceRadiusInWorldUnits:u},this.props.temporalExtentIndexes)}}},{key:"_startHeatmapFadein",value:function(){this.heatmapFadingIn=!0,this.heatmapFadeinStartTimestamp=void 0}},{key:"_heatmapFadeinStep",value:function(){void 0===this.heatmapFadeinStartTimestamp&&(this.heatmapFadeinStartTimestamp=Date.now());var e=(Date.now()-this.heatmapFadeinStartTimestamp)/1e3,t=this.heatmapStage.alpha+(1-this.heatmapStage.alpha)*e;t>=1&&(t=1,this.heatmapFadingIn=!1),this.heatmapStage.alpha=t}},{key:"_getHighlightData",value:function(e,t,r){var o={id:"__HIGHLIGHT__",visible:!0,opacity:1,hue:312},a=[];if(void 0!==e&&void 0!==e.layer&&void 0!==e.foundVessels&&!0!==e.isEmpty)o=Dt({highlightLayerData:o},r.find(function(t){return t.id===e.layer.id})),a=e.foundVessels.map(function(e){return{hue:312,filterValues:{series:[e.series]}}});else if(null!==t){o=Dt({highlightLayerData:o},r.find(function(e){return e.id===t.layer.id})),a=[{hue:312,filterValues:{series:[t.seriesgroup]}}]}return{highlightLayerData:o,highlightFilters:a}}},{key:"_render",value:function(){var e=this,t=this.props,r=t.zoom,n=t.heatmapLayers,i=t.temporalExtentIndexes,s=t.highlightTemporalExtentIndexes,l=t.highlightedVessels,c=t.highlightedClickedVessel,u=t.tracks,p=t.leftWorldScaled,d=t.rightWorldScaled,A=this._context.viewport,g=this.state.pixiReady,m=i[0],f=i[1],h=function(e){return e<6}(r);if(!0!==l.isEmpty&&this.toggleHeatmapDimming(!0),!0===l.isEmpty&&0===u.length&&this._startHeatmapFadein(),this.renderer&&this.renderer.gl&&void 0!==this.renderer.gl.getError){var y=this.renderer.gl.getError();0!==y&&console.log(y)}var E=this._getHighlightData(l,c,n),w=E.highlightLayerData,b=E.highlightFilters;return a.a.createElement("div",{ref:function(t){e.container=t},style:{position:"absolute"},onMouseMove:this.onMouseMove,onTouchStart:this.onTouchStart},!0===g&&a.a.createElement(o.Fragment,null,n.map(function(t){return a.a.createElement(wt,{key:t.id,layer:t,filters:t.filters||[],viewport:A,startIndex:m,endIndex:f,baseTexture:e.baseTexture,rootStage:e.heatmapStage,useRadialGradientStyle:h,customRenderingStyle:{},viewportLeft:p,viewportRight:d})}),void 0!==this.stage&&a.a.createElement(wt,{key:"highlighted",layer:w,filters:b,viewport:A,startIndex:m,endIndex:f,baseTexture:this.baseTexture,rootStage:this.heatmapStage,useRadialGradientStyle:h,customRenderingStyle:{defaultOpacity:1,defaultSize:1},viewportLeft:p,viewportRight:d}),void 0!==this.stage&&a.a.createElement(St,{tracks:u,viewport:A,zoom:r,startIndex:m,endIndex:f,highlightTemporalExtentIndexes:s,rootStage:this.stage})))}}])&&Rt(r.prototype,n),i&&Rt(r,i),t}();Ft.propTypes={zoom:d.a.number,heatmapLayers:d.a.array,temporalExtentIndexes:d.a.array,highlightTemporalExtentIndexes:d.a.array,highlightedVessels:d.a.object,highlightedClickedVessel:d.a.object,tracks:d.a.array,queryHeatmapVessels:d.a.func,exportNativeViewport:d.a.func,leftWorldScaled:d.a.number,rightWorldScaled:d.a.number},Ft.contextTypes={viewport:d.a.object};var Yt=Ft;function Mt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Ht=Object(g.a)([function(e){return e.map.heatmap.heatmapLayers}],function(e){return Object.keys(e).map(function(t){return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Mt(e,t,r[t])})}return e}({},e[t])})}),jt=Object(g.a)([function(e){return e.map.tracks.data}],function(e){return e.filter(function(e){return"geojson"!==e.type}).filter(function(e){return void 0!==e.data})}),Jt=Object(g.a)([B],function(e){var t=e[0].getTime(),r=Math.max(e[1].getTime(),e[0].getTime()+864e5);return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Ut=Object(g.a)([v],function(e){if(void 0===e||null===e||!e.length)return null;var t=e[0].getTime(),r=e[1].getTime();return[ee.a.getOffsetedTimeAtPrecision(t),ee.a.getOffsetedTimeAtPrecision(r)]}),Pt=Object(l.b)(function(e){return{highlightedVessels:e.map.heatmap.highlightedVessels,highlightedClickedVessel:e.map.heatmap.highlightedClickedVessel,viewport:e.map.viewport.viewport,zoom:e.map.viewport.viewport.zoom,heatmapLayers:Ht(e),tracks:jt(e),leftWorldScaled:e.map.viewport.leftWorldScaled,rightWorldScaled:e.map.viewport.rightWorldScaled,temporalExtentIndexes:Jt(e),highlightTemporalExtentIndexes:Ut(e)}},function(e,t){return{queryHeatmapVessels:function(t,r){e(Re(t,r))},exportNativeViewport:function(t){var r;e((r=t,function(e){var t=[0,0],o=[r.width,r.height],a=Object(X.h)(t,r.pixelUnprojectionMatrix),n=Object(X.h)(o,r.pixelUnprojectionMatrix),i=a[0]/r.scale,s=n[0]/r.scale,l=r.unproject(t),c=r.unproject(o);e({type:"SET_NATIVE_VIEWPORT",payload:{leftWorldScaled:i,rightWorldScaled:s,bounds:{north:l[1],south:c[1],west:l[0],east:c[0]}}})}))}}})(Yt),qt=r("./src/map/glmap/map.css"),Kt=r.n(qt);function Zt(e){return(Zt="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Wt(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Vt(e){return(Vt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function zt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Nt(e,t){return(Nt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Xt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var $t=function(e){var t=e.latitude,r=e.longitude,o=e.children,n=e.closeButton,i=e.onClose;return a.a.createElement(rt.b,{latitude:t,longitude:r,closeButton:n,onClose:i,anchor:"bottom",offsetTop:-10,tipSize:4,closeOnClick:!1},o)};$t.defaultProps={onClose:function(){}};var er=function(e){function t(e){var r,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,a=Vt(t).call(this,e),r=!a||"object"!==Zt(a)&&"function"!==typeof a?zt(o):a,Xt(zt(r),"_resize",function(){if(null!==r._mapContainerRef){var e=window.getComputedStyle(r._mapContainerRef),t=parseInt(e.width,10),o=parseInt(e.height,10)+1;t===r.props.viewport.width&&o===r.props.viewport.height||r.props.setViewport(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Xt(e,t,r[t])})}return e}({},r.props.viewport,{width:t,height:o}))}else console.warn("Cant set viewport on a map that hasnt finished intanciating yet")}),Xt(zt(r),"onViewportChange",function(e){r.props.setViewport(e)}),Xt(zt(r),"onMapInteraction",function(e,t){var o="hover"===t?r.props.mapHover:r.props.mapClick;if(void 0!==r.glMap&&void 0!==e.features&&e.features.length){var a=e.features[0];if(!0===a.properties.cluster){var n=a.properties.cluster_id,i=a.source,s=r.glMap.getSource(i);return void s.getClusterExpansionZoom(n,function(t,r){s.getClusterLeaves(n,99,0,function(a,n){t||a||o(e.lngLat[1],e.lngLat[0],e.features,{zoom:r,children:n})})})}}o(e.lngLat[1],e.lngLat[0],e.features)}),Xt(zt(r),"onHover",function(e){r.onMapInteraction(e,"hover")}),Xt(zt(r),"onClick",function(e){r.onMapInteraction(e,"click")}),Xt(zt(r),"getRef",function(e){null!==e&&(r.glMap=e.getMap())}),Xt(zt(r),"getCursor",function(e){var t=e.isDragging,o=r.props.cursor;return null===o?t?"grabbing":"grab":o}),Xt(zt(r),"transformRequest",function(e,t){var o=r.props.token;if(null!==o&&"Tile"===t&&e.match(y))return{url:e,headers:{Authorization:"Bearer "+o}}}),r.state={mouseOver:!0},r._mapContainerRef=null,r}var r,o,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Nt(e,t)}(t,a.a.Component),r=t,(o=[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("resize",this._resize),this._resize(),window.setTimeout(function(){return e._resize()},1),window.setTimeout(function(){return e._resize()},1e4)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this._resize)}},{key:"render",value:function(){var e=this,t=this.props,r=t.viewport,o=t.maxZoom,n=t.minZoom,i=t.transitionEnd,s=t.mapStyle,l=t.onClosePopup,c=t.clickPopup,u=t.hoverPopup,p=t.interactiveLayerIds;return a.a.createElement("div",{id:"map",className:Kt.a.map,ref:function(t){e._mapContainerRef=t},onMouseLeave:function(){e.setState({mouseOver:!1})},onMouseEnter:function(){e.setState({mouseOver:!0})}},a.a.createElement(rt.c,Object.assign({ref:this.getRef,transformRequest:this.transformRequest,onTransitionEnd:i,onHover:this.onHover,onClick:this.onClick,getCursor:this.getCursor,mapStyle:s},r,{maxZoom:o,minZoom:n,onViewportChange:this.onViewportChange,interactiveLayerIds:p}),a.a.createElement(Pt,null),void 0!==c&&null!==c&&a.a.createElement($t,{latitude:c.latitude,longitude:c.longitude,closeButton:!0,onClose:l},c.content),!0===this.state.mouseOver&&void 0!==u&&null!==u&&a.a.createElement($t,{latitude:u.latitude,longitude:u.longitude,closeButton:!1},u.content)),a.a.createElement("div",{className:Kt.a.googleLogo}))}}])&&Wt(r.prototype,o),n&&Wt(r,n),t}();er.defaultProps={token:null,clickPopup:null,hoverPopup:null,mapHover:function(){},mapClick:function(){},onClosePopup:function(){},transitionEnd:function(){},cursor:null,interactiveLayerIds:null};var tr=er;er.__docgenInfo={description:"",methods:[{name:"_resize",docblock:null,modifiers:[],params:[],returns:null},{name:"onViewportChange",docblock:null,modifiers:[],params:[{name:"viewport",type:null}],returns:null},{name:"onMapInteraction",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"type",type:null}],returns:null},{name:"onHover",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"onClick",docblock:null,modifiers:[],params:[{name:"event",type:null}],returns:null},{name:"getRef",docblock:null,modifiers:[],params:[{name:"ref",type:null}],returns:null},{name:"getCursor",docblock:null,modifiers:[],params:[{name:"{ isDragging }",type:null}],returns:null},{name:"transformRequest",docblock:null,modifiers:[],params:[{name:"url",type:null},{name:"resourceType",type:null}],returns:null}],displayName:"Map",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"object"},required:!1,description:""},mapHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},mapClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},transitionEnd:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},cursor:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},interactiveLayerIds:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:""},viewport:{type:{name:"object"},required:!0,description:""},mapStyle:{type:{name:"object"},required:!0,description:""},maxZoom:{type:{name:"number"},required:!0,description:""},minZoom:{type:{name:"number"},required:!0,description:""},setViewport:{type:{name:"func"},required:!0,description:""}}};var rr=Object(g.a)([function(e){return e.map.style.staticLayers}],function(e){return e.filter(function(e){return!0===e.interactive&&!0===e.visible}).map(function(e){return e.id})}),or=Object(g.a)([function(e){return e.map.style.mapStyle},G],function(e,t){if(!t)return e;var r=e.toJS().layers.filter(function(e){return void 0!==e.metadata}).map(function(e){return e.metadata["mapbox:group"]}).lastIndexOf("static")+1,o=e.mergeIn(["sources"],t.sources),a=e.get("layers");return t.layers.forEach(function(e,t){a=a.insert(r+t,Object(m.a)(e))}),o=o.set("layers",a)}),ar=Object(l.b)(function(e,t){return{viewport:e.map.viewport.viewport,maxZoom:e.map.viewport.maxZoom,minZoom:e.map.viewport.minZoom,cursor:e.map.interaction.cursor,token:e.map.module.token,mapStyle:or(e),interactiveLayerIds:rr(e)}},function(e){return{setViewport:function(t){e(function(e){return function(t){t({type:"SET_VIEWPORT",payload:e}),t(Le()),t(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var a=r.map.viewport;void 0!==a.bounds&&o({zoom:a.viewport.zoom,center:[a.viewport.latitude,a.viewport.longitude],bounds:a.bounds,canZoomIn:a.canZoomIn,canZoomOut:a.canZoomOut,mouseLatLong:a.mouseLatLong})}})}}(t))},mapHover:function(t,r,o,a){e(function(e,t,r,o){return function(a,n){var i=n().map,s=i.heatmap.highlightedVessels,l=s.layer,c=s.isEmpty,u=s.foundVessels,p=null,d={type:null};if(!0===c){var A=et(r);if(void 0!==A){d.type="static",d.cluster=o,d.layer={id:A.staticLayerId};var g=A.feature.properties;d.target={properties:g},p="pointer";var m=Xe(A.staticLayerId,i,A.feature);if(null!==m){var f=(m.find(function(e){return e.id&&"name"===e.id.toLowerCase()})||m.find(function(e){return e.id&&"id"===e.id.toLowerCase()})||m.find(function(e){return e.id&&null!==g[e.id]&&"null"!==g[e.id]&&void 0!==g[e.id]})).id,h=g[f];d.target.featureTitle=h}}}else if(!0!==c){var y=void 0===u||u.length>1;p=y?"zoom-in":"pointer",d.type="activity",d.layer=l,d.target={objects:u,isCluster:y}}p!==i.interaction.cursor&&a({type:"SET_MAP_CURSOR",payload:p}),i.module.onHover&&i.module.onHover(ze({},d,{latitude:e,longitude:t}))}}(t,r,o,a))},mapClick:function(t,r,o,a){e(tt(t,r,o,a))},transitionEnd:function(){e(function(e){e({type:"TRANSITION_END"}),e(Le()),e(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var a=r.map.viewport;void 0!==a.bounds&&o({zoom:a.viewport.zoom,center:[a.viewport.latitude,a.viewport.longitude],bounds:a.bounds,canZoomIn:a.canZoomIn,canZoomOut:a.canZoomOut,mouseLatLong:a.mouseLatLong})}})})},onClosePopup:function(){e(function(e,t){var r=t();void 0!==r.map.module.onClosePopup&&r.map.module.onClosePopup()})}}})(tr),nr=r("./src/map/glmap/gl-styles/style.json"),ir=[{gl:"line",geoJSON:["LineString","MultiLineString"]},{gl:"fill",geoJSON:["Polygon","MultiPolygon"]},{gl:"circle",geoJSON:["Point","MultiPoint"]}];function sr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function lr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){cr(e,t,r[t])})}return e}function cr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ur=function(e){return{type:"SET_MAP_STYLE",payload:e}},pr=function(e,t,r){var o=e.toJS().layers,a=e,n=o.findIndex(function(e){return e.id===t}),i=o.find(function(e){return e.id===t});if(a=function(e,t,r){var o=!0===t.visible?"visible":"none";return e.setIn(["layers",r,"layout","visibility"],o)}(a,r,n),!0===r.isBasemap)return a;var s=nr.layers.find(function(e){return e.id===t}),l=void 0===r.opacity?1:r.opacity;switch(i.type){case"fill":a=a.setIn(["layers",n,"paint","fill-opacity"],l).setIn(["layers",n,"paint","fill-outline-color"],r.color).setIn(["layers",n,"paint","fill-color"],"rgba(0,0,0,0)");break;case"line":a=a.setIn(["layers",n,"paint","line-opacity"],l).setIn(["layers",n,"paint","line-color"],r.color);break;case"symbol":if(i.metadata&&!0===i.metadata["gfw:isLabel"]){var c="visible"===a.getIn(["layers",n,"layout","visibility"])&&!0===r.showLabels?"visible":"none";if(a=a.setIn(["layers",n,"layout","visibility"],c),!0!==r.showLabels)break}a=a.setIn(["layers",n,"paint","text-opacity"],l),void 0!==r.color&&(a=a.setIn(["layers",n,"paint","text-color"],r.color));break;case"circle":if(a=a.setIn(["layers",n,"paint","circle-opacity"],l).setIn(["layers",n,"paint","circle-stroke-opacity"],l).setIn(["layers",n,"paint","circle-radius"],s.paint["circle-radius"]).setIn(["layers",n,"paint","circle-stroke-color"],s.paint["circle-stroke-color"]||"#000").setIn(["layers",n,"paint","circle-stroke-width"],s.paint["circle-stroke-width"]||1),void 0!==r.color){var u=i.metadata["gfw:mainColorPaintProperty"]||"circle-color";a=a.setIn(["layers",n,"paint",u],r.color)}break;case"raster":a=a.setIn(["layers",n,"paint","raster-opacity"],l)}return a=function(e,t,r,o){var a=e,n=e.toJS(),i=r.type,s=n.metadata["gfw:styles"],l=r.metadata;return["selected","highlighted"].forEach(function(e){var n=t["".concat(e,"Features")],c=null!==n&&void 0!==n&&n.values.length>0,u=t[e],p=lr({},s[e][i]||{},l&&l["gfw:styles"]&&l["gfw:styles"][e]||{});Object.keys(p).length&&Object.keys(p).forEach(function(e){var i,s=p[e][0],l=p[e][1],d=["icon-size","icon-image"].includes(e)?"layout":"paint";if(!1===c&&!0!==u&&!1!==u){var A=nr.layers.find(function(e){return e.id===r.id});i=void 0!==A?r.metadata&&r.metadata["gfw:mainColorPaintProperty"]===e?null:A[d][e]:null}else if(!0===u||!1===u)i=!0===u?s:l;else{var g="";if(null!==t.color&&void 0!==t.color){var m=st(t.color);g="".concat(m.r,",").concat(m.g,",").concat(m.b)}i=["match",["get",n.field],n.values,"string"!==typeof s?s:s.replace("$REFLAYER_COLOR_RGB",g),"string"!==typeof l?l:l.replace("$REFLAYER_COLOR_RGB",g)]}void 0!==i&&null!==i&&(a=a.setIn(["layers",o,d,e],i))})}),a}(a,r,i,n)},dr=function(e,t,r,o){return function(a,n){var i=n().map.style.mapStyle,s=i.toJS();if(void 0===s.sources[t]){var l={type:e};e===H?l.data=o:e===j&&(l.tiles=[r],l.tileSize=256),i=i.setIn(["sources",t],Object(m.a)(l))}if(void 0===s.layers.find(function(e){return e.id===t})){var c=e===H?function(e){var t=e.features.map(function(e){var t=e.geometry;return void 0===t?null:t.type}),r=ir.map(function(e){var r=0;return t.forEach(function(t){e.geoJSON.indexOf(t)>-1&&r++}),{gl:e.gl,num:r}}),o="fill",a=0;return r.forEach(function(e){e.num>a&&(o=e.gl,a=e.num)}),o}(o):e,u=Object(m.a)({id:t,source:t,type:c,layout:{},paint:{}}),p=e===j?s.layers.length-1-s.layers.filter(function(e){return"labels"!==e.id}).reverse().findIndex(function(e){return"raster"===e.type}):s.layers.length-1;i=i.set("layers",i.get("layers").splice(p,0,u))}a(ur(i))}},Ar=function(e){return function(t,r){t({type:"MARK_CARTO_LAYERS_AS_INSTANCIATED",payload:e.map(function(e){return e.sourceId})});var o=e.map(function(e){return r=(t=e).sourceId,o=t.sourceCartoSQL,a={layers:[{id:r,options:{sql:o}}]},n=encodeURIComponent(JSON.stringify(a)),i="https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG".replace("$MAPCONFIG",n),new Promise(function(e){fetch(i).then(function(e){return e.status>=400?(console.warn("loading of layer failed ".concat(r)),Promise.reject(),null):e.json()}).then(function(t){e({layergroupid:t.layergroupid,sourceId:r})}).catch(function(e){console.warn(e)})});var t,r,o,a,n,i});Promise.all(o.map(function(e){return e.catch(function(e){return e})})).then(function(o){var a=r().map.style.mapStyle,n=a.toJS();o.forEach(function(t){var r="https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt".replace("$LAYERGROUPID",t.layergroupid),o="".concat(t.sourceId,"-instanciated");a=a.setIn(["sources",o],Object(m.a)({type:"vector",tiles:[r]})),n.layers.forEach(function(r,n){if(r.source===t.sourceId){a=(a=a.setIn(["layers",n,"source"],o)).setIn(["layers",n,"metadata","gfw:id"],t.sourceId);var i=e.find(function(e){return e.refLayer.id===t.sourceId}).refLayer;a=pr(a,r.id,i)}})}),t(ur(a))}).catch(function(e){console.warn(e)})}},gr=function(e,t){return function(r,o){r({type:"SET_STATIC_LAYERS",payload:e}),r({type:"SET_BASEMAP_LAYERS",payload:t});var a=[].concat(sr(e),sr(t.map(function(e){return lr({},e,{isBasemap:!0})}))),n=o().map.style.mapStyle.toJS().sources,i=a.filter(function(e){return void 0!==e.gl&&void 0===n[e.id]});i.length&&r(function(e){return function(t,r){var o=r().map.style.mapStyle;e.forEach(function(e){var t=e.id,r=e.gl,a=Object(m.a)(r.source);o=o.setIn(["sources",t],a);var n=[];r.layers.forEach(function(e){var r=lr({},e,{source:t,"source-layer":t});n.push(r)});var i=Object(m.a)(n);o=o.set("layers",o.get("layers").concat(i))}),t(ur(o))}}(i));var s=a.filter(function(e){return!0===e.isCustom&&void 0===n[e.id]});s.length&&s.forEach(function(e){r(dr(e.subtype,e.id,e.url,e.data))});var l=o().map.style,c=l.mapStyle,u=c.toJS(),p=u.layers,d=u.sources,A=[];e.forEach(function(e){var t=e.id;if(void 0!==n[t]&&(void 0!==e.data&&(c=c.setIn(["sources",t,"data"],Object(m.a)(e.data))),void 0!==e.url)){var r=n[t].tiles,o=void 0!==r&&r.length>0?q()([e.url].concat(sr(r))):[e.url];c=c.setIn(["sources",t,"tiles"],Object(m.a)(o))}});for(var g=function(e){var t=p[e],r=t.source,o=d[r],n=void 0!==t.metadata&&t.metadata["gfw:id"]||r,i=a.find(function(e){return e.id===n});if(void 0===i)return t.type,"continue";var s=void 0!==o.metadata&&o.metadata["gfw:carto-sql"];if(!1!==s&&void 0!==s){var u=l.cartoLayersInstanciated.indexOf(r)>-1;return!0!==i.visible||u||A.find(function(e){return e.sourceId===r})||A.push({sourceId:r,sourceCartoSQL:s,refLayer:i}),"continue"}c=pr(c,t.id,i)},f=0;f<p.length;f++)g(f);A.length&&r(Ar(A)),r(ur(c))}},mr=r("./node_modules/@turf/bbox/index.js"),fr=r.n(mr),hr=r("./node_modules/redux-thunk/es/index.js");var yr=s.d;Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).MAP_REDUX_REMOTE_DEBUG||Object({NODE_ENV:"production",PUBLIC_URL:"/map-components/",npm_package_scripts_docz_build:"docz build",npm_package_scripts_docz_deploy:"npm run docz:build && gh-pages -d .docz/dist",npm_package_devDependencies_docz_plugin_css:"^0.11.0",npm_package_scripts_docz_dev:"docz dev",npm_package_devDependencies_docz_theme_default:"0.13.7"}).REACT_APP_MAP_REDUX_REMOTE_DEBUG;var Er=Object(s.e)(function(){},{},yr(Object(s.a)(hr.a))),wr=function(e){var t,r=Er.getState().map.tracks.data.find(function(t){return t.id===e.toString()});return Er.dispatch((t=r.geoBounds,function(e,r){var o=r(),a=Object(We.a)({bounds:[[t.minLng,t.minLat],[t.maxLng,t.maxLat]],width:o.map.viewport.viewport.width,height:o.map.viewport.viewport.height,padding:50});e(Ve(null,a.latitude,a.longitude,a.zoom))})),r.timelineBounds},br=Er,Br="ADD_TRACK",vr="UPDATE_TRACK",Cr=function(e){var t={start:1/0,end:0};return e&&e.features&&e.features.forEach(function(e){e.properties&&e.properties.coordinateProperties&&e.properties.coordinateProperties.times&&e.properties.coordinateProperties.times.length>0&&e.properties.coordinateProperties.times.forEach(function(e){e<t.start?t.start=e:e>t.end&&(t.end=e)})}),{geojson:e,timelineBounds:[t.start,t.end]}},xr=function(e){var t=fr()(e);return{minLat:t[3],minLng:t[0],maxLat:t[1],maxLng:t[2]}},Ir=function e(t){for(var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o={start:1/0,end:0},a={minLat:1/0,maxLat:-1/0,minLng:1/0,maxLng:-1/0},n=0,i=t.datetime.length;n<i;n++){var s=t.datetime[n];s<o.start?o.start=s:s>o.end&&(o.end=s);var l=t.latitude[n];l<a.minLat?a.minLat=l:l>a.maxLat&&(a.maxLat=l);var c=t.longitude[n];!0===r&&c<0&&(c+=360),c<a.minLng?a.minLng=c:c>a.maxLng&&(a.maxLng=c)}return a.maxLng-a.minLng>350&&!1===r?e(t,!0):{time:[o.start,o.end],geo:a}};var Or=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return function(t,r){var o=r().map.tracks.data;e&&e.forEach(function(e){var r,a=e.id,n=o.find(function(e){return e.id===a});void 0===n?t((r=e,function(e,t){var o=r.id,a=r.url,n=r.type,i=r.fitBoundsOnLoad,s=r.layerTemporalExtents,l=r.color,c=r.data,u=t();if(!u.map.tracks.data.find(function(e){return e.id===o})){var p={id:o,url:a,type:n,color:l,fitBoundsOnLoad:i},d=void 0!==r.data&&null!==r.data,A=void 0!==a&&null!==a&&""!==a;if(d&&(p.data=c,p.geoBounds=xr(c)),e({type:Br,payload:p}),!d&&A){var g=E(e,u);if("geojson"!==n){var m=u.map.module.token,f=de(a,m,s,{seriesgroup:o});Promise.all(f.map(function(e){return e.catch(function(e){return e})})).then(function(t){var r=Ae(t);if(r.length){var a=ge(r,["latitude","longitude","datetime","series","weight","sigma"]),n=fe(a),i=Ir(a);e({type:vr,payload:{id:o,data:he(n),geoBounds:i.geo,timelineBounds:i.time}}),e(w(g))}})}else fetch(a).then(function(e){if(e.status>=400)throw new Error(e.statusText);return e.json()}).then(function(t){var r=Cr(t),a=r.geojson,n=r.timelineBounds,s=xr(t);e({type:vr,payload:{id:o,data:a,geoBounds:s,timelineBounds:n}}),i&&wr(o)}).catch(function(e){return console.warn(e)}).finally(function(){return e(w(g))})}}})):n.color!==e.color&&t({type:vr,payload:{id:e.id,color:e.color}})}),o.forEach(function(r){e&&e.find(function(e){return e.id===r.id})||t({type:"REMOVE_TRACK",payload:{trackId:r.id}})})}},Sr=function(e,t){return function(e){return e}};function Qr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Dr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Lr(e,t,r[t])})}return e}function Lr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Rr={loaders:null,token:void 0,temporalExtent:[new Date(1970),new Date],highlightTemporalExtent:null,onViewportChange:void 0,onHover:void 0,onClick:void 0,onLoadStart:void 0,onLoadComplete:void 0,onClosePopup:void 0,onAttributionsChange:void 0},Gr=Sr("module",{loaders:d.a.arrayOf(d.a.number),token:d.a.string,temporalExtent:d.a.arrayOf(d.a.instanceOf(Date)),onViewportChange:d.a.func,onHover:d.a.func,onClick:d.a.func,onLoadStart:d.a.func,onLoadComplete:d.a.func,onClosePopup:d.a.func,onAttributionsChange:d.a.func})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Rr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MODULE":return Dr({},e,t.payload);case"SET_TEMPORAL_EXTENT":return Dr({},e,{temporalExtent:t.payload});case"SET_HIGHLIGHT_TEMPORAL_EXTENT":return Dr({},e,{highlightTemporalExtent:t.payload});case"START_LOADER":var r=null!==e.loaders?Qr(e.loaders):[];return r.push(t.payload),Dr({},e,{loaders:r});case"COMPLETE_LOADER":var o=Qr(e.loaders),a=o.findIndex(function(e){return e===t.payload});return o.splice(a,1),Dr({},e,{loaders:o});default:return e}});function Tr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){_r(e,t,r[t])})}return e}function _r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function kr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Fr={data:[]},Yr=Sr("tracks",{data:d.a.arrayOf(d.a.exact(Tr({},A,{data:d.a.object,timelineBounds:d.a.array,geoBounds:d.a.exact({minLat:d.a.number,minLng:d.a.number,maxLat:d.a.number,maxLng:d.a.number})})))})(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Fr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Br:return Tr({},e,{data:[].concat(kr(e.data),[t.payload])});case vr:var r=t.payload,o=e.data.map(function(e){return e.id!==r.id?e:Tr({},e,r)});return Tr({},e,{data:o});case"REMOVE_TRACK":var a=t.payload.trackId,n=e.data.filter(function(e){return e.id!==a});return Tr({},e,{data:n});default:return e}});function Mr(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Hr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){jr(e,t,r[t])})}return e}function jr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Jr={heatmapLayers:{},referenceTiles:[],highlightedVessels:{isEmpty:!0},highlightedClickedVessel:null};function Ur(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){Pr(e,t,r[t])})}return e}function Pr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var qr={currentVisibleTiles:[],currentLoadedTiles:[],currentToLoadTileUids:[],currentToReleaseTileUids:[]},Kr=r("./node_modules/react-map-gl/dist/es5/utils/transition/viewport-fly-to-interpolator.js"),Zr=r.n(Kr),Wr=r("./node_modules/d3-ease/src/index.js");function Vr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){zr(e,t,r[t])})}return e}function zr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Nr={transitionDuration:500,transitionInterpolator:new Zr.a,transitionEasing:Wr.a},Xr={viewport:{latitude:0,longitude:0,zoom:3,bearing:0,pitch:0,width:1e3,height:800},maxZoom:14,minZoom:1,prevZoom:3,currentTransition:null};function $r(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function eo(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){to(e,t,r[t])})}return e}function to(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ro,oo=q()(Object.keys(nr.sources).map(function(e){return nr.sources[e].attribution}).filter(function(e){return void 0!==e})),ao={mapStyle:Object(m.a)((ro=nr,ro.layers.forEach(function(e){if(void 0===e.layout&&(e.layout={}),void 0===e.paint&&(e.paint={}),e.metadata&&!0===e.metadata["gfw:temporal"]){var t=void 0===e.metadata["gfw:temporalField"]?"timestamp":e.metadata["gfw:temporalField"];e.filter=["all",[">",t,0],["<",t,999999999999]]}"visible"!==e.layout.visibility&&(e.layout.visibility="none")}),ro)),cartoLayersInstanciated:[],staticLayers:[],basemapLayers:[],attributions:oo};function no(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var io={cursor:"progress"},so=Object(s.c)({module:Gr,tracks:Yr,heatmap:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Jr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_HEATMAP_LAYERS":return Object.assign({},e,{heatmapLayers:t.payload});case Ye:var r=e.heatmapLayers,o=r[t.payload.layerId].visibleTemporalExtentsIndices;return o=q()(o.concat(t.payload.indicesAdded)),r[t.payload.layerId].visibleTemporalExtentsIndices=o,Object.assign({},e,r);case"ADD_HEATMAP_LAYER":var a=Object.assign({},e.heatmapLayers,jr({},t.payload.id,Hr({tiles:[]},t.payload)));return Object.assign({},e,{heatmapLayers:a});case"UPDATE_HEATMAP_LAYER_STYLE":var n=t.payload,i=Hr({},e.heatmapLayers[n.id],n),s=Hr({},e.heatmapLayers,jr({},n.id,i));return Hr({},e,{heatmapLayers:s});case"REMOVE_HEATMAP_LAYER":var l=Object.assign({},e.heatmapLayers);return delete l[t.payload.layerId],Object.assign({},e,{heatmapLayers:l});case ke:return Object.assign({},e,{referenceTiles:[].concat(Mr(e.referenceTiles),[t.payload])});case Me:var c=t.payload.layerId,u=t.payload.tile,p=Hr({},e.heatmapLayers[c]),d=Mr(p.tiles),A=d.findIndex(function(e){return e.uid===u.uid});-1===A?d.push(u):d=[d.slice(0,A),u,d.slice(A+1)],p.tiles=d;var g=Hr({},e.heatmapLayers,jr({},c,p));return Hr({},e,{heatmapLayers:g});case"RELEASE_HEATMAP_TILES":var m=t.payload,f=Object.keys(e.heatmapLayers),h=Hr({},e.heatmapLayers);f.forEach(function(e){var t=Hr({},h[e]);m.forEach(function(e){var r=t.tiles.findIndex(function(t){return t.uid===e});r>-1&&t.tiles.splice(r,1)})});var y=Mr(e.referenceTiles);return m.forEach(function(e){var t=y.findIndex(function(t){return t.uid===e});t>-1&&(y=[].concat(Mr(y.slice(0,t)),Mr(y.slice(t+1))))}),Hr({},e,{heatmapLayers:h,referenceTiles:y});case"UPDATE_LOADED_TILES":var E=Hr({},e.heatmapLayers);return Hr({},e,{heatmapLayers:E});case Fe:return Object.assign({},e,{highlightedVessels:t.payload});case"HIGHLIGHT_CLICKED_VESSEL":return Hr({},e,{highlightedClickedVessel:t.payload});case"CLEAR_HIGHLIGHT_CLICKED_VESSEL":return Hr({},e,{highlightedClickedVessel:null});default:return e}},heatmapTiles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:qr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CURRENTLY_VISIBLE_TILES":return Ur({},e,{currentVisibleTiles:[].concat(t.payload)});case"SET_CURRENTLY_LOADED_TILES":return Ur({},e,{currentLoadedTiles:[].concat(t.payload)});case"SET_CURRENTLY_SWAPPED_TILE_UIDS":var r=q()(e.currentToLoadTileUids.concat(t.payload.tilesToLoadUids)),o=q()(e.currentToReleaseTileUids.concat(t.payload.tilesToReleaseUids));return Ur({},e,{currentToLoadTileUids:r.filter(function(e){return-1===o.indexOf(e)}),currentToReleaseTileUids:o});case"MARK_TILES_UIDS_AS_LOADED":var a=e.currentToLoadTileUids,n=t.payload;return Ur({},e,{currentToLoadTileUids:a.filter(function(e){return-1===n.indexOf(e)})});case"RELEASE_MARKED_TILES_UIDS":return Ur({},e,{currentToReleaseTileUids:[]});default:return e}},style:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ao,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"INIT_MAP_STYLE":var r=e.mapStyle.setIn(["glyphs"],t.payload.glyphsPath);return eo({},e,{mapStyle:r});case"SET_MAP_STYLE":return eo({},e,{mapStyle:t.payload});case"SET_STATIC_LAYERS":return eo({},e,{staticLayers:t.payload});case"SET_BASEMAP_LAYERS":return eo({},e,{basemapLayers:t.payload});case"MARK_CARTO_LAYERS_AS_INSTANCIATED":return eo({},e,{cartoLayersInstanciated:[].concat($r(e.cartoLayersInstanciated),$r(t.payload))});default:return e}},viewport:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xr,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_VIEWPORT":return Vr({},e,{viewport:t.payload,canZoomIn:t.payload.zoom<e.maxZoom,canZoomOut:t.payload.zoom>e.minZoom,prevZoom:e.viewport.zoom});case"UPDATE_VIEWPORT":var r=Vr({},e.viewport,t.payload);return Vr({},e,{viewport:r,prevZoom:r.zoom});case"SET_ZOOM_INCREMENT":var o=e.viewport.zoom,a=Math.min(e.maxZoom,t.payload.zoom||o+t.payload.increment),n=Vr({},e.viewport,Nr,{zoom:a,latitude:null===t.payload.latitude?e.viewport.latitude:t.payload.latitude,longitude:null===t.payload.longitude?e.viewport.longitude:t.payload.longitude});return Vr({},e,{viewport:n,canZoomIn:a<e.maxZoom,canZoomOut:a>e.minZoom,prevZoom:e.viewport.zoom,currentTransition:k});case"SET_MOUSE_LAT_LONG":return Vr({},e,{mouseLatLong:t.payload});case"TRANSITION_END":return Vr({},e,{currentTransition:null});case"SET_NATIVE_VIEWPORT":return Vr({},e,t.payload);default:return e}},interaction:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:io,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_MAP_CURSOR":return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){no(e,t,r[t])})}return e}({},e,{cursor:t.payload});default:return e}}});function lo(e){return(lo="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function co(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function uo(e){return(uo=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function po(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ao(e,t){return(Ao=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var go=Object(s.c)({map:so});br.replaceReducer(go);var mo=u()(function(e){br.dispatch(function(e){return function(t,r){for(var o=r().map.style.mapStyle,a=o.toJS().layers,n=Math.round(e[0].getTime()/1e3),i=Math.round(e[1].getTime()/1e3),s=ee.a.getOffsetedTimeAtPrecision(e[0].getTime()),l=ee.a.getOffsetedTimeAtPrecision(e[1].getTime()),c=0;c<a.length;c++){var u=a[c];if(void 0!==u.metadata&&!0===u.metadata["gfw:temporal"]){var p=o.getIn(["layers",c,"filter"]).toJS();if(null===p)throw new Error("filter must be preset on style.json for temporal layer: ",u.id);var d=u.metadata&&"timeIndex"===u.metadata["gfw:temporalField"];p[1][2]=d?s:n,p[2][2]=d?l:i,o=o.setIn(["layers",c,"filter"],Object(m.a)(p))}}t(ur(o))}}(e)),br.dispatch(function(e){return{type:"SET_TEMPORAL_EXTENT",payload:e}}(e))},16),fo=function(e){var t;br.dispatch((t={latitude:e.center[0],longitude:e.center[1],zoom:e.zoom},function(e){e({type:"UPDATE_VIEWPORT",payload:t}),e(Le()),e(function(e,t){var r=t(),o=r.map.module.onViewportChange;if(void 0!==o){var a=r.map.viewport;void 0!==a.bounds&&o({zoom:a.viewport.zoom,center:[a.viewport.latitude,a.viewport.longitude],bounds:a.bounds,canZoomIn:a.canZoomIn,canZoomOut:a.canZoomOut,mouseLatLong:a.mouseLatLong})}})}))},ho=function(e){function t(){var e,r,o,a,n,i,s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var l=arguments.length,c=new Array(l),u=0;u<l;u++)c[u]=arguments[u];return o=this,r=!(a=(e=uo(t)).call.apply(e,[this].concat(c)))||"object"!==lo(a)&&"function"!==typeof a?po(o):a,n=po(r),s={initialized:!1,error:null,errorInfo:null},(i="state")in n?Object.defineProperty(n,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[i]=s,r}var r,o,n;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ao(e,t)}(t,a.a.Component),r=t,(o=[{key:"componentDidCatch",value:function(e,t){console.log(e,t),this.setState({error:e,errorInfo:t})}},{key:"componentDidMount",value:function(){var e;void 0!==this.props.viewport&&fo(this.props.viewport),null!==this.props.glyphsPath&&br.dispatch({type:"INIT_MAP_STYLE",payload:{glyphsPath:{glyphsPath:this.props.glyphsPath}.glyphsPath}}),void 0!==this.props.onAttributionsChange&&this.props.onAttributionsChange(br.getState().map.style.attributions),br&&void 0===br.getState().map.module.token&&br.dispatch((e={token:this.props.token,onViewportChange:this.props.onViewportChange,onHover:this.props.onHover,onClick:this.props.onClick,onLoadStart:this.props.onLoadStart,onLoadComplete:this.props.onLoadComplete,onClosePopup:this.props.onClosePopup,onAttributionsChange:this.props.onAttributionsChange},function(t){t({type:"INIT_MODULE",payload:e})})),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length&&br.dispatch(b(this.props.highlightTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&br.dispatch(gr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.tracks&&br.dispatch(Or(this.props.tracks)),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&mo(this.props.temporalExtent),this.setState({initialized:!0}),null!==this.props.heatmapLayers&&br.dispatch(Ze(this.props.heatmapLayers,this.props.loadTemporalExtent))}},{key:"componentDidUpdate",value:function(e){var t;this.props.tracks!==e.tracks&&br.dispatch(Or(this.props.tracks)),this.props.heatmapLayers!==e.heatmapLayers&&br.dispatch(Ze(this.props.heatmapLayers,this.props.loadTemporalExtent)),(null!==this.props.basemapLayers&&this.props.basemapLayers.length||null!==this.props.staticLayers&&this.props.staticLayers.length)&&br.dispatch(gr(this.props.staticLayers||[],this.props.basemapLayers||[])),null!==this.props.loadTemporalExtent&&this.props.loadTemporalExtent.length&&(null!==e.loadTemporalExtent&&e.loadTemporalExtent.length&&this.props.loadTemporalExtent[0].getTime()===e.loadTemporalExtent[0].getTime()&&this.props.loadTemporalExtent[1].getTime()===e.loadTemporalExtent[1].getTime()||br.dispatch((t=this.props.loadTemporalExtent,function(e,r){var o=r(),a=o.map.heatmap.heatmapLayers,n={};Object.keys(a).forEach(function(r){var o=a[r],i=o.header.temporalExtents,s=o.visibleTemporalExtentsIndices,l=He(t,i),c=U()(l,s);c.length&&(n[r]=c,e({type:Ye,payload:{layerId:r,indicesAdded:c}}))});var i=Object.keys(n);i.length&&e(je(i,o.map.heatmap.referenceTiles,n))}))),null!==this.props.temporalExtent&&this.props.temporalExtent.length&&(null!==e.temporalExtent&&e.temporalExtent.length&&this.props.temporalExtent[0].getTime()===e.temporalExtent[0].getTime()&&this.props.temporalExtent[1].getTime()===e.temporalExtent[1].getTime()||mo(this.props.temporalExtent)),null!==this.props.highlightTemporalExtent&&this.props.highlightTemporalExtent.length?null!==e.highlightTemporalExtent&&e.highlightTemporalExtent.length&&this.props.highlightTemporalExtent[0].getTime()===e.highlightTemporalExtent[0].getTime()&&this.props.highlightTemporalExtent[1].getTime()===e.highlightTemporalExtent[1].getTime()||br.dispatch(b(this.props.highlightTemporalExtent)):this.props.highlightTemporalExtent!==e.highlightTemporalExtent&&br.dispatch(b(this.props.highlightTemporalExtent));var r,o=br.getState().map.viewport.viewport;void 0!==this.props.viewport&&null===br.getState().map.viewport.currentTransition&&(o.latitude===this.props.viewport.center[0]&&o.longitude===this.props.viewport.center[1]&&o.zoom===this.props.viewport.zoom||(1===Math.abs(o.zoom-this.props.viewport.zoom)?br.dispatch((r=this.props.viewport.zoom,function(e){e(Ve(null,null,null,r))})):fo(this.props.viewport)))}},{key:"render",value:function(){return null!==this.state.error?(console.log(this.state.error),a.a.createElement("div",null,a.a.createElement("h2",null,"Map component crashed!"),a.a.createElement("p",{className:"red"},this.state.error&&this.state.error.toString()),a.a.createElement("div",null,"Component Stack Error Details:"),a.a.createElement("p",{className:"red"},this.state.errorInfo.componentStack))):!0!==this.state.initialized?null:a.a.createElement(l.a,{store:br},a.a.createElement(ar,this.props))}}])&&co(r.prototype,o),n&&co(r,n),t}();ho.defaultProps={token:null,glyphsPath:null,highlightTemporalExtent:null,tracks:null,hoverPopup:null,clickPopup:null,heatmapLayers:null,temporalExtent:null,loadTemporalExtent:null,basemapLayers:null,staticLayers:null,onViewportChange:function(){},onLoadStart:function(){},onLoadComplete:function(){},onClick:function(){},onHover:function(){},onAttributionsChange:function(){},onClosePopup:function(){}};var yo=ho;ho.__docgenInfo={description:"",methods:[{name:"componentDidCatch",docblock:null,modifiers:[],params:[{name:"error",type:null},{name:"errorInfo",type:null}],returns:null}],displayName:"MapModule",props:{token:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},glyphsPath:{defaultValue:{value:"null",computed:!1},type:{name:"string"},required:!1,description:""},highlightTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},tracks:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"exact",value:"import { trackTypes } from './proptypes/tracks'",computed:!0}},required:!1,description:""},hoverPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},clickPopup:{defaultValue:{value:"null",computed:!1},type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!1,description:""},heatmapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},temporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},loadTemporalExtent:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1,description:""},basemapLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},staticLayers:{defaultValue:{value:"null",computed:!1},type:{name:"arrayOf",value:{name:"shape",value:"import { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'",computed:!0}},required:!1,description:""},onViewportChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadStart:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onLoadComplete:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClick:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onHover:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onAttributionsChange:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},onClosePopup:{defaultValue:{value:"() => {}",computed:!1},type:{name:"func"},required:!1,description:""},viewport:{type:{name:"shape",value:"import { viewportTypes, popupTypes } from './proptypes/shared'",computed:!0},required:!0,description:""}}};nr.metadata["gfw:basemap-layers"];function Eo(e){return(Eo="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function wo(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}function bo(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Bo(e,t){return!t||"object"!==Eo(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function vo(e){return(vo=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Co(e,t){return(Co=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.d(t,"default",function(){return xo});var xo=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=Bo(this,vo(t).call(this,e))).layout=null,r}var r,o,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Co(e,t)}(t,a.a.Component),r=t,(o=[{key:"render",value:function(){var e=this.props,t=e.components,r=wo(e,["components"]);return a.a.createElement(n.MDXTag,{name:"wrapper",components:t},a.a.createElement(n.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),a.a.createElement(n.MDXTag,{name:"h2",components:t,props:{id:"description"}},"Description"),a.a.createElement(n.MDXTag,{name:"p",components:t},"This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:"),a.a.createElement(n.MDXTag,{name:"ul",components:t},a.a.createElement(n.MDXTag,{name:"li",components:t,parentName:"ul"},a.a.createElement(n.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5"}},"Map client")),a.a.createElement(n.MDXTag,{name:"li",components:t,parentName:"ul"},a.a.createElement(n.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3"}},"Vessel profiles")),a.a.createElement(n.MDXTag,{name:"li",components:t,parentName:"ul"},a.a.createElement(n.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2"}},"Data portal"))),a.a.createElement(n.MDXTag,{name:"h2",components:t,props:{id:"available-properties"}},"Available properties"),a.a.createElement(n.MDXTag,{name:"p",components:t},"TODO: fix crash on PropsTable docz component"),a.a.createElement(n.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),a.a.createElement(i.e,{__codesandbox:"N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkqiUrGiJkjK8Eq1QyZnWTWWoXY2Hm_To5G67mScAIAlCKRSsDsIxeeHGNjsFU83iWM1g_m6mVsSPMtjgoRg62oqTxb3qiAAlGYjJIzBAiDNKAIpgAlGCuchTMBCIjsToSqXtADc_MFwrFioIABEAPIAWXYMsi8q6koIAFoTkQVWqhSKHJEhah9EbZfKcJJsK5BbBbagzOLzXr9TguhgMgAKdbMNhidYWRh4ADMYkc6pdNE46pF2XYuImPScwJJNQEiCkKfj5gs7EYMzEkYaUyiyRdedc6BYMWo8XYMyEd3GlFSMCmL3Y4cw_VQKXzMASnKkDYTdfTztdkmriekccUZhOvSI-hwaQIAFFYMeaAAhRINdCRzrCAjtbmoTnKhTKb2-mA4TQyB0ahaHoRAVBzKZ9VmN0TXaT04AEchJCiGZJFUbAALgf0BXtTVzVguUFXNdo7Q1dhgHYTQfHkQj5QAARgIgRAGVBAWFGBSIDVBdFRY5TgAL2cAhEmxdhuAo9YogEZ5UCudoAAZ2GTGYsHafcaxmTsWFneSABZVPYAA2VT1PWMAQIAMR9aBEnk_hnEORFHUwdgAAUhH4JZmJ-OAtMRMyawsmhnAgATLnYABGPSNPkcEeOoPiAEE5nE9hI0o8gbCgdBw3YeROXEsR0pjGR2FRUSYG4YBDyEkTsXkbda2ALLoFy4IADIOvGRJ5koZpWpyvLuBG-UwFCHie1Qdp2AAfg2Nrw0jQqrkG9rUDimspBkat3zMWFyMwMAwigKZlqKkqtpSlca0TIMpRwSzMhSa8CCa2s62gmZ2D-GARjw6rMv0DIrgAbQUnAFIAJiMpZIqh5McCMyKAF0lgE4QiCuABWfLaK3VcpHughHue16mqka7drMb8QEQ5DUPQiMNC0CgQP0BgDodSijpOqZaONIjPVQriuamSiCFcGSxy-gA1eA4AXfK6PgyRUQ40WsDwijjhgY7QlOkI7CS2WkoaAAZJKb3N88AH0byS5xz31JK3OcZXBY9SQPEpVDsJppQ6aQlDZhDmYsKA3RQIMcDcPI4mVbNJUyIdDzKBmSxevgFWB3Ti0RPmf3UDj7miyIDw0BgcV0FCREBDsAX3QVGu1JT8X3KEP5pw9puk8tLoW64kupgmIQblgFWoCcfw8EkUeRAIP0251tFJW2TPC57uDPVzmYC_gOfMh2Ivh51zZolQ83XESDIN_gJYfcVy_r9vrO4CWVFoliK-b4EO-G5VjvQc-84CSCgC_euQ9II61-v9DU_8yTp1CBnN-W8haSF3iAtWfgB5cWXl9QBTwoCMy-h8ECrhK4CCgdrSiaAXj6icAbGAH8xyWCYvaeI54sDRxYQQAAEhAFIeAoCCMIGwnMnDuGukbtvFCjDYByJrrAHA5pWIn2gZRZB6AsiywgH9PCSxV6oHyFNSwlAABamM0FeyxIzWBeEVFSjUdQ8itDi4EGEpVJYnwiAvE8bAAAqjMbRtB34hDmEkcRHCoBcOjtY1WtjQ4VWUaoxKLjS5aKyJYI-2wAGe1VqvY-h815wEcVNdRNDcjBKyHwiUxBZg_wyGEzJtBGkCHNpQTsUThSSOjnkpunpz71LQkM1CZTnHxVPurLohDpmcWXqhautcmmzIiF0SQA9lmQPirxFsswll1zSp8CuLoDlNIylJWYVxFnZC2e_MwBV4pzLDDAckkoq63LrpGG5Nc657QSsYkeeAx6LxgNdSJ7CekxKkVmCS89x4wEjJGWgEjoXR0KtwYqwB1jPJYH5aIWVIyzHJIkbpmQ0X6GRZC8lsT9CcnfBYXFtgtIEEJYrAgZLemUpRdE2lNB6UPLhkZf5uyqkhJgLo_RGonqRAaAlXxs405DgkpGNAnwCiSrgSKDFWKcVrP_HillhLVwtIlXorVBALm3VrOAmIBBQiYCuGqyIGrzUOMRHoAQ4M0argsFPWcLwHURWdQqlImr3XAy9ajDSH0LAY0iE6-VrqpUihwPGogMbayPJrO-TaZhyDgLgHYL6DClHdGwKBdAdhiY4HXNQV02Kayf1oGlRtH06ExHiGFbIVxjpQEVpmiwGQhDlnYKgA2UBB0wgECOuVFkrjjoSJmvNNZPgbhoNqLg9gCV4EjMO4USx90CDnZQQqbbay8UoMoqeKQ90zoPdO2dqALIMtrBMWwOB2XCSyFa2Nj7hRXCPVOod97j3PsoIB0DJ6p3ZosCuiwa760bq4Awialqz2rkeOwSyEB64j36JiDI5VEg8WBdQQYIQnGJQJNEcqwwDY5D8HMYIgQLIzOROwVCk46DTkw5IdgSUgXlowHsZo76wnspCEacBc4IghASKMTjMEpwZAKPFdtzRkWEhwLvUp9jyIAEJRoTSOpXdAGHrUWFNeG6Vso5XqsVYOOAWmP26ZwPp7Vq54O1iw5YXUepVwQE0-JnTTnTxJBmHgOAbloj4iMxJRdUALN_qZfi1lu7fW1g7f4xF56_0WCxL1KLMWJhXBC25wrkXouxeA7G3z_ndThJJewAJopzZiqyOcLomW4Ovo-n1_K6msvBe0256ggm0QQA8OENR9g_Czm6PF3IEZIAunM5JSzBJXNhfGzcfo03ylzfcGkSMzyzzftoMtHAYzkn_miJNg7aiBveYsEF9Kcz2BdXKvq08Y4LuIs5Nd2Y135H_giNsYII0JImb1mZ5LsbUtGoy5t177jS1MN_fliw4O6BldG2FnHqBasfWoDZkUR2Ft4-2-nUppO3Uagp2kYntZqB8N-CDLbpSxuoDZ6wDIzOLDUHsCInYVOuc7dQML2I2wBd7FQB0zs36RRi9CzTnA1AFfoCVwQWXGvOnoHXLAWgKvuea8N2OZhPWWeS6norNySCZgm4l8LygduHe69QBN_bM3EqM4iuViXXups--MX75nsHY3PaG69kb1O7j4FESIoRHLqVcqzEtxLn3uoB7VzYIRSexGp4pTQHAsBZwTHhx9RHO7TtjgEfn0RKfUV8stTn-PefhGN85cXggArrUvc4JpzLLnxdq8fkxBpEC7AZ4nVnznqv4_j-fr_UpZeUgV_YAAH038PtvpTm3fyn-wGfCQ5978_ZLGI5A2mr7oOvvAA3K-1mr-l6MKOy6-I8fVGAQTxXOfPwftfkftvuwKDGjPPm5kvpPivlvpvqASjANhYFHtxBpulOfoUrksfqNIlk_oyj9oajXqatkiUiPgvqUhgXAH3h9APlhgAHKKaTaEZHD-AkbkCUblLR6D5oH45q48pQot5YEJaz5fboFF4t6l534b55ZvpkYIrgqkpiEwqt48Hx58E0pKHIF8YwhwAiI0BWi2CuAeCwAWgujcIWi6FUhajfCUD6HoAWjMRoYWjspOGX5MjWohZfquGY7truIQBdrhToBlboiW797_IfRYajIwTgIr6Bax6j7t51LL4rIn5JYbYpb4HMqEHVK0C1IXzQHnLn6REzA36GIqGr767d4t5UFZrrDeaIaZg6hcC_4_oDgwCsBKqUFpE-b8YUGxHcFx7kE5LT6jStHtEE5DG4HfYcQ4AEGv5EFDGkFuYUHVFwacERGJFRFT59GLFhZFE36CH9hdBjG54bHFFT6TEv6Eqmq5HDI347EnF5FnEr6lEDGl4VGKHoqaHWpYZQHfT8aAHsDRFNLbG75lE4C_H7EpFn5gkQlT4SHl4P6wGgmvGAGQnYHCHZ5gmolwlr4V6rgXEZFpbGrv4-J-Lf7NGhL3Hx7YkwEgFgEvHxGlKwm0lwFgGIHsBfHhH8ZTxdIfH6DbHn48noCVFKEHGZ4iFglCkinRzwn36TFvZv5Y6jEdFvG8nN6ilQ5jqz7b5W4GbKlhZSl8kl64n4g6nv6CnvHqnRzeq_YcoCgA4HH6lq6GlWn6A2lniWD2nnRmlY4Wlqm8pKGgyoy2menHjnRLZOnx4ukBnWnBkelensmTF4HTGzFXHZEwBtKa7Sn6D_6SmWkxl0rsmbTUFaFqFp6iDWoKmiGunp7omn4SmvFlk96ylSGZYKlW6RnkFGlTCamZ4-n5Z6lHEqlNniEmlInmlgkjmBkKQowhkJmOlDkE7dnumsLzn9l_rVkFk0BBmznxlhmFQRmLm8HLlxmrn7mZZJkEggqwDyHZk0BUldk1m96ZbFk1EoHdG-CJ5d7dkClgkd4F5N5blTBQkNmMkJ4N7J53kkwmnylD7v6dngWd6QXdniR1lQDjlY6DltEqn_nflPktmmk74TmvG4XIVPkrl2n7mCFW4WAIWkWF7kUzlzlUXrmxqFFflkVAU7nMUOnxY0WHHYW7EcUMVcWnmUUA4XldHpEpmZGv7sr15IUiX8FKEPmIUAVQUrFvnUEwj9rdDSEx79FgX0WAXKVxKHmCW57CUmXqHopSUI6ElI6178JWVQWqXGUaVFleZrH8YeZTAWjlRqrdC-X5jQDoWBAda0A5BoC0ACCoDxBJDDgEjdDMRlpTpYYjDdB-B86JVrpSzdAhoFCHE06JXYC2AxCzg_T04OhoBTFdBLB6KIBaGmqVUprSjugFUVW6bsC6i0HmwACaXB6aewRwHqMVnAdgLAYAYAFwNAWhnsEw-VnqcVCQKI-qOQ9aWhfmeo2Glk7sHVc4tqgJLIcA9GOU7A4V7gewHg6gWwOuY6IgIQ5gUsmQiQq4oqvQM6-gZOPZtV_452XhgOYyvl7mVVFZXJWOENkNUNyZ30u8rgKQX8FVpqdgns-w-QrkIwmw5g6ahVaAIJm25-wVS2MOq2eYXUmWZ2f2ANQO4cwNH14YHKmQxiLwrEqFQhCQ-JdlBlip-W9NX1oNpeX89qrkS2hNAto1GQ3qGFvNfQDN31bxAawti2o0YtrVHwkaO50tf6fNNA8tQ1otYJwN6akl-lH5b2Q1mAp0rg41Al5ANICVmpkU6MViBY-I1tRiJirEVuCp0EEwKiHgzmOtBAetVi_lqtFqaamMGKo0kUl5yZXQMxslhKHtLN1AZilikQqlRtUd7JcGOlisXNsa1moNMqRA9mLqjmNOWdoNudg2m2r5qxNYr5KmAg500hVZ2mza_4R6YpE6kxl616lAt6HhrhOAR67JXQ9qsVl0WOsYsg_FSYUMYgBC9Rro5AmQJ12QBmlYS9C930Ba_gcAtBPoVU_AA84gwAI9WQY9oG0JH6XdN9I6OAEQwkM4t6nI8gy470-Wc9aYToSGUw36Ow7A54t92oY4FC_aFYu4897-iY-9haR9J9fAgg2QF9V9tAj9woJ6ZCGY-gQD2wn9GC39H020cYF5Xl3x_GIw1A7QUwLdj1iQ76FVrGHE7BainA5gq9yG6AqGWYWV3QgQwQjBaQ591qk9fQ5gGD_4HafhIiARBxaIjIc0Wpp-VwPNpDacXcRGcy1UcyjUVujABCwAOApje--MJDdYkgWjXAGQ39r6m0K6JaoOC-_8ra6whOVwSq_8F-b9mavlXjg4PjJ1swiKvl_8gOtg4oAAjqELhtkJmhQYE-nD489dfLqGAJGN42_GPVgOaMijkhE5yJmnsVPskygoXCojOuk5k9k5UyE_MJGKU7_EU4k92eU6k9U4kBk1k0Ezk2gJ_DxDAD09qFkPSiUy5e0x3Ckzk2k907U305UwM5LEMyM2M8U-sNGaZfoB07M10z03U_ADgMs-4IiGs7QOM-sMyU0rs5U3Mwc4s0cw04itc3_G_Jc02pfofivrc0c_cwszM_U0xoijSa_IXB8xYFhr0OrEQDfusMMHzgIPbjMMgr8_vsC5GEKCixU_ABs6uiLtsMi6i9Mzi-i6E5iw7hE5mpVsVrFmi74wUJmnTq1X7vS-NDxEy_LvrtrmyxNOQJy2bk6EbhFIc6Uuy_y8yDbtLryxy5K7zhzqKzgOK5y0Ho9r7vNmkDKxKzWELrbjAES47iSz48qw8vFM42WjMXrHzB0e4zWJ46o5OusDS9VqVg6xMxBUpTZTs26x40MQuhOiU-zkiw7v60uusAWtLga6G46zWM0zcz63a1M4lpmls16zQNG5mq8_cAm3gV_EAT8zm3Lt9ay-lDqhREoJK5rjy6WxdMABWzq1y52ObsbjW5iuW5y1LqLq21ivW4LjzkG-o2W3Wyq3tsHodhqxFOdG28O5Ky7m7ti4O7W_WyumLLrPrIbOa0wgHMoPTGHGrPqkzGoBHNoFHBzLHBomXEKAOj0GaLQMJBxEsMSkkPqFwOgLACMHlfEpsq3MXNAq8KgLsPkt-_nHgBNNsHgr-5UpABypQDeG0BgP0tvJ6IkmhMDaksYhB0bpe67jAOeKgPNnXHYBJIhorPyHBRYJi0IIiEWmPagKwDgC7G5LbKKOeNqAEgABrMfOy6iWB2zajng3gBIADisBRV1HpSdA9HLHSU9glgtsrsTHjHXHbHnHLH-oPHfHAnwnhU5NmkVHCstH9HtB_mds54tBssbN8omAfOU8Mwr0XE8O71_9isAA6niOA6wGYlekR9xrE_E0-F0MxLQBaMB9ZxEN52-Lg1ezAG5xMB515_2uG857h_h6cyssR8l7F3gPF8IP2t4WOiffJAQilUwoFB9GaKdPaUEYyFOsMKiHFcePJFPHEFAHV6-FOnhFcAABwKS9dTpRBYBJSavKQKRTpd1uC-HhSjqnauFlsZTsCmMX5ZDeRXI6yLcP2oRLBFHyTGdydOyigNBJTmwNDmKsczS0QFTLq5o7KJRTAfbEe3swD3tdBIpDtKDtvYeKx4cEfnJPuJAvtdjvt5VaZgf0r_KruiqSzSwEBywKxKwqpcBDtJeArjA5JpSU1f4_qA3A4UEzHRCuBKuqBIq94XQkxcCWdcDP2UCv0FDLSvqXG7rQdmJwcmb_45K_awfwdVp97rASPT0YHP32kWEs8IemvcSru8wGx3f6rbtBwMyhy_GgIYQsyRzsxgQQTaxCfmy2zOCWB9U2yALIfEKhxYguGVSgK3ZYS0M3co8mxmyWzWx2wOxOyMfuwSRa869682zXYQMhKuCgztApBgAjCIC_HmFT7tAozxQS9WtS8CamwWxWw2z2yOzOyuzOCy-7uMyYJvzFLHzHtsx6Dq-nyis5yDj5xvwQcQ-3eo9rxuMSTnpcD0uohv3HNwAxNxMDyZp9BQDN-TaziZp-_0uUDXW3WZpUBTyjqKst-MseNZzD8ug9MB9pCUCaC0NLAk1mYIEpsQJQXZuKv_O9OAt_P7MAuks4DjrlwZAQtGgvAi9Vq6iNuBFGs5NeBXqxSZ_BzZ_AK59An1wF_AQi-McDXuRFL75Jd4FfQuFXy1jkRRUcbN5pvAb7rAm-L_epv3xSBt8O-8TRYB42gDwAxwD4Pvn4xxRvB94RA2fjWD-D5AjCIrR5kyVy4lNGQ9LS_oEAEBMt_ILwOyKgKOYsD-c5kaADFX350CqmL1HpquGn4YtTaERZRkG36DlBASECXwMozezspMsoHWgcf1KS8C2BmWLDJAFOgZBZY8QRkHYFsBSYWAVGOKgIGSA1VMasQfEIqHxAQ4bBdga2voJiqGEJ4kABcDgM2xYZKgP0YwdnDMGXU5momeTOhSvbUCJ4rAIIXYEjC6hRQt_AwQIHZJYYGqyQmKkYKgAmCrgmULICkGFBcDQY2MJYEZBRh10_07gwwXEOH6j8pQMGV9HiwsDnxpwzfSQauB4xChoqQgzQernqE65As0WG8JZHpZv8Y2H0CfnADvDH1Gu3A2nAMKnRTk-k9LQ_gf1P5H9z-2gm_tjm7JwBzYCsMYQwNqKRN2-MAPzl32QGepVEfOI4e_zF77QYBDoUVK83r5dEUB0_dAf41sBTZYAdwmNiuyeFTBRUoLBAdnCQE1gPhwgmfrOEwHnDO-CTdYPVm2qMd2A6nNjgbwaB2AJgtGdsJgByABCVBI4TGq9UoE_CaB_wzNIrFgBSge08w8EscKbQLhbq2QSyHUj6DwB2h5LaQt4JyjkCB-q4WITkM5H0i1h0I9Ac0PyiSjjKdIxVuMPdYAVWR7IroL0PP7PN8uvI5_p8OIHWohRuQ0URsO1EFBJRl3ZkBwJEjMDQgV_HQauivQAZ6RMIlIFSOGAjAr4gQKBvSPlFXCPBTiW4Z6MZEWBqh9cVYYaOEFii-hjom_rYHsB5AIgWMf0fcKbSkD5-9I-tEv035rYlggfGAKvzgDr9TQ_gGKpH0lE99-RTo9YEP1TGLCnWvfKsTdQaFi9aYWfUODn0LjYI8q6AAAae2L7QIwBTcCASAmgHaxRUWLZBG8PPTdiCAzA4sDvztRBpLR1ouERcMRE1h_UzwJWguNYFLiERvgwEcOJr7hNUEEIuNJjE3F8DV0kaEMaILP4-NthH_VAE2K_4m9jeaEUhFHAoQugBAXYtXsANPiZRqALoKUF-y1AhdbkP7P8TezqRPdmRUoYUMBOpG3V0k7cQWAACl3YMiIiAKCIDhBPB8ySDq4isCigZOAAaWcC2xLYfVc8KKFtgNBaCtsSyKKB6pyddQlkW2EJ0YkBI3I8SUxuxGfSCIkJOsAtDhwNbcThYoORREwnGSJQsIAkyiB6SGI5ZEOQsT0BQTz65JP0MEtZKUk0CySlMMweVmwL0mdtdgGEr2NFQyDocpJxiGScvEojspvqhiJmp7WoB4ccgpk1WGh0sHaSKk5EAhPkk9BfQIOoqf6nm32Iqou6ZbDbsDkt6gi4ANvPiGeDlQ-iYgfONpA-B87r0oJzgTScKB5qgwQpV-G_D6hrB0ERAEUTYDMgypGwGQx4GjFMD_6NBtQdgXONoxyCu1OMoOJTOliSrsAteCgmAjiLu6nV0ASI_jOFXMlHwUp3QOCT8Dup6IeoMwWIPFWSALVkh6FBqW9mtrgJ3R_UojGYNaKKxZqNYGbqFPOJFRVwsUwnikKRSpE22UAY5tcN9HdBNSSjboF9nulUDfhz0lWsEWx4zAbpZbe6YjzMAioa-Z4L6IpLSgnSLmF0KKeHEt6oQcs-aMGTLFmA5Yjkj3bKTSLWR5TwZaM7_GEnkklJFJxUijojIJmOS14ikpHpWU0wGYMC1M7jFPXMDkzzenBd6rLX0BtIhOQgZBD51ZnYhMsVPNCctCFl_8xWAgqMJGFunFR7px4SWH7wOIZjsg7JGmgDIuhyzfe-PAPqhGqCIAUgvMmYMWLeo18MCN-OVGoCOScyaA3Mw2avkLEWzsAPTSwERPsCkTyJSUSidRNon0TGJtBZiaxPYm6hOJhUAANRRROCWHVbPEAhkEy0oAso5seGlhypIwAfPMX0Go6R9KZOwRSZ-ici4tVwWHBOfsKPwSRi5tpJ8OLLfCrgGZBMwWiviVbChzwkoXdAUzXhtJ6qNMv9MXLCl6TFJN-B6YrBFBtydg5s5mOwHDkQAlgqE5wCPO2BtJNKEeQMWgBjn4zzeaUaOVAFjnm8NJlqdoFXJW4zB-55xTgnz3MCbzt5gspuiDPil7Ij5rhMxDa3CmuElgowVAB0Tm7noAm32a-kDQFq-VM0A3DOvGLhkg01aQCzGIArQDAKrgoC4GgqmAXj8-geY0dKAommWSPqKCxJpQAhxyQf5mDMZCV2USE5AFa8v4aOBh5kKQWs3TNOgqelpSq0VwRKY9KmkMLnMEU2KKDJR6oRN0RJPAI_KcxQzUyiJNtpjnsmg11GvlLubWGEVOVvqkYKRQ41IX6SB26UW1EsDXHTzlR98HoDkNRDX9a2q4WRahAMnSzogGi6gE6KNDaKwkBaWMdfyUWXIZgxk9RuoqOoD9rF0QDkbYr0UxVpFFgYxbMGMlmK7qmizxVPR0V2L9FqQxxXaycmp1UArkxdtOyMVJ1d0KdKaK5Lp61EO2erKNt2zsqyKhJ87ZBNkqbqcLo-QItdnzCLCoBAJlqJxf9gEU05lFvCpHM0ruAgzIwX0d8I-Pl5oQiFMACSSki8nfigBnMKpaKlokNA5O6IgJAbwkjtBplsy_zPMvPCax9xKPJ2HJ1476g3IiQo7rbHPDsdeO_stKO0G2W2xdl-yoidr2OWnLLAGy2ATX0uV8IGgQnPhMdw-U7LnYNyw5fcrM6WBzlry95Z8tBU_K9lByu5ScsBVPLnhLyywElFFBydzYuoJKPxySGLLdeSKlFWioxVwrgRNfewAaDcg2xeO5EvFVRPOXEq9lZKu2KivRVUShxzylHh2nRwTwVUumObsIukWyLpCZAxoLQRmW2w5lNsDrtfCFJXBdMV3B4aYU2V8RP4IoTXERhVTCKP4L8o6p2AyAPhpFkPe0p_EFBpQXQYwUZpdkBx7kJKtolHmkE_FZB0Ayq49DkAkhCltVOQYmitjMwqNigAAEmAAurHV8gW2L6piDHgDVMweQMUHYBlZ9VksQUBWLSX5cBV2K5FRSsZWihxVokfXEwvSCZBIqDqh8DKshGaZQFgy9XE_21xKyPVa2J_CWpcZ65FcUPdDLUV55jhJGmq6cA-FlXV8Uea6YVg6qhn-qdVF0SMGqooX_ZeVCa_lSmJpWkrzw5KhlRiozWSr21rqwtQhhr5d00oBUy1eupR7-qfOtai1vuuQF0z91BFOfIeskn1qDcQrC3JWtMzVq7Kl65RNeubY7q66e4llXxGZYWo_cUM7lWkqWDbrdVG61wluqppY9kefEFrlAB9jAMJIz6_8D-rwh-4hsCpGDXBt2CallZ62aQmfObVWq-IwVBDaPT_mtU0NmmYGl4FZ6WccNT-fDdfPfIYa14-XdNFcGBrZ1IgU6CWqOlBgcaBatqQNJgCWD8a1aa4oTTAFJm1hqNCHdjQLRk1VpuN7gYBXKjk1q04gqAFTUTjerKbMYuocIGpojoabgF-mwYdagcKKwr4BADpLpBaoR0LNGZaIDZvLFN1ru4vSZRutYQoUVUywulMOvPRJq51Vy35VCqOUwr_ZmaLSJms7BlZuyFS9zfKru515JmT5KGe5W7Kfy5-8wK4CCo-VfK-EEKv5dCoeWRaJVWaz8h62srll4tjwxLbouEkO5_1w60dcBsMWEbpeWQcDZjzNUnr3spG4HKWt1YNbsW962HI-ukKIay1c7fVg7lFmMbNofSvdih0kCeTykYy6OAwAgnQd7-YSRaTUH7RmIXOwoM6u5N8r2EMgcQNZBaFzj1jXwtkiKjABuKoRPS2IUut9VEmSAiin204i9r-ZeTdJyGhnBOw-2DLhld2f7fdvsDmwAkuvKibbCh0NA3ZtscxLqANA0TaC9gNToCo-26BIAKQGaMiMayojRV54SpXVsuWywGg54FzjcqBVYqgtlO6nbToJW1K-InE7UElHJWM6adiQunfKHZ2c67Y3O5nbVq_WAMgtKOtHbRMx3Oxsd9OuTpLv1Do6Zd-oWFaLvhVbKgt6nGHfSs50UraCIneXSKuDlOwPZuKg3SztFQuykotBZwDMoaA9UjltBbUOcut2277djusztqEt0vKgttBTnQ0FlhC6qdPO5FcCr90B6g9tsYXbzuZUa6FVY4d7SqikXNa0lE6vhYmpTEU6Q9tOpdeVoAUnD41Ge64j9rwFwA3toNMpQEoTWA7ycE7MpZ-vj1TBi6rVKGb5QpIwAANfC9PY5SnXZaWsbkDnVzpz28689MWuzXhA71rrjgCakvY8V-3l7ZQ8i6orItr0EA_cDe2-bX2ZqmIRwCPHiIF30AaKhaQaI1QG3cXrjT97NSdOwCGrX6u9SOHvTXj70RRLliu5XVjoi2rgoty602mqkP00BasgmpWkAcsUSbas6aGDNPtkVz7hkC-iva1Sr0z6M9a-jfX3kb2EqUeGS1iOnSsQqp00D-ndE_tfzYG06lASMMmzdZUGCDbm9XZgb4ikHElImFVIQfSzEHCUL-q4G7rt2WAHddEr3dAdn3pkntsweA0vsr0r6a9qAYtvXvQNk6xdt-zGElMoDywi0C4ewJGgHUn7hNF-iTawayjsH0l8S3fZGCh0w7eO1EhHUjvf3S7P9lgY_XOJ0PialachhLQoaZ6c8aNKqBTZ0VEUtaINMMlJe1vwXPSx1ANKDVMFYDfQJI22rns5mkI-GwYoMHw9djQDmwPFKRhVFZvALJG4jQOLAOkasWZHXABR6ICjCk0WBcQ6AV1nAv_kC0qjEwWrjAEbywL-ttNOo2rU2CN5xVXYAoDjFG6F6awsixg2YgoPn6ojgtRw8wh-jhxnDQaETeHBoNdqPNKPMWMfSmlJ70ocVDYzXVT3d62tu6hg-nAOFgACAbkHwBJHBhLAZyER86gvEiCihG85xtKKDG2NsAzUatBo3gCWBvG-c8tLo8nij7vkoWTocIN0FgCnHHqOQAjIQFExgB2U2IkcJgD7DtT3AIa1TCwEur0hGQtxiIMUT1gEAjtAgM6hJD20Lg4Ah247Y-DxMnGzjWAH41_D-MC0yTUAAJKgBu23VWIvtfoFgFfQvD7jRAR48niJMkn-wEAfbRScoAinHwXgG4A8aeP0mCuOxtWiybZMcnLB3J8U3yZr4QnCTVJ5wC1zzBwpjjBJ6U1LX4y_GPjEdOAIaduMwm9TxJrXIaadV3G5TgpxvGaZnLsALTjJq0w4htPxA3Co0hQQQDAQsgqAsVFZGxk4x0IsQI_NwocamA_ARQeAFzvAB-qWn5aE0dU63hNOnHzj2plHunImDNy-ICWX01mfZNCBbtkYWU3GKFOEACztxnw7aw-jJnXW7Z1M-mZ3Jjd9geAWBX2dLMEAezq4DKqiAXQaguzqIb1FOglDjnyog5wsTOYI1F7e9NcrPRHt4NR6Y9yKsfc_1Nq6npTBpwM74L_T2mjzzp2rD4agODGFtgcZsWhGW2W90O3k1XuMvPZQdZQaE-JFhJwk0CBJugRFm1Tgj0Q4zPsKAJABOoFAP26WMOBaEAsZA7t-Eh0BNAgDRNJ408E6pIFQvRNdJmwLAGYlFApAPAH2mbP2jgsT9hQPk0uNit4P2APZXssifYBxW6gnd2ofZbRPsPsBaLiOhi1RKYssWrlFsc8GRK90cWzl7knibjv4mQ7zDaOiifxZ14BIbwevNyCJaWAe9uDbkJFdjskuehdkaJ6i1MA96699e54QhKb1uwW9v8VvaaMvDxloAhOOYogHfEN7YWYg5Fhy6gCcuRA74ce-g1MGWUirXYnvMy-cqCtKdTLNsH3ZrtmUhWor5lo3ZFa97rK6DrOqCEiuInw7BLCl0UGRMdjo7sVGOw7rxxd2LKXYooLK8xeRWsXcr-VsibRKKv2ASrZ3NK6KkuU8X6LdV8PXt0RV0W-LeVmK3xEuXO80-THbq0btGtKc6r_l9K5wzJKVQoZckiLLS0LAFR_NWWiKBFfispXSt0W_c6uGdYlZvjOSh5FwoT2UL75i15-ZVEy12sNzcVpjglb2vLrbsNWuVQob-5QUoZvm_lHsaRxAaAjneg43Nc3USRt1V2G7N_k2Zjhvs11kIzTSRnBGg66MkjZVGFmzzCzCUqAL3JRs2XxZQ2EEY2rSi-08AYYLnlSkYq7kzyDpfjJFF64KQsbUwHjCTdizk2TMlN0StTfErnQ6bDNsIt6f4zXKDlooPqksEC7s4QzRGMOkXl2n1x-wlAHoXRjaBnUBGUmdE2GoZI21YACNcgKSMhbckh6sQI0HBJ1uShkgCIeDoILlt1S5cCVNW9bTob2lHZP7RMz_JFAu2jk1AIC7aQybwmLcwpe0oJg8hbAfh1ATm9s23JMULVSB0VDxk9sZc6OiF321NXZTZBQyYKM410Dtr5Bw7v14c2JQztlLzIcE6WbDYgBpQFIyoTgHWFSA42cSkhPANXYgChzQ5T-YKfXd_hbrO7TSUGBACBOoFIwWINpD7wVn49aNVavMCAWHsQJR7nYbWYH2D6IAmykfRRr9MLpRw0AOJ_vN5S4IbTsRReR9pkKIzYS-I8QD9okACDdADpsNlkKtMt5r9zAI_W7VoUCBxA8g5aFuTbY03TBsq1tSatNQZrjB7St_HwYlXCpBi0G1qDmZ9RoA4YUh6PGy8wtTn7yI-9VLMUGOLEY25tg9oOvA7Gq9k-6hdeeGMGNUgNQMT4IMZxljHnVr7Ko2--YAft5jz5cEpsnLfkhAae7X44GTvffIG2rAIWoiaLfFtMRJbtqaW-MFlviyFbStk6ircYyuA_7wD0NbGpmBa2zBZtvW1oRvTG3ozmji2wlDQwrIGpg0u28kAdvyh0TLtriJMJr62ADhut5IODa4dz3FZX2Ge7_FccL2g-IfJsjhh8Gr3NSTt48NY7erWyCA-DyWqjFBhQwKhEkexzAEccqNFVBAT260alhg0L04TyJ16licxO4n41Bx-bZUbx3x5gGDAFoTweSyo0KMfJ4g4yeVPsn1T_J3U4kg8YLp3-RB-jfZQpyA-B8zgBg-qdZzCIIsqpykOqKvlZF7KS-dQtuu0GAUZ9iJIkDaRcIDpud4xFDLevcYwAHcnoOE6E5cPOHaU5mNIqw7GrUbcN2ALcbxvw3LeEQEWUzbruuXiO-zlx_vFuOS9TokMl57A6_zo35Z89yWMvyXtWXI-txgF4rJ-cM0DnI9iF_j3WDKg05mk7IOpHlAyj0AkfRuQIGbmEoZulUO-P4sFsULyoyL9AGyK8UqjhqFWxSpFXJcRK4p0DmvtNQpfgjtnbSUGD6uAC3Y748gOl94uKAD2L0NfPwOXpsUbyxXIFbqMy_pejbSaOQL7NK-8XuY4h564qApBNko8_uOWMxElASB8vKXEkLoDs4gSgxuXWcIExq74ifO_nHK6pVL0Ummvv8d8Wp1iGdeic62lr-qRAlRvD44XksOfH6_96L2Q-oLioV9kDfAuQ3BMyPo6_xfmvCoIBD14y81cJAYs0VJVIhb0Q-dKIi3a1zliWCLc_-6MhulwQSEDCcAzg5zPFTTc0AM3IoLN4DhgqF0sMhQq8m0CEQwgv7T7JaTQLrv9gPxUwXeIhf1uxpdQ5byt0SlTcDu63MQXFli5xetysQNbrO-nGHeEvbHRZ0l9kOUYSRq307wcJm_gD5SoAy7md4kFqc3GSSTL-Kphu3ehG936bg9_W6PdLv93q7kUOe53JW4RxA73UO0mvj7AXj7QWINQCcLdpUXwH3QBaAFDw1OIs5NVDkPKBD2T3b7uECJFroWB5oqD1oOEBscQ15IWkaKnh7_RYdX30VHDMtTvfe1yOENEV_q_BGjQ-0BdXTpDS1dOvKAurqAPR-GJwpgiWefimx_xcce9XErxj_EFI7v446RL27NxkkyY1ggPwcJd4uPtHAzBmAA-gPChNjpmjC1VT64KWecf-KoqYUIIhXlcOLnJllK_XKaSE8MA6su6ccydWjQg6ML2ezw_4oKkTPskeIG0nRnuqH1Kswun-j0FwT6HU4_iPdXoavIB3IVQsNa8ufdB5P5gBqf4CkzQs4xSmGqpRaOBDuP3_Fbmvl6ye_PXPnjwN_x7gaxoXPLjiN8G8QBRA0AjgSfqe6fciRAno0Mj7W5a8jvIaUnj6B14idme73Z-jmhV7zrkm9KhXgrCh_I-DeghaULz2Z98_f5QYhHmgH-5_j7AXX03zr--5EiCvIaJbv9LRHG9Be6sPRQkCFVPxMZ5g5gJL_dQS8wgsAZVThj1IW_LU12sjFkKqm6DpeTQ4sjD2bSkYXe4gBdSTP14o_xAhvcmTPAEIyr7z0K6gGh3AG2AQBvof3NTKN6JccYEJtI9AJ9qsp5gZP0Z8THLcK_g_Zvwo4b1AH4qHes0-dfKppkE-wAdXInll0Rx-nKMQCTPmACz649ivNSTH4G6bT6_beBvlHub7u6WfavhPfPtn5Z1enJOt3c33tDe7XhUf38x33Sqd79Sw2_-jX4UERY8A08Kqiy4j_lgVJGuR72X3uvWW6iW_Z71v_z2NsC_C_KvOpiBPr4ECG-0o-Fwi8RcjD2_PH2XgH36g992ivfxF433OAkicu9f4fw32GCUC-q4_k_BPykCT9-qw_qf4i-CQjU0_-K5P8X5T8uOFf2gUQdLGVyhrL8xwqLxVyqMJ4-CKjENOv0cz1H3xCv-8fqCS-xnZAhvS2doI6LN-Q15oOPyKur-hoWBYFSv4US8jeSIgnw3qljpZFyvw7dQqK6iaKCE43hUXKfg35H4lGy5scWcLv32lg1q-5v_fwf5N5Uan_b3QQ6_yr4SB3-Z_XQOf4inaCL_zwy_z2XDuJXr_mOW_jv5Z-e_kb4H-_FPt6xoA-IPaF-kPhf7GYk9vK7dQMAVAB9-aFFJ7nOnTglh_QOWLvIpyhXn05oOddsc5qAZIL-7_uOHndT9eZ7k35Y4yAeP4Q0tdLT5LylQlKItqzMtp4jASNiuiQ8Q9FiCOav8LojUC0AJwKbO3-CI7Guv8Ec4QILtiBoo8n0hXAiIIkGlCB-GQCDTRC30rx7KMWHvIF-gUavKA_ALoHh5nyCXrgGoAKDv04eO2qszBZi0RPsAQe8gcIGte4BA4GKBiQPM6iopqFrxtIogV4hEB0gYsBsuECLIHQa4Thc53OlAA87XOoQd_i420QejYE2q4rDYYBtztDZMaYMlw4J2ezr845YA8qtjoALtvZ6yyjnpZyWBjqo86lBVstkExBcJHkGFBgJMUGakpQTqpDYWGC4GcC6wMkG2uEQJiCwAbSIIFTYjgYkAUG2AWIGBBkgX4G_wMgRRrpQKgdw7TCvsDBAvS69nhqtq09J0EJmddLcayM8QF4GKC7vNrwJW1nv_y1B0soDINB7XhkHmYdpnrBtIuoOaJOOYwaoHpwkoCIHYaCASoyRQegbMHq49wS0H8Y2XpIDPBdtCJA4oBYFlDpQpQc_RZw7dpSBjQoVO0B5CmWOsFGqIwZVBW4pgeYGEBTQdYHygq3u1xwhCQBaBAhnAsM6zBdwS8Hoe6IT05mBBASviou2ISQG4hA7hB76CUAESHhAFhPBbh-pITcEO-4frXQYhtIU0j0hGQTiHtAeISyGhUXIZPzDOmlkRK262lixz-y7JB4Bmg2wJQyTCsIfvKVwCIYXTIhWAZwGpBWOIKHYewoVIGTBYoRKE2BlcESH3BPIRIEZA5IcCFuBVIQQI0hpoZAjmhVgYyHihzIdaEug0ocKD2hVvvyGZYqoRKDqhvDpqEF0A_okDlwV6LqF_6mmJCFle7jtV5ayQLrV72OhhAuBtemgUL7fuNfFpAM0aUnAD9BvbnwAVe6wbaS9OHodhBehYGD6G2BuHlmJtBTgdHSLKOgXhJY4oqNtLkm5YYMHiQ_FMWFcy0gWWHkiE8F9jfBcjq6I5h_aPL58e2gROGcQege0AGB3Yflj6hHATgHUhGjPlhChnoRMHeh2ADYEAeLYfKBthiQFnL8UfYf2gDhrgVbi10FvryGeOM4W6Lkma9oyBSe4Ya4CRhWOEwFIhqIba7Vhu4QeH1hR4Y2EnhTIUR5ZitAGYTEhTgeIG3B9wQLaD23wY77wBAXrhpW4W4SBFuhmIXSENhLtlmJWhljhWiBhVCOAToRoYfXRhhaoRqEfk54HzhZg0jgEK_ecoNI7tS3QlmAr8coCAg6aMYXbRIQfoIiGbYuEUBEbBf6CaEWBooT6GkR7QEJEFoMALaEUhV4VREvhjoShGuhqTu6EyRxAVBG-hMEfKCKRxhC3w4KykQhFqRSERAhOhnAgKG7h_FGBEih-kYqaGRNABB4mRykZkAsAeQNeEVe2wVAC7BnjniEB8nkSFydgEAL5EQB_WNpF4BFXk5FERloX6HGRuGEpEuEQgBDgURfkZDQBRQUaoEhRCkalGmRaIOZFZRFQiATtAAAMQM2Q_rWD2R-EY5F1hzkdIFJRRkYVHCRykWZGZRXxtlEQ0uUebAj2BUWFFdRykT1HlRcBJFCPhnBNzTURk_LK5w4p3k5xNeqHsO7d2sLhmFBuPjnV4finvs167eakaJztRaUdl61RFgOJGGh3Tg1HxRTUYlFyRyUdl57RaHue6y4s0cKBTRtEZtg_hf4VpQXoWoRvRFiokX-jnRO4VdFY4CURBHER0Ee5FZi_0RkAqRzob1FnmGkQIC2RIIZtgqh9EVGEyKsfKdCAxsaF9EMR3mFuF_cKzlrAqi6zs5jrB1keMGlBt0dgAC2xgesGyqoqNpAxiMLHlFHA4UsmLzAx-pMEBBPfEsB-8-ht8ZhGYzCDZE2nWuDZA2ODoCSw2MniRq_y0UjZYJyUQVUEpB6Nvc6Y2fwSEBdgC5hnIM-nAFMAnA8ANNDM2T3nxA3wmTuhpxByiOnJIQR7n_wPgcTphHO-2Ecm4Kq-cq2gLSEUAyAeA-8CwHc0vsf7Gak9gHJZK6dVkpYqWfVGpbOAHPI_YXE-cnjz-uEkH7xeY9PqW5BxWcJZyhxuvPJY_-eVpHGqWIlmGCFiBiqbR2xiIILxiQlxj3zRResfbFVxT3N2hpQUMNjBGQDEXgTqxtsfhFpy-cuBGOx6AOAQzyp2PnITO0wZGA3O16DUFE8yHgvIXQkIeTyakA8R2HLYWEe3bpBzzuVDcxGgQ4BhxA1mRLOAylkXGxxK_I_YqMXlj5YuWWcCOr48K0FvF-xWcJ64QRG8l-azyf-s_wDxtWBXERQn8ZlgCqrrlnBAGZ4eF4zsm2HiF5CvbFmgDYvYS1GWylYSljbx2cXvERxh8VHExxJcdEpW480OkLNAsMYZIosUwLRjK84QoWj0MpcUcANS2AIiB7wCgu6IMukNJPH_g4sueoWg_FJ8GsJFXowlHB9CVDRXSMVHUFAybqqNCoOdCdXKY-LyIiyKwMsZDS2e-QczACJUIfMCWcnQOQliJWOKtA2xTCQ3YIk7AP5STR1qPLEmB7KJXKEBlvGeAmJdIYDh-QIuIiiOxOIaNwQRY8e-RTOqMldawAeLrACuGyMpq5dgRJrkj-QMABzE-ckYDQwCA_ie8hBJwsYDbdawNkEZu2YNqLE9aiQdLwpBisfDLKxVCkNihJ4SYiBBJ87i3JIo2Sfii5JA0UEEg2btovH5gwoDkmBJpSZ45cAT8ViBpQRSQEkcx4WE_GbyjkPrEvxkQCLJYgecvrEDYhiTFI9xA_n3GouXAEPFmeXSfbGoRc1tI6XGEAf0nMJbGAu5Io9MCV4GKcSW77WqXDq2b5Y63EhCbJNoljjfxTqKeb5YYyfrHh8v8LqFcAtWLT7MJKLCdSzxQQV5hzJoqJvK9yw8f94dOXcf-DGJN0SYHmJTUYDi6Al2pGBfJ5xA4wC2LiZdY5YHiZ3oC2hOmiKuwaIqso2wwZjAbpkMznTyqgG0Fvpng26CKCUAxzoMx20WQGnC-IBdCqh2S-cgWr1xiIMSkv0AAIrtY61tsmioqEI4B8S0fjrDiyYMLQjP838Qynpw5SHkLlQ0TLWLfxzKdTxspysPIAVCr5FylBK1AHjqtY7WG04JQmAK1iI6_9A0SRgaEj1QMsAaGABDB3KWqmCI1RO9QZOHHgYFxhgwF9ABIxJmlCdW-8dlY1WbFuJaWAs_uAjz-H_oxzEqtBJZDvKqLham8pGqQzGrB5gGQ5UpNIEigqiV6HziEu01K_hxAJKUlD2pFmk6nEmqsgtRmBAfrizlJsaM-H74l-HkDsAYgBJB6QvXFJ4D0_4B-yxUkYMUBCkhVF34NSx0HgI5AvqiKnoAEagD5xpisC8g1mAPozEToVuLT4WAxgfX6P20iVAlCy-aUihCxxaeVzwASablg3hECAbJtAi0s_x-8RwdunII9yfxS9p4eEWSqyl2ri7Do67kK7GIV6A2lSwZgdekvkMKczF2OgKKcx-EtALKm9yZiivhRJiSbEm6oQxpOrrm_ehVZVWOVvnH1WhVoirFWgutqB7mVwMwmoQN0mUl3Ss9r2kmijzumkRAN-IOmsuKGbMBoZv8GWxEptqWSkrMFKbQAEZf6Q4rXOFGVPgEZ0WLKA0gaUARkqICQBPGMZK-MxlqymLGWzhwl6a3JAZMIGDzhsPGU0jMZBGauDP0WNEignMPEF-nZAP6WdLbJH0FhyGJENn9IX4_zpkmbYMDgzRhBNlprFzpqOOSnKZBuJJnHBTcgUncZJKXPHqZOyQwZl6Gqa6l9WvFhHHVWfmEJY2wols7repvqe8h7hf6B_65WQcpxINA3urLi4ZpKbPZ_8h6bunvRVuFhiv-fqd0BNJ38bF5u0HAYyndApjh_bAOYkC1K2MOQB4DJAsqY9TUADqRWl-wAmG5ANAhYSjznO9KS6acusWSPa9p8gNB4fpSmXarFAVuMMk2WDkddHfx4ES1n6xTsbLjDxrvh9ACq7QHziwSVCIf5FZIoqDAeW8ABqk0BkAbXRzJ4NFlDHY3QFlk1U8VHLbYikwCEAzIeQLjRnQNquSgJUQoEkCFC5gOHK3hlBN-6aJ3Cfkm4utMRDEnOK6SWnJhLjllmakHWZhmtZvXg95o23cTpEERZoX9k-h38cM4TZ9sc0GY-Q2ZdGw54MQyEGRgbhB5bRXAMM5g5r4RDmFeoqLMFpQKyTPEyy9Qd8GLxzntZkDJqOeZgvIDoQICFehiZ4F1JUYFs4LxAQbMEA-k6awH10e2cgaOU0zlQqIpi8gNgfANeHeipCAOfWk4AjaU-kzoz2PM7dq0GpECf4OWB3rBJsUg_ALBTxE0gAZrWtslYYz3EiBFgMwMkBd-AJAEK_EZ2fUDWAZgmYKzSuQIrA5ALANnaLwyQOVnBmq0ivT6proHYLgh1AAlR4irggJQjhOQDJ7P2t1KubP6YGa_pBabqXVZIZ-Ct8xNIghhnqcG3FkFpTWIVunnf6ZWuPpZsharcYLJoBOtxfM-bNnkLcpjFmz8ZRhJ_IN54JDfq2AN4EbnVc3QAVCcgFrsjb7O5sDMnUcXWv9iQ2SsXpluJYOBEGY2TOdRzaxE_NjJnZusBp55gtgtUnFJgjOECReL3m959gmWUaFzWLSREnc58ts6rTx10quB0ZCuRhmeOTSU75yuc-C57D5fcaDB_8jns7HQ4CAesCvoCpCfklJA8k27SEsitpB-JW-UEkhJm-a0ln5lBA4zaximdRk_esYn95H4b2HiJQObtuxG9yVOVfnWoN-YDJuecAGzEZeSwcoxfYL-SPkOxbnoPET2WEb_m9aE8SgWws2iXKR2U2BTUG2ZuLn_w3poBV2AkFkQBzE35n6NvG8xqgfcly2OAALGSFQserkrmwRgknaZNNLplXOySVDkI2KsYPlqxtruEGRBwRqUEZSn2QkFu2WIFQWGF2hQCl9xhNjXzE5TSGYhyoFmZLHwE2sc1RZZd3hgUjSnzKdINyqyXZkC5xaSCKtZygcjGOe2xJQVv5vaRUKP5C0UmEzBIRYrLRF42oNmYBRiaMljZqLqelWc-PMM7Dx3wbIUvkbZJpjfBPfPNFJFV7ijwSwZesrBQu-gFrxmFprq1l1x_DgEj5AFVPF4bZdgCUWpebgqr47ATWXxDGqC-kOEVeHRaUVk02eGXqqu7AEpDzQOFqnLFFxJgW5mMZeggR6BoMAsVQATReoUjJWOVcn2x4EZkVO22IDkWvxwwSMAL6mlI3QlkrmkNjRmZduOCV2zdrXYGFBFM3at268bsneBzjjfh92EAYEWTZLppCHfxjSVABUF3dvUWRFT8QPFQyKYRtFjFiARBFeOmYQTkYuqxSAS9p7MjXwU5F-T4XU5ZwfTk4lrqnMnPhbOXQWuxsFBCFvOWcf36Yah6RgBvgp3iCZ3pyiCrlPgTSQ1LGxdgO7mlUqIKYK3e0Be8jNRpGfilHemWJvbjokkZsFUMGwFsC7Ab2PvYkuAgHzg5AnsLKlLAoefiDHg7gDiDdAeIolSIFymYbG38eGJtQNY7AIJxCcq0JsDAM8pYoJu5D1AaXRAtEiJzhcT8TKm2pzgPKnOOVBUiXW0iReMV12PpTV5bRsWU4RSpYLrTLvY-crKmel7WEtiC-F6tGUel8qf6VuxwXvxjh5Ngs0AKlXYVp4iuu-UIx0gvWUgU5AlsWKU2F1mQ4VUZlmfU6YMthfXBVln6XaoPSagD0xYZlabon6Jf6O2Tv43wbmVkFb0h1C6k9ZY2V9ZkVOV6YU9ZZKajlSBbIkKJvaZZxYZJtN-7WZ05cWXKZOmHkC7odKQCUfwSZSSmxl1MURjMBVxTsnlU29tcV_JtrlzltIiKQ2GOeR5akLyF3NFOX2F65dfTAFqShnqOl36auX2ZeGVPhvljhRczwFziQmoS50-VLluai2ozCqSuPC-braZ7CAIOgBAB4DVAKsPRBT0YAN7DVAuklDx4yMwKobUiH2nMgQcf4k6yrksAMxnUsY4MLgSg0hrdTCgSUF0z3INYIlmmqrgJmjaQxBMfD24PQuKARgb9BxU0VjNCUhuQ0RJhrCVDyG5ZkWoCEUS_aHFbpIpODqt4i3qrSPrjHlblqDqlqL5rNaio6KtqBXKrssRLnKBlUZUkSQ1lMAC65Ktbpuy5ytZV2wtlcRKWV7AGpy6gUek5XnKblR5XGVQUijKiVOwBxUxY9cEaYQhOYvHHixpsiA4N87tuF5zoHaIkCHoGAFcBKQr5AqSnxzDnPgZV1AEqw2KT-NlWoAuVWz7fZrci343pcAv4AZ2RHFbgt-C-Ie52ALHvli1VuXrO6lIVAMKA6QlKS15ZuE5U1XaKdVc-5tVwgAICdVNGd1VHMGtr1VVC_VS1VZuZCB1UryY1bt5zVGtlMXqum2AqQiuVVZeTNV41UNULV2xvqx7VgvKGolVS6VkDomN6YPbio6JrXbomS3Nqja-b6PaQPVP1DdX2kNPunEKk71bVLFQ91TxiQ5_1cwbHAF1R9UVeQuSeUBxwuaeXGB0hAVVLCQvJXA7aYMPdUpOhiC9U8YUmo4yEprCDkg7aMJeFXMOwQVMAtmcKGhXeAQ9oTXUAr6LDWrgWRtEBXAPhqDDJgTflka2aTNTOT9cJRlZqM1cRiObma3NezV81sTsuiyqWGOAytEl2nmAUEJtgIDl-_bvXAY-wUmOC6gOUDxXbAO2pZDCg8taqr48j7F2B-2kmDEbieomROJRVtUseLP4jalcDxV7iIlWdCyVdMWi1-hTmL7JFgPTVxVfEnbVc1pRuF4WgttZwL9caRrZoB1IkD7WFGVwP7Ve1gdQRqBipdlhwV2EkA4ljkKcfjxJxY4C9UmkTxYwCyxCJG8Vt27BTXw_VoRvunF1vxdsTF1d1S9UpOkxKjXE2qdbQDomacSd7fVoNb9XKO3dBgC11GNcDXF1lDFCW0YDdQTzAGQaOXWRlISs8U5iqRvLjRAkxCvzT1VmpTnRAzdVr4Kkh1MVDz1A3FZpz1U9VvWD1IZv3XWoWHFAAm-INZLAK0l-pgBj1g9tpCG1sNgOUUl0shVQ51jNqd4n1c4KHISQyYEZDrVopVjHc079ZPWUAC9bOA71wDWzV8p79SvUF0a9RVQb1u9YLUpAYDfkaFGlObOCEx2sRgQ3sruIrDnZtIOiZyCfhO-TpVCDQUYVU_lJvXB1c4MVDJg2MEpBfYt9anb31YnrpT0a0aRQqq1wpHjVxGWtXLXRAN8ZLCOSX4c-VMybavypVcoBHXUZO6NceC0cg8VOgr8ztSujisU0O2rq1c8vDjGBI6oBqAZhLqKhCpG_IsXex08nfxxGj_JrhiFf8HsKqVk_ILHj2tELx5rwbpWBpSxMSXOkKkoCrjz7pJwSTxtsZPE57xO5mJMQMal5e7GDupeS6bvxtWALF_xgCeWW2NmWLEas85jfrgwYT8RgR8I_gBxVpQAvAkUuxT-SITs8eTdfrpNOSJk1wAzqehTQ4LqamVz4JRZK65ANTcIlm-VZGU1ZNt8YXQ_6-uEnHW0Q9ZlhdNnYBzz41rjerU7aAja4DIEH0HyrexVwGZVOVpAftbC5ApG01wA2TSAT0yKzZU3BN0aYfUbufEIOplWsVQ6raNfCuqpjMApNSXCJBVQyVSC_GBLXZ2dqrXzHwstfLU6ObBHJjhUltAHYLmtUtojdet6Uca4KtZf-CEKLjITjllKPLnDUprLvGRUVrGbg2Rg0hSQpy2e_EsB2SqmPACJZ5yUs2bYHGfFSUcLqLg38ZMwIJmy5r-HuhlsSKYDiLpAfq4DnFeAhxVXVc1kpHuA2Ta410V7gPLBLZzFS9TOYmQPS2wAjLdNHDY6UAZgstqABxUEUUniE35YQueTl0t6tWy2pAhshxUTxFIBK161oBPxSoOUxpX5Y4-8mAZK0erZcnF1xraFlDyWbma2xo7QBlSN4VrR9AD-giFED2t7AAgTCtbtotlrIPLdfBpQ3FUMR8VNAGcKCVBQKq38tirbfH9FJNXEZdanDaM08N2tfw1htOSEK18OsaHyr8UAqg5XmVbsrLgDNB1pj7HpmPpWJEyvFRJVrwqrZ61MVXTJKKQ0K_MjV3GrPBzwrZ6JsLxxGvNY23omsuJAlHetdEUpqVGZBpWt0BzZcXQ1dPid6m0qaVcS5p6ITS0qiTLTNFPM5aXYBVp7ADWmv1JDrlmgMI6IWllpXihSYVoo6ew0zpzDmZnzp7-HJl0A51ZLDztc1nJJU1ROB3WttNGg40UK4bZLDBVnueM0A-ytZ4YIcXWnG2s8X7fxTptmPpm2D6gutm3ESK2Xm14x0NIW0T-Z9a4DZquYtQArZBWDmI7aaHY-1I1cRitndtsrQD4KkSTQhwpNnYIDVSwBFURULgqqFcHg1E6QKHCZSKNekXQSuayXXpAoZvJJAr3BdB9tf4OpVaqQ7YO1RZ4mVjHY13EOTmiOfOOrU_WOSEOqiKAWimLeVjlcZUvW5WvyqydFycuzg8KxnxDzEJSFDKDFQxC8arFfhjo1m5wGW7ajE6tT5xKFYyF43wuJUvxjaQWns1TGFpboZ0lIT-B5358vhbi7ed2wOVWmyGnSiHnF7PA0kGZRYUcTSdpJlF1DEc5cihls_jQuFrwaOd2WaYVnWjxvBa8ad6yKUpDkhnF6tSO2a-MDel2xda8GQhzRGeH9Dq1FXcKCXkIHZDRgdQ-sp0kSubRE2wdfUc_z-dD5WTnh-C6NV3s82Xl21npBRaEQiNULOq1VIy2B_Y5AvRHpxtE1nWdWUcC3TkiEuCpAZj-ddgOs2bd8Xb41_V5wTF0rd5XYjyTEsihLZSd-XRl3HdQTYTHQV95k-IjIpxN9qPEVkq-YnsP4ptrQIADjNTOQ-SFPDaIWFt93hgAUMvA4WGFgD2zwOFgJI4Wd4OD0zw2FsXDRMd4LJIUVdpHC2Et7fmxW0V6rVy1etLFdSwqtetaj2_a4ldfCSVRPUyLYyVHf2iCYsUDJUeWclaXqCt2RfdpmcxKgEj-y_Fjjq3chlrpLSQ68HgJJQ-whpVuShCPJWTFulfdrKVg7apV8dA7QJ0g64kjpUQ6bhk3oCY2oIZV8I54JzrTW-caZUa9tsFr069RefnEuVWbUb2WAuvV7KhWCyvzrgd5Khb1W9cOglYuVZlUv5USbPY5XCW-vYZXu9SofYBe90Vm1Y18bynlrgq0eiJZOww-ecqh9YKt8oR9zgFH3OALlUFaO9JvYxbhWQqnJxp941tBkuVSnYb3a9lven1UqiygX059A1mb329dsBX0r-wtrcphaDymRILqrHOjragiOiJbDFFgO0Dm9RfU73US9ff8rhalgM32UqhlbRLt9Afcn3B9KPL33G9THLwa29PfdX2F98_b5mpWH1mr0scNsKnyr9xfQv3CWbvPKDb92vaboV9i_SJZV9zXamr8chlRf1H9y_df0t9d_Yf0uVsfflpycVhsRKt9Qeon3ngmqfKDv94fV_0_9kff_0uVUOtr3USQA_H0gDhlb_1R91Kjv3QDoKh_3w6x3G7KgDf_ebAQcxgKYDmARgK-17C5YbAAWysQNnD-U64HlTYi9pD7BHA-wERgVoIeXiCSOqKI959IAlIdIHAQPuCaKCrQmCAED7APRDFhPoBYDAAczLRCps5ZA4DhOHdXQN7AYJkcBMDR0uwCEDwg1LCiDFEBIMotewlYCy2yg4O70OWYHfabActgP6-AEoN3BEoT1F0zhCBg5dm8tDKGoOw12gwh2xoZA6Pld-q0n_zmDbDgYPnZtGHI4MYtDpVTqBRQLyBmAKjazQekxA8uEeD8ANLL5kkdqEq78ewo5w2F4Ti3gVqzqkkNpsw5tHY02MsYZn6ALeK5KU5uQ-WTcUMdo86qA5Az5xgEmzKkNPkYrFwWty-dvVT_ZTmZDzdk2Q6wNcUl7ns0jw3ZGUNwoJ5BAFVkwwyJgrtQdFkPE2IhD0PE2jADUU0ApQ13WF0tQ9RyblLycryTNo7cYEbD8AGLUmA4Q-2ptIv2rontqrguYBFEq2TgDhDJw-oOZAcoBRCOikg_4EIdG0p4WqDQgyIPPDwAPHlSgtEBtmOAB1Z1gbkeAkWCgjoSHRBGuP3fll4CDw78NiDrw8OBAtbg6tIf2VCIia4KiIxoN_D2g_nZwA8QziA2AYeWJimDfg0oQo07oH0PJDRIMNIhDLql8NqDSIy8PoCtED3x2Abg6tkwgGANxEEAzUp3ClZ51OY6WDAg98OPDmg-INdMQI7oN_op2V4OmDPg-cAK9lI30i4jTw2IPjCso80MHCRaHNl8eKcbQz4YK0iOBCkM-lNQzUI8FUXj461FwyyDt1QYMajUo9qPjUbkCMLcj2OIaPcYnYDyOpe-oLLBAq4cu6OWQq2eLaxYRGDiLmA12RVRuQC4PDSu4uinogqDzg-w3AABGbRCejtYNbQEZttriCn44VImlQAypfmBY0PIxo4i94Q3yDPofLKo1CkZw3gI80v8Xax4CIIyNWLVmPdjjmR2momzNDxI5miaIRjYSOGIewnqNhItgCGN108OEyV5ig9LegGtnYA2N-gljQynAjw1aNU6KhI8SN_5mmCUVZd5JXZQbtZDlu25SPfW1hegfI4raBtV1Ldo207uYo6QMuEnLic4q2QiYWDAnWoksBI4vGOFCLGRj02dlFUdX_jiLUOPdjI480NotNcq2PrjHY6xVzZewv2M1yo4wrBToE4yMLT6LMQkBtIzGexnwtd2FxnzAMmK7jMZAtjAktMeArmMGh0zNC0Jpa6cWOm1q4PFTYTeE-QTyZtLQK0wAjLQDlFjfOPlwaZIvQwrIZ_gczhhtDLRT09t7yYMZsBban_wk9eE0cP4D3w8WGWau_BCP-Uyk9nCXUNwxtmJU1tG8iJAmGqBKdgyQGxjl-dwwQPOjfw2O63atEKJPM9_rhDSrS_LTyN-8Filqo5AOnhVJ0Qq0oRMJjdgBGyugcEt0VoigY9YwejlbUcAbZlk2IPaDUwjMIn00NA1zZwioz95XoVohs432WYDVROTdLa-O22epR82LUdiviIveq0pvL9gZbcAypxgg5KN_DAIwQBAj0E1CPZwbFBCPtV7Y4dXUjJoLCPA98I6oUSjrI9KMvUtEMqSVT2wNk2xokYGKmsQ8QIVBZesIXmK1Sjo6KQfsrglABmg6AMkBMjstS-MbZj7MxgiYcmCT7VTEo7DXWTt1JmNZjtFGNNGTm05xgZAaQF7kOdqg9WNRDLIBpNLjiKHZOcTmrXFOJAswtMZoTlkOjWwAbYxuO7aQ5GNNcT56FhwnTpbkDMLhX4XZQ9lZ5gq1iTycfk2eqrFBYAGY305K1jk2M5OBoz9k_7xem-40_mEzBmOdMPQE7njPayTFP94EUnNKbTGBDQ__WIdygcTM_TQLgzNwk_IzwnFdE3mE26K9Fbj1VtvLV1octDFdy0sV7EwpURt1qJC7KtO6aq3itYswIDetl9ksDUzJMBO5_TAM5pQKkOsxW4wAl9l-3nqmpK_Usz7DWzPXFp5SOJQz49iM0UTjs5LB7hrkybL9o8U8eAI1oMzBOdTqE8MLAz3-pDNk95bc9Mck0k9PT6T5PZLAKTJw7C0UDlw1JjTYpGOELaTZetFNaDMo3LbpSnoyIjfq2ZYoJ5zpjgVMjg4VNtPE-hIHPCbABdB0VZzQ09fC2TesHCNDFkNAXMHAuCS3O9TeU8igQjisl0AI0I1diB2A7aWUmlzQQLN3lz4JpWM1Tg0_VO0QgxXsJmImuOlDTTvYKkT_2sQGdDQlZgqtLOChUF4P6DVIycMHDAQ0NLyOIQ8Sg8Y0tSOA8l5VHOAnTEQzWOTQ0Q4BPOYA8WEg9TCIDz5l6PxtV3LzpKfrhpQdGl0RaN_hjEl6NoGk4XaZUJUJ2HN0vQJ0nNANiEYrjVaABBXjT4BaBvg0CabLdjwLcoWlq4LcLPwCB6m0b4ApxBQuPEcLMLMdFd4F8Xlshcv4EtD2LnZmI8AOXQvLOJrpMkvGi3KQt92g8Y3FwAEAcwGYTJ7ixPGdkcswtLdy8YrnCupxG0i5E3cBJD8LA8bOT8D7ORF0VFtI3kNhIhI2OP1UQczY3TC_0wlMvtObqYzwCSi8eUQtunS6kqLCixAjWLX4l0JXjAo0IvCt380MwL6S3V4uIgv2ky1Qs1pXKViY_c5QDZw94-tOWDFtubHSguGKiBW4WHDpNwoZevQsmuai7t2JdUhQSXbOrc3gLZLtHVjjrdG2VJ4zj96W8TzjmUp1o6TqLn4u_zyiHEyFLjkxCOW1kNI0tXAdS79oFLzbQhMYAdQ8qrP89JPn4jFqS1wu_w7-f4Gzkzyekp4CjAenGzZRLkrk3olDlzyrZtS93M_zXS40uMB7rXNaxMGLcKS9LFguCL8US880MrzwC-TNmYhXvNCqLky2oFfSe_MSOFe_XecWALmuBMt8xA-T2GmyRy3UMXLvoynFBYgDj_MhZsaPsvwghy32N9L1HLLgbZz9H8vUcAy8lnlFLmej3Qt5Q4uOqT7iZul8xL0RsveL-S2uPNTcE45NgTGbYivwAAKxclY4Cy1ZiLFHftY2MruoyhOFeQM120orWONW4sTWwzMvorNIKLnY4FE3hMXtBaZRBMjDCuGMcT2TRykWdzS8QqUrwve5MgLiPWCvgjCq9CvHLSq_iJkIPEPw1bjMK1StALZHfxQA-8K0rMfT2K4iiFedM4I29dXs6Ys-zbK0Ys2rBK_4tErTUx1OdYzbfktwzWOIKsyKoGaB0pic_fv3r90He11PVGmf4HIZAk8JPX-e04V74dEkxr7npkk6m14tXGdyv_j1LWxO8FCar2oW4xzcO3skgSmEm_aQvQMuFpIK4SvYg_GSUuk8-S9svS5BGiuh4DCc4BMXDLua4KWCNtExAvA45Xd7W0ZDjpNmCEK3ogql7oFpB1KbaUcA40FVKtKoQJw92uXe60sAvu0EI9GanZQdAlS5lNw8YWKTLI3iNiDC87ku9T5w9bR1LPI--J0IFVFgCJAAkJCMjVVwzkCNLVY2lZvT5gInPVreS54lgL7Dcgs7o0SeOrFpDXWxQpibvV_4e9GOoH3ngtWDB1nrmy3gKNCT8V2EiGxuefmAZE-eHBFEVC7cRbEws2huOLK-HnMSQxsxO5Eb1C-cR8JUYMPjsLbbJRv4bK-AIuzk_ZRz6SlxJZRrLh6G-bLoLn5ZtiyKic85iMbSRA2WKaoBJ0t4CCBLsNidZgO2uCDXQBSCKwQxf5Qrr6HH2uf4g62WOXU984VSjrdgOd15gnsNOvFwFVHBLzrsmKYNLrc88evZzw07kBcANAxPBGuDm1WiJUim3OYJmz85rlReSm_UusuiLY5t3WR_v3on9u_ef2H9qnePqNLrFdmgz9unemQDLQxSwYbW91v3pZtz_ev3OA71lhgiMFwG1LabNtiEJdgeYHBKSYcmF2GRDtY6zRCknHvAbCgt5bIvno4C2Z1A2hLlhhuDQdHLaPsp-Fev1zws5JvVxWGzpm4bg24cOKzCakJupyai-IG_ruLKBUYGc1tpA8bewWooQIbk1CtAUwscTU6DzQ0vWeOGiwivNDiea_h55ZlbX35xGeabSFu627oL8YAUQlT3YX9hqXhCq0mqM5knDFquXZQVMuHZZ81p2joUDA9i5KEmWF2FPLhq9mwxDzQyQMwAxI2qtqNcWoktNDQFDwn9YN5jcXENmmB_lsb-YU_i5d-uHVtl6vDY1s0FTiYtsSdzEHzgrbXdgjzrYpnfsbbJYGyFsRQ5fX30l96aiXn7WHXa9g0r-UIWptrxw4IOmomZBUM94dgP5R3eQOx3XsDa9BOy2KwS6YLNAzEDMijFkeeA4zz7kycPlZl7FLB6bpg1Lu3VTNGkB_bb2yhTxAG01tMi9z444KSFDc9oNSDPeDIO_OTWBaBVG5aKKReDVRRPO3z7aoehkxcPMyNGwj1A4M-tXgzQxn142y9Mfr1WyyDC7ECFmR7CiQ_6TJDmjQBsQLIG10PQLLaK43j5uCyjykLBC2Mi4bpC0_FnzOrl2BpLNO4wvWo5G6bPOYpC4Di-drcrItOZbtvAI--xG73ZqLti0MN7bDi1RsHbYo1-KEjPe3sA5QMO-Dtfb_e0xuqBYO4quj7xqhPuKr_7bEPqBcO4kui7LeMzgj76MaPtnzSUCVsumQPaCs4Rf0EvuardQ8zhXo6AOfso7zy7vupt3NPvuH7UrYyVOdusWQ7bTZ84lT7rdpc0DducQDQLe0EO-XvoAle5LRqLaUM_v4iVuEzv5YTXRB0Xb1vYP3FagKqP2Mq4_c7od92W8OGRrdK7nO87RSxDsH7-IsN30do3dQRzJLbu_N_b3-wA4D1fMXABZcxI6AdpQte2bNl7HHhXtjL1_NsSfzzByAdcHnYvxt_osilbhTb_B3iAsHQh2c0EKwOKNtur_m-OOCHJB-AdPlD-3bMfq8UPJvfD4oMzL-TviishwSfOGobzhisp7AbrsACymMg1gtFP_DAwrRCbqYdKYMAHX8MdSuEdhyiMbZ1hxkDJAzh_lTrU_---PDIpPjVOw1p67QhwA54IKBh141MLj2KhkrYCoYisPEfRK08lzzU9YSJ_GvjBAm5LvrCzlMC2wEK4kDobogctyrZPh9YLgTQFC7ZFpnKe74wECsXIc4blCyXsKFjapkH52tR3ADeotxqU5wJOi-WTdHX7sEbiymR5Ivvk7Bx_PUbTeyRlElARQ0cqqZ2Z8uuq4w1juz2uZaLTLBmWDK2nlbttW44Njy6Msh2Na85ApLVhzYeJABS6UioZgW3TuWMH-R0W7dsy42sNLOS9sv4kT8Q-PQAuEslsRC9uEWhHH2IHeAnHcIzRut0u-C8d-NEI7U0iEvq-Paplnx6m3FDcDtU4-cH-UGKo7pbt8fbSzPpMUiHzmSTXpm5w7u6xCPxzQIL6vR5thjHcPP2i8rfEzai3b7-CYfUi2bKP6ZHgmLWbEn8J4I0VHlx2c0e2OIf0dQRYzoII1tZ7Zodxbox1PiZH4oAyCnQ6JzKe0nEsngUfQN-ZkeEFAgcqfuY2p2ORquDBcCb3br4FHlRKY1G_ZhABdF37w0Bsok5uHT9jwOKliLAFSYAMNuODEFhh5ov8OLwCacentDu_aWnRwNhKVc5IEFTKnq8SfaDAGwQnVwAyRzACpHMVK6fjU0R3vAjux9RAiyn8AFLyJnFkCZiZH1hfnv-AeHFQBGO5-Uwsr4GZ_KfuLQYnMcCA1PZqeGCtJ0cEiFD8UomakbPcHKc9eVo26N2laauDrVjBTSemHZwpWe34OiZbNP4tgMmdKB-YbURfV6x-WfKncp1Lyjn9-B2WfBX2AZgiuRZ1bYm5dlDglJU7GDMj8zewE6dBnMQCGdnZqlczTdwJPtbSmnRGN978Qpsd35j8ihiaDLMlg6_JHAJwM-fGUA2LlsVSnEFcOPe1Cao1vYLJ0rCj-rNDesbOOm4Y6eoHQ6WP2CqwDA1TA-Y-hSSwEOIcQDA_QGjHto7pwkc5NwRLOfjtWhG9hVSFjjYBoXLA3BfFnnqHYB_8G_KhcveA4DhftB0pegUPU3g0qdDnS5wqfK2wQzBdSYrRXwGyeWZ0fXpni55meGwKi4WfwXggpljzQg56yd8XVZ9TmSXph_We1njZx_mZxrZ6NDtnHPRYbOA7JEJMLnvF9JcCjVJ1oRVSP9meDUOwZxPDHn7UvkC-I4CEcAWtmkyJieXcAIlmIXL2yD6Sl6VEdkMjaIHUi22wUwyDkA4nONDoUEF-hTFHPxg9R3nHp6hthnhJdpcWXlZzqdDnnBAqTxXK54WDjn6w1EcxHDwa9LQNQs-mVHUOClN1brqAG2C2nU0kSAYtvl4bLpQ95_LYmDR2RkBOn6NJ3qj7nV737pXP0NqfVnCimWz0cPl4lm12jNoUUdXHp8NdDnr-677RivpzOf108yzVUZHI1zD1DBBV0sATXF0FNetXT4TGeRn8Z0sc5nGAJkdTFXZZAEYNaQXuqrbf_BWdx8Vy2tgqMdbHoGvXUl9ld_8Q2LDVJnZV4YuXXiR-dcf2YN-ke5nyp5Y1aHqvdKAx7XDBSACAClIqI37yp23RRz5gHnkwDBWgn1J9V222SlXKZz3m1YEbDsC4SYN4_4DoXmEo3yGDoJ-vUuAFNT2l06G33MXHvh9UfJD3R6nvsBgG-ljAbs3AsdFmLjcNtPx4q-tvA3KZ6Dcenhi7GdQ3JtjDdDn1RewBFHlx-zcU0L8n_F4ClR_bUE03ZN0dInfBzQXwlonKArF7BPhjfLX0JUtgf57C6bRwHc2SmJ43cnAgP_9OB_BR4HuKxzj4HKAvbeEH8B2Xq5HZl6oEdFuRytl6XP8ZhmiFhXhouh3X4hotkH_kSTdh1RngSxU3Hp06gEX0SojPdAIBEkcXX61-xuy4xlJncJH2d2DefhIRJDTXX1t6yfh4Dyc9hbXAmwWso3aN43hLXrJ0ganlsm5v0BWzN43jGSXd_DzvYrV35cEHwWzM3sArt-gOI63_fANgD5sFFv5tVeOPeGyU6M2NwY71j5sizUsB3fJ4KmQSwj3VTQUqY4AqpANIqhvagPADGAwvcE3__Tvc6dzesIad7mG2cUlEWQSWGb7GhMOonbWUCJX_YIMiDYKkxqmFJoBhdcyUPpTafwC0Ef0Cvk1UsBqJv-T7gHQwhDiWPwADYMrcqmRdbRDfiboQEjnvU0Re60dv3DLsGbOdAQq50EbZ0X9C5BrQ0ihgP6GXKtu20JQaEj24XYMMCUrAAwujE-D9vMrHjqmsfpQfD3sGYzZRdVdLLQ9E-DaQBQEAF8xpawmrLbb9x_dS3QdAntPki8i3dpdIj0cQj2mx9gR0PGx79tfYTD54447qPEjOu--O52CE7r2g1sQIN-TqqeUG1TR5_ooj-Y-_bVXbOGeP6gVrSxoHj6oHqCYpEY8HbnPkRRKkej7PaWRITz49PB9wf48fQgT1-KYnsTyPapPhM7RRRP9SSwrvGaT2565PfOMuXv4ZS3ONPgLSHI9oLWYn9suBrXv_NxPX4l2G9tQa410hrK_UgfO9u1rgdc7Ua5wBddoT-IWB3f6F2GvL-j8uErZ6gqM-z26gitmWRUz546WRK2ZifzPqgZicrZdClNIrP3DoU813ENMmsSnD16J3Ip_wZN3II03Z7lnZ6wFMfLdPD1PgEPveEt3JPcnSw-luG3QM_HBeJRrIHd3Dwwr0ohdGd2Sdj2io9PPN3Uc-Ni93f0r7sHEBsifINnoBDvd75shXtwxyJXBnI8tu5LfsZFdAjsqHyL8hEY_kmJJloYOi8h4vVCMvDWdaL25ZwVcXZsh1wAkuhuUvBL893DIzL2Mi0vGQPS9M98AIy8DIgyE93i9da-y9kvyFlMDfUPL0hxEIdiALRCvAkjljivykpK9JINljK_LwSUhZKWC8rx6BG8jMBs-sQJL1sh-V3CvsiwvnMWXAnIuL3ciY4gylcA4vaL4kx-sVgEMR2v8LKcRXADLya8lMXL9mzobC-s6-fMlUDlrf4frxYDfyYrx6_ei6r1NA21uT9QB-vUpzHzrsd8mi-f8kL8tqWWBMvuzo2j9m-Yba4EOej8AkiV7RIA7AF1yZo_AM6z8AVwPwCEAtwPcCPA_LaeBsg02EPKTiuDJIAHOI_PEA4YUFrOAucO6HBam8zrCHDRKkgLbD7ABCZIDAAwUAKOSwOwPICTvRuzADyAOmB4BgAs0Py3cAFVyABlvdMKxe0Alb-wDVvNwHcAPAGyHS2NvrwM28XaP4m28dv4Ft282Avb_2-oQFoJZZ7vB8FEAjv-wGrDvvcUtu_rA_AIG4Hv0hIB-zAesoll_v3O4e8gAYfLSW8yFTsW-UQ_AElMHv_ALB9rwdJSNIgAfO5lj8AgBMB_QfKH8W94ftefwA4fm2PwBNkBH8h8n0qHyABUf2H_s-UfQxNR8gARH1W_0fLH4x-1YaH0bkWgbGIk7wfWHxKk0fx4HR9h8An5h9kfJbvh3lvS9mHwE2xb6DCZYSHyoDCf0HxUC0ACQC8BMg279B-3hdH24Bafigbp_kff6Kp8NJxH2x-TmLhFLBeQ-n3OF0f9BCmbcWUPNJ-1YFn-p_8Ab2fZ_8AtgHcFTQB7wr77Pnn3R8GyebEwh_vSwH59wAAX0W895Zn7GihfVnz7ATAcYWOC2HenzF9xf1AEF98eJbk35yfUbmzKIfuH3TCkuwH1bj8ArIZV8Ve1X1KHZeB78p-CAxFq4CRgn_t_7W9f_okIABN4NcY4A2MNyBZfLXz7CRgo3ON-KAc1yABbF-zxYD8AnkbV-Q0830VGdRJUd1FcAEwE19Qw_X9jDbZH0Mt8dR6UaVGNfSn2fStfY35N-XfU39F8jfbXxN_jfQ33t-1gB32lHeRkUZB-gEkUKULTFM3y-Q8fIAOi6Lf-WC99XOpX3V86AK30d-ZRJ32DD8AlUVNRgAvnyADVRvXPwC_fH0ZKc7vY2UD9zfdMFkDaf-72D9_olH5nOnf7-Ee-1vp7-vhl6VoCICu7VJvx-2Aj7ykAWgXXFDAAA7CohzAfkCIBtvrAJFBzwwd6Gaafgv7ACzQWANVBYA8gB1CJA1UIkDS_AkNVACQcUCACZY22ZR-PxVn3gleQZXxtmhQ4UAe-txsMGV_3Y3uIF9WfBCIrIAAlVDAKQkUF1y9SwgHwFLANv3b8O__us4BJQSwLRLngQnA0BLAbCNUz6gGX7EB2AAAO11g1tMCh6w3AO0A1vJ748AjASf6eBO_yiJ8BMwi8BeMWgW_rbAw632lABoQMVEQBwAtsH7D4AxAFADtAYgIH_F_4Qi0UwAUgK4ASAqofGCq__eFOjIfNn4qo4_z3_R-k_sP-T8A_x73W9PAHRbT-WgoSTlCM_Pbyz9s_nP8Sg8_JMOn_8_ov_gKhmxiKv_i_kv9L-y_wAPL8dQiv8ADK__AGr__f7zlr_kJOvxR99_sAPr-6fVwEb903q4N59zhH36bQk_gsmT9Y4FPwn-j_NPycAT_Bn6QWZn6s_Dn5c_O4BCgJf6RAFbQC_cO7r_HQiv_Tf4S_YABS_GX5y_BX5K_FX6n_XX6a_Dj7a_f97X_PX7doQ35txJ_7Woct65qWICRfHv64_ID5E_YH4gAEMq2pMMrU-Kz6j-b4aewcL5X4SL6ljC4DlQQ0xM0bYDcAPSAn_euhn_XAHQfCKaiA6ggd_GD6xYdL5ogV6j0A_b4gAOgFQfXH5MAklIsAwz7_9c8Cycb4YMSA0DnUeQHyyawTDUbuDa7TAB7wPADSAyALiA-YB0fKQFt_GQHP_VQHTrUQDKA3v5qA07xFfRAChlOABSpOj7sAwgaGAw0AjAdABaQW2A_AW2CYXGACl_LSBRfKr6MApeyjiTpRf_CGjJfDj5EfRL60raD6WfDj7hAwjxYfG74GfKz4ucdixJQRqTuffiiZAvIG1wVAC2wS7RI_UoEcfBoABIewC0EBwAFCIoTVAiry1A_gDlAQRC2wO_DNAxz5WfcBj5AFIBvGXL7cfGoF5Arz6oMGYC2wPKiuAXoGQ0foHWfGIG_hUz6zfZqDzAoIFLtNYEZA_YFsApdq2wRIDs5WYF9Ak4EcfQoSsAGIGa_HIH5YDYFRAWcDLA8IA2Aq4HrAm4GSA1TCI_L4HHAvz4LA2wCUAZMDSfK3B1xJj70fCQEFvRiqXAsgEqAwUBSwUIA0A6D7eA13y-A_wGBAqz5R9PQFAqEIGMSMIERA1wC2wFUSTYXHy2wD-zxA_wBX_b_7JAkPipAj77Kfa4FAguj7ZA3YFiDH4H8AQoEUIYoEOfd0R0fcoHaWKoEAg3IGsgqz6RRcgANApoHDfFoHQfNoEdAroG0AQoSZfJ4HmfLkEgAQYEpAYYHoNWUFjAjj4TAwRDTAgMCig54Eag1_zLAs0BHAsUFqfNkGUALYEQ4a0Fmg8UEcfZtB5AJ0Hqgl0EafM4EXAj0FJfDUF3Ah4EOA00Geg20FWfV4HagsICbfEMH-gr0Gwg_oD_AtUGxgsMEcfEEFggxj4Qgv744A4MEcfJwEIg3v5BAASCogwD4bRVEEaApexYg1gEcfXEH6A2LJVAW2ASFBai2wXiKlEOIG8RW2AZUDwBJyS7QPoFfhJTIPZJTLMSFgxAAzQEAhEAGSDk8VLyDzViANggIJ9ghKZTg15AagAoBRAk-hDgmAACQEcGicccHPAAkQGbJcH1uN4Hk8UIEwgDcG0ghgFbRRkFNfDYHsgyEH2A-_6_ApbLnglQGm_MdjxfaD7ngc8DmIbNjSQShCJONRDq4GSC2A7e6uAjvCKwGkGeA2gGlgyCG9_TQERAbQE4g3QH6AowAWKDKit0acHUAdhaLg54DUAWcHYYQkHUucCGJAwf6Xgh3BMgjYEYQ4uBYfPnY6wOMEgAfZT9UITiO6COI6WJKDSfO8HZgh8Gwgp8HOArNCyA3OC0AXHxvIF0AeAqD4lgsexxzGCHlgkPiVgnQE2wZCF0QASEsiCIHgIESHPg2NC-Aq8HpAm0H5Awj60fGMEfQDYE8gyz4lA_UHQfIUGVAqLJ-gwyEagyUHSg5ep6ggUFWfBUGdA7dDKgnoEGQvYF0QrUE6gwoCOQhcB0fQ0FTAu07WQryEpg6D4WglYGhQzkF0Q6IGxA6KG0Q8KEkfPdoJQjYFugkv6-gzyExQpKGMA34BBgnYGy4F4HHYd4HRgpME2QuiGIsILCpQ2yF5idMFQ1D6AcQwgEwgkABOA_76vgtVgmgjj57KIXpXAJP4jAVXCCQyKjCQscAX8McDAQp4Fn0MADMQYsGqA6CHqA6D5wQmwgBAqsHQfGsFAqJsEtgpKjNg5ywdgmABdgi7TRAB9B1gjwCzgmGJTQiDCjguAgCAMAAkWRcF4QFcESFToDnQrcEgEa6G3Q_cE4QhoESFN6FB7V_zLgt4GDgycA3Q_CFGA66HTQggF0g0iHYsciHmgm6HufRKG6Q_gAMQvqhMQuiQsQ6TjsQrMFNQnMGPgtZDjQ2T4gAduIwQ8SGAuVYFSQhaEVg5gHLQoIGaSDgHugbYDbAJYGUQ4iGQwlIFkQ68EaghrhkwmiEbA5GGow91KsQzGFiAziGOAuEH4w2QF9obYCqQqtCNAxKC9XEKHEw2aESQsmHzQzEFUw7EHVgpCH4gkGGGgSWHSwkv68QeWHm_ZnCaQ9mFKfDYGxXKACrgsT7cfBGELAjGAugeGEbAlYG2wAIHbAIgBCwo7z3g0WE8Q_MG4_S2wlnEv4UIN_4iwqz6tQ3X79_LVqD_eP4j_WYAQAcf5OEbYBMMdEATAa7Q_jV3DXaIQC_IKaDgAxf58_KGCr_BExPAYPj5wfwDbAC0BGQdn7JgC0ABw-i4WgVgDJgSd7K_RQAoApQB7_LAGbYERayAtog5kW2DAAtTCKw8_65gsWEQwjSE3_Q4baQseExw0949wwNoJwyf52EfuGzgUAHz_bn6QAtt5-8IuGqAetD5AVwBegZiICjSQBLwlICFwpuFtwqX4tw-X7jQiwBdw1wGzwgUY6gui4JnQeHNQ8OGEAyOHMgukHTwx4D3wuADzwoAFM_AoArw3OHrw9P6bwscBK8DAA7wvwj7wnMgXjJ-EZAU-FH_c-Ftwq-G8QhqH_fdEFJAqGF8yDmF0Q--Gzgz2GHPFwHkAkAC_w5sGzAGaFDw3GFvRUeEqA-uaTwlQHfw2BFzwgAH0_R0zT_EAFz_EBG8_MBH48LeFQIl0C7wlhGHwhGiF_MvRnwluEXw9uHXw11qYIuaE-A-kGIALSGCpDUEEIyz75QSEF-w6D7kIvCBUI1-Ejws_4fwpIHMI3-H_wjhHHw4BEL_UBHQA8BGHw7eFCImBG_wjBAagJBHNw1uGXwjuF_odX5Kw0mFlgimEMgs2GqI_BEHwwhGMfLRHt_O-EHwkv61wmKi2weK76InGHlve9rqQ3H6dXPL41cMr6dXaCBYAYBQHvemz_fVOLkwjX5JIkAD0eRrzYyIt4mw8AA2KJr4RIkhEqA8hFiI-JG0nRJFcQxgEpIuhG9_dJHFvV6T_fbJElGPJHFvApFlfIpGqw6EGlI8pFXoSpEzA6pEt-JkH1IviFRI3uF4QFpGmHNpFhfTpH9I1K69I4IjbIhI45IoZFXAEZHX_MZGKI6hH8AKZEJATkyzIpIHzIupEUHH6KQJF_4xESeHv_HKFwfLnipItEEKIjEGqAsD7eAfWSGycT58fT5EmYWRFQgi5FyAnYBSfLpG4_ZsKiQxRGXhRwHLhCFH_fPEL-I3j4wooT4UROj4o_aKDf1CFHaI95GIwvH7GfHT7fIkmFnIv5G6yQFGJZEFFPwWYAWgMFEIfLGHE_CZHtI_AH_fYEpsA_H4mfSlEgABFGYolqHkiQYIoosIboIn6IgQ61AkohYGdmWz6XA-RHKw4VG0orABAondIMoifAzAZlEYfIT5oo0OF4Ay_5wojT75yO0EpmBVHiw1cCyokFFpfUwFKApVF-I4pH_ImYDgfYFEpfUFG6or5GSo6VHsoqFE1fY1F4fU1Huo21EZfe1Flfb-I3JMEDBovAAKAzL7oogdzCo1kK4oxhFjw_RQzAb5EfQZr5ngJH5WA6MFPfXH6VRSKAwAZMB6QIyDkADNG1gemx9cfihw_SKCuAKGBgAIyDpg2XC2_atHg_QtF6QGGDYwbGAVoiwDJgBmyy4WtF2_MAB6QMmGy4NdoDGdtEKQdACRQDwB6QZtH8UOhptopb7I_BSCuASKBNojwC9o4yADomtGro5GCRQZMBQwbdHs_XdFTo_tHoAKGBjo_ig9cZdEQ0OH52_BSBdcItGyIm-FzIqUL7ATkIw_aD5RYcBAXfaYoAAUjhgvXCAx0xSG-76MJClkSa-fn09Qj2SyA9n2a-FhDs-03yWAzX2NoKGOUg1xiWAMUCigiyJ9RzUDK-pKKRBs1ADRviOpRSQNVR6qOQQBwLzY-qOxh7SP9R3KKDRHH2IxHgKYx1yQBu4YPcBlqJlRhGIWBrGPD4dCQFRWCJIhS9mzCTkLJuFGIBRaqPpRpwNox3qKTBJSPaRcADjCXgFYB7GPtidH1YxAqIjRnGJYx3GNIxQqKdRcEUtAmojo-wACSmKv2qRJmP4-IEGgxIAFFAI_BEAI4AYQinnNgjeDR-1mPIi-QAN-wyN_qxCKWRvGOv-RGOLCKINIxImLpBlGNkxroNI-CmMhRzUMYx4aOYxaINCxOmPzkkaMuB-mORBPGMMhfGK0xoWMEx5JmExvyOwRYmJLkEmMseuz3ZRUWLdRMWPkxbKLHhUKJUx8YXUxSWP1i-WOyxpGN0xECA6x6IAFRRmPGRNmLMxVnwsxJ9CsxSQKGxdmNO-DmKcxcmFcxI4HcxyeE8xE2O8xxAL8xjyPwxYgzyxVn0LBxWOVRTqJqxGqLkxV-DoxvqISxoVDSx7WJ2xZ4K6x6WL0xOiJuxxKO2xHH0LBhWMS44WJKxomJD44mIChuyMyRg_0Ox1GOOxsQFOxjWOahzWLUxl2M0x12KLBt2I4xPWJhx_WOASwqKGxeiByg5mMsxFaMo-5EWne9mMcxsphcx5GHYAi2MIAy2MH-NmJ8xD4PpsG2KeB1qKs-YELnMe2MdR4yMBx6aOBx5aLix3sKs-iWOv-PKI4-DOIghGmMRAGWLo-AuL_eT2OCxCwLFxb2JZhY8IixF4LKx74RWhfSKkxLqLpRtWO9B9WOFh9GKCBqmKvQUOMRAouNEQREINxykXux1b2NxjOMMxyOOMxOOLRxCwOAAlEK4A42PJxOOKmxsPxmxBOLREROJJxHgKe-2OLMIlOPyR_mM0Om2MLodELBhlACZx5GIBx0mKoxbOLqxJ2M5xBqOg-POPZRfOIih50NNxIuK1-WeMlR-HTpxeAPOhMuOjx8LidRBOXKxv2MkxseLVxMmI1xyUKTxDWPoR4OL1xrWN5xyWMmh4MKFxZuIRxReK7xZXwGx5yLtxPgnMxf0MPB2oMxxxqNx-k2JIxHuPxxzmO9xbmI8xKGJWxgeLWxxyJDxUqNpxz2Og-RMIdRMeMixceOixmuMbx2uLOxpSLTxqaI7xhMOzx5uJvx-eKnQheN3xJeI-x-2PGRFeKVxGSKqxcuKPx9eLpgsWKbxvfyaxreNNxdHz3xbWPtiOeI4-4BOv-g-L-RqOJHxI2K5hLuLpBM-MRRzX3nxc2J9xy-P9x9H1WxvmI3xNOILxO-P4ASkKEhqkLGhr-OZxiiNZxNGNPxXsJTx9Xw5ocOOhxHHzIJQ0IoJbGIgJwuLvx7BOyAw0I8BEuPZRpKL4JKkPcAY4Bfx--LLx7-MVxZkJVxNeNdRR2MTxIOOTxOuLYBIBJYJhuKs-ohIEJt-N7x0Hx0JnBKRxFARRxw-PRxSBLGxWOLwJZhFxx02MwJhOKXxS2JXxruLXxBBKigm-L2O2-MlxdHz1hlQANhcsKVKCsKkJkkJZxv-KUJJ-JUJgBOnx52OYJ3eJ8J8QClhfhNlhxiCNhVSO4JPeN_g8RKgAiRIQ4yRKHksQnN-QhLHhpKN8JuRMNhgRKmgkhLK-8uPZRH-LkJeyNVxihKBxyhI5xUROg-wBJaxoBO5xCRP1heRNSJtyPbx8OMyJ3ROyJvRPKJBRLSJsBJtxg2LMJDuMth1sKXeVhLQJeONmxDhIWxOBK8xrhKpxHhKhqxBO8JO2OiRfcMARuoOCJKsMURW0QY-1eMPxtePjxdHwY-bRKUxdHwW-mhPaR5COPhehOGJHH2tcAqIxRTqLCib33dBxb2TA1SLCi36Lh-lkHPAz6IE4VhOGia31GiG30-BKVQG-IJMh-I0WTRHHxR-DNnVccWKKJKgNJR5CNiRUaNOJwqIuJReC_x1SNoJVn3uJZ-LBxpSOeJcRIOJvcMJJiqPSJUBOg-3xNIxvxPGR_xIiigJKuAwJKSBoJPD8eKPPAbcT0g7P21AMJNRJcJNd2CJIPeEMFKEgpOlJGUWUiYJNXRWJOxJRBMfxJBLIR8lyaQywNsAAqKhR9JPSJdH2ZJQcMNJLxLZJpBLcWsuMRBn2NZhvjjJJf2O_xKgNJJqKH8c5hI4-VjmZgVhMpJ3pOdJDxJAAXJMURQpMn4eKJgAYpPZ-xQKVJh3wBJH3wFJg_zCiUGOLeEMAAAnFqSrUTqTzSQaSS_p-jK4EaTmoSaTBiawSdEXqT64LmSPiVGi2CbaTS8SETziUvZLiZVjqke6TokJ6SFgT6S1AFYStovV5JcOH5HosO4nicqTjvsKSp8WiCwic0T2iYGSaSSoCQyX8iwybQj-cQgD_0QpBQMauTrjOBjYyWlE0SWqTKopGSjIOKSYyUmThyet9qjIiSooCiS4ybySPvu3EMfoFjcsfsSXsYcSxEYWS6SSt8uiU-Te4S-SrSXfiOScSTy8Y2TnSVcSGAf6SpyaihQcbOSE0X8TIfvGSD3omS6QQuTMsdB9KopZAISez8koNiTLyduSZSV8Z5SciStycVEVSeiTkKRqTNSXeSw8U_j-ALoiNQK-T2kcWT08dfjqKSKAqyUhSBgTjEuCdf8aiWPDWyVChySY0T1ceETsceBTVCeyi5yQRSvIteS4KVhTjCLuS9IHpAkoJFAbwBmSxySD9VvkRTcKamT8KceTDvjuTRyRiTSKUSjIkUFjhCQsCCSeWS1kdSIPyTojDicySLKb9iuca6CNCf-TQiTcTj8UJTokN2SQXATJ_Ebj9AfuTC8SVB4YPGkB7MbZTjKEj9mSWj9hlv-EgyXASkgSB5UANB4ogMFSdseWSrCfFSLQPFRRgESFEWOAgE8ZVjMycZTiiaZSbKeZT4rlECrRKwIrKVRSSqQgiBAHZS28efjlMU5TqiQ6SQKROS8qe5TeKSJSx4UGJ7MSK4kfvyNZYWhgyceyjYqS4TTMfbjzMYNSn4csC0KkcRLMigSGAcsS7CasS0RNkBIoh7DnCagT8CVTjtvqvjLQKcxhgKxSYPgKZzCASYlieRF-oP7Z0CRDBS3rokIYLE4gyWJTxqRaA_AFPBiKdW8dCCuTQMVWiAMZuSXqW9SbCBpSH_gVSHySZSzSc-TZgPVSqqWQjIaUsCEkaRiOiZDiqCQfi2qa5S_8Qx8WyV5SSvvNDfKVbcfKb390qUFSHwVmioaWFThvt-Stip4TQ8feSx4WNS6QUTSkqe0jvydUj0qZlSRgNlSMgLlSv8aDSCMY-TrKV-SoaWVTtBDDSmkULTWkYjSW8Z0SUadISaCe1S7idOSGCdf9eqdNj-qcN9pqVbYRqXTTpiUPibCZNSRsRrS0MLNTwwn8A7VItTfUW7jZ8Vq1PcQvjg_j5FNqbgSKceviooHtSXqYdTFydB86zJEAzqacYLqfBEmGjdScAHdSLQA9TGoaJSoKTMSzCIDSPqQD8vqQ4l1ye4TVyf9TtqVHT4gEDS5ScW9j0eRSvCeDTGSYG1bYKsiEaQyTPyfnTC6RLSHKRp9mqZxTWqdVj5aVSTnSVjTivp_9caT-j8af5TCaYFSmafZjVkeTSbvnojpvlFTZWjFSdaX8jGabB46Pv3TWaVB52aZzTiTJQiXSbzStsfzTqqSsiNQPVTyqdaJRaYcSy6esjJaaUiIcfriZafWSaUXXSAycJSgySrSPcWrS-6W4shqSRifEfTSlqbMSpqbfSZqYYQTaQtS_aaZj3cdbT7CWtT7aVrSLaVsT8ka7SU6QdTSMB7S0PqdTdTF_SiQgHSmvrdSlgCHScAI9SZyb39nqWAzXqWnSY6b-jvqcBik6bAzo6cDT2AFnS_6g0i-abnTbgZQDegNiBzCJXA7SV4Ca6T_j0aYJS5AYyjtUZJ89Ud1Tm8aUiLCDDSuAVQDP_t3jrSYwDqGdQDSMZfTraSNAkft6pz_jd93MS6Ao_IAz0GRHTFEV-i9KchTIoOz8a0l1wRASpTBUTaEUyS3TePqRxhkYOj_8TTgmvlcZpijgB2fjkY7qRDA7Gahi0yf19YnDN9qkZyFiGQqTF6eHicoQIyaGfAAqidXS38XLSWGZOSTGVqjbMYPMuGUGSkaYfTi6QtCxGUIzWSXfj_GeIz_vpIzmvtIzhvrIzNfvIzK4EoytqdrSTCbbi9aYgSOPjVBBPkEA4APIAAAF2wM2wlz41al20jamNASWAi4ZRkqAg-lshN_yvQOj58M_RndMpwgcCXUHGMthlU48xnqwNIFJGYEnsAJdH2M_Bkzkdxn7UsDxuEhZYRM_JGTMvExMg5mpLAJxmgEdn5wwNxkTpTYmWgI3AxUYZkvBUZk2M0hl2Asr4YMp-lmENUm4M-Ok_UkDHJ0x5mWgIhkZ0pEmKkl6ke0cRxNfC0BO0XDGnMrBnvU55nLk15llCLrhrknAB6QNMkfMoBmWgIxlPVDZlmMvdFTMnZkOJaNCgEO6m4s0GAuMn77o_Mhm00pemUM_kFFYo-lnEk-lhMjqnjMl96cMr1GxM5qFco00lWfHz7549YBAmO8w7sB7q8SPHSIVdXhYYcFBLSVRrsoB-YMuXe68GVXTHcWgh2wWHRcSCSBQwPSDfDH-pqspSCEDKtFKQLDCfBP5rxbKCA-yBiRJQVXTkSMzhCcSwB8IEVRH9GVn_9H36e8c8BcSXVkg1UkRybHyhhnFugY-PQTugEnxDUWAA2cLTyGEdnAiOQSoe5QqieRB7wfnX0Zd-IogGs9gDu3YfLMcdFSHcbXjsSZNmAqG3p2wd_SWsljjOAPhBr-Q5q3kgC6CMWELxk-qjAiS6iZlEIYBmWABe5N-QijHqTxko0DmgOCQtcGhmPNbq6IdVQT93OawJssiSjWJNnt9GHRpQLrhusl7w3DLZwBeIYCKYdoBGEWWhXhKTD8jVdY1XbYD1ABShLHEebnUHISaLXe59svfpKca2CtYeiQycPzCYqGxlffBm4D3E9mB6GZR9Ua-5h9ePp8IAJCJWZSDwwS9m9spe5kSCvrt9fUD6gZ0rycc2BuQPhCVApOoDfd9lW6YypkSPUAj9TNnI6VHRK6HNkiWfNnmwQ5pZ0uNkuwTjjOANyAHcXjhkSNSzUSXKwtxDUnaHe7YxvbiCpZa8nhCAq4rss541UFkysVdISZURTDuXY3arSCm4Q4aEz_g46gMjCBxwSBDwOoQqgFXONkJsue5I6PzA2weUIB9W2BuQdjhpQanEI3OaxmGWHSWGO-5wcqXQY6Owxyc8Dk18P9l0Sd_Q2wIPQADfRJYYTEarAbGhWIM55HTC7yPrf1kLgB-A75CcCclZ84pAUIAaDPQBIgMk7bSQcKe7K-S73DDlqc8OLngQzlyckQHkc_jDVTLDDuYz_A8jVtIVULda-iEQLSOSzkjgX1myxGzjmTLDA3gU2bUAAIIKlVEChUMXJAkMrI75dqRUAKWAF0cw4-spUajAIjB-snuHU-Htn6VWTg3svXjupfzn6coLn_9dfo39Z0pyc_s5sQfjDZSAUaljQIY8c_LKmDPFCZSFtB1cgNlyYc0YdFaeTugYdageSbmT0NwitBUGhvnOUBt-UpDYYPjnFlaYzW0HbnhCBUnLs80aPrZMB_bI7mg0MdmPrLvxQwDq7NGXQhzge7kTyGxmDfMdkk-fMpbzH3LZgfyDcDHqTaCcITHnQ1BFc58aLrWYClECtLdXMdlwgUyZpcV7YuHOYDmTaVmH9G_oBc22AsSXahzqSuxgchTntWDzJdWaDIepHzJiWXUCcWLvpouYf6nvWLLhYTt4QWY4kpAGCxZQQCEnwzEaSATsAKoDnmLSGAFhwWaDSWFIDcAb1SBpHqghpITguVNPLE87zKsWe_pepcnlnKeBJU8yn6PAWnlgWeIDHw5nlk2YUBs8oeQc89ABc8uOG88xmDeqcLIcSBrLagM-GTvKX6TveX7XYVgBIWONlOVZvr5xdHS-yJiSY8wORm885SAEPSo18WXkapW2Dys1jj_spKABIS1mAqRHQB6HqjnKNhELwzhFyPFN57sal4lIDSTYyKixCs38QXsKpZ3sHKRHADF74CbGS6SKHZAUaJIH3T1jSDPSxg6Yl6j-Kiy-861S41EpBKtaGSiZTxpxdaqa73M8A-WR-zWdDGRZSXPk80Etq5IKSrHSZYik8OLrjXPbrjARRI7xbMQodaaDvgd8Ad8scBd85hwUvaJa98rIBYyOEED85fn3tazqZoOeS-GP6rj86pzE8LJbFNcM5yuBflb6JORpAb5x9aSqAgs27BQwKe5jZCVI15R_nz5HRQf82ABQwL_kNwHfgFsUGA_8mACRQbhJLFFQowAP_niyYqRSnT5LVOFfnUAO8AZ2Rd4E1OflotWKpJVNyTSKdboFVUTgGYAqpFVelyFQMdIjeN2zzInJyhVQgXzI_V7z-SFLVOJURs-LRQsuKBYFnCkz6qSnkfQXarLVI5jtTDcYzuFaocCxqpcCmarHVPgUdjAQUTVfVRrVbYhbVfVT90JlwMCl0y1VXiKho-aperUJC0C61bv4egUpCFTL-zb1ZPrDcYdDNQA3tPVTHgMGYdjcVwsuAaqtVdQX8C46oa2PuzMwKmlzWWwByoDOwWEHJr2kSwWHVStIKxB0BwnCwUGCltBLDXkZfDPqKaYdwWoATwWVwSHKQOG9QkrewWwTek7iCw6oh-FTz6CpIWrVaZZ9zYIXNTQXL8UYwIJC3wWdYE5lW4f8QkrMGDgEDWzVC-qGRzVx6itBIXJCzqav7YoVKC7jzCteAV6CslzaKN2qxoRbgt-ZnCqCxQEt0wYX9VEYVVHIzwhCkUTNCtIXercoXwUPapjC0xjcCtDxZuGLIzCyQXZsfA61CzIWdiDWzJ3f8IPJRJodCmxT0nBIX0eXYZTpdhqXC2pHlKeAjlBe9qUCyJqyZUxjw1VcDzI3tA2KF4XO1G4XsBAqovCt9L18iJwToazr387PnQSNPkQnGsD5SLzRPkaJKICmIVOvaJZSaCOx5DbOS5IVgV8QLareaQY6O7eYb4UPU7TFJ-JbVIzqONZ5qFNFPnEizfHrdXEWpadZpkizzqiNNYLjpZE7m1CyQLYfoW5sZXD4ilvAUUIuzinIdCO1fOxVDQobinEtxE2deQUi9STsvMFZEoaK6YiplrFLIpodNYwKSgctGP7AFp3cT2Ix-YNRhdPtLq1AbKorFJK2uBZZv83p4NFfWIowFunO3fvSz8x-wutUQ748XtAIC-9rIC-0iLvOeQ9NGRqcitIBCi2VpHCiGgCpKOHQ0fA487K4CcuAXjO4hRnwAYoBYdb-JYdebIWEJ0UBPAdy2i61qeMhEm6hJ2jX-bvrqMmUJBEcrpDda_wcgslkZA6_woCKMUGi-QABtAUbxi6_yJihNYpiI6LLja_xBiMGBl-HdCouavyRAUNGQCODyoY9oAQeOsXDOPpHNs3Sj5otMXRUDMUOtHkk-RbCBXAGKB5ilKKHfE6JFinYC1dE5IT-MsVh47xHh4K3DGBW_lPcAmQKi_lgJeIsgefPLI7C97ghisAhQ1LB7sNKywEac6xTAM8Bl8yKjq1CEWYyfvnrAOEXOUSrRQUREV78lEXGTNEXpaBEVPNLEUi3HEWVVPEUQSoChz4BCXJDGQUkLSqrkiqCUNVbPBxdGkXbETc5wShkVwEfCUUmCYgsimNJsi9Jqeiw7Lci2KpXAZCV5DAUUJkWrA8YOiUpaLmw8UZaBpNYWZWWIi4p8uUXD4DUVKigHLc0DZrldZdLqi6K67Lf4r2xNKDVi67ryAD8Xp2HJDGin5ai3eGzmivuIZiq0X2xG0W9PZnbyQa5pYdSsRBiJEUeipOSHZb0WuTDuqLvAMVK0g7yy4O8WFecMV9PSMX6i-SWKS-1T0MhsWY-RlD5yJMUtilMVYdcBJ6S2sDahAMI9RY5FYdfMU2hdcXygeH5TUVMXkM-yXgBA8W9ldhrHixSRni9VS3WNok7lfYoQJSxrZse8UluR8XsBZ8WMabTp1aQflwAb8V986EW4yMcCWQMEUKSCmQUKDyVfigmRoi2uTm8LbhW3DqXm8Nbp0ydFz9S7EAkC9hrdSq-SrpdgIZS08UTSnRTDSnJDUyF8WJ8xmDLaXV45VBCrwvQvi5vJF7fbNwRNwTCp9AbCorA3SR8w5iHE81iHc9XrICjXSQstVG5W3TI7eIdu5W3Ye713JWCV8r7S4bSXoivHWDpoZQzU9DQyeobiQraAWjfSuNmXKfZRuQTiQ9WaTm6gKGVuQCAbIDWGXwypAZQDZGWcSCXla6EKyhxPKyJCGGVKcHGXOARIRX9CDqQyziRccWnSe8TnTDsxZRZtMmVMcFjiUy2iww6Q14JSRqXaKYP6Swdsn65WvKSrVBZKeLoA7bEHII2BGRUKbBxWJCIq8yyZaMFEHLiPF3yWucpasldoCOABjBZgPIJ5ZXgHJeYQAo-OLlwSTUSjzIua3JWQ5Z5MoKx1DOKJxf2L9-a5oTnYtSJxMrwfXKexwEb-K-lSNzKIsiF5hS_kxFHY7sNDB7szYwLOy4Mpsw6GERlU8rpUMsYKlLwZZxPAVMFGFhy2Ypge5JECn4FvxFUdYWaTTzm4SbG7dUcdx17SFKiCngWUEC2ajQTfHzQX2UfQK4DXPNYX1VP6RIoA-b-aFyXsAZwRSidwL-VZioSgYiREAB7kqoLEBXCyKqauNUIdyvrmqDQgYVw74YrA5Dz0eDnh2ox5zw8m4ChVFYHuwv_l4ZU4CBmKPxPgOgAWgFmUYCgbgCgK0RPQdDibodcTZsVKo01W4UJtWeWeFNtZC2MwFyYSejwgbKhZhDFxhVW1RabYIA_lQqjS8m2xyYG-xKlaaQEYMzwmBM-I8OLDByoDqTQaSkCmCNC7GjR7xlUPcoTisKhrwRKjHZTwrK1brQmyh8Cl0A5z0eGEqy-CJQ6odYDjy_qof5MrywnJAI4KjkRNnQOXfY1EoJuCJ512CeW6XU1HidRQUYALBVdyshVztEB5A5bjxklCmZES7uXnCgk7_CttQ4aM2V3FBOqPFGuw51fhXFVLOqcAd4qQPbGysKuhU2Ka-raizPJ15R1Rj5KWV8xDBXsKxFDSK3BXbEUEQPgeErbNdgKu-FvxMKPRXM4YxWB3GT5my4wIiKglL48mvgmKINhaGKYwWKRWjzGAWWRKD06m5Nra9yhVRi3WzqUIrQoM0JKAJckSBjyZKSsQJVoP0S26VaE-48JfRrdbaW6xHOu7jHF9pB0SJUpSTgQxKyN5xKhzqJnTBRwSEprBGe-H9CgVTJsERoKkSc5lXPO4fFPiDJymIyqAejy5ypgUOsAbBEdPoWplSYj3w6fne82vK1RAZWdXI5CpXTbADKhqStLEtLP8Wqq2Kk4VaLPiCzVVly1VSuWDVTLADK_Cr31U7wrK0lY00hDDIKMpW4hNxYcvLoVFhB3DcyrrT0eTmWuAbmUdKiJRLcQqTCTfmVrK7RSi5BUipAq5UpES8gqpNAAGsdsmcC_LBfK-3ESyOzyQpMthgAYoIKuRzxU8DpBoQ7dBSJFeJrhE-gMlTJ61gEFU-CMFWPgCFUXQKFXk8GFWU8JeUIqykBTsYRKE5GhXDhS5WgqucqFeXFWYodsXQqoco-SlOX1VUGD4q2gqSua_x7K9lWf5A4hrhCdAzQYQVQ0HlUcqqIpyyiIX-rSNqZed-TUqnwQmKsuQfiAFX240Iomi3xWekUFBpQHlW9k5VXyqweK7LLZUUdEaEt-DVW2uE1UvAfqYBY3u5zndKD1KlM7V3JpVunKu4xGHa4q3B2U5AEAiZK3U49nYqD3XQ5X1wY5VrXQi5YedNA9ZGaAEeU5XCvToQHwwZWLKG4QkhU0ooiNFIk6H5oZ1UNQEHG2g4aDRQQACHCPbOkBFoZRjtSIoigwBfQQBKZUvXHrHWoQ1XQ8GiX1TbNheqoc61YINVpHR66MFUpVHAJbAP0daWFVdtV47Fp7gbfvSXKAmWtYImUc7MBKRrdtUobRjQyy0jR1qftiIsGtSzqi1is4INgMnRbj3woBKeKzLBzGYTTprRujk7VxVBKAlgeK8Ay6GEAy-KnxQJHAJWQLIJUdabPbDbGmhDYIpTPSpJUG4Y-5vSqADF2cJX6AXJVsAfJVT4NV6TSIpXJxBGyJKmlzJK_M58QSW7jBO1WxHdjnl3NI5K3G65hnbJXhOX9V_AaJUAasjkcVSDXM2A-FVKlMQ1K6dVFqW1Wp3JxzsbR1W-KjeRtK7RQPK7xQ_GPujbEZOV9KjeyuKiBhXK1xo3K9jWgqujUJ0BZWvK_qplVbdWw2fWWj7PZXWCx5XrK1qrCtBUgAub5UQPCxWgq-OTcarFX8ZOTX24swV2OF0zqanwTFBMcEqa9HGcJA8QS-Pp6WcM6Vowi6XScc-JjgVuWuAduVQwXjX_gMqp6BHlWTJIoVpjDvwWqiKA6anKCC0HaT6armUqq-DpQ0exxoAbYDXIAzWdiULUAcFbJt-DlaprUbqbKmNXBxeUA-8pLUngMZXEcCZV_octVV7Va5zK_qoLKmnFDoZLVGqn6iKarFXM4PZWLKyU7aPWsBbKrOJxqqJVXhaNUngaZWhHXBwZ3GgTOqijX_PBNR_SmgAqGWk6Ay_hIj1JwyGtINAjtZ9USge6WvqzI493erWlamtUzK_C7U3ZslEEurUfQatX2XF1XK3Vk5UnSU7jxDbhzq4ySLq3-Qnaglhrq0xgbq7dXaGV0lnq-Yx7q-G4wVZ8QkIYHBbSwAQ7S0-AJwIDhagASR9iOCADiSvj4IWYBa8DAUiSfPnmgewhMorEACSLsW14195QAXcCogMODVARHUfAItC6Sf3ltYQPmfg9voG6eThh8rXr-ySPm8GaPmV8gXkCSdDX_qmAhMveNUiQSQDU6zDUNyGC6qBHSTLwHiX-SMOAY6ouDeJPiAGsFziZAZjCmvAlp3AHbaS3TxUPanQxrQcMBPSnDg3gcIARAB9pDaAugvtXTCZyvcKMAA1i3aqYzVQMbWLE6k4TazAB66o3UG67Wh6sBXVymVADVQYpQwAS3VK62nwq6qqD_DG3A4cWnzu0gQAoML2mbUzLBXU9lBmIGYDVQYFkKQWnznnO_7VQPSC0-W3WP8YyTVQQXwluSxgtQbKDrQEtxSAA1hNQeZwC6oXVwgVxhHiLoj66s8RzBLASXCVcSm6wvXbibATj8ZPXhgacSYACvUl6hDAW6xXXUAf4T16lcR9sabRase8RmALPXXzL8TWuJ-RdEJ3XJKHtjd6niCIMNEQwQZQZubGtB1oBohdEXZDogJbKi6zogTaZBBRgLlQ1yTuhi3U2gOaXUCIsYCmeEkLCl_VVI0AD8QZAcUDNAcpX2zYPI8MPhjoYOyi4gKBH9Q7SBMRLmRlUHNQBceADgeBkg4AUkHf68KADYY_UqibtBzaJqiKwWK5_bSyDByewCjmbeH9Q_3X2kfYDcdPxraYf_WU4ziVRQKg7nePgEhCIqg0COUDtSNjnkIShAhUM8mXsHCSqNKaaoABKjtSar6BDdejTIugZkfVUKjAXXmJjAXmUENKj_EIIC1_ERBYXHybiE-cIuXRg1P-crnfbcYDbAospyYDUVW2KlxwAIgCbfa1BP6k4AIGmmzIGqdh_VNA0gG8KCYG7VlzXYjXrqPBg0ANzgJANkwOEe8hP4FQ2jAF5CU7XDgHw9zH6KT8Rf6ynGouYA0AGga6GGtW46G0IyaG5GZxEP_XhpSWCUIS_WWcHAisaqB7K5R9JPgbdBZgSTDBUFkDW0LjCmOEVxqyuhCb0KKhn6scqFUS2KfjKaWSMDuJzWII3n6gQAXOaw39QolKgmSKgIpY_XFGkI16wPPZ8QL4xaq8rmw7e8h1Gz8Q4BL4zAYxo1TAAEywmUkytGpKTfIU_XBGzo02Wfo13UemxhyCOSptf_IIkxRiG0eowLGkAiTGxY2vEYGiTG2upYkRPSV6V3yLccOgGIK3DdGq3CTGpu6tqhtgyGaiXJ6XYxOZAAi7GxAxSKERrUAL6CAa9TYqoDdXexdrb_BRKDlLZZb7wQ9AHwwE0ngeZG9G1YBiG-DTexZRIIsDl4qMc_BuKp05O4NXDcpAli_kD9BYgAhAkKmEAxq-ZFm3L7ADKmgWCKtRUtK7E0gmlRUDDQHLpQKTVzVTLW9a13zvUD04Kq3xW2Cmk0enQhFqqhcoxGQrWMK1SXY2MEpwobTAYm4HDnYfOQjxAEq10UwqJxIlIenVZzalViDAKNVoJHBlLy5EFkEGYSW1gSU36xW0hg3A4SKOBIadXBlJpkolkOJeXLbfBaBDQOgA3tbmjDoT4IgEYdAv8kKW7HPZ5k5XorbAPdAxq9-pWaHsykm40izgL02c1H00kweZGQTFlWQGa_wy6ugB4dQXKMBWuhOmzwmSi103umtrV-m6IDemqZUpm_IbgEAk15VZ43zqpY5Jmv6x3G7TAvG2YBvGywQFmu6hx_INifjbzC6saXBQye-GEuELAlmmYBlmqaAVmrMTscms1DYM8ChGlVBGuQaVxFZoA_K4hyCmreSLBbZy2kL6BzpV8jeYIlJHKkXWRHbUDPQWSBzgWVYKK5F4Lm1W574MIpbmwhyLgQuj7DVZormwqhYecL5oVOR6rhc81m-EtzGBdtUiND2imTDvjpmKGTSFRNL6xAlwwS9uCE4bc1lEAUj4LBprvm-2LPOYRK_aIVXdQHvhA4V_DY67XhB8_HVCcQnXh8knXMWMnW0EP57WzcxVW4UsSNNCYT5YDRY7CgTAfAkzwCQO07yQLLl5UI4AzQcOQ_m_Z72Krw0t0LG7CzU2gF6TbAQKLjSZYBBSQKP-LGGViCuSWrAJyWrBO6g1jk3AljCWtQRBsMS0bVHZ5sKGDA5NP83iMADaZYOeje0HgCgfNnHfuRBgAzPRh1yVCBC5I1zVQatY3tWo2jGko19m7ZwTpIXIvGyM66mvnAGWoy2d0aWKUQPfUH6icWq6xgKWW1ACxnPDgxUOy3qm7HAOWtxpOWyM776jnDBfdy2ZYSxiJgL6Ba8dzVgAaqAhYXs16wIXJejbUpPm-ETpmeK3aYR83a1Z82ogZK1y4Ygg76Xi0YAeK08WlyQYAfK0rqxFiZWj9BVWjICVWqVg7AGq204Rq2EMAvy0VBc3NW7U0Lm_K0JyaqAJyfK0mMUxi-UXq2DIzGD9Wsa2RAXq3QKca3AATi1TW_iioGCdhdWpa2HZfK26vVKTMLaqAbW_gKuqGplW4SK21gRgBM6ng7y2AmB9A9jkiSLE2XWxrQNNeHaaMB3CC6vvXX-fXU260S0O4SYwSafK38TbxXG6lqDvW7FgX1L63hmpvVW66_xO66qBCWh3DfW3s4sq_62RsD62TiGG1p6x63Z6uximrQa3SMEHAf2EK2cxdjZISiS23WiVUE2xFhXWtChz4e61HW3vXC6l613a6qAwm4NiA2_XUw2v1Cm6-m2E2pm2m6lm31aRWD266gBx6k2ow2w63mfBm0GsXVbRwZG3WMVG1964W0ckIXJSAaK3mwQ61z0XRSH0LS1cuOuSFCIei9BIeiUACxhKWmBj2MVtZmsYHC7wccQeMbsZlib4StUOoS3aNvUXJBOS2226j228fgA24liKseqaBsUm0hsOsRj8S5C5I08T0ibQQu2qSAzWhNBB2iqniFM4TLiC5LiKG230icVgh2msAImhVjCCE1jJ2o9XSsBO18sXJTDad21p2nO2-sOU2ZKR2qKsdO3-qlBRW2iN5Aaza2MHK8Q1MTYTBMMALOKswCkIAfWCKS2r2sIjWN6hG0LsQtii2n23d2vSQGSEfXtsJxQuKApSgJDvV5KH21-Gqe3b6ZyRMGZ_hz2yBLtqjNjV2m4S7Wx1TZsIjWLbeLxfQFaWhwT6VevV7oZ8z7rawDbJUAJ075IeiCqo1f5chRFiHsbAACSTAAyaX7pNwf7rw9V-3wcEHo_SyiBxjeuDzAJ6TB_JCCHQ2s6bc07Sg0c7SgOq7Q5mXSTXsynStciOLtc-DlmswzndchdTOlAP5o8hdQY8rHnbKK6V46FHpY9NHq7PDzaUgBfTusGlys3WUDobbviJbEXqUO6Spc6r6Uq9cGVBaHGVKhSwD9UaPQNAO3SO8LLYwyzh2AqHh2U6fh3J8e_qYyz_qtYLh08OzLb39IR0yOkR13s-R2v9dh3SO0UCyOu9nOAFzgKcVvoX9XP5RZB_qXKYR3-yHh06OvR0v9ZPgBIIx0uVCDJZbQx3agGDLP9c5T2O_3lGO-TjoHW_r59XQG79CDL6OtHk2Opx1eVXx2m6fx1WOkSyOO6fphc2Tzkg60Y0idxUyGgKizgCeAzcgKEDcosDBDcKjsRbtBTzdtSyxfUZwSZXbdATADBG2tmvjPnVviwCZX2jIBRc705t6UGjAKU5yw2O_ST6v2iIgaAAKKRp1WIcOSy83B3v6fB1zqV9BJLMvRJQdOUVhfKkkayMBDUYqAIO29ltcpKCccDrnoOgx2YOg3RP4Vp1zOpB3E8lB3yWTrna8VZ14qZ0pQTbEBjOx8YTOwXwOKjzXmaNAC2wNjRbcn2p3OwO1hm9wijO8Z2wAem5MKlHhgAPRT8KSgDigPzZ_HPw0C3AB66NW9UhGLRWQab9U0Aala_aAJCObQvbyHE-1B0WF14CeF1VoYMxSPecZDFXUyJUZdSouFF3GrQOyBIILb4pYMxDFT9jkOi55Vsodan4eCHzcqopq2VbBM_PMCxcwoCOdF8Z7zO-bGIDkTlQZiAiAfEBUCVzkYXMq0bOQIAEADKjBANJ2JcKZ1itcJyoukl18bRuyUalF1l6QizMiSkDoushZpJPDbPaSYqEugF2ebOF2ObSpy_Gsp5rhEcDFOvKZzc1JrcYJTaFUAl3yutV3_OjV2KwLV2fgL8qOUKl1KHJgq_OBfTquvzbuugbBO3ae5hbMJ2ZWAJ1-ZKJ1Tq_dXaco17lrQXrarUKoc3H_BBbf6xEGEGxwHAVRuOwJ0eOgqzP9DPIbZLV3T6Up5MJaR5FuxzZZiJl3pGzYA5ANl1vgEUpi5GvA_OrcoBuo11l6TfRfO5pW_O37T_YKGRsYRECa4AoCceCfZVFY2qsNdN2C3MF31HUW4wLaWI4ZcJyjuobYW3ZF2Lu5cIL6RM4dFalYTHN2xbul12BuhF2LJceIDu-Xo6QFIAju9d1juuk0nOo1arzZYbB0S92TS5WCkXYWbqPRh1jujQpIu-fT6u8JxJbTObInNd3qBHxazHLp1AeqE4vPF8q_u9911rHxpZLRpaWcMHZNrejYSqy8h7uzXD0nRD2eJIgkfJKD3uTYD0MPJPb4iAJYA5a2K_OJd1HMWD2k8ApaWcJkZbLZD3f5bLqu-Pd2GuzV2Obek60epD1NLGmkR4OohRVbEDUrLV3eC_j1Eu-tZwenhz8OLF0rLGSVsukcHpHe2JDu2cAXusD2jSzF1must3zjLsKOusj2PuxOTEZHsj7dZtaqeyI3LLBcYYuEGa3u_XDuuoz2zjdT1f6vzZuG510set11Bbaz1_G6R7tAC0Cee7BYC2ND3dNED0NrJzKCbQCYpuiZyvoLN0PWeHRKOsx0qOsfpZbDPJB0cj2krKU7V6XPLJ5HLQcOqL3cO7R26OtyBqWCJ3Ruzna_6HW7CezXDFu4r1GrJz2puxTT5g5L1NuuYgMOvD0duyQwZ6Ft0nUNt0UOpr3NylHi2wb-18sVkS_Ovt2qqNPSZuhNSte_hR4CXPZuaUVC9eoZhkuAb1i3Gb3z-Hr17Qn-39ercr_YJYBLoyqUKGJB6iGInbiGVvQqoE90Ke890JARL0byE2pzcf-4nWEh1APD8Ag2fc7ZTUV0fwFHzfQNl0wve13oNDl3jeYMzrqa5FASU7KjFGqi-UX73lQPU1JUPiIjgIV4aJbT3KeyPZEuTi5TACza9oX53ZgY8CYmLT4juDrZcEY7364Yd1ne5cJQADd0cuvryw2UYqewBL06enhLY-n70k-jU1k-qooU-wD1AneH3Y-92rbA3WBW0P7Zvuxr1Putn3Eucn3ugS2iSwUOSg-m4V-bPKaewYX2uADhL8ORlDg-m-UmvGH1y0Kn26JYqA8-oj3_ur07NAZH26wN-1GbVH0yG1gCK2HIAf_I7JaQH3XBGVCCbGUJXtGcjTBGYjR6SeWgg-w04ReSJZTwMYAcYHSbNUGuBv0Be0JKeIQ7rW3I0G5IAEGYMwfsCcBVzYTCBHHqSMGPF3aykICRGTbkBCc0bl-VqALrLX2lua33i0eV2ium3ypEFYLMycbqkc4CpW5YKiIFfLIjgey62oMMznyd0A2mLoDCMdOCyxU4xjSAUyTgRvANtUXjBGHwybGWNJNIIB1TSEB09g8B2PGmujNmaNol-a1C9-gWjZmasy3UVOTx07firgGf1q0Of2r8Bf18aZY1nkkTQC0SY3L-msDfLOaygwEYAPteAAFOHwy3GE_0fwQ9A_GApwn-1AAzmbQhpmno4Bm0_07kQVz8mVnj24J7K-4GYX1DI_29hAUD1O52YJOxFh1OgUZdOtWhh-qZ0iIT_DkEN53nOjlQsNZjxSuYUCDuvH2Kegn1w-njyVYthpF-rw0KkboC-qnriicMYA51YFk9cJ_BYYZEzoUIg0uHGgCeirgBENAKj2oO04Ns6xIDrPXaCMaNqPZRIDPZThhHTcPZ8B57JYnUVAjAT4JtONc6kB-aBjAXqFvc7-qb4uOySBqKCkB_ygQwXrh-q4_Kdyzso9cJ-JQCtKDEB1QMzFGEAXDRQN6BSUo-GH_38Bv_1JC3IWgwBwMSBu_2oY0AXOB0AiuB8qA5GJwOeB1DHeB1ADlGN1rT-uIzWB0QOlCzQX2BxwNmm_wMuBqIM5GKAUfwLwNmm4Ra-B2IPlGBxibarv1VoEIO2BjQVHMCIPX-sdBxBtwOgwaYzJB0AgjABIO-Bu_1pBkRo_tOUAzK-bL6gKXgQAbIPTQbjT_-9toIcVoPEFf_3O1YMwxjWTB4CGp2GSey73rR9Y6TPgWuCHUqn4VLyxMTsCNy5XjZwCgwn0V9bk8eeAYgfECrSYlCPOcJhl6MGY-cS-1BsIRaU1LjSAkYAMCjHYOg0BfTdHIT1bAI4OLB5zCbQuAPenS4M4BiY7rAXYPYgfYNLdSYOdyL82ubNKCfB-ADDHfuxPxVp2TB_JzbEGZ3KsyYiYevINblBk5CrP2ZVCp6pqoowWv-qcVcCCEPRofij3OiEMi1RYVY4RpbnGsF5gVVL3uECL2mOrL28O8R2wbT25JPSNZwhpL2kTOxwQ3VzibABcDAKQqiKqwirMmI4jAKA4icaD2GY7UjWxnFzgchqABchk3woBgsITbFr09uib1eEXH0RRLAMoBKn0TODIOLetb0nUcfI8qY20uKlHjFHdDbjHFVC_BvkVKEXm6Tu0F3mdLogmcuuZDBxJ1V-2GyY0WjA6TOYPoAZwTYWcnhofBcCWKP96JUHyZuLW4y8RAjX2i0cXtBlEOgwSYNA289XRh_XVY1W4ytO231gKCOhCh7WL2Xd0ONy4nwQjWjBdbaV32cwhL9oEcAugURDUaP33Su0lbpCLhiwhPMNWIWzkYXRl2ped3KFlFdSllMaHBGGLYvGSAxbci4aqmnp24Y2TK3HASBkZap1BsCAPOYYcMy5W47PBi4OvHO4OIsFsrYABIZPB84NwFQcPEZVVDMwOo7FQB4PeoFkOGhy479Cxbi_Bk1CVu4v2s6Nz23oYo4eukDIZ6Yyg0OyIDs3RK7mh6OC83O7p8syF6yVCizh-N7rbSpCqioTfw3gYKyyc5Vndoyp0z3Z9nARtKCKB8CPOAWWBQRiSBVouN18QPdlPsyJ22GWXT-yMiS0EAJCGgL-qfBLDDmB_jCoR59kNWDTmYRmDk4Rw0B6JRlAMjZ4BKOIT5akTemNcmvgkR9CPkR1XQK85SDqs_jCRgNiNkRlXRoHQPm4R3sP_ISLm2nPWxi4G2hVswC47TXKgxABQIiBLiJdAaHW1486hM0cEIAFcba73br7QDUiP7JHpCU4J2rrAeYAtyB_6gMloALgD31XAH-oE9IIB4KLrh_MiwCqhRvA8yeyPHIvSBORs4PJ4G8DCiY5Fs_TNh-Rkhnf1SLR9AEM4P_XRmRaMLX8k-GBj6rDAhpdjiq6JTBhJR7zkgWIA6fR7YMXCSNXHBwDBLCIQe5WDylIONlngYiSmzO8BDeFVDP2ETRBCZp1ReSs5U-K57lufQDwgZzDP2RvYEe5qNuBYtJEBmgDWCTWiakNvxjS-qNapRQEHavYZHtSy7xzQQY8pICzAXQCNFgOaJt-RKh8IOCP1AGaNNIVmimTA2CrAwQbz2PeBGbd0Dx_GeGFVXECve9akE8bXmSAU6MQASQArR-CPZeV2EBJcybfDIXo1SbOAjBx9giYW6EzIVnWZGnqSSYaxmtxXb5QmE4ZnyIYA3-rTwcAbKamDAGM4s2cj3DGzaajCwC0ESO1HAScD5YawCWEHIDW-NvxZzdgAox60QFYDGOmDG07BAHGP3-RGOaDfGOox5yPExwRiU-cmPCiB4bGBATC2DSGiYxme5wR7jCZTL5i5fAgbVjXe4yQDwBmIPhBwADgAqoUkFLAZsFSxjwA7bU16kg70wkMsCP6FNKDNgxWNAx5syqxkiz8YDWNPXPiADcVmx-0AbgB-IDQPwR5wKoQ2Nk2BVAmx1IBmxxM42Ah33xyEoy4a44BOxnwD-UBVC3GfmQlGSzgmBpSBXAHID8YAbjjxA2OakBVBP4fEBJ1LHxZQWUC0YpugZBuABghfEAjG3kwb2UtmNUd_CRxiEIXDWWOKxnIDhyIey12EizzQIyB6BAw1Y4AmIGZWEIpADONY4LOO1mC4YK5cLlvc25l_oSuPa0WEIeAWuN4WqGRHAChqFQZuPhyULkVxzGKiHdindxv9BZxzfED4fECSACSC3kxuiZy0GAixMJCsAHlkkc2pSzRpQSlBilx2nDRRWiFeRDMXSbmAIWM3jBPIsR_PZixv3wkWFVB4AW2Afwe-M_QW2A7beuNNMW2DsAADEQRu2AYcgeMK1RWCWQHkiWoNCPARv56EDBeOg2dHjvxzUhwRqCPzQT4LqMEv4fx7izwRn-OKxjSYAJzpCWoGBM_x24zixp-OWcbBOLOj4J6BBRTvxz-OEJ9ji_x9BOAJyMAUJ_cN8QROptOsmw_O4apNMaeU--C4YQAW4zRGH6DfDSMDsJcqCPOdCwSQDgCEDfhMXDZoCEDd7LBGH6iiJ9KACJ8RP-UMACFQKRPmxpwBQHJBPgJ8nIvGVgBLAaJhkgAxPjAETS1OFKif-sGQvGO6i6Jn6B6JwxMzAExNOAMxMo8G-OgENRz9gQxAiaDxPsAaJj2J_VXvkIG6joUmzs2OzxHAQgaARkBNAaG15s2IT6Fx0JM5_H-MPwSJN-0aJMkWWJNAR1BN93VLLRpYC6nxx0R_beLyafPoDsBlP0HxuKhHxnbngR9QTXx8BiJvYJLqCMthRYTzj_O_3wzPOZk4s2tLIRvo2Mga-NR-NLRIzGd18QU-MqLLpNNJjwDVJvmD17YRo1gYwLFAIWPtfR3E5-AQDvcX1RCx08BLJ-ZPvADwAFQY0UHqlHhCxkWPYAHpP9m4izeIItBCytEBAeZbLygfHRZiDwAhy2sD8ZA7J1KBcAGzORY9qebAugFAImaoWNRh95PPJk-h1xLDiPJj5Ov0I5C_Jz5Mz-F-joCfhPCoea4TxMFNDeHOobo35VgpkFMx-BSC-qIFMLgV-h5-bOlCK6eiYp0EpogJ7UWADBZoAJ8CfjEcRGucUxHIfUYDlFRhVRcNXygBSCu2MiXsATlytESABS_HtJogHFM7JnEXDJw3y1ILACHJ9KAtJs4BH8hfVYlYiw--AVPEWMZPLnJpiTJvFMnx4iz7J4VNQpoWMnJ6RPcBGwp6sVEAEx1gQGdVGOazIDSdIGWQdBY1NdMLQVIoUYjeIWWhzcQJOGEQOiy0C4aFCWaa12R1MB0G56ups1OFQeaD00FzVHEHngXx_lM8-SgDTaVECe-XpMMTKZ3BPd1WicONMQPRxU_5ZGzh-PhCMgO9w-ca566Rw3qkR6uWRgWuVtsHNNoR5wCgwZwSBBrAp6p_hA7uHm3pmA1NRgbLzppiVBxCLbhKp1lMlRsqOJAO9ymGNfw9fEtNy63BrVpzw18pvo3YAa-NpaemLgulUTvXb0wAAPUqis0FTkMvsR-vAEHiwAChgBUCXT_H14Aq6ZRg66c3ToMGXTO6bXTG6c5A3qnQguTC2ATTHpimcunTp0FXA80Fd8o6A0mwxrvTBdnAISKeGFUqiGN95DfT-TiFQtkvOo36ZCqr6csuzNQ_TwqBq1tYGjYwIoGTqqZGTrgBFTAfmOTewBQiF0BmT532WTCybWTKyfT8SwCwzGybWTlkS2THSe3j18cQz6AmjTr8jQz_SfoY0qaGTYacN88qYVOiqc8NyqcnA8GcN8FGbfoyGY8A1GdUiGuWfuFgwIsCGYnTipksicsfozwmevj16d5Mt6c4zrX1XlmqdQzAmeWMdWnUE9mAAMMHCbT0ac0zTED80bbA0zB-n0zWYEIG_EY_0FEdIzlScoATab0zr0GjTeCprAgSeiTrGcVjigZUT6UHMzGEc4jlEZEjeiWDTu9xGAQup0zt8b6TxUGCen8ZgjBodDTf7k98aqajTpofD8raZjT3NGCeLGsL9bamszgqYOTUKZaTr0lAqmcsa-zipe1aEAMsgbTPt4EF3ucoRt0WHJ0sXEc6A533u-k305AdfL4g3Bg90dEiLi-yUV08kEV0gUBHTIDAx0HZ2Mu5ym3OgcNazUwBvAooBh0VrKVCGKn_ZCVn2SxnFFALsHNgKVUzQgnAGiTsEokD_zH1u9ymzM2Yx5c2aokC2ZSs-ySIk7fUOUabPb6gKnWz6wGasooEgGkUrUzChnM1AsKs1iyjez6MO16E2d3iucXDixPNQSx8X2SBVQMl97Ur8eCXkgeCX6zh9rQgX4YvizljvgFWZAAvmAu8ZFkS52stcExlhzERqU6BuJoCEYMZ6krRGtAh8aqdfYsUB3sS30wOan9nIKxATXB1CgNlnyPVE7FsYqj8EHiaDlXFZz6AlXskCWWs8kFZC9IRxzRMtoInYtaD7OeaDYuaVSA4zrs8kE8iguaZzIudAI7QHDD8oA5zMQFHFUubMAA-QTeNShODuOekUIJn-9hYfQoK_Fxzo4BNA_EWCM8VB8suObeEpueFzRAqVctx2c1me3r5JoC5NNgsmF_zRIa7uZQ9h5p9lbIpppxgV4i0_KkmHLqXyt1CYjhqa78kwp6q2uz6kIYctzbtkv4d4C14m8WPi9a2hCxaTOcVokrsjEwSANueFzxrAI99uaYkWedb2pbn3gHPFxzi4awAPTFLz_sizzxUGBZl5Ev4rdmw9q4CBudOe9i4WAY1coFnNxz2JcycpAQJu1MGHeCIwT8MTOACVbOBIUr-U-aJ9WcByReeZrAKecSAaeazgS3Un57dGCwF_FzzG9QXz8wByRc9QPzoRhJgWIEyw0-ZgAS-bhQu-eFDkpyjSAIpPz4Lw_De7C_DAr25mBPA-1k4nPt5EBRYSco_tmFlngf-bnzP0rB6f3UALCPTQsAkhqksPXALEPTVgVomR692k9N0QEpMjpniQZ2m7BYDszhG_uTgP0oQsjNwOlavIZ5M_01534aTsIoAEk02DagrkiXZXOuoLOUFoLbi3-16cPdOyY2AsCrxEQHgAwQrBalw-gCxe2sDPAIY3OGXOqELIwjAt2h0F23wycsz8uzgq0g1SiJnyd8VyglHMy3Wq2QRjA02PWGtrfojU2xAY4Eqa8BwpGQv2MBBdA1SdhwJGco3yjcAPxFMu0Dadh1PWvwy5GENH8o010NkVwGtorhZ3SfTyYuRm1YcRnTZdJwyumCHTDonq3BmUkdGKEwf_96UG7DipjcC9QFMN6FHaKI4Hu-gRaCL0NBlsF-2o4HS3TM_QCAkVnPwEL4Y-2Z82ZjWSYogms0umCHVCEtgy78ChZ2mJPiim_MfAjxfKhQcLrawwSR74USHEc3N10WpASeGEqbNqKPE5G7wZrAyoHRF5ZC26rJESwCBCW6BgxMFk6ddzdixQ8fRZolKAkcLGkhajfl0KNRAdFIDTTWL-iwVgDqsLoPfGCqPoF3aIoAzsfDsawVE1NUiKAMGe4ap4lxdXl7JGOLeIwk4GAAuLRMpC67ABuLe6EDIqMGpalAEeLUKeuFpbj2LoRdgmkxBeLfRZwAFxgVqpxcbiYQaOYWAEywUJfhLDwTBLyIdyDpSH-a9KyWL8JcfWgxuhLxKyxLkdEiAuzTUVe43OocTEYLl42ioIEyJ97CC6LOFpOLxf042M9DTFRJeQmtKfxtlMz2Ly-0JmfJcyLRzGV4PTB2GHZWBZzMxRLxJi5wCIZ74MmxPl7AU5GU0e-G2Ugyy8IuiQrRfNgRUcaLIaaqdpDpwmPmiF-lTUMQYE0KLgbV6LpxZ22ULRpAAAduMQxZGaReE1L_-CNLQ42sacJdZLJdiOA9xRwtmQWTqPZ2qadJ1kVPfE9sOdSDLxJhds8iu3zIj1eLbfEnGD9U6aPK1yFYhcsgv2npLPR2DLLgpNLuCi0eL7vceiZYRD_fqImbBcpQgOBH4YxtTLnI1BgGZbUANQu7Gi8hEaxgWtLuDRezavWlNoszhBms2CStqwma50imTXM0la41wimms0muHZdsGPyskLh6wEwE1HHs6FzLgi1Acu55wngczHiEnwThA9WQaAXicuOkgBvgUsBMLS0hWo8coWojVx924VGPFjGAuAGhaPWmozVmo5YlmVRZeo4QjrVtSjGNhVGtoGCeiAR6M1mO0xt2yhaRGISi8V6pWaMyeEW4Tgx-Gx6wn46UzwaDcrr2iVEWkwDE7ZQ5ZYqa21CUqHXnA3RhhArKFAr9EEJzlbIGEz5Y_Er5ewwgCc_Ltg2jMNu1dgDQC44lgFaw8rMMq3_QGo_5fcUgFfQrY4HIATgwFjQmfYqTswWu7ZZlmvLRsakFZ22SsyTcuJhEAkPlvL18H2E_pa3iRADvAarV4rePX4r6UB7LbbGHqpuqlaLsZKFaUyIAGzgy4OQh0rKp34SE8W0r93qcy6Ghx6ElcvsUtAoKFlb4rkle9QUYZMrX-U9lEj2cyisuiNpQBMr7AAxTJldog-0iMG44GS8TiyH2FXRMWAMypLSZgdKUjH7m-PGKAE9FuFJtUKNxgQquGO34EPQsa8kFaW6haZeefvDLTpswKcZDnfLBABIrL1GRQYlZQCllakrCJFfS75EBTaGq6YJSqtE20ciod9WG5SdRdj18xuucQihk2VcKU2snLTu8l9dESq6YeVeeieziDOdqlar0icXjQUHjq5dnHkSdQ0U0lZvLdlcvsrxU-22AFrssiuV4kZbCcvzi_LWWoUr4s3sryvAgCWlf0r1klmOnVZv2cQmgSTVfEc6ACmrE8nvdmsxjDQaCZmjGnYz1UwF2k5fWjIoDsA6s1ZjD5cVkcmFJ6BkwQVM8q08cyAgVR1Bg0Vx2XWE3PHsLfFrgEShto95Z9aiwbKyyQA3WtUlQsc0itykmC78x5x7hZgP1ZggxXWrRFzg4nEKoaaIiEbBoqmYc2AYX8uiIfLpfAwiGxrUFcAkCsClgyQAILFMS08ismRrUoF5dkmGoxggzU89aDlwzkCJQpxkjGEI3zKLYaZGTg2imINZhjnsUVkrDBmQyvEKolgOvgn0bPjQEhguGPm-GFwyO5cIPSgRVZKr18EKgZFa_sGi3MGEFZ0rpU1MGgV3CEcYyLLFTsEGptZsGD5aJrtpMEDPUldrXfknG_W00L15e843s3G5qUwurgo3wExgwdOdiMFiFuDlqnqm121hfwt0U2JL4M3YAsRfRg0UwRm4wl4Bung5meBsnGEUx5GBTCRmQU3cgrBYrrgviwrSI1GmjNfGm49krZe8BmmkQnmpgwASo20w2yYNdjm1tDCEISW02vRgz9tUhsl-RyX5-pddmvTXSgVkv1ma4NWyiJfHGRi24e_dfDm17XBdfdZnrWqtDm4NcCqTs2Jt80HvFUqj3rA9ZdjrTqzrKQuNowRnTQ1kCWyooEo5idh9sZ4GAU99bWQj9YXF0zqjoiYcxg79YN815IEq04AKApaFCMBBbPzY4DfrLbK98gDZvmb9FAb39ciAjzjvr0DdRiDwXAbtpCgbS2TQbiDaIAg-Y-wp2RxOT40drsF1HmeFcrc1zhMr2bhwePaiobPLTYO2crNmC9ePA2phjrPLR-DUCxjrUYYKcKVd6wi-Sob5UCAdQWAnWDbIakGiwWjkFcTOcyBvUMdeM6uqwhSJDbgAPLR3GHVyobn6CdavTV610jYyrBlfpOKiQXFn43Q0ajdtayeEaVv1BkbmVdyF7QEsihjc0wijberrkHjLE2jWoOjeskVjYXh7HDyN5jdcbMpZeSNrSpMfVG7NUzvsbOS3yzT6hcbajasbPlyCbwZhdQkRm6rpjlnL4VGytctTzAmtcEYzRgqo0jdgrY0w5mj50OoFoGKgC8L6or6CwwVbLewNgBK2eCgV8PzvhoNtEJr1wyH2CLgICurRsCpuog8prVnIIHon4g5uMrDqwBmjlc2KPCqxmcBGYbMAEGb6i1fYkOGvdYCQnQM3A4gFjYMrNjXlLFDygAF9maks-EmBUQC08JjdJxmkDmb2jaobWYi2brgAg8uzdfA9PAibsje_yaFnmbA8B8b9CaTMVojrFPnARmdKfmg-6THIAcbTq-uo-rnpbUU81YGOfpbHOTEZebzdnHkoZcbs4LbUAu1aPqsNn5G2xDebMze1oTLj6FQ9UdzL3B2G_TTcWEmvIVeyru27AF0dooCFUBujKwlAELz0fLMEsIDoA-QD5w9QDGdJvrDZFVGcm8wuhGNVBDrf8wEoNqgskLaAXh6IYJbCUdV0UkaCGZ1GbDJTslrd3nwtq-XcuiXipM7HEkAA1H8orz3sbHjYUFbufqDzJoiAFLdoIKbuXrMJfM9ercSqW3PNUzllDR6IVZb8PqSebiwcboRl4iY0atb0VE-tStHA0kQBGO2lFzLATxxbDfCj1dDZnQHDfVN_I24baUFyr5AFqcp1ZfS5Jd3dztgWrEjd0bnZOwAilxkcJeHjbyJc2wq0G9sydjPArVfTsQdizsodnWcFLEdbxdWwN2GAaAiUfPAwrYZGYrafOiXjLGUrfU8MraqSjpnlbirZElKrblblGpP9crfVKATYKcKBZg40plTk_IxtbiCEdb8YbhgA2GHbHjeaScre_01reKbM7cdMfVDyudjbUbJzcmIw7abZz9eTsJzcIs15Ph2w7ZObzOBQbD9dgbwbVnAoDePbf9egbn9fe-FDHZmRjZjryuSArhAA3b1rZie27dTQ5zbMQODanbL7buoJ7bWQaDZBLj7cyrDt2xbjrZ8uWqutbnDzfIeEu3rzdY4q62WjbNZbVbzSqeGoRiTc0lHubaje6bJlaZaMoBPogzfSm9_sDbJDfKMEbYJoLs0Q72shTbBTkI7Yny0W55UlKkoqZcGHduD69YPrQLjo7HTgWbPjZ-D-HYByDHfGb5HfpOZHacrchU-rrKYQ7-9ZbrccxbtupZ1iXDTEqtpKAbqmFnATfOXSjOzTqdHkZ5O7sQ6yuTlb-nf3SC7aPd75DEVgLc2ri1dzqq53Rb5zfWrxCUhbedQ2rWAFhbXDy7bzbZ7bS7b7bGZrQLOUFTknzdN1zgprLdjXPq-uuC72AHKME7aMUadQ8bEXawABTg8bMXfPqxTfi7iXYCbyXYJ4unZn-aXeDbsXf_buXf1OUneMC31YnLJw0qBrlzSj3ghyAhbxZAMecAmnHbk7bgj8LJSBOGf1eG5gNa_LINZHAjXZeatGCmmMkHcAuTobZfzU6IAQmhrRpWa4y0mimiFYfL99nVr49nSbLnZ1ryQDJrUe0U71Usa7TfNm71tfBdMcw3rs9bZm_ze9LxCWs7KdVGuq1fWLc1W2rELZs7EwGhb2ADc7aisrqIicsr6dXRMaXcolIThjbGDazbAdJzbx4GDs2djDsZgWLbK7dFa-3a47_vDo7aHbaoCUxW1tYA8bYMB27Vxzi7p1ae-xTeR7b3dS76PZsVrVyx7l3Z8uaXae-2XeZ-BPcUr18HwA_gAfeBQGJ7UGaSeM9eQ733ZrLL8Vo-THa3sLHY6S7HdJMjPZ471qGE7hnebbGHux7crbS7A2AF7xTeF7l3Zx7LgvF7GHau78IZeSKPYV7PR1OrcvZPoVPfL0jPKl7FPauOpPdp7avaud7AUh7TXZbLA93iuRn1sA3gi17KQmCSwnbmLipiDEmaaFlX8DgA1vZycWacYbzmCd7t1bHoiLCGC9Ap8EvTeE77KvtxzldAWtzRfGmojvGyV3ed00iB8GjlnsVgGB8Wk06rL3h026AGN2rtfKA69CmwmBTO8Fgy6AdEup5jwHXEoHHeA6fzveXb0Z5fb1gsL7wCmNAHQgBaoPgRkGRglUWxMdwaIAr0AtAyYBLRCLIPJRkAzJm2GKFiVb9ltwuqcmadD7jflrzPTBD7mojDbsvfFL91wjw_std77vbROsGciMtJ0t7bvazcnHg97_bow7DvZMatvZd7MQF378AH37aJ2o1tvdky412UTeKp0wh9AdVsmUWmiKF0FfimOu2_bX7Wbg97kKSP7LnZP7MVHBOzvYVLbak0-Vvb37erg37Cnd3u7J2VOgmB-s6M04qfJy5usVUhiwp0VMop13OtGdGubqucKesfbgHja87OUDFsw4FgAGkarg15LlQ0pjZM9Tpfa3h0uOtxTmr0oHqcgpzUA1dmaAOdUwHnA6e75Au57q2SQ7YAGEe__fh7fufFKF5VrAFnYeKSdWzqboA17HjYc7fA7UVIwFhLEvdF7oIaWVaFweC6g6XbY9VhTVuEjAcrt-cHvfPUIBAt7P_cv70A9t7og59mAzi_u-gA97fz2FVH0FUH_gqbbOUFk5YdHvSlA9vbeQBoHVJjoHw3JcHiPZ8AYQunb1Fp8HaXD8HRI1QAtA_cQWEuONyQBXaC7e8HFA-iH1A7iHgQ4SHU1VjQIwGSA4Q4Cbb3IiA6Q6GYMQ4CHjpiCHWJyQIi0QPEtJ1bQUAVrAFcow77UdYWuLl6rCy3iuo1fo7GHe6HqipTWWOAKuwvc0uRBKN7baiE5CneMAxUeS06sHC-GrZTdEM3Tg4VcWU5zYZK2yVhm3FdDr9yerOySz-q-Swt2U4b09LSz2HyiD9W9ydQywnbxVvQ93gAM2k2jbqVmtTdnlErSCA_0iFijbtbqYXeVdG5vOoAzGDbiMEJA3QSeGV2FHg8AGGAOUGcw6AERgII7kcOUANMC8E5AX7UbdbtlhLkI8_QhpljFUsCuw1oA_Ei_sFiiMGNjJyDCQTqmKgwh2Vd0xa9F1jLoaCBCRHF4eIUuElrMAzHBODI_MAbbBOQUrWbyaAEC6TibQAL7BZHxwHxHZKZOQAJY6QhplXlTlpKMO8qIAe8ssEB8u9OD_ylENI7dsJyGvz_I_yMzI-FHy8tv-UKfFHT3mwkUo6A11AFlHAo3lHBUEVHrKafTh2TBgyo7QAD8B5HJRlnI6gEwW7QEAAxn9vgZnB0DbNiazbpRRJimxYAZkdStelCkpswLtAQAARpG6OcIlaJGamgAPq0d4aR33lG3Y4x8Us_MSs1XzS1EK9kcyXw6BGXw84IOJl4K7Q0Xm4wmXl-H8xya9_4MQ6LABFYMUnBt1gJcoUDo31AVJmhctHH18bnWOAVF_oawMmpcVGmpM0DOo6VDf0qJHT0udcr1ykKzLAqyzR4gIN789YO0d7QGwLbbgorgFmqPGFMxXjPA8fi5FA0yaej45WQ4fi_3kqHepQk2LOPLjaDQS2IuOG2CPaXK-3q5cBPbTx32wq2NbULxxclX1P20FxwgFc7SUpDWDeO5cKqwQ8MQUJ2C-OsImPquUqDhKXs_InCgFENvewxqaiDZE4y8BwQgqKc4fvAYQgXRKxxiIK2_7nMLee1TGF3RmcItxLJHm16e1KVowt0Bax4I4h-g8ooPrTVMJ08r7tbsInyO4XLBE_39rAROB8K7Wmx2gNWx8P0KJ9c7jQlhPtbpnG2JckN6JznD8J6MPkTrCFOx_2PRQFB9ewtOOCFvup8_SoxgBbxOPytOOKhNULt1dOP6TnhOImvFXzFW3lsJyup0XpG2ULt0Bex3Op6VJSopJxEb9mrJPLjDXkVJwJ1hFqPtB1DG2z1HkECgqcENZJZxtJ_tZ2SGepOA_P4XJ4yFY6N7K9J_ZPaABtsVkHRajFOPHQp-AOPDvNob-aDhzbaXrHJ_Xb5mI3acmHeI5x7jgHRF8Ilx3RODRNeJMp0swDuecwkUpywrjUZGy7YXazx6ooap7KwG2BPaGp9qxbx9yx7xy1OBWPrg31F3rZ2DPa-7Z1PJWN-Px2JaPs7Y1O97exTssgWO34E-BBlGGlkp-8xvkMBOTXr0oIXknyhiGpJSkOmOv8x90PzKAIsx-AJy-LmO_7VBK3GJXzWxAfAKCAJISx6S9Cx7y93LNABQEDdOtkGWPJkBew5mip0B9Nf15mq5VuOD5USJMDL4Kmw6Cjv9s5GJOPz0JWIhlgp3IeCiLSXmUd71eBONVOhxpFDBPupPBO9XohP2CrCEPpyRJpJ0XVuK0pPqJz6LIJ4VU82nXEgbuFPpjIrJop9A5YQlm0nKnjOsDMm1uKz5OhSKPslZg_R90rccMCMqLgsAaK17Ad3HPGNL2AhgRDxdxOIaAcackLLhJZwd3UpQMPY0BTPlJxFOOZjTOiJ79P1OP9O3ZIzOBk4C9lOzsAmTazPumhgRO1FoOOZk0cDUGnUJ-at0x-dd0DiIZs9Z9sBUugrO0xvpONVNTPjJ9a4J47WB_ZQlPY3V278MCUgUpwEoXRUVOG7eIJhBN6ApQFdrn6IUw34LVhKxB7bqxFR3jwE-1ZNKHP9bn-g62m216RJHPLUK74PaoXrmcBA1C51bg96uF5FWNoIi54g0S5yLkY3RyQ9s1Up4vM9O64P_AnwFdPMRRSZFpxQQ0XqtOX84zBj7S91tp6zBPtUhVT4GAWAC_AWoerZIIQFn192ezt6Q19PEDmztc-sgdSJ6gcsI_2PMDpP11LOsBztsvOBrJmhQ1v31M2ZmhWdmv1crJmhINhCT_erBtD5-0995xf1T56E6a-g_PItusBZ7n2y750_1Yvff1M0LPc4Bg_dl7vdmkZf_O77lgMo-oOOBkKy9gcGDKQZ4jOnCueh_BDPogJDGzTiCvkC06bNtbHaUmllhgbdkbW2ipq0kWpy259kKWeEqQsCpcGYCG2cHC5nlMg_aEMvpM7XkqGEr-HBMAcOBIaua0Wgea5rKlO4RXP9ooI5MNsAfgGMAXtqrtJ5urtWwy2pTjkodqhXuPO7h-qCLbBquBMF9ZF4fc31dLgT7uvbYB43PJp5-tm-VAdfCBOOkZ5YJ4cKjO4J5ZJMZ9IRXa6n1953VYuJ-wFjZofQjQRlB3uAZPKIOQuSZ4xPzRswEWJ3TP75-fOXeRxOm-pvO2-tgdtZ6OmB9ulxQNWQ9hNYFWp9sEdkHoemGJ3m0jgk7EHlhSd59lJa4l3MUz5vI3-GobPBmtAcVZOyR-FvkvhDvcsSF3fsIdvoutVnFPp6A4vATlMDnF7IdpjA3tjJ67W95_4uvZGEv4l_kRMNvUvJgWYFh2FEuIl_XAQzWDFSl5_kW6R0UZF_xRcJ0kuImo3dKO0jF7F-W5HF40uhl64uelxhsG4JyRfoqYW_F2GsV_AlZul2Y8ljqUvnJ6tsLFkTP-FqcvuHPI028rcv6hXAIyHl7FKZ7q7el2EgVxw09JlzbZafIrPqJ1twXl6rO9l90Az54cv84t0uC9mRtVlw0vBly4vR6K0uBNsyIW0CUv5l_tYUl74nll22p-l04uNlxqo3F0CvdlwhhsZwb0_ep711-nYvsVzCuBl00v-ZZRAxtkVK3lwyvH2GiuhSEqkiVyZPF5w71X5zbBul2w8PF8kuB4gvtqui0sBVxE1G4hcu8ta7Pr6HcsvlvUK0zuRMhtoTPHjisVR9htlMgrJNJiu5P5Egl0qPfB7eyCKu3jlx6RWim6E7KNAW82_UrVr43d0IMVZli-QMg9GtFV6y5BHj4sdCOQN_0equTnPU9ftJY1XVzYlTV-PJw5LHQ8MYydPHKMUMrsT6UW_nsXlzFU3l6QtUMWosE7vUL_lwZOC9sCviVwXQw3S_O1-vf1ul52Hd3Kyv9cMK1Mk3YbPa1Gv9mswsGG3baJ3AkqyHuyRnlyMvs3NKvMGGmvbtYwcZFv4EmWpSm8Hpcu28rKvVjvUKrMGx7_PWi76NhB7CTna7PNsS62jQMdknkItZEh5OAvScP_wPquVaKOvjVzo9C0n5tp157Zm87HRenqW6KlnZ65zJU8CDuZ70XTeHoaHOunjgFOvpq66c26QMcQiFO6OglqRcsWv-MIZtENkfGthxplYbAyveFkrP_wAyu64jFtN8-uuu11iV71-gBL9b9pMggyuF1zqul17cNV1-ccqvU-EiilBuYN3gJd152VpWooc_jp_DeEqYx4N26v5_A4lvXdBu9YLBuvV4V5FuCRv_VxRusN4-vLZEGvAMzfCJ0pR3alzjdm1y0uyHrNtz1lUV015yuMtj_PD-icu_oNTtIl1cva142vk1y7PKZ4CvG168tJN0ZPeHAJFugB_PP2ZSu6l9SvcV_Cvyjm4uHpcqchJ3q882qO0Zq2rPQF_PdwF__1tN9xuFN4PdVF69LqeiZucqmZuhN67XL7igMH2fjcAFwmy7N2txAN71LX1c5vaTtGxdiZwRPZ1xuQjPqGUxwPO4DJMUh5zm9R59Ahx53BBP7VhYp53_aaxxl7NHco6aQw0ABHb_Octxo6tHcEvitx2Pct2VuLHbl7I3XbAgnQvOc3VG6Gt547N50_Od-uG7KrHVuyJA1vIF7Ih386UhYF6Kh4F_eqJxMz6KTmXoZl6uhcPZr7sQFNv_VQzQFXVV6ipVJoDXfevjXYwp4CA3PtYPF5dFwkkRt4dzjF10RTF8nHzF1nnLF-JOqt_luxHYVuJHWJvrJ8CJxt3iclV7ORwUnkvC1yath-_Jugtw4PdaKr6PN5dvSt_lvVHX5lulxr6H186vXt9QAIUqUvdJ2I0eN3anfnH-6xIADuC6CY7MveY6cvXl7uuQ1uwd_K6iXRtufOHMVkitfRCXVmR110NU9VpagJl757OwFZ6NDhOu1t4C6KdyqtbmyTu6yvjvKvYTvcl9TuPtwcLHPfev6d3-g0hCc96KvH7fRqMUfOXIWLsmrtCppOvKQJKq1FYMUCd65lD3b9uYOOTvFXYZXaNjoKK3fcd1d-17lNhTuZ-5kw9dyvEJSwzv8jdPRpNxqoydxUQKd68sltxU1K3Qbv93e26tdxFuxJwXQmt5E6Wt_m6x-nju_XSruPd-bOPgPjvNd8tu1VxTvoIGElsgJWsrdgWvhJxE1hVyMAYxEHuI94J773UtutXUyPDB2bu5w1q6Y9xxz49-5MTdym6L15ZwLd8LvotzbvyjnbuukA7uOAmnvFt8Hvlt57v1N79OOt9_GI3RE6et0Y6At7XvlZ0zv3d8tu6hUJuot19uypb7PntWtPVpS-IQZWrQktwi8vtdAgAE6ShAS7Bir0GA7E4CBIX3liBkdaGZ4ANjAHp-RZGDAvuLUPx8kgPnAbCBNI4MWshdJJ5sYxBXA2CO5JIRzXDKQLpJdORjyDOY_dUUks7UHT_v2Um5ZKdfdp2s6harlNHFzLBTqeeoG1yx_nk3biPpdzOsAs2juZ7DCVuMed5mGx-gftdKbpLYObohOJmgwD3wY2LI2PNzIHpg9EzpR9Mw6oF6toJkP7Pvi1_5Q-ebAdlPKEeDHwZ9kowZtQIUmo3q0nJ0SlairdQBANXfv7RIVXIkBvuYqMIfW6JKJGDKWY-jJ24Ujm8BYgIBP30uOPCUwguPgxIo7KAXrjI0fUy9ToePoPc74KdJoZtXIe-DxirYJ_2Z9D4j2ESRvi70S0J_291w70ZAk2LfGJdnYFzDOVApNNIHav98s7H7iZH-Q4HajDyi7RXZouJp4m8jQEjc9F_E4DF2oflZ8jPjt0nHlKwxOLFx3vs9JQfkVAPv0QkFurcN_JSl8zhjNEoY8FBMuhqDnUopAHb2LSSRdNJEBTNK5vSZ-KuZnRoUw7RmgOyAEfw7Q_QhQ8xP2ZL4vr-qgful477B9_-AAFG3lSl3JuMJzxOAVzkfQaFVrWj_GIOj6JPUjxLpUHZgf_ZIHuGaAKHQ92mHTZ607Ak9bH2dyC1Jrc0f38MUerECAQg6AKHw5BMv_9CZnMnDFFTZ_0esj0TOWLeMf-OJZAmDyweasx1mr2xUescAXqBPHzunW1fpybSP5R6MDR9dXoEJl_rrmcDurLgH8ek9-ivoT2EbZ8MCfr6KCfTdeCf_j9CeCJ-xn9jdkfmTlMeVyl4fZUHgoSj5-7yj4ceewlUeiADUeew8VANuE0fpj20QYFAjY5jySRc_cXbWIFwZWDx1mID2pYcAIrpOj17viJ1roTdLrp8DwPuEdx1IP7FZpnNLUfPF8AtUd90AiD57pndOKeHN8Ef2Ty3qHWO3vaZ2juyD9uZED5YBVTz9u5l3CevFx7PYp5Pv4p_BjEpw-JZ969qlXujYl93-GexJ-ZekuhIVYL-ZJYP-ZQeoj04eplvEegJJLPGFZRC2yErLJm9lEI6Lp55VvHrCfP1gPY7peQLCyI01YWrIhkZ58KpkrGZZSD71YA9ETzGLFmeU-C7x5531v0EM-ZgZyzFR2B1Cid6qtGo9Wuc5UGfveGNlDh_9IxTfbFSo11G22PWfzwP_ztJYiA2z7OR2oSHgZcuNdv4pFJPYn0qb5PQfPCJVBmM21WH-X-ttkpbwVkgR6eCt1H5zqoEEUcM3XK46v1z8AkGh1sW1z1-I8Qpuf5ZdSdZ7EefvW4Uaqw6ofm4rdUqHNmHjwIz8UhE-M3OgA1Z7KmFuoEQqNoq7KV7M5Wwm6bRuhh6T7cUCrtz1-JKFcvYi8O2SPZU4rh_JY4Y1D6AjZPxQE7i7LavH457cXcmQL-CcgPPFQexVX83DRBf7cdcYcjO0BGAHhfALz4IlgEabKL1RfKLxR32ZlhhJMKdlpHND4HqLmUqEq8gvXDARYQCLgMo8kB-eh2A7ALmUR1JNPfiN0qDz_XJ9gGkvBwv35NPZMQP8gijJL64FzlOuEbzYMZ2M7dhN-6DPDF-oeM7dPle0KcUpz4K12Kc5hOzzfwpyjOVLMvNv1FTfhLL1mxLLwOfykNtvDoDovIj_tuYjxBP4j-egTt0keEJ-duO99tYnrClZxNyMAZnIi7p8iaFnWMM4Jl0dZYsHDvrdxKfHbRwEQr3Ra1Z0OqdrGZYjTwCu-5N_hZT-5vCjaxPU8oTz94hleDJ7FIcrxE1PdyleC8qnx--s4BirxqpbL2KvFmsleQV6ilKrCTzarBdKkz3BlmrAhkwd6uVzL4807J4BvZcg5ksNaX6AgiafTNxE1yZ99vMr2Zf3yuOVmrwEoLT1ivp6F3RYt3afHzPPvu1VoKvxDtPEXiilidFWPuMKWvMaPeluMKS97tKlemOITK8ZZJYM_oUqNpWWeVDwDtwZ-GwFzQR4hADadMdY5eHQLtuXL2LcDtyyupoCYvEj-jOcqikedT0KeYz7derJxhb4d2qePr41ezT-zMJ96tfGHNPuxOimPtKi4wa-f_x9rztKp699ZQJ4EZaT-QsiFj-Ros3qWPxcTe-tGLE22JNp6JeWRYcxzzmtYzrmtQPJWdXtfh59_m9p6XBdAPUpgJFDrMXvdpIRVvylsvBJNJABYM24QWQLMQWNec-8mUeA2H90CJ1jO8Z3tJXzltLQe0kPdpmixiK2pQJO8hor0iXqWo8b0ZYBMBzej8FzqTrTfhdJEaHTiFkq3LPFu9XXWtvpRBIv98azTWTbADdJazrWYQ6ZLPQf3xTGu6b6TfP3S0cXum0cmi3XgyHkL0Dq5BJN-b-LYRUHfG1-BK61_8HZ69c8G9vxkx1-lBrtpYsyHixtGhP-cfjcZ7pHhM1O8-w0do43RXxa-0MJc3zIpOQt7OvJ2o7wFVckFlwlWmLfE7xYB_xdZ0upaRKFiwHPj4O3fNhyx9NsEyPdV341BlVbLwc6rIJ-efyETih6K7yLOhiMPf5O9XecalVoe8DcGHuHVLt-X-K9b-WQupRlp_gyk4qqqo4cmsuQChjzYwTTxgz7_BfLY2qO_4mMMOJQGLRRVffBRW9yPb0RIvb-azfb_qAM-NagwTSk5Mgr92Vav93A7ID282znZWICdJzi3BfBQDfeMACA-ZbxA2CANm2IH5nYQ7NA_w7Lff4HyS0l722pHXBk4MB0g-XBctLA78lpAJYbctwxlIfxfVL975Q-aXFBRwJYbfyyL021BKw_HdvGnCZkzeuH-TbKZrw_RyI3ZJS5afWRWQKt8RLE4Hyo577yotOH_yL37wmR9A-8W8Hz745H38XubIKLnGsQ-fuyg-U7NdSAe5g_gewW3T73g_EH3IkBjqA-0H-A-M7ED382zA_cH9I-EHwQ_p6EQ_2B1BFMB4K5NoDXfyZFkhKAIPr676lsWhEZuhzuk5mju8ucNsE-G7vCwXpe-qXN2Hfwn2pQ5F6FvTDtbaLUKE_9j3b7Uw_ieawPc7ajGrQWT_YelN21KY70o2umPXf7XiUhs1K3emDu5x8eOU-YbKcYLzCeZ0n8oVQT6aZ9TJeZeeB6YOn80_4n8DRzzD0_a2W0wnyN0cqn1BRujvU_Y2Go_XwzQ-qnzTfqH2oAEhhwozrDfzZgG0od0B0pgkqOo35B_JAn5uXfDsaHjN6o2OqnosFn0uH-i566a8PbfHiPNqzQ10caHxM5M0GsYKzJoeoAxahCXLIpnn8qYLUG8-8II8-Vnwpz4vALeF_Y0oH5H4-nMK0o0lJs-ulDbeT5Lae-5_aeBlMDhxU8lv1eDTQuiN7qUqo27JjbYeAMY27dTFi-TI67gElO4WA6GlNaAI277TIS-7WOnBqX5UYbD4nS8X-sABID1k1ADjB8Uiuh9ZFPBwLAtxVUabwpQMSZzCLrauiKDzr4BOYXQBy_JC-5BGtM_MzAFy_6eby_pMabxUgVyEgBBi_PUSZhxX4thh4GiZG3VpBR6zXHpisfgdXzQBJX9xB5Xzy-aaNUBlXw7gMqRAyBAMyj2_Va_vADa_sWPnBUfBpALX32BnX1gBXX8gg7X1lBhQI6-3TCFxO_T6-_X9qjzzp6_iC4q_a8RG-A30dTg33GIfaVMBw3z0zbX-ecMXx1U4YniYKIlcBKolDA50WAA0yZdyDMCa-CAGa-5XzG-039dpbXx7rr999Aa3yq-o31W_uX96--X-m-3X_W_c3_aZY39a_O3_6-W33JBq3x2_a312_7Xw2-U332-XXwO_I36j4s3yNU4Yt7q83-wAC30W-S38a_IILq_ZVF6_0KE2-63xO_cXfu-3X5m_z0F4BF3w6_7TCu-133pBi36W_y35W_h322-936O-VX_W_e38e_B3_O-z39m-HX7qZr34W_b3xu-y31u_TXzu-R30q_Z3_BY9WMyjm9TjdmX6y_sAMcjKXy0ZdA6pBG3XiYH_uh-rmBq-MANe-Efo27z39OBwoguL-jEy_ptwGrn05Gr7h8yhoiImhOQkYRTgNsBsXw4eSGQpBsP5pBiXzwenU-S-YABh-nJKZMixcYhxHJGALQHQ1QMWJ-k6Y26vjA_92P1gBG3dl5831DA0yXJSeuHq_ZHsvDMXyQyOP36gbQji_pio27p3qsyIoBuiOP5y-IP3G-oP7brYP1brEAAzb1X9iiuePh-pqI-_d39O_fX1Z-YPwdgldYgALINCwh9RyFK4Fq_H38YATzsOhbGJPq1I31JvzDJ4ZDWs3JK8rYxgLlQgJDJ5n5m5-a3wK-2Qu1CuiPq-z3Q2-sPz4AQP3hBt35pANPyz8tP1DBDIEV-NQCV_2fROC8FEpB6bIZAmvz4AWv5u_iv2B_OP4vbsi4Jo-cOp-DX6G_k8A_8DIIV-H3zh_HPyZhnP8OaxvzWAiP3DF4yfyTmv5V_Wv8t_lIDp_6F4pGLRJ-Qqm426WX8rwrgJRfXPxZ_-3_BY0QFl-Kz3Z_3FV_JRUa4E5NOoEjv8-_3P_y-zvxlSLv4gBXALLWjgAMXo4PJB_QBXb7RPyMMgHq-uPxyeQgGS-chBS-rmAKY6Xx36hvwZ_xv9sBMPolTYPAuPiTE-Ah-MTS1YKwAUgKHIsACQBlQAdkQqgQBuAOEAwAKz9FAABjkwPYAxYykAAMbb9YEHBwsAJT_tQHT_T0XT-QMbb9bfuz-ufxz92f3j-T6nABmf6z_4_pT-koHT_LIOL--ocrlEYNrzxf62jVyVDBLIDT_Wf5T_zwABiFICz-FIGL-FIGmTKf_YAWUHgB2f6yEhf7z-EYL33zf8mAVf7b8k0eiBYACb_2frPCnAOgArf9Oj7f_qA9IHT_7APTZXAEZBPf77_W0ez_IoJ7-Ff3b8oYMH-ff37_2fyH-g_1DB7ACH_gWWH_Y_yH_9QLr_Y_-z910Z7-Y_xz-7fsH_uf-H-Y_17-o_4H_c_7b8LQIn-4_-z-U_5n-10QX-s_9H_M_3n-k_1AAFf_YBkwBn_Y_3X_i_x3_2f2X-S_-z92f-L_Vf-r_Nf2L-qf-L_lf8mB1lJevjARN-8P4p-OM6N8gY0sAl_0rHvvgqTp_zJ-SGSN-WP6h-VWet-0dT5i5D3N-HX9UBG3ZeE7v19JCP7--SP-99jkct_H37fbzo_wDG_U9QRMN8g0ALKSzyVcB2fkZAuuKpB4cOl-o76Zfq9-D2CZoIABkH6nfoK-7UKIAO9-n36FKLR-Yr73UBK-3piEDIVk9l6s0ClMJthlSCEm1Yx-zmYAKfza2gO0rbjnoFewJL5g_rOMYJj4vgSYOMD7_tD-czLrfpv-rfbrfvp-MMDrfmvaSbYxUIR-uH52EMTSqP6fqnH8JfZhwKUgKQCAEG28qED6CAfAccI99uhATNKgIFrafAR6QLbAeAARAhAAOmCzgA26CP5I_pTi6baIsGa-KY5fhgwW6ABMFo62BN4pbhfajJadaHAW8PQ8oOI4Akg2AQneNwAFAF1MREAZbrPA9gE58o4Bs4C86j2y8Xj0lp0W5RyolqyWINjuAdBIngEiAQ9IEh5b7veqk7zAAKnIO6ZxSLwAzgAowKHIs0Af0PO87Lpu2B0WFgHfpE6AXaQX3r6AP6BZAQUBFzCZykUBbyA5AYKAXaT0liyW2qYs3lwWPBZFlnwWJeCmAS6eoAgQ1lAuMWA7AEFIE-ru1n5MTQHiwBEYS-o4yE_gIWAuwH789FjEqLqAxEhU6OcoxAAEACymtZp-xB-IFZagTNmWdlCMxPA8tGSJNJEePEzTGF0At2ioetpgXQD7LGWYDrDUeGgQx_jNAIlG5sB8IMe8uVrAUIsoOGg3NBm0RwHpWqcBZDjXAbcBtwD3Aae0Y3ha-AssG7TtAJ8BdwFvAW6cyBi4SBi4HG7EUFtOdEzZUIa4sIGSlHNkrwG3jPCBL9jQgS8gJwEkwKu4wY5CcHOoqLhItL9I5wFlVmsBAIGvAZiBu8j3Ac4sT4BJQERa_QAkWlNAqLjFAORaXQBHAMGo3Yz9pFCBvpBkgSYIJMAqiM6AymyNavKAczDTYJaMwrxcgR-gxwE8gWWo5owCmh-g82BvsB_m4JBE8OJgtdAhYJKB6ZhlqD3QsoGlIPKBJMxKgXZ4KoFW4GqBoIEaSHZ4OBAvkPqB1JiEgI_gIjS6gR_mjFofQLEIHlwLgFfqnODwdtyB6ZhmKgUaD7YBGuPQ6E5tqLw2cHbj1MaB5IEW7IN61aSTEKF-BWiWAFxIY-LDclFc4nBXcmx-SkDpQs7kpgwSAUVQEQAT8D1gcYFEgLXAiYHtSFNwwDQz3JYAMYFkSnYARYFB7B4WhwIo4ECAO0xsYBXAVTbYNPqM2I41UOqBvJTPRpPGggHWcL6GOerMQAJAoVAXRjJAkgB4cJIALRQrgsCB3wGgget2wzy7lgmBBxbagRiBUoHpQqhQyYGicKQQtgDwOD_g_QB30DCB5IErgUXK7JDrdPOBpyaneMaBs4y8TOaBaUoEBqSyFm4mrvTIHoGogC8gPPwpEl6BsVCFGk6Bd3ZZxiGBUoF8gXLC4JBMMBmQwj66iLuWf4EpEnJaEoEmgWBBEniOgbuWfvCaoF8WHFSaoDu0_IGeGnwcPZw51KqyQ8Zvgam0JbgeNC6BVCzTgAcILI736IXQn4HtVCj4oRidAauyczAK6qKBZiBKZvAAqEGfoP6uDiR6QCO0RjY4KPNIRmDz4GMBvFiTAdMB54CHAZBBNZjatCrKorYPUOaMVFod-NpgJRSi-pj4M0A1wJX6nDARmL9yGYEzymtG2soZCAHwE8gyQR-gFEHzSPJB0NCR8KdEDQpY4HGahE4I4ARBGizEQXl2ksCaoDWENABHopGAOGL5ZsK01IhQqn7qOypYQau0-54AtjokpR4EQV5BUwDhyB5BhEG1Opaa_oHvgT6BorRhQRosWIgDLBcQ1kFD7GlANeYaTPDs1EEiCNfAdEGAOAxBGqZMQf-BpG4gsEFBAdIsIBBY6uAB0m9ycUFD7MRBI7TskGFBQgCuiJDgJIqbYNVBAnShVpHWe56bYHcU5EFXoFwAsJZV2AtG_UG12G1B04ChVutWE_D9QcoOsEEjUFeg6PDJQe1BUwiDNv1BWxQT8I54sJaTQegAqbanJAtBY0FjNoM2F_D_Jl7YDXI_LPdIICBAOuxk5XT7wGMg5WRJTAdB-8BH-puua0FnnKj4IiBEYDxBOGjP5Feg09RYEA-OdaTfQRbGelY_QYQMz0HNBmlG4oxD0u_gj7YVQddSv0GfQRQUAME1UB9BCAT_QXLINVBAwRbG4chrQcFBnIHm-Ku2cshgwW9BHaoMeq7EX0FyyD7GyMGMetMK5MEbQQDBPsYgwQDBhMF6IJ6ckMFFLPjBMMGSYJTBpMEIwTTBcMEowU9Uz0E-xhjBPsZYwd9BOMEa-LssDUGjALZBn9QLRtPyfkBbAOo2Bvy4pt34nkGVQbLBo0ERQdxABLYkHETmZX6JUC6A1AxTAHpAzKKAQY6-JmA81hTQJUGwwbLBLkEXDLXg5UE2QcEAn8bsQYVALsHuQbtB2qhJui6YgYGD2JrBX4gmePoA7AY8Qc-ASfw0gOBaqsHhQQHB8IBn6qo0IcEkNriAisDPAe_gYUFHoCd6iIYs4DHBvMZ4KP7BgELsFnvGGbTU8OgIvaCRHpDkWjTX-MrKl8zu5FJBukEsqiFgckEVwccAyjByYBNADIBzABqARmwQjIHBscF6vN1QWcGkWvKAtcEIdM2a_cGqNEZBE_jwQNxYyCB4QKVso8FqIB0sowCJwdMYCcE0gDgApkG3HslKr67mQeNKxFwfRAS2U5wrSMhsUxCw0OVyBQCdgYPYBmBSwU1B93qu-GFBTEwi9L8B0na7wbeBUNT4QY7BIVbdwdnBq4GhwUvBycGzgUcAb6ZdQVUIpdjV2GFBwUFVQQRBjUG2QWEKsipXwVNBBdSu-J-BjUFAIU1Updi9QSIgW0ESKptBYQ6RwYdsUwgTQX1BW0HTQbGg6CHzQe_Bi0HecMtBW0GuCp-BQoh2Qa4AmqD3QW_AQDq2kDFQKMAOwWrB11JCNGxmENCNQQdBSUwFOEKIJ6TWwZJgssFrQedBisFB4hLBJTw8GuVBUCEPwY1BN4ZizpWc_CFHQYa4owDFahnEkCGjAMNBo0C5wUSa4NB3wVhMD8HT_huQrwEXgXeulZxFkA6uH5BhQal8WUBVrKYhW-KCzFoh5CFjQZ_B7AbCJCvBScGwhruWE_CZpg1Gm2BIIZZcKCGD2HqcCGgiIbDYoUGewV-IY5BSJtoh18E7VGghfiGEIQNB1djYISNBMSHjQbIq2CHEITNBC0ZkIVCqeCGUIdghj0G80FegASFUTO6a8QB9NvLBLCFzMPSglNo3Ci-BQ6RFQRwhHMFjgGVBnCGiIXLBEiHkAErB3QDxIW4h657KuqaswiHlQeAhGsFZIXEhvSHMIZIhxAJaiqukKiFrQQIhx0GZplCBKWSyIVCq98HuTMtAZo7-WpBBFiE7tFLwsZo7wZIO3Hr6hmlY8Xi9Ab-M_QEs3vDmY4DCFvksLQGZ8trAbkCrvDnAq7y6SOrM5wzuSLfa0mIraHCC7r5LwIC-k07l7qsBkUG4DhFMckwY9OK4JBhoukY00hD4WmS2OIybYI-m_FA0gawudIEDwUyBM2pEYGyBuCgRqHLOsaAULhjsH0CirLRMLSEpZpSaRg7QQUhoAXRngWRgpDjwPCeMrdCeVsEM1cHALDpMwagIoVAAHIEqwdOkBUEpEu3kI_DAjmxMjH65xhXmbtgbTEschVZ4CEGA04CPwRsBYwC0ZDu066Q3tDKhX4iv6g4aH-rOGqZ6PGCouHPahXiZJu1BgCEwXFBWk4gGyluyI_BVgd7EBIgNVpj4PxDcvrGqwiSuHFNAkgBYADgWEQAigevBaiouoq6BsaSrvIWkpqGWXBkKoqDQoaKuZDg_IY2M_qEZCoKhRyERoVh64NSHtCGhtjylPi9QOUFRgBKhMZpLLgc8JKaMdBS0ryY2elEaTaQ8IXw2UybsNImhQEzQtM_mcvCv5gz0V0Z4gNNOlTAvIT_mqcAHTv2IR07A6vQezc4ZAKXwKqCAwmbab8AGmJsAUQBzcEK8OAqldKcABnCScDgAxnD8cE7oFnBBOD2BtnD2cPgGbajN8sDerEBcjjrOw0YXXlsgm6EkzuyQirBZQLKUorCi6v_AI6ET4CI4lZwwxCa8qLhJTKLk8aHiXIdqFaHsBEK8ZvZ2uIbAvaFIsHQILN706gCAsL4NyK2hfN74QA0IOsB7yi9A0iA77iRAy8CEDKl4DWTscBuW4AjimKoB7Oo_SgDqREBA6lAI92hd5CkcIEBCAOhQkOpSgKpGiOq6SP22fnai9PkgmBYHQrA68_p4FuRUsbBXxiMmjAiMZvv4OogtCIyAdmb6ACLG_2KVGMFmfGHxsp-yuabsRoJGG85URsWeWrwn7qAg9fY_hnAee7IDshdmbQILzqhG-86HstRIrx6ycIkIl87Ncog6d7Kz3GhGmaCqYWv0P7K6cghaR3BAcl786wB7skphV2ZKYRmyCVgY8ohyebIFskZhS9yicllY4nJUSDboUnIycpJh8ED6WJak-OjLwCpuTt5PdCpuAkjWdN4ETLyqSFFhECCjjgJcOUD1_Le2OwRvfPgwKRS4NmWwJJ42YcmydmHpsv7IsHLZsnwgubLIcpKSMTqGAVHkJmIi1r-8HIaYGC-WX3pYYP4cWy4PeLS0mJgm5mlh_KBjsk1hEbKxfhdkZggzdIn61Li1cnWG9XIMuI1hPUizshOgisA3wDNAMngDYWRW5ZJjYU500wboUMFMQPIxsiYI35Zf2CdkJDIu6AbIlPBjspjGyuoh-rH6FaC8upcO3yCgji1gssCdEGYIKVDCNnmAVgI8YG2kDpz5hmOyNVC_vrvkcmBq2Ir6kIqCNrhc42woKtT0bCDcILy6_ZrXkg_A27L_1rfkcqyQ8OSAsRqxCD5wh4BWiBlqj3CXgNceT4AaaIjhFKamyPDh8wE5NPDh7gCI4dqa7MDcIE-AUMAYuI84mJjyyEscTbKEDLcyoqBURpmyR_RggnawhOF0cP4AyuQLGkCsJ9BjUIQMTOEJWO7ABcYC4SlY7sD-ZkS4wuG4RszhokbRqA1ccJiSYOK6krrmAA9ywnY8JLcAUAAI4Zzhaxo84TThISZCYdgMX7KkRhZmPmbYRiJG4cheZhxGQkZURswOXpZYcEZmmUj2ZrIO28bcYVmAOdQW4WJhvmb6gNXY9uFaZsoOoqAPBNThydbfDD7h1x5vciHhfTLCzIkAI2pLHMkA4ciwUqm06xCPEAl4hciw2LCW8eFcPOF8LACugHCgeOG4AJCKKWGBRB1hDSibYPSYmWBR4ZGgtWB04VuyfQDQ4bVgpeGbYOXhCFw7HJJSgD6kijWm4eE8YTZmjICsZi7hz5ADbOxh3IZkZiMmq8p1JodYReEqIPwU4fj3sP9I5G4D4aA0mJS7JsRYpmhLHA0mMmZBZrMATaauZuHI_aLxyj1w-DIDYJnh7BYT4TI2woDT4fwmSwAYZqN8BGbL4V-Iiyb4ZusmN-GrJvfhQsaP4ZsmG5JxVpwQ6uH2APMBV0iEpvDYh-H8kO4QueG_4eKAUc4OJEa2geExUILEfhC64SW2PWFH5BYAPgCywZARRGBBrkS45VC25JVBiuH2RiQy8g6hqDXIwBGBALJAx1hzpF_hP-FSwOQAkYCxFtHhhkhlsk7UuBGEDIEmDWTTyJd6BBEa4T_hrIQXOELGSjJAEewRuACshGAa0pTTYAkA02FHZAgROdbPVjPovOGoEbMac2SEEf-C78ixYKQRwBEUEVQRSwCN4VARRMwLit8MEMA4Yg4kD3KMEWzYzBGuWmWh4wDAEZwRKRTcEegIbBHf4fwRoVDKEXwR4JAKESQRQBoqEUhAahEtADQR4YzaEYQM6ZJr_sv-3wxMEf78JhGuEY4RFhBucOQaiEY2ET_hI0RcEXPhGQFvoMARI0QyxN5gyVbs4YjhzMQT6kBhKyDT6nYAeGFxnARhc0GeXjvq3-ioYQqhXAiC-H0GtojGGo0QvDBW2A6BMhAfoLbAhgGkEQFa4-Sm0HtoEADlEYfqo7S8ejURCRagEc0YfOAdEMME3CC7PvyoYJBfPurelejH6qew3CAphn8-4PZgrKYQK7jx4MDQzRoG0Bsa2_qFgITMKxEqkJsa_7brGmBQBxEeYoA-o5pNES3oFqB3_KMRqxF6YNsRIsR7EWFgJxHJ4DJsQ2DNEdSWj4CUapRA3RoWDJ36DA5LGvb6W-quYKhhXxaIYQ0AOACispdoMD6m0Ccam2BnGtxa2pQjhOmw62qbYGiYcjB-ENmw8hKUHJ_hrwGCVEsc5WCoYS8geJEswQchbVRE4al4i4GdESmGQJFkkRzhZaTo2KQBqjRxquD-YJgQcEiB-kEkGp-I4AI8YHNgbUCkEFjh_gBzJFfQxuyUkYSRn8DBUuyKTiYUOmdhXQCa4QBMwdC0nCDhESh8RsJhimHJsjDoSwDGYWGs6mHHslphooBAGtpg4-BKkWDh7kBltuCRxpEJ0ILAcpG1mNKRoOGykeSR0iY0keE-36AikblkYJG1oJyRUYAGkffQksBpAMfhvJH-diFgRRAukWhB7hCjYISRV-AQ4FqhXYCkEGO8MQrS4AVmNYCUgumQ31DXEb5QERGNGBPoGoC1II3gIwG4kdOAqgQ-Gr8-GoAZkSLEvlA5kS8RD5q8BLAA6GyboF32tPAsAHg2_hqGUM6RvpE7xBH2XG5-Qdo09QbItmxQ2mBFENZAZ7ogKuO6MEFb4kGRpxAhkZxkkWCz1o2RedwqMFqRSnCmYSHygHLAcnoEy_ZDYGQYtcB4AL0MFZq9NgZgWyptAKehhVyIkPDe0UE00iFgxRz7BhWaVPBbkUe4TFAN9gQA7HDAmsm2h5G1zDaQD5ElNrmasZwMIHCB6UCNmsWkF5GXHFeRoypvQTQAT5GBmh8AoFEEAJ-RXhqXkeuMzmCxFtQGY0iQMFwQp2S_7DAQn7DlbMWGoHg7WmiaRlBkPH72vhwKJDtaDqo4QW0uNfCUQMFQ_xFNEXMRNx7H-pieIZgSaIIhs_pVmLgWlqCgwLEWgQYp4WhcaNr2qGieOQy_WpKU_-S8Uc5oEmjSBlbMmWDr4cxgfFGCUbokX9Q_1JVcpbhSUfMAMlGX1N0AFAb2_BJRm2DKUdkAolHOtrLBUWahNO52xA4eDugAfVA-dikAVmiUYanIOlGqUaeq47ZYGgvhRxilDoiA5Q5ZDpUOOQ4SQCJyX_RXKGv43mEwbNJysnI-UALQNbJBmGGRrxDXPsMg82oqfBvsglG9QiJRpupQnndqzODEDscaATbb7FEOZQ6ZDvEO3pwPJLVgm5A83DQ-SJx3gXGRnpCQmkahwYH9kacQg5EFAMOR-NqgUK2RsHhTkX4Atdj7rqbQx-oDkVqoaADCQK8gM5oiNK7CjajobIORmTYNEaSR4T41UbOAw5GTOuyROoHVUV1RqADa4HfehqgkwXK4_VGdUZgA3VG0AP9INsotketRmTaLUSo-7qrbGnKBc1EbUQtRjahLUTwmNxYX8KMAfVG0LPaQl4CzABc8KqDXUUIu50DOHCdRjxDDUZtRGTiXUb_G2rLcUfJg05EQQbNRjxCTkfEAwNEFxgIm45Fg0W2RzVE9loQM6JiPUXcA-fbc0BDRLVErtG1RmWDo0bPWWgZjUetRtVF8jpc67Mww0cMg4NEF_C1Ru7gU0VXelkHxRmW2SUalrnJgXN6zQOsA20IASjS4qrTouI9Kjm6EAEfc6i4fqopuM-z1wJRqcaYCYLph8zoGYc-ygNHGUG0gSrTvxPJAtsD3ss2OcnC2wFa0IzwokX-gczwXkmoITAhi0VuYEtE33I-yz7JcSr-ufRpWUAf2Znb40JPGkT4fhCQqHD5zarqcigh20XCRNtF0nA2qrJx4msyq1tEO0ctcii7V3CI-5a46ivrEDCykLPF0NOSCJJZwXNGO0fUkG6480dZoECBy0XHRstGatOtw-cjeBLT4xlAW0XHRySqNyHtq5Jj8ZPFcU9yTxoJhVQgT9rUIT1Q-XFj2phwq9k98tFo5lqvUmmDouMk-xFQjmv-eG6hp0atsodEnBOHR3zxN0bE-Olyk7PbRNLjJ0SBqhm6VaCPRKA6p0cHRiggZ0ebR1_Y05s8C_FAzPPxQPvbCiDsKHOT49qAQfdH80dT0KvaJZFOKuwL7PCIszj7wfi7R49EJ0eJMsaCZ0WicJtEsBP_qglSjUbe0mWAvOpPGfG5P3iM-ND61YII-Foaf0UPR6NyPSn_RST790Sk-CJHHwEAY7T6OmMeYQz47HN0-kDGdPv3gINFkEBLcWZEOgNRRpSDJEiZiyDGdEeURv5o-kdaeWj5uPrCW9z6LPhiGSj7mPlZ2ZpY6RCQxbrYUlorABeE8yBFE6WG3OMNIyWERRKlhjDEhQN_gmWFLEVHRvtFkaocW7VFZWtWRQLyPEHWRoaCV1qYReEGN0a7RpSB-0XSmVIr58CnUh4HnEegxKThDUfNRd1GD2MaBxJG7gUSRBZFfiE0kDVEt0KoE_SRngKyhpioPbo-giDHGMQYx90hmMRQ4R4GaYMOgBxCv1JJ6z6RqbkxaSdEX0byc19G29rgx6DHvilZQqrSAMaouADFn0eBqai47ACfcX9HRLq3hqbTlwZtgylppSnFasQEDmn5a8-Bc3sEUiPwa-ELkt2CAwArY3X5CgSyRtADncB5a35Hs4CtanlqRnD-RZur5YJuRWUDa4JUxZiBbkdrgtPiHWsAA2DHr8vIx3UCU2owAkGHkwE5KodHThsw87JbQ0IwAKm4ris4Ieuo0FNzaofi_wNMxv8CzMSp4cAALMas81_Z0kCjASzG-UNVAI1orisA-zMDaWto-agBLMZgO1UCYDksxRpEykc7qIWCXMXaRtTEIdEIAIgAhkV1awZFtkUsxH9j0MUXhOWDVQB8xbDGF4RwxNrj3MRP47ERqdm_Q3zHAAHWwWzGg0LSYeuoQMbCOzphQsa1QDZjE_o7isDHwsSeY3NrnWtDQ9KAw2pfQ2-qweJ7RozFQ0OMxb9yTMabMKDB-UiuKf_D02lZQE9FLMZicNLGVaB72iLEWoDsxoNBLMfsxagCHMYQxJzGkPlyxwADnMSuKtzERKF1awrEciEsxjzGY8GkALzETkW8xK4q_MW1hDDFZ4ZwxlUA_MXQxfzFKsewWOWBLMSCxcDYFAOCxPMDsUmg2kUpfoR4g3aDHInjAK4q-UDCxfqhwsU6YGLFWsaDQyLHVQAM-cDEOsSyqWLFQ0B_QTkrCkcrQK1GeqF9gTSFHWnFhmRIsqilax8ClWiUgLLEAwMAAuzFhsVtySvyYwByxHRwHMRraRzHYALyx5DHIAoKx8bHf0TM-JDGMsUw-Zz41APta8bGSsc8xeLF4MWkAmLGy2kgQ-VpSAP0x-gCHWt6xiTGG2sVR8NxmANkR__BDoYgIXRD3OhXOqMaevEU-6wgvUMM-NRyzPunOKi7l8lveE7EjsXrW0T4-0aycTtoNiFM-IW7AMdSIy7FmaOGxuSDpTpmgkVHW-kc-g041gFMRTJjx2kexOviNPoM-sojCCJXOXT7CmFexWog3sYOxsqhdsZTuJmJBzigx5c7CCJ7an6HxeK-xdQFTYNYw5XQgYS1Cu5a3QfD2XRDwujQAXXAddNoBLWDRUF1wr1Y3gH1QuHLScnDougI-ZlOgczDyQJbWUMCazMa0Z4AxUGDmBABQcQQAXXDGtBKyHOAD-PoWCHGV-JAkSUgwcU-o5rGNANBxSHEocZE6-HJHKDbAmHGMTF0wOHHEVnhxXTAEcWOARHFXJjRx0HEUcSJxVHHsoKRx5HHLoIfO0VAborBxzHGkcRuibHGocZxxGHFYHtag2HHygLhx-HEKNFJxo6DZiCRxinFGQJJxs8rGcTJxZnF0cZmgSUhKcUxx4UDRvAQAanFWpshxGnHocdxx2nEfQLpx7QD6cUJxhnGWccRx9nHmcWNwRnHyQNSELnGhcadYNYCkcUeiynFOcfBxTkGCcS9QOADucRxxnnEURlhxfHF6cQJxBnGHWOFxYnGmcclxFnGicdRxxXHFVlDAtnEQgMlxCXFbWMlx6nEZcdRIWnHtjj5xOXF-cXlxAXEFcUFxRXFJSEeipXHScW6ElXHVcTWAuHF1cVcA_nGpcelxeHKZcTxxOnHtcZNx18DCcT1xJnG4cQNxVnGNSgJxI3EWAEVWB5LjcURWmCYHko1xM3HNcV5xrXHZjAtxgCZHcV1x1qCEcVRxZ4C7cXpA63ERcZtxh3FPcfJxsqifgUFmOnxR-Dq4XTCZoaa8e25ogAKcd1A8YPZyYADg8TXU7whOMcwY_rFbnuEKiDixIcBBp5QeNPXUcPEnnlXg9dQtQSjxmmAigSk4q4EdkdP6oQDwmFjxKTiiKskhqnhsDhW-kirhCvnUT-AigX3YFwz48eHIePGNqAU4LfAfADggjgCYAJycEAA6cNMUWABTUJchHOEeXOgIf3EZocTxgDgbyADehkho1OEK8OCfgR5BINHjxCzYfubSEKrx32BI8QiQZsqo8Rk4BPH8wc42evHtVlJ2wSE-cGQ4snHC4PBece5lPizYLhaNqK-g33F3sGLxHHj_cZLxPOTA8ZgK4Qo3oRuSt6ZHMCKBgDifcbuWtEFu8X_ARcF--jEYkR4igXzcbahR-EqwsoBHYAIA3PF3YEs4YxhLoLlksnFejlHx8zifgf5AWGgRHq_MedhzIeeKcWpnBgigz2HuAArxQfG2DFRMmswA8cigRfEDIa-g24748MhBDSHrZA3xlHECAOwhDiQl8YoEoKDl8R-AmcrB8fRBYfG08A0hgfFHANRBHB5ZwKhAHXTgcXMI8_Hf4uVkunHz2pAkufHfpjsAXFSu8SPxUfjuFtvxuUGj8QKInzBv0OLx2UEh8a0YJ_Eu8RLxooGZoI7xJ4qX8bXx5_H5gADhv3FX8WfxN_Fi8D1Bu5b9guy2V0Ez8cDgi_GV8R5cF0ESQJlB10EACSRgRHYCITigLCH9guWYjHYWAGAJ__HhwMvxI1YKwf0hczDs8UA6v7GTTtRBLN5faCpuGY7QID9qvcB_asvAmGG4hF2hOGGgFr6eVgH-nlAWcGFB7GCROcCEkehhEEgLwo_I4pgfhJA6rVDQOiP6OBa3aLpIB2Z5slxwzugnZgTqz1jmlNNmIgnv6MdmB3ASCWdm0B7XSubelFHf9uf26_Z-MZXyb-ZcvIpUIWETkW8A0WFQLuhszgAGCfFhG8YrrHgax0C53LV2T9jNABwJfj5cCfOEpjhxNs1IFh4aQP4IImBGghxAAl7dVvNQVmzRADyYEVw_RolAuqG-5MvmIIhycorGYAo9oiDO9gluQI4JNUq4QLa4HhFGtk2RuA5gALCWdgBiJkQAUtCEDEgRnGCgwHpAFQiEDLHhBQnwwBWmc1hmpOjwfCY5CcDGJQlvcjkJh6IVCazMGQnTyOe4mRHP9qFhuRGuVFqAHpE1EZKmNRGboHURaGCP0cfqLRGJkUYa66CEmKFQ5hr1EXmRTRHlACVEQwQTCdhwDRBDCR3oownaGtkA_LQpEdYU_RGhUIMR7xgjEY8RNOA7UTcRKpAKsXIwmrFMMRPAmxFgUJcJ7DHKsYCxx1H74GOAN4DogCdQwCigsfqxXDEnCfHgDwn_MU8JOWCvEe-Q7xF8kV8RaSrlsW2RPhafMQCx-bh7ODCw3wmzgMW4iDHq6uFR--CmCY0c1ewzUXox6nYpAD64p56D7Ar070jTPCFWnrIVUEpcpIkhoee2c4AaJIiJerHIiakETpHsoO8JW5RIifiJXDHaMcA2jIndON_g3pGvCQQArImfCZjA7IkIpACJ1wkqsUmhzIltkaCRZpEekWfqlCCCEeVwL4Dg0fwUyeqkEOKRPCHeYCyJHwl4AKKJXDGGJMIJs2Ze6OIJCFqHBMtmq2ZnCZ34zQDyxMIkg_gvCeCQuon6ifDYRomiCfNmCglmWLG4xCiUAEEgcICIqgDgIiw2ITcxTokMiRyJ_ySFGsfqOolsiaGJOWAFBCsJUYnCiQ8YMYlcMeKJXzF8iYeMhpG6iV8JyYnXWCiW6rGKsWmJ11jsbFgkUgmHZrIJJonyCWaJVni2Yamy9mH-yFbgVwCuieWJYgmViZmytaANAI9mmKToiX_qCYl6iTmJzG7YALsJoIm9ic6JA4l-jkhRZjj4xokIq2bqRluUCXh5ge3Bf17ArFaMPYblSlw8cQDSUdmJNIkEiWYhH6CqhNGJ24mYBKNArolyCadmZlhzodOJR3BwmpmJW5RbidyJYYkTwClUT8TrBJ0cN4knUKOJ3QBYwdfM6AB3iXiJSNiD2C-JC1Yq0PmRf4nf4DIEUUG4QU6R5IkPiTOuFDGASV2SNezluDtyGomYiSbkS3S-xI5k464YSZhkY4AfiQUEXImgSZVAUwRjdF4a_-q5QHS0j9GpKms8JhY8-FcxcNxoMUgxcxpuPKGuKqj8PrQqIF7Hnh6q7EksScPsV7ro8VxJba6z7L9sAvij9v1gKjFLcH6R_ZQmEZ2RHjE4iZqJaS5dBM_BjRG7tH6RONH7bPE8qkROUfE6hGSz2D-uc1jWuCFmkhTqCF8cCQBNppKYoLHAXssxhLGYnDGO-WDzQJicxqH8YAkCpggtXCPAKXJ8eNrsJkqGyL-q1GDuFJLWmAGpPKJqjqGkcj1IVDgzXGYIbcEzwVjWPUhiNkPs1Q4HJPf2kKpP9vqMWxxtpjIkzuZzcEUhO7hH1kymjKZZSTPkTxYjtJP4oBAGSYyAVPBPFn8UGQy_OEkA9fzoAGZJVa7O2hO4HhCoScLRu9j2XGhRJgivyGdQAQjGqCZJUAD1STc20TCTuP1JJgjquoJUPO5DVvoANUme5GZJwaZcCiwONdhO4RXYOdTxUGZJSg4IIaPsotGrSSYI_Q4mrttJFXpwNmXudSaV7ljRMiG75CyAZDjqCNmwXzQtoL7EANzogct6ZkSJACYJHgC3lM1Jr0lT4MvGjIAVCWPGwrDz4NhJzGzqCKtBIEAc9pohpHoM0NNJ2QBrSSKWmTDHSZqQFq6u-Fhg7uR1dqrY-oh_YXdJlarigRiJH0mAyd9JiDGNApjIbwB_8DaRymx0SfPg0EmxiTiEo-Eqwe9JPxRAyZBRM2rOAO-8IxEcrut0-0nmSYdJTbhOmk8cI67znuOukYl_YC1JNUrMyU5gvDSpltY8Ic7mrJfRQMS7ymicroq29gRQzOClSfdq3i5zJOzJY0ljQSB6WWZwNjektMmfSdrJglSzkAxaknYlUV-gQslMyQDhHRBiyY2MPMCatJfwHvZJ1om8OmbrWFGWRg7LpKeRkEmSkVBq6A5CnHyxUERDHtRJ1rEEmLv6SLF_EaiJTmCcENIOHdSZBJyx2ADV2Cm2tdg8DtHJzMDEIZ8kAg65Vnz2sKYGYMJ2hUASDmFRwCG24ZZ2A0FLVkTR8vaKDjd2lshOdg92rnYbSe_gduHnITShqTzcPkRKNkkGIVfRNabKybjBBckAtnEsEiqQALXY9slonJwOLdi1yQwkigoIOK0qtvah9q4K-VxqCZAO8AB_9vb2gA4qeCAOt1aQ5KLRQYj4AA3JI8YRhIPSf9SbIfd4VDjOSSKIPsDQAESBiab8Sf9BjAYSlBshZ0lSUaZRsnJ3eEuyjBpqGFBWaJFJyMwG7gDSAPj8BZJ3yVSYHAF2AK24nsBKQHJg2MDwwGmBuBpclMSIPrRyYKU6GQAKoAbE07ZmCJ2y3IJCALqCzpyIgR-QmAHvyRiYLAaI-HxA2uxTwFxBFVBEJMNyS0bD1nwC7Ug1-v6g84BmcgFQvoCW7LVctGAWgJIAbdgHyZjGRrhsMLZcToCfsBOA-RafseYMuLqheJ36Cmg81knWN3hnus-MLoZggUH6B8mUfKYMvb79XGR82CmMBh_JmJiLIbLEkCrNtqz2sjRo9mQ-UMFcbK1QtJgdlPQ03UDTtjnUQcmnGKUs1DBGdmYIPoaPvNRClil3UC9sWpQbOBOAdikgAJ2y9pjKKeSM-DRMBuop_FARDhJAYCmtxpAENqrFkUqoBJizXHPg07bFQL5QyLFSeNO2FoDBKW-y0iHSqqFR6AAgRg_J3wzA0KFR6SnOmANQMRhlyQE2uXaEDLkptphqqooasJbA0CyYacC3aFyYAQnimFJKNfAcUeoRcTj8UDUpFh6-xjcsplGcCRKYoUB_gKdgzpjgURkpZA5VKRkKvUJUmH0p5JipyBkpIykFKeAQ4ym7LAqQPgB7rqYpEhEWKfcRb3L02HPgyQ6dlOspBQ6fsRQsnfpBrlpRjXSd0ELJX0mSaLysFsk6fCMRhXj14dDQGc5Q0AL2MTz2SfL2lkS5dirgFMk2WNa4aDZLPPL2TbLvKRr28ZJfKeTJ_YkGoOxSd_xjIdIhL8Gzmm8RYt5EyY48YrF1UNxgh4lESVTJVjxulC1JXxbGCS1JYKwoqfdqPykYqSQEOtH3asGJB4n3iajYx4nSCcaJLYlnid7wm2bD5OeAlEjtsWNR8kmsxOqJAMmqBJqJpUrgDi1J_VGLCUIAywl2UMbMyEl6yf-kZ1TH6kKplADPSS1JloEj4JpQvrGWsE9J83ARmtU2-XxgmvSuKokyiQxJaInKiU8xcNGGbAGRVoFVsVqJbxEyqXKpOMk85C1J8wkqSUBugLwmqadg8qm8qRdI8qmWqUOJLagP0euhYj4nQR2xPOBv3LnqvbEwzBAgm7GZoFCJKP6-2iuxIbyaHonOt2hUiCmxbL4R2taITz5-yWiGA7EpqWlWggi7sTh-pMl3MWGp6wCpiXCJ2V4JiLhaurHoqeQocal-2mSIRinUAcmprAipPnhAyLE1zmEeNSgTMfC-daGwVBtOIbFs6jzeu04o5oQMMb7MCc_Mp8DihKwJ5t4kCXBAfcD_ah2hgOpUCfAAukhxCQkJGBZQOlgWdGFsUVjqkHK2wNByB8QpWE5hxWFIcgWy_t7BYeJ0E-o9qUoMMKAz6r0Jc-oNoElwgwkoYHMJGYlNEeMJtQa36rURGwl2qX_qA8A7CSsJYIn-dhCJEanG7HqpEcndiZqJsolIYTgADDGRYKH8rRFmqYdBrCj0MkRcDcmAaXdgaol8kb6xKwl3SpsJcGlYab-p36kUSRCJFBDO0KcGscmKmJgOwW5FsR_RJDH-MYxJTpG4afB2OEpfDh7J5FEo8EGwcqByoJ-Ilkl5sfoA295oUCWJ0F75YAP80NA7HiUYsD5UMVBE3Gk0AMMcM5BsbrWAOx5kpuRpcdHjPjQ-O5CyaZVJrGmIsAIQEkBsaagAHGlEYF9gOml6aTU4FwyGaU8mXqBemGq4KjCmaZxp_46uxJHISQSV2ES48AC6EJaAeKC4SHQyLoD3UBaAE0AzdPXC5XJaSccA_LQ09rOA9gArfD5wDR5O8tupPHC7qWZY-6klYQWyHSSM8qFpHUTt8E_WUUBvcrg2XaxbqTuphWGoOs5hpWEeZt4ywszkSSMAuNrRdGF-wOxmUMTaBmmaadOQFQiWaTVpGQD8iqjAJimf4ePyBHo8zgDkL2SLgT16SbQsaBLJksAbiquyHswpwYmpJ4RW4ORpsBxBaUlpYWnM4MfCyWlKRKlpC4r5Hn10bKbMpm5Km4rZeM2cLfD8Jh_Q3ko_HpXALuQ7AEIi2bC5inXJlcDGsdrRb65aiuLUzkyrSMZQFWmx-mjwd3gYjEPIvgBBsKPMTpyrSBnYzBqNCiOo_LRlaZl0vZFAxJIR0ql9aTsAGcHBzoNpUEo-iiekY2lohpJp4mklscuYFXiYDqxKVD5Uaec-_NSQ0CVpwWkpAAtp2IDTZDNpKWkxDpsKk_DyQMymqFJU6ZZAqYoWEEdpgi6HCCQyDkoXafcEz2ZbwVaqOLT7ZGp6R64fgAmOLQRSFhYAhAzLmnS0UeQiXBPAWDTSyJXAb3L8zH1gikyC6WBWmowg1mjwIPLj2DVQ4oS5NqZMM0CPnNryQ3YKMLrWl9iy6Qrpogz2DLMWL3h_NJ9sdQwJgFeWogzgIfVM-Fa3rHOAaAAWQGD-gHhscrIMJiCucqo0mAFcYEMeA2FM0VUaR2SZSGTG8FFW6UbpcoC46cTpi2lF1l5MsCnOTMfCPQBhaVS4s0ih6bVMt_Az_ATp3LyUck2yAUl6dp5EqOzW6XKARWa1gAXpZwYugPTpJ2kp6UiMFhBoNpXpx6wLwq1W8uFk-iOAhWRDrCoWL8m4ND1I4qBeCo-cISm6TLrEHhZ3BiJgfLb8KfaYsum4AWrcJWnqNCAU0sk-yaSpVappqVOgEenp6bNpnwqR6diApOmezAeghciHaaSMDOlFoJvcLOmqRFOg9emVQYtWJwjfDpRREDrhyZYyqbRnOMvmptHcPNlILUaA0aMQ0pjscC_pRxDSmMu2XsnAiCt8LzY0SmiGUM5_oMUITfg0ENyQUunvoMdpBxau5FMCCzYveJaYHUiuQMiA6zbnwf9JcNEWEAikdOm76SdpNjQPoNXpWkS36bDYNcBpRlLU0pgXerpQkckLSQnJAQpI6fHJKHabVtwOaal0Gcz2j3ajyROulw5D1Ez2sEkJdjJqdMg5yc-WoMlailHJjCbAtjopAKStXA52W1Z0AHTxtQ49qKEErVxiGSr2-g7v4KgA7eYaKeIGRnZFKQoOGg4VCOHIJ-nXUtKqpnZ4EQ2kJSmaDtKqrSktAOl2jpjTKXlwjkTTtmUpIVGGmCQOZlE5KY4ZgZhTip0p-2h1KTcinlqNKdtB-WABrJ8qRxBP6T1US2Ao2KdcT1TKqXYaoxiIUbfJWOBYYFa6UYxSYAAAvaZR4Qh4oFRkGTYSujgRErojgMecD3CHHAusiNZafL_JbMG6PG0Qb-lz4J6mzmBJKdw8b-mFQMVARvzWKaZRDemWzGr6nLpQVpAAeGDS7JPpaPBmCDBoqNF4welA-hlG1Mox-Bz0XrDYbggyYDlQp2S9GQgq8NAfiINhq0gs2JgBRCnpokW0yCAi4FkAZBkbXAd4uyz8OPZcA1AWtrwCKux9GfRct1A4gCwMXemlGRDQ5Z43FuERRQ6HdKwAX-kZaakOdRkBNr_GaHIVeGHKY4Ax6UZ07enZwNcZnmmewGOYbknyHnRRgdHjUGmYqIBmIEOYi7aeDhcMr-lGdi_U-xnH5HK2IwwtGerB6UC96eoGkMBYks-uY8ko8B42vQwjGe2G_FDUHFMAsnLHGc9hJClGxD_JjsJGapq4OoD0mSlw6ACVGfE4TBzEnJQAcJmyBuiZImCTKc222uComRSZ7ABUmTMKsVSvlnSZJRkMmYSZZ9jMmdKZJ4oZOOyZUJlcmTyZD8kVqAKZng6uSKiZoqAcUSCyiQAtaRJAS6kSmEGxh6bymQuAlcCuSJUZDhlq0KFRj7DmmQ8ZS7auGbaZhphTijGpKpiOCd4ZGph-GTCp5ylwaXTp5BhYAPqZBJm3GS0pWABmmokAsTjwmcKQDgkmmfgE0QD3GQUyjajWmUcpdpmJ-omZLoAvGTaZ1piumbFqzJiemfRhU0CamP4ZUqojFPixfpHRGYGZEZkv8nEZhhb-mYdpgZnqEYEZmmBL6cz8GelYSsYZmvZ46b8UZjYLLJ5ELzYwlvSccmacJH_ptpI4AFccuQouhGkpSwoVGZoZD8ktHrOZTplGmRl2M5msACEZrLjhGc_p2dID4N9U02nL6SlpDonySRgZXDHlxn2RcGlEEWgA8DifqkN0jlHdQQtJIhneIGFpxEG2dgnpHUQDmbgA21a12Hnpz5n3dnIqbBm7ifapMxD8tBnpE8SjmT0IMJa_FI-Zb5ljmYkAkFlp6W2ZYWkxDi48AFkSSZ3UZLj2EazJLZmbGWKyMXD_yU42mWCIuGJ-sUZzMuUJS3TBQUy0YOkKtPl0CyykmeF4wUGy4CNpkNCkabLgk2kVeK2ZBQDtmUTp-5mLaRvpRmoJNBV4WBnS4DgZN4SH6c6EI3TXaUHmPsoNlnA2j9GkCn6pfdznqUGprLjnoP2xT7GZqVMmOqmRqVWp0amfsQWpXhSEMTXOwopZsYZZSmnFsSKIc7HPKUkwk7E4CeEe56n4CeFh-gnWqdzeqL7ACKF-Q6lmket2o6lUkWwJF7DWZrZmxmavQJqRwmElpsbhVuEiRloJDaGyYZPwKgn64Un0BZ52wEphGpF_7jrw2HIzKE1xA1jHqbNYQL4T6nipTlmSpoCgQwG5SISpIbJUqWBJmKnTGB_YznxRAFAAvkY8YKA25BmKwBOJvrHgaeCRPKRjGl6RNI7Fsu5AGTixAH7MComcaZYJ5CSjXIrUdXa-KaaRSGH_YTp89umfiNKJBLFUTO6RxYRX4HWswVRLWQUR_VlRgP5yWHI4culZF86F0KFRPREWADjRB1kFMWQBWJFF0KwAmJENEiRJg9iVWQm0NVll4HURjjYyhoeZcNE0CBgA9VmgCXKJjvDO6Mbo_HCxxM4AMuhmcMZOHhC_vPbgc0GW0cLMAUQWkTAAe8oW1G6RcomgESswfARgrGYeH0Co2bWACmG79IlZ7sD04bVgmNmm6NjZ3wyhKfyJQOBoAMDhVzEtWTgA0NkkybRJdzEdDKoe0Nmw2aYRAskp4HcxTNmFpBWp3BnJZkKR2mB3SrcpS1R3AJ6p-LCMySLJVdCfqX5AAOF_jMqghdBohqIemCZW1kMEm1mpWR5xBHL5xAGKXAhy2R-WKXHXwN0oizopWdtZJ3EDWAGKSHS5ZItxitl62VtZaVmG2blYAYo72vA8Ztm62Zhyytk7WWrZt9HsqaDZTmAqyrCg2PGWQdMs_NlATILZudYhAB_A4tke2WrgWADrZJ3QYdl3AF7ZBAAFOCWZ_0nR2diWkdn30EnZsdkFOP80INmS2SqQ0PZR2dnZntlW2AU4NNHu2fnZauA9HFnZOnxS2T0GaGDs8cyJadlW2GoZd4HsoHhJ8iTEqWOJn6muwl5obNkYdhzZpVkkqTemXhoeqaHZ2dm5cIEhcklw0R6pmUDV6rlOYVrjdALp3wx65D1IvZKSOHcxxhmN6WCZM4QWjDWsJNS6ifOJeZQmCKHpcHCFgBR0rggzIOvMy1D1UM0AktbIKZpsCTDcPAMAFaRLRv1hnuQp6a8xi1iF1vJ4xdYtwQXQE7KdOGVshCGvmUpEyeG3QGoMwTxA8sE8S0bYEcEASkABCIZRgunj6Z3ZrNkRKOzZbdncGVT4yWZU-JRqVWFdAEzZiDG9kuTZdzFx8Rr2QkgugEqJJq6oOZ7YrdEEtpLWKBFHANRa_wDr2bQ42RnBACrhGHbxSdg5MNny9rCW-NkJWeqRONkMEWipfdljiW9yFDm-krJJJq5pZgpqMS7O4QFZ2eFD4f5ZDuGUoNTJm64d4bCgo0Du4XYYpuHURlgap3iqOT9QOxKh6lcxTNnjmTKmbRqKOaZmsVke3PFZg7LKYUTZsKZ6OSYpqHpGOfL2seEMZr3h8x7difg5ipFXMUQ5cNkcOUzZTpFeOaYc0NlSFOmQQtk3Ct6p3w6X8IPqFdmhIB0QsdlQSR4a_tnRYLlwZDlx1IXJMg4GfjTx0TlOYDIZbdFFmO-8iDHySeqpu0nxJEU5SdmfoKU5k1mYMP7qAn7a1BqJFTkR2f3Yv-oS2ZXZKpCwWc055UAh2RTQ77zw0eU5pdnx4P7wmg5GUUruVojJOUU5cNHqqbZJ6Tk9yYtJoLa5Odk5Yzm_vHk5o-ytOfeqyqklOcM5COC9ObCWwerTxtJZlOLJOWDZn6qUajk5xVCLgWs58ADxOZrSwsyjEATG4zkXOZM509mFVCaQT8TS-mfoRAA2sOpMRxD3Ob-8prql3regdzlLOZLZWYiFNg-hzzYQvoPB0vqyepz617RkuuPU7zkUBgiyRpqRgf8QhTmy7tPMJ17s4J2I3xYpchdkucDfXrS2C4DJACnGidKFQEb6jLY2OrDW30RcPBEA4oClrhJA8mlmBFWiSDLS-iLutI62egqAlOwOuiaW9Lns4E4hMzkndhIqy0nDgHy5fX5_mcJBgFnGqcnqnJynmRchTElz1guA_rhquLD2w4C6wYy5bNjGxkuiDiRsuQS2knrtAPrBbhpCHAK58-DLAl2AyTllViQcIIms0dpAFrmX8E_gwhnCuQPJVogrOXce9Q7zWXKJ_tmkEEE51IjQ2eyQ8VwqIPa-MJa48jEJwzyNnB7qJjmgcqG5BfYrWb1Z8ABtWSUa_EARLA9QkUnkQApJpQbEiN0A-CktgJLY99iFOYB4mAEu-mG51dG7OUhGfgjustXRb1mPWVRBX1ne3oZU6IjFxADZLHBmcGaOrQSNnAyx3d6xpHKJNkm-RjXhp_IFItMadcTKqZypfJGF0Y9cvLLBkmvATVHZvMvuSFT5vGx8-kIcfECAxIBVAN4AcMS_gCGc54Lxgus4dHwaBpDAW7magvAAufbt1jMCHHwVdkkJ7uzwXhPAVgJTwDfAr6wiXD6MJGHLuSCAa7kskjWAoHx40BKCzMBYQAe5T2ERgEpkE8IddGfQWoB0fLOmG6JB0kjA6kKkEvOpH3z8AGB52MBIwCgyUHmoMC3AoHl6QJDAOACTRF0iwHnC3mBIoHkIeWAKWHmyAq4BaHmYeZz8kUBEea4CwHD_sOqEVnyzpn_yiMCYUlR5ojjBcKFwbRDhcO9iHHyzpgqSmHkwEioC9DjYyKR5GgbIeZ6eGcp0eeh5GgYhcP0hb7LYeSKivAlrqUG-OZigeUZAmHmYech5oFjPvgredfZK3ig-YXxNvIgAVfZceDX2it7aouA26nlYVDhU3gDKeRh5lHmkIodK10Ic8laCdHkqeRDAtnn8ebvuMOorQnB56HmEech5qqKI6qB5CpKIwG55vfz_IbXi99rDBqB5jHlIebJ5b-6ebKB5YAreMrJ5_qFReSgy-7myeWF51QCAoUtkwKHtImB5OADBech53lmweSAAs6boeeR5yHl9wLT8m1JceeB5XXCQebxCjjBNiC-5eeFBYbZYLlkMANigeBLFAff883yPcEZMJGHEoPwA8gAKAPIA8gBAAA",__position:0,__code:"<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />",__scope:{props:this?this.props:r,Map:yo}},a.a.createElement(yo,{viewport:{center:[.026,123.61],zoom:5}})))}}])&&bo(r.prototype,o),s&&bo(r,s),t}();xo.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=src-map-map.58f0d8e02f3f176b30f9.js.map