{"version":3,"sources":["/Users/joseangel/Workspace/map-components/src/map/glmap/map.css","/Users/joseangel/Workspace/map-components/src/map/lib/Pack.js","/Users/joseangel/Workspace/map-components/src/map/lib/pelagosClient.js","/Users/joseangel/Workspace/map-components/src/map/proptypes/tracks.js","/Users/joseangel/Workspace/map-components/src/map/proptypes/layers.js","/Users/joseangel/Workspace/map-components/src/map/proptypes/shared.js","/Users/joseangel/Workspace/map-components/src/map/config.js","/Users/joseangel/Workspace/map-components/src/map/module/module.actions.js","/Users/joseangel/Workspace/map-components/src/map/module/module.selectors.js","/Users/joseangel/Workspace/map-components/src/map/tracks/tracks.selectors.js","/Users/joseangel/Workspace/map-components/src/map/constants.js","/Users/joseangel/Workspace/map-components/src/map/utils/buildEndpoint.js","/Users/joseangel/Workspace/map-components/src/map/utils/heatmapTileData.js","/Users/joseangel/Workspace/map-components/src/map/heatmap/heatmapTiles.actions.js","/Users/joseangel/Workspace/map-components/src/map/heatmap/heatmap.actions.js","/Users/joseangel/Workspace/map-components/src/map/glmap/viewport.actions.js","/Users/joseangel/Workspace/map-components/src/map/glmap/interaction.actions.js","/Users/joseangel/Workspace/map-components/src/map/utils/map-colors.js","/Users/joseangel/Workspace/map-components/src/map/heatmap/HeatmapSubLayer.js","/Users/joseangel/Workspace/map-components/src/map/heatmap/HeatmapLayer.js","/Users/joseangel/Workspace/map-components/src/map/activity/ActivityLayers.js","/Users/joseangel/Workspace/map-components/src/map/activity/ActivityLayers.container.js","/Users/joseangel/Workspace/map-components/src/map/glmap/Map.js","/Users/joseangel/Workspace/map-components/src/map/glmap/Map.container.js","/Users/joseangel/Workspace/map-components/src/map/glmap/style.reducer.js","/Users/joseangel/Workspace/map-components/src/map/utils/getMainGeomType.js","/Users/joseangel/Workspace/map-components/src/map/glmap/style.actions.js","/Users/joseangel/Workspace/map-components/src/map/glmap/viewport.reducer.js","/Users/joseangel/Workspace/map-components/src/map/store/index.js","/Users/joseangel/Workspace/map-components/src/map/utils/getTrackBounds.js","/Users/joseangel/Workspace/map-components/src/map/tracks/tracks.actions.js","/Users/joseangel/Workspace/map-components/src/map/utils/withReducerTypes.js","/Users/joseangel/Workspace/map-components/src/map/module/module.reducer.js","/Users/joseangel/Workspace/map-components/src/map/tracks/tracks.reducer.js","/Users/joseangel/Workspace/map-components/src/map/heatmap/heatmap.reducer.js","/Users/joseangel/Workspace/map-components/src/map/heatmap/heatmapTiles.reducer.js","/Users/joseangel/Workspace/map-components/src/map/glmap/interaction.reducer.js","/Users/joseangel/Workspace/map-components/src/map/store/reducers.js","/Users/joseangel/Workspace/map-components/src/map/map.js","/Users/joseangel/Workspace/map-components/src/map/basemaps/index.js","/Users/joseangel/Workspace/map-components/src/map/map.mdx"],"names":["module","exports","byname","Uint8","size","Uint8Array","BYTES_PER_ELEMENT","array","getter","setter","Int8","Int8Array","Uint16","Uint16Array","Int16","Int16Array","Uint32","Uint32Array","Int32","Int32Array","Float32","Float32Array","Float64","Float64Array","writeStringToArrayBuffer","str","start","end","buf","bufstart","undefined","length","i","charCodeAt","arrayBufferToString","String","fromCharCode","apply","Pack","typemap","byarray","pack","typespec","value","littleendian","ArrayBuffer","DataView","stringToArrayBuffer","res","Uint8ClampedArray","buffer","name","spec","PelagosClient","this","MAGIC_COOKIE","url","token","Promise","resolve","reject","request","XMLHttpRequest","open","setRequestHeader","responseType","onload","handleData","bind","onerror","send","self","error","readyState","success","status","isFileUri","response","byteLength","dataView","headerLen","cookie","slice","getInt32","offset","headerIsLoaded","header","JSON","parse","rowLen","colsByName","colidx","cols","col","idx","type","multiplier","min","max","orientation","errorLoading","toString","allLoaded","result","rowidx","row","val","colValues","eval","trackTypes","id","PropTypes","string","isRequired","data","object","color","oneOf","layerTemporalExtents","arrayOf","number","fitBoundsOnLoad","bool","heatmapLayerTypes","tilesetId","subtype","visible","hue","opacity","filters","shape","filterValues","endpoints","temporalExtents","temporalExtentsLess","interactive","basemapLayerTypes","staticLayerTypes","selected","selectedFeatures","field","values","highlighted","higlightedFeatures","showLabels","isCustom","gl","popupTypes","content","node","latitude","longitude","viewportTypes","zoom","center","STATIC_LAYERS_CARTO_ENDPOINT","STATIC_LAYERS_CARTO_TILES_ENDPOINT","initModule","props","dispatch","payload","startLoader","state","loaderId","timestamp","Date","getTime","map","onLoadStart","completeLoader","getState","loaders","onLoadComplete","onViewportChange","interactionState","callback","viewport","bounds","canZoomIn","canZoomOut","mouseLatLong","setTemporalExtent","temporalExtent","setHighlightTemporalExtent","highlightTemporalExtent","closePopup","onClosePopup","setCursor","cursor","getTemporalExtent","getHighlightTemporalExtent","getTracksData","tracks","getGeojsonTracksReady","createSelector","filter","t","mergeStyles","style1","style2","sources","layers","filterGeojsonByTimerange","geojson","features","featuresFiltered","reduce","filteredFeatures","feature","properties","coordinateProperties","times","filtered","geometry","coordinates","filteredCoordinates","coordinate","index","timeCoordinate","push","filteredFeature","getFullTracksStyles","hasTemporalExtent","hasTracks","timerange","acc","track","source","style","paint","getHighlightedTrackStyles","getTracksStyles","trackStyles","highlightedTrackStyles","TRANSITION_TYPE","ZOOM","BRUSH_RENDERING_STYLE","NORMAL","BULLSEYE","BRUSH_ZOOM_RENDERING_STYLE","RADIAL_GRADIENT","CIRCLE","CUSTOM_LAYERS_SUBTYPES","raster","urlTemplate","urlParams","templateSettings","interpolate","template","urlTemplateCompiled","getTemporalTileURLs","params","urls","forEach","extent","startTimeISO","toISOString","endTimeISO","tileCoordinates","x","y","z","buildEndpoint","temporalExtentsIndices","indexOf","getTilePromises","tilesetUrl","promises","urlIndex","obtainTile","getCleanVectorArrays","rawTileData","vectorArray","groupData","cleanVectorArrays","columns","currentArray","totalVectorArraysLength","sumBy","a","filteredColumns","column","console","warn","key","cumulatedOffsets","appendValues","set","getTilePlaybackData","prevPlaybackData","tilePlaybackData","zoomFactorRadius","convert","getZoomFactorRadius","zoomFactorRadiusRenderingMode","getZoomFactorRadiusRenderingMode","zoomFactorOpacity","getZoomFactorOpacity","columnsArr","Object","keys","c","storedColumns","concat","sigma","weight","hidden","pull","uniq","numPoints","newFrames","timeIndexes","point","timeIndex","getOffsetedTimeAtPrecision","datetime","lngLatToWorld","worldX","worldY","radius","sigmaToRadius","weightToOpacity","series","frame","vesselSatisfiesFilters","every","selectVesselsAt","tileData","tileQuery","startIndex","endIndex","currentFilters","vessels","toleranceRadiusInWorldUnits","f","wx","wy","pass","some","vesselSatisfiesAllFilters","vessel","currentTilesLoadZoomOffset","document","addEventListener","event","keyCode","getTilecoverLimits","viewportZoom","Math","ceil","tilesAvailable","min_zoom","max_zoom","flushToReleaseTiles","heatmapTiles","currentToLoadTileUids","currentTilesToReleaseUids","currentToReleaseTileUids","releaseTiles","markTileAsLoaded","tileUids","flushTileState","forceLoadingAllVisibleTiles","currentVisibleTiles","tilesToLoad","tilesToReleaseUids","currentLoadedTiles","visibleTile","find","uid","loadedTile","tilesToLoadUids","tile","getTile","updateLoadedTiles","debouncedFlushState","debounce","updateHeatmapTilesFromViewport","mapViewport","width","height","currentTransition","boundsViewport","PerspectiveMercatorViewport","unproject","wn","es","w","s","e","n","boundsPolygonsCoordinates","limits","w1","e2","geom","viewportTilesCoords","tilecover","tiles","viewportTilesIndexes","indexes","visibleTiles","coords","prevZoom","queryHeatmapVessels","temporalExtentIndexes","uids","highlightVesselFromHeatmap","getTemporalExtentsVisibleIndices","loadTemporalExtent","currentExtentStart","currentExtentEnd","indices","temporalExtentStart","loadLayerTile","layerId","Error","pelagosPromises","allLayerPromises","all","then","loadedLayerId","parseLayerTile","getTiles","layerIds","referenceTiles","newTemporalExtentsToLoad","loaderID","join","heatmapLayers","heatmap","tilesByLayer","allPromises","heatmapLayerHeader","referenceTile","temporalExtentsIndicesLoaded","queriedTemporalExtentsIndices","visibleTemporalExtentsIndices","temporalExtentsIndicesToLoad","difference","tilePromise","visibleHeatmapLayers","visibleHeatmapLayersIds","loadAllTilesForLayer","addHeatmapLayer","layer","removeHeatmapLayer","updateLayerLoadTemporalExtents","indicesToAddByLayer","heatmapLayer","oldVisibleTemporalExtentsIndices","newVisibleTemporalExtentsIndices","indicesAdded","indicesRemoved","layerIdsWithIndicesToAdd","clearHighlightedVessels","isEmpty","clickableCluster","layersVessels","availableTiles","bestTile","isCluster","isMouseCluster","layerVesselsResult","foundVessels","layersVesselsResults","layerVessels","v","seriesgroup","uniqBy","_queryHeatmap","highlightedVessels","highlightableCluster","highlightClickedVessel","clearHighlightedClickedVessel","updateHeatmapLayers","newLayers","currentLoadTemporalExtent","prevLayersDict","newLayer","prevLayer","prevLayerId","l","setBounds","setViewport","updateViewport","viewportUpdate","transitionTo","increment","transitionToZoom","transitionEnd","zoomIntoVesselCenter","fitToBounds","vp","fitBounds","minLng","minLat","maxLng","maxLat","padding","exportNativeViewport","nativeViewport","topLeftPx","bottomRightPx","topLeftWorld","pixelsToWorld","pixelUnprojectionMatrix","bottomRightWorld","leftWorldScaled","scale","rightWorldScaled","northWest","southEast","north","south","west","east","getAreaKm2","glFeature","area","toLocaleString","maximumFractionDigits","getFeature","fields","fieldsDefinition","metadata","fieldsKeys","k","fd","fieldKey","def","label","title","isLink","isMain","mainField","getFields","mapInteraction","interactionType","glFeatures","glGetSource","legacyHeatmapFeature","currentStyle","mapStyle","toJS","currentLegacyHeatmapData","count","group","clusterPromises","getStaticLayerIdFromGlFeature","cluster","clusterPromise","clusterId","cluster_id","glSource","getClusterExpansionZoom","err1","getClusterLeaves","err2","children","childrenFeatures","child","getCluster","autoClusterZoom","clusterBehavior","clusterZoom","onClick","onHover","COLOR_HUES","orange","peach","yellow","green","brightGreen","lightBlue","blue","purple","pink","getKeyByValue","obj","entries","entry","rgbToHsv","_r","_g","_b","h","r","g","b","d","hsvToRgb","h_","s_","v_","parseFloat","floor","p","q","mod","round","hueToRgbDefaults","hueToRgbString","rgb","rgbToHexString","css","channelName","channelValue","channelStr","hueToRgbHexString","hueToClosestColor","goal","colorHueValues","closestHue","prev","curr","abs","hexToRgb","hex","exec","parseInt","rgbToRgbaString","hueToRgbaString","hexToRgba","hueIncrementToHue","hueIncrement","hueToHueIncrement","wrapHue","hueOrColorToHexColor","HeatmapSubLayer","baseTexture","renderingStyleIndex","useNormalBlendMode","stage","PIXI","particles","ParticleContainer","alpha","position","uvs","blendMode","BLEND_MODES","SCREEN","spritesPool","initialTextureFrame","Rectangle","VESSELS_BASE_RADIUS","mainVesselTexture","Texture","_setTextureFrame","clearSpriteProps","spritesProps","spritesPropsCount","destroy","textureFrame","clone","VESSELS_HUES_INCREMENTS_NUM","update","numProps","resizeSpritesPool","sprite","setTransform","numSprites","delta","toRemove","removeChildAt","toAdd","_addSprites","num","Sprite","anchor","addChild","worldToPixelsSimple","m","HeatmapLayer","_build","_destroy","_redraw","nextProps","useRadialGradientStyle","setBrushZoomRenderingStyle","rootStage","customRenderingStyle","subLayers","renderingStyle","rendering","setBrushRenderingStyle","brushRenderingStyle","toUpperCase","_setBrushRenderingStyleIndex","brushZoomRenderingStyle","cappedZoomRenderingStyle","newStyleIndex","subLayer","setRenderingStyleIndex","defaultHue","allHuesToRender","currentlyUsedHues","allHues","_createSublayer","_destroySubLayer","_setSubLayersSpritePropsForTile","numFilters","hueToRender","render","viewportLeft","viewportRight","len","fi","scaledX","scaledY","mtx","pixelProjectionMatrix","pitch","worldToPixels","pushSpriteProps","defaultOpacity","defaultSize","removeChild","React","Component","ActivityLayers","pixiReady","onTouchStart","touches","queryCoords","clientX","clientY","onMouseMove","_onTick","heatmapFadingIn","heatmapStage","_heatmapFadeinStep","setState","_context","_updateViewportSize","pixi","transparent","antialias","renderer","canvas","view","container","appendChild","baseTextureCanvas","blurFactor","tplCanvas","createElement","tplCtx","getContext","diameter","yCenter","gradient","createRadialGradient","rgbString","addColorStop","rgbOuter","fillStyle","fillRect","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","getVesselTexture","fromCanvas","ticker","add","viewportWidth","viewportHeight","resize","dim","wrappedLongitude","heatmapFadeinStartTimestamp","now","timeElapsed","highlightedClickedVessel","highlightLayerData","highlightFilters","sourceLayer","shouldUseRadialGradientStyle","toggleHeatmapDimming","_startHeatmapFadein","getError","err","log","_getHighlightData","ref","BaseControl","propTypes","func","contextTypes","getHeatmapLayersAsArray","getTemporalExtentIndexes","startTimestamp","endTimestamp","connect","ownProps","PopupWrapper","closeButton","onClose","offsetTop","tipSize","closeOnClick","defaultProps","Map","onLoad","getBounds","glMap","_ne","_sw","lat","lng","loadObserver","window","ResizeObserver","default","_containerResizeObserver","handleResizeObserver","observe","_mapContainerRef","contentRect","propsViewport","bearing","onMapInteraction","lngLat","getRef","getMap","getSource","getCursor","isDragging","transformRequest","resourceType","match","headers","Authorization","mouseOver","disconnect","maxZoom","minZoom","clickPopup","hoverPopup","hasHeatmapLayers","markers","interactiveLayerIds","className","styles","onMouseLeave","onMouseEnter","onTransitionEnd","clickRadius","disableTokenWarning","marker","googleLogo","getInteractiveLayerIds","staticLayers","glLayer","glLayerId","getMapStyle","mapStyles","trackLayersIndex","lastIndexOf","finalMapStyles","mergeIn","mapStylesLayers","get","trackLayer","insert","fromJS","interaction","internalCursor","moduleCursor","long","attributions","GL_STYLE","sourceKey","attribution","setLayerStyleDefaults","layout","temporalField","visibility","initialState","cartoLayersInstanciated","basemapLayers","TYPES","geoJSON","INIT_MAP_STYLE","SET_MAP_STYLE","MARK_CARTO_LAYERS_AS_INSTANCIATED","SET_STATIC_LAYERS","SET_BASEMAP_LAYERS","setDefaultVectorTiles","currentSource","refLayerUrl","refLayerUrls","newTiles","initStyle","glyphsPath","setMapStyle","setStyleTemporalExtent","applyToThrottled","glLayers","currentFilter","getIn","isLegacy","setIn","applyTemporalExtentThrottled","throttle","applyTemporalExtent","updateGLLayer","refLayer","currentStyleLayers","newStyle","glLayerIndex","findIndex","toggleLayerVisibility","isBasemap","refLayerOpacity","labelsVisibility","colorPaintProperty","currentGlLayer","glType","defaultStyles","styleType","refLayerStyle","hasFeatures","applyStyleToAllFeatures","defaultStyle","layerStyle","allPaintProperties","glPaintProperty","glPaintFinalValue","selectedValue","fallbackValue","paintOrLayout","includes","originalLayerStyle","layerColorRgbString","layerColorRgb","replace","applyLayerExpressions","addCustomGLLayer","tileSize","allGeoJSONTypes","numByGLType","geoJSONType","glTypeMax","getMainGeomType","layerIndex","reverse","splice","instanciateCartoLayers","sourceId","cartoLayersPromises","sourceCartoSQL","mapConfig","options","sql","mapConfigURL","encodeURIComponent","stringify","cartoAnonymousMapUrl","fetch","json","layergroupid","catch","instanciatedCartoLayers","cartoLayer","tilesURL","newSourceId","deleteIn","commitStyleUpdates","bl","currentGLSources","workspaceGLLayers","workspaceGLLayer","finalSource","existingLayerIds","layerToAdd","layerToAddId","defaultGlLayer","existingLayers","newLayerGroup","newLayerIndex","findLastIndex","updateWorkspaceGLLayers","customLayers","glSources","cartoLayersToInstanciate","newSource","cartoLayerInstanciated","DEFAULT_TRANSITION","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","targetMapVessel","fitToBoundsAction","geoBounds","timelineBounds","setTimeout","TRANSITION_DURATION","getTrackTimeBounds","time","Infinity","getTrackBounds","tbbox","loadTrack","trackHasData","trackHasUrl","cleanData","vectorArrays","currentLng","createFeature","segId","geomType","currentSeries","currentFeature","fishingPoints","lngOffset","ll","convertLegacyTrackToGeoJSON","statusText","finally","removeTrack","trackId","updateTracks","newTracks","prevTracks","newTrack","prevTrack","withReducerPropTypes","propTypesSchema","reducer","onAttributionsChange","withReducerTypes","instanceOf","action","loaderIndex","exact","trackData","removedTrackId","mapReducer","combineReducers","ModuleReducer","TracksReducer","assign","newTile","layerTiles","tileIndex","tileUid","releasedTileIndex","releasedRefTileIndex","newHeatmapLayers","newToLoadTilesUids","tileUidsMarkedAsLoaded","newCurrentToLoadTileUids","newMapStyle","currentZoom","mapReducers","replaceReducer","throttleApplyTemporalExtent","updateViewportFromIncomingProps","incomingViewport","MapModule","initialized","errorInfo","prevProps","currentViewport","componentStack","AVAILABLE_BASEMAPS","layoutProps","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","Props","__codesandbox","isMDXComponent"],"mappings":"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","file":"static/js/src-map-map.621e310b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"map_map__1TLha\",\"googleLogo\":\"map_googleLogo__3lQ1y\"};","/* eslint-disable */\nvar byname = {\n  Uint8: {\n    size: Uint8Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint8',\n    setter: 'setUint8',\n  },\n  Int8: {\n    size: Int8Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint8',\n    setter: 'setUint8',\n  },\n  Uint16: {\n    size: Uint16Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint16',\n    setter: 'setUint16',\n  },\n  Int16: {\n    size: Int16Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getInt16',\n    setter: 'setInt16',\n  },\n  Uint32: {\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getUint32',\n    setter: 'setUint32',\n  },\n  Int32: {\n    size: Int32Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getInt32',\n    setter: 'setInt32',\n  },\n  Float32: {\n    size: Float32Array.BYTES_PER_ELEMENT,\n    array: 'Float32Array',\n    getter: 'getFloat32',\n    setter: 'setFloat32',\n  },\n  Float64: {\n    size: Float64Array.BYTES_PER_ELEMENT,\n    array: 'Float64Array',\n    getter: 'getFloat64',\n    setter: 'setFloat64',\n  },\n}\n\nvar writeStringToArrayBuffer = function(str, start, end, buf, bufstart) {\n  if (end == undefined) {\n    end = str.length\n  }\n  if (start == undefined) {\n    start = 0\n  }\n  if (bufstart == undefined) {\n    bufstart = start\n  }\n  for (var i = start; i < end; i++) {\n    buf[i - start + bufstart] = str.charCodeAt(i) & 0xff\n  }\n}\n\nvar stringToArrayBuffer = function(str, start, end) {\n  var self = this\n\n  if (end == undefined) {\n    end = str.length\n  }\n  if (start == undefined) {\n    start = 0\n  }\n  var res = new Uint8ClampedArray(end - start)\n  writeStringToArrayBuffer(str, start, end, res, 0)\n  return res.buffer\n}\n\nvar arrayBufferToString = function(buf) {\n  return String.fromCharCode.apply(null, new Uint8Array(buf))\n}\n\nvar pack = function(typespec, value, littleendian) {\n  var array = new ArrayBuffer(typespec.size)\n  new DataView(array)[typespec.setter](0, value, littleendian)\n  return arrayBufferToString(array)\n}\n\nvar Pack = {\n  typemap: {\n    byname: byname,\n    byarray: {},\n  },\n  pack: pack,\n  arrayBufferToString: arrayBufferToString,\n  stringToArrayBuffer: stringToArrayBuffer,\n  writeStringToArrayBuffer: writeStringToArrayBuffer,\n}\nfor (var name in Pack.typemap.byname) {\n  var spec = Pack.typemap.byname[name]\n  spec.name = name\n  Pack.typemap.byarray[spec.array] = spec\n}\n\nexport default Pack\n","/* eslint-disable */\n\nimport Pack from './Pack'\n\nclass PelagosClient {\n  constructor() {\n    this.MAGIC_COOKIE = 'tmtx'\n  }\n\n  obtainTile(url, token) {\n    return new Promise(\n      function(resolve, reject) {\n        this.request = null\n        if (typeof XMLHttpRequest != 'undefined') {\n          this.request = new XMLHttpRequest()\n        } else {\n          throw 'XMLHttpRequest is disabled'\n        }\n        this.resolve = resolve\n        this.reject = reject\n        this.request.open('GET', url, true)\n        if (token) {\n          this.request.setRequestHeader('Authorization', `Bearer ${token}`)\n        }\n        this.request.responseType = 'arraybuffer'\n        this.request.onload = this.handleData.bind(this)\n        this.request.onerror = this.handleData.bind(this)\n        this.request.send(null)\n      }.bind(this)\n    )\n  }\n\n  handleData() {\n    var self = this\n    if (!this.request) {\n      return\n    }\n    if (this.error) {\n      return true\n    }\n\n    if (this.request.readyState == 4) {\n      /* HTTP reports success with a 200 status. The file protocol\n       reports success with zero. HTTP returns zero as a status\n       code for forbidden cross domain requests.\n       https://developer.mozilla.org/En/Using_XMLHttpRequest */\n      var success = this.request.status == 200 || (this.isFileUri && this.request.status == 0)\n      if (!success) {\n        this.resolve(null)\n        return\n      }\n    }\n\n    if (!this.request.response) {\n      return\n    }\n    var length = this.request.response.byteLength\n    var response = this.request.response\n    var dataView = new DataView(response)\n\n    if (length < 4 + 4) {\n      return\n    }\n    if (self.headerLen == null) {\n      var cookie = Pack.arrayBufferToString(response.slice(0, 4))\n      if (cookie != this.MAGIC_COOKIE) {\n        this.reject(\n          'Could not load ' +\n            this.url +\n            ' due to incorrect file format. Cookie: [' +\n            this.cookie +\n            ']'\n        )\n        return\n      }\n\n      self.headerLen = dataView.getInt32(4, true)\n\n      self.offset = 4 + 4\n    }\n    if (length < self.offset + self.headerLen) {\n      return\n    }\n    if (!self.headerIsLoaded) {\n      self.header = JSON.parse(\n        Pack.arrayBufferToString(response.slice(self.offset, self.offset + self.headerLen))\n      )\n      self.rowLen = 0\n      self.header.colsByName = {}\n      for (var colidx = 0; colidx < self.header.cols.length; colidx++) {\n        var col = self.header.cols[colidx]\n        col.idx = colidx\n        self.header.colsByName[col.name] = col\n        col.typespec = Pack.typemap.byname[col.type]\n\n        if (col.multiplier != undefined && col.min != undefined) {\n          col.min = col.min * col.multiplier\n        }\n        if (col.offset != undefined && col.min != undefined) {\n          col.min = col.min + col.offset\n        }\n        if (col.multiplier != undefined && col.max != undefined) {\n          col.max = col.max * col.multiplier\n        }\n        if (col.offset != undefined && col.max != undefined) {\n          col.max = col.max + col.offset\n        }\n\n        self.rowLen += col.typespec.size\n      }\n      self.offset += self.headerLen\n\n      // Add the padding to nearest 4-byte-boundary\n      self.offset += (4 - (self.headerLen % 4)) % 4\n\n      self.headerIsLoaded = true\n      if (self.header.orientation != 'rowwise' && self.header.orientation != 'columnwise') {\n        self.errorLoading({\n          orientation: self.header.orientation,\n          toString: function() {\n            return (\n              'Could not load ' +\n              this.url +\n              ' due to unsupported file orientation. Orientation: ' +\n              this.orientation +\n              '. Supported orientations: rowwise, columnwise.'\n            )\n          },\n        })\n        return true\n      }\n\n      // Empty tile, stop parsing.\n      if (!self.rowLen) {\n        self.allLoaded()\n        return true\n      }\n    }\n    if (self.header.orientation == 'rowwise') {\n      var result = {}\n      for (; self.offset + self.rowLen <= length; self.rowidx++) {\n        var row = {}\n        for (var colidx = 0; colidx < self.header.cols.length; colidx++) {\n          var col = self.header.cols[colidx]\n          var val = dataView[col.typespec.getter](self.offset, true)\n          row[col.name] = val\n          self.offset += col.typespec.size\n        }\n        // self.rowLoaded(row);\n\n        result[col.name] = row\n      }\n      if (self.rowidx == self.header.length) {\n        // self.allLoaded();\n        this.resolve(result)\n      } else {\n        // self.batchLoaded();\n      }\n    } else if (self.header.orientation == 'columnwise') {\n      var colValues = null\n      var result = {}\n      if (length >= self.offset + self.header.length * self.rowLen) {\n        for (var colidx = 0; colidx < self.header.cols.length; colidx++) {\n          var col = self.header.cols[colidx]\n\n          colValues = new (eval(col.typespec.array))(\n            response.slice(self.offset, self.offset + col.typespec.size * self.header.length)\n          )\n          self.offset += self.header.length * col.typespec.size\n\n          result[col.name] = colValues\n        }\n\n        // self.allLoaded();\n        this.resolve(result)\n        return true\n      }\n    }\n  }\n}\n\nexport default PelagosClient\n","import PropTypes from 'prop-types'\n\nexport const trackTypes = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  data: PropTypes.object,\n  color: PropTypes.string,\n  type: PropTypes.oneOf(['geojson', 'pelagos', undefined]),\n  layerTemporalExtents: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  fitBoundsOnLoad: PropTypes.bool,\n}\n","import PropTypes from 'prop-types'\n\nexport const heatmapLayerTypes = {\n  id: PropTypes.string.isRequired,\n  tilesetId: PropTypes.string,\n  subtype: PropTypes.string,\n  visible: PropTypes.bool,\n  hue: PropTypes.number,\n  opacity: PropTypes.number,\n  filters: PropTypes.arrayOf(\n    PropTypes.shape({\n      // hue overrides layer hue if set\n      hue: PropTypes.number,\n      // filterValues is a dictionary in which each key is a filterable field,\n      // and values is an array of all possible values (OR filter)\n      // ie: filterValues: { category: [5, 6] }\n      filterValues: PropTypes.object,\n    })\n  ),\n  header: PropTypes.shape({\n    endpoints: PropTypes.object,\n    colsByName: PropTypes.object,\n    temporalExtents: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    temporalExtentsLess: PropTypes.bool,\n  }).isRequired,\n  interactive: PropTypes.bool,\n}\n\nexport const basemapLayerTypes = {\n  id: PropTypes.string,\n  visible: PropTypes.bool,\n}\n\nexport const staticLayerTypes = {\n  id: PropTypes.string.isRequired,\n  // TODO MAP MODULE Is that needed and if so why\n  visible: PropTypes.bool,\n  selected: PropTypes.bool,\n  selectedFeatures: PropTypes.shape({\n    field: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.string),\n  }),\n  highlighted: PropTypes.bool,\n  higlightedFeatures: PropTypes.shape({\n    field: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.string),\n  }),\n  opacity: PropTypes.number,\n  color: PropTypes.string,\n  showLabels: PropTypes.bool,\n  interactive: PropTypes.bool,\n  filters: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  isCustom: PropTypes.bool,\n  subtype: PropTypes.oneOf([undefined, 'geojson', 'raster']),\n  url: PropTypes.string,\n  data: PropTypes.object,\n  gl: PropTypes.object,\n}\n","import PropTypes from 'prop-types'\n\nexport const popupTypes = {\n  content: PropTypes.node,\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n}\n\nexport const viewportTypes = {\n  zoom: PropTypes.number,\n  center: PropTypes.arrayOf(PropTypes.number),\n}\n","// Application settings\nexport const TIMELINE_STEP = 24 * 60 * 60 * 1000 // 1 day\nexport const MIN_FRAME_LENGTH_MS = TIMELINE_STEP // 1 day\n\n// vessels rendering\n// from this zoom level and above, render using circle style instead of heatmap\nexport const VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD = 6\n// the base radius, it can only be scaled down by the radius factor calculated on the dataset\nexport const VESSELS_BASE_RADIUS = 8\n// in heatmap style, defines how 'blurry' a point will look. Higher = less blur\nexport const VESSELS_HEATMAP_BLUR_FACTOR = 0.15\n\nexport const ACTIVITY_HIGHLIGHT_HUE = 312\n\nexport const VESSELS_HEATMAP_DIMMING_ALPHA = 0.5\n\nexport const MAX_SPRITES_PER_LAYER = 200000\n\n// interaction\n// radius of vessels lookup in pixels,\n// ie how large the clicked region should be for including vessels\nexport const VESSEL_CLICK_TOLERANCE_PX = 10\n\nexport const CLUSTER_CLICK_ZOOM_INCREMENT = 1\n\nexport const MIN_ZOOM_LEVEL = 1\n// user can zoom up to this z level, but it doesn't guarantee availability of tiles\nexport const MAX_ZOOM_LEVEL = 14\n\n// data\n// Limit tile loading for activity layers up to this z level.\n// Beyond, layer is still displayed but with coarse data from the lower zoom level\nexport const ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING = 10\n\n// Sets what should be the discrete zoom level to load tiles, from a non-discrete\n// viewport zoom values. For instance, a values of 0.5 will load z 3 with a viewport\n// z of 2 (ceiling of 2 + 0.5)\n// this has a direct impact on the number of points displayed on the map, thus on the\n// performance of the app.\nexport const TILES_LOAD_ZOOM_OFFSET = -1\nexport const TILES_LOAD_ZOOM_OFFSET_HI_DEF = 0.5\n\nexport const STATIC_LAYERS_CARTO_ENDPOINT =\n  'https://carto.globalfishingwatch.org/user/admin/api/v1/map?config=$MAPCONFIG'\nexport const STATIC_LAYERS_CARTO_TILES_ENDPOINT =\n  'https://carto.globalfishingwatch.org/user/admin/api/v1/map/$LAYERGROUPID/{z}/{x}/{y}.mvt'\n\nexport const TRACKS_LAYER_IN_FRONT_OF_GROUP = 'temporal'\n\nexport const TILES_URL_NEEDING_AUTHENTICATION = 'gateway.api'\n","export const INIT_MODULE = 'INIT_MODULE'\nexport const SET_TEMPORAL_EXTENT = 'SET_TEMPORAL_EXTENT'\nexport const SET_HIGHLIGHT_TEMPORAL_EXTENT = 'SET_HIGHLIGHT_TEMPORAL_EXTENT'\nexport const START_LOADER = 'START_LOADER'\nexport const COMPLETE_LOADER = 'COMPLETE_LOADER'\nexport const SET_MODULE_CURSOR = 'SET_MODULE_CURSOR'\n\nexport const initModule = (props) => (dispatch) => {\n  dispatch({\n    type: INIT_MODULE,\n    payload: props,\n  })\n}\n\nexport const startLoader = (dispatch, state, loaderId) => {\n  const timestamp = new Date().getTime()\n  const generatedLoaderId = loaderId !== undefined ? `${loaderId}_${timestamp}` : timestamp\n  dispatch({\n    type: START_LOADER,\n    payload: generatedLoaderId,\n  })\n  if (state.map.module.onLoadStart !== undefined) {\n    state.map.module.onLoadStart()\n  }\n  return loaderId\n}\n\nexport const completeLoader = (loaderId) => (dispatch, getState) => {\n  dispatch({\n    type: COMPLETE_LOADER,\n    payload: loaderId,\n  })\n  const state = getState()\n  const loaders = state.map.module.loaders\n  if (!loaders.length && state.map.module.onLoadComplete !== undefined) {\n    state.map.module.onLoadComplete()\n  }\n}\n\nexport const onViewportChange = (interactionState) => (dispatch, getState) => {\n  const state = getState()\n  const callback = state.map.module.onViewportChange\n\n  if (callback === undefined) {\n    return\n  }\n  const viewport = state.map.viewport\n\n  callback({\n    interactionState,\n    zoom: viewport.viewport.zoom,\n    center: [viewport.viewport.latitude, viewport.viewport.longitude],\n    bounds: viewport.bounds,\n    canZoomIn: viewport.canZoomIn,\n    canZoomOut: viewport.canZoomOut,\n    mouseLatLong: viewport.mouseLatLong,\n  })\n}\n\nexport const setTemporalExtent = (temporalExtent) => ({\n  type: SET_TEMPORAL_EXTENT,\n  payload: temporalExtent,\n})\n\nexport const setHighlightTemporalExtent = (highlightTemporalExtent) => ({\n  type: SET_HIGHLIGHT_TEMPORAL_EXTENT,\n  payload: highlightTemporalExtent,\n})\n\nexport const closePopup = () => (dispatch, getState) => {\n  const state = getState()\n  if (state.map.module.onClosePopup !== undefined) {\n    state.map.module.onClosePopup()\n  }\n}\n\nexport const setCursor = (cursor) => ({\n  type: SET_MODULE_CURSOR,\n  payload: cursor,\n})\n","export const getTemporalExtent = (state) => state.map.module.temporalExtent\n\nexport const getHighlightTemporalExtent = (state) => state.map.module.highlightTemporalExtent\n","import { createSelector } from 'reselect'\nimport { getTemporalExtent, getHighlightTemporalExtent } from '../module/module.selectors'\n\nexport const getTracksData = (state) => state.map.tracks.data\n\nexport const getGeojsonTracksReady = createSelector(\n  getTracksData,\n  (tracks) => tracks.filter((t) => t.data !== undefined)\n)\n\nconst mergeStyles = (style1, style2) => ({\n  sources: { ...style1.sources, ...style2.sources },\n  layers: [...style1.layers, ...style2.layers],\n})\n\nconst filterGeojsonByTimerange = (geojson, { start, end }) => {\n  if (!geojson || !geojson.features) return null\n  const featuresFiltered = geojson.features.reduce((filteredFeatures, feature) => {\n    const hasTimes =\n      feature.properties &&\n      feature.properties.coordinateProperties &&\n      feature.properties.coordinateProperties.times &&\n      feature.properties.coordinateProperties.times.length > 0\n    if (hasTimes) {\n      const filtered = feature.geometry.coordinates.reduce(\n        (filteredCoordinates, coordinate, index) => {\n          const timeCoordinate = feature.properties.coordinateProperties.times[index]\n          const isInTimeline = timeCoordinate >= start && timeCoordinate <= end\n          if (isInTimeline) {\n            filteredCoordinates.coordinates.push(coordinate)\n            filteredCoordinates.times.push(timeCoordinate)\n          }\n          return filteredCoordinates\n        },\n        { coordinates: [], times: [] }\n      )\n      if (!filtered.coordinates.length) return filteredFeatures\n\n      const filteredFeature = {\n        ...feature,\n        geometry: {\n          ...feature.geometry,\n          coordinates: filtered.coordinates,\n        },\n        properties: {\n          ...feature.properties,\n          coordinateProperties: {\n            times: filtered.times,\n          },\n        },\n      }\n      filteredFeatures.push(filteredFeature)\n    }\n    return filteredFeatures\n  }, [])\n  const geojsonFiltered = {\n    ...geojson,\n    features: featuresFiltered,\n  }\n  return geojsonFiltered\n}\n\nconst getFullTracksStyles = createSelector(\n  [getTemporalExtent, getGeojsonTracksReady],\n  (temporalExtent, tracks) => {\n    const hasTemporalExtent = temporalExtent && temporalExtent.length > 0\n    const hasTracks = tracks && tracks.length > 0\n    if (!hasTemporalExtent || !hasTracks) return null\n\n    const timerange = {\n      start: temporalExtent[0].getTime(),\n      end: temporalExtent[1].getTime(),\n    }\n    const styles = tracks.reduce(\n      (acc, track) => {\n        if (!track.data) return acc\n\n        const source = `${track.id}Track`\n        const style = {\n          sources: {\n            [source]: {\n              type: 'geojson',\n              data: filterGeojsonByTimerange(track.data, timerange),\n            },\n          },\n          layers: [\n            {\n              id: `${track.id}Lines`,\n              source,\n              type: 'line',\n              paint: {\n                'line-width': 1,\n                'line-color': track.color,\n              },\n            },\n            {\n              id: `${track.id}Points`,\n              source,\n              type: 'circle',\n              filter: ['match', ['geometry-type'], ['', 'Point'], true, false],\n              paint: {\n                'circle-radius': 4,\n                'circle-color': track.color,\n              },\n            },\n          ],\n        }\n        return mergeStyles(acc, style)\n      },\n      { sources: {}, layers: [] }\n    )\n    return styles\n  }\n)\n\nconst getHighlightedTrackStyles = createSelector(\n  [getHighlightTemporalExtent, getGeojsonTracksReady],\n  (highlightTemporalExtent, tracks) => {\n    const hasTemporalExtent = highlightTemporalExtent && highlightTemporalExtent.length > 0\n    const hasTracks = tracks && tracks.length > 0\n    if (!hasTemporalExtent || !hasTracks) return null\n\n    const timerange = {\n      start: highlightTemporalExtent[0].getTime(),\n      end: highlightTemporalExtent[1].getTime(),\n    }\n    const styles = tracks.reduce(\n      (acc, track) => {\n        if (!track.data) return acc\n\n        const source = `${track.id}HighlightedTrack`\n        const style = {\n          sources: {\n            [source]: {\n              type: 'geojson',\n              data: filterGeojsonByTimerange(track.data, timerange),\n            },\n          },\n          layers: [\n            {\n              id: `${track.id}HighlightedLines`,\n              source,\n              type: 'line',\n              paint: {\n                'line-width': 1,\n                'line-color': '#fff',\n              },\n            },\n          ],\n        }\n        return mergeStyles(acc, style)\n      },\n      { sources: {}, layers: [] }\n    )\n    return styles\n  }\n)\n\nexport const getTracksStyles = createSelector(\n  [getFullTracksStyles, getHighlightedTrackStyles],\n  (trackStyles, highlightedTrackStyles) => {\n    if (!highlightedTrackStyles) return trackStyles\n    return mergeStyles(trackStyles, highlightedTrackStyles)\n  }\n)\n","export const GL_TRANSPARENT = 'rgba(0,0,0,0)'\n\nexport const TRANSITION_TYPE = {\n  ZOOM: 'ZOOM',\n}\n\nexport const ENCOUNTERS = 'Encounters'\n\nexport const BRUSH_RENDERING_STYLE = {\n  NORMAL: 0,\n  BULLSEYE: 2,\n}\n\nexport const BRUSH_ZOOM_RENDERING_STYLE = {\n  RADIAL_GRADIENT: 0,\n  CIRCLE: 1,\n}\n\nexport const POLYGON_LAYERS_AREA = 'POLYGON_LAYERS_AREA'\n\nexport const CUSTOM_LAYERS_SUBTYPES = {\n  geojson: 'geojson',\n  raster: 'raster',\n}\n","import template from 'lodash/template'\nimport templateSettings from 'lodash/templateSettings'\n\nexport default (urlTemplate, urlParams) => {\n  templateSettings.interpolate = /{{([\\s\\S]+?)}}/g\n  const urlTemplateCompiled = template(urlTemplate)\n  return urlTemplateCompiled(urlParams)\n}\n","import pull from 'lodash/pull'\nimport uniq from 'lodash/uniq'\nimport sumBy from 'lodash/sumBy'\nimport { lngLatToWorld } from 'viewport-mercator-project'\nimport convert from '@globalfishingwatch/map-convert'\nimport buildEndpoint from './buildEndpoint'\nimport PelagosClient from '../lib/pelagosClient'\n\n/**\n * Generates the URLs to load vessel track data for a tile\n *\n * @param {string} tilesetUrl       the tileset base URL\n * @param {array} temporalExtents   all tileset temporal extents\n * @param {object} params           - tileCoordinates: this tiles tile coordinates (zoom, x, y). Will default to 0,0,0\n *                                  - temporalExtentsIndices: restrict to these temporalExtents indices\n * @returns {Array}                 an array of URLs for this tile\n */\nconst getTemporalTileURLs = (urlTemplate, temporalExtents, params = {}) => {\n  const urls = []\n\n  ;(temporalExtents || [null]).forEach((extent, index) => {\n    const urlParams = {}\n    if (extent !== null && params.temporalExtentsLess !== true) {\n      urlParams.startTimeISO = new Date(extent[0]).toISOString()\n      urlParams.endTimeISO = new Date(extent[1]).toISOString()\n    }\n    if (params.tileCoordinates) {\n      urlParams.x = params.tileCoordinates.x\n      urlParams.y = params.tileCoordinates.y\n      urlParams.z = params.tileCoordinates.zoom\n    }\n\n    const url = buildEndpoint(urlTemplate, urlParams)\n\n    if (\n      params.temporalExtentsLess === true ||\n      !params.temporalExtentsIndices ||\n      params.temporalExtentsIndices.indexOf(index) > -1\n    ) {\n      urls.push(url)\n    }\n  })\n  return urls\n}\n\n/**\n * See getTemporalTileURLs.\n */\nexport const getTilePromises = (tilesetUrl, token, temporalExtents, params = {}) => {\n  const promises = []\n  const urls = getTemporalTileURLs(tilesetUrl, temporalExtents, params)\n  for (let urlIndex = 0, length = urls.length; urlIndex < length; urlIndex++) {\n    promises.push(new PelagosClient().obtainTile(urls[urlIndex], token))\n  }\n\n  return promises\n}\n\nexport const getCleanVectorArrays = (rawTileData) =>\n  rawTileData.filter((vectorArray) => vectorArray !== null)\n\n/**\n * As data will come in multiple arrays (1 per API query/year basically), they need to be merged here\n *\n * @param cleanVectorArrays an array of objects containing a Float32Array for each vessel param (lat, lon, weight...)\n * @param columns the keys to pick on the vectorArrays (lat, lon, weight, etc)\n * @returns an object containing a Float32Array for each API_RETURNED_KEY (lat, lon, weight, etc)\n */\nexport const groupData = (cleanVectorArrays, columns) => {\n  const data = {}\n\n  const totalVectorArraysLength = sumBy(cleanVectorArrays, (a) => a.longitude.length)\n\n  const filteredColumns = columns.filter((column) => {\n    if (cleanVectorArrays[0] && cleanVectorArrays[0][column] === undefined) {\n      console.warn(`column ${column} is present in layerHeader.colsByName but not in tile data`)\n      return false\n    }\n    return true\n  })\n\n  filteredColumns.forEach((key) => {\n    data[key] = new Float32Array(totalVectorArraysLength)\n  })\n\n  let currentArray\n  let cumulatedOffsets = 0\n\n  const appendValues = (key) => {\n    data[key].set(currentArray[key], cumulatedOffsets)\n  }\n\n  for (let index = 0, length = cleanVectorArrays.length; index < length; index++) {\n    currentArray = cleanVectorArrays[index]\n    filteredColumns.forEach(appendValues)\n    cumulatedOffsets += currentArray.longitude.length\n  }\n  return data\n}\n\n/**\n * Converts Vector Array data to Playback format and stores it locally.\n * The data structure is an array indexed by a time unit, ie a set of points every day\n * This preprocessing step allows playback to play smoothly as the necessary conversions and data structure set up\n * is done once (after tile has been loaded)\n *\n * @param data the source data before indexing by day, an object containing\n *  - a vector (Float32Array) for each header's column in the case of Pelagos tiles\n *  - an array of points int the case of PBF tiles\n * @param colsByName the columns present on the dataset, determined by tileset headers\n * @param tileCoordinates x, y, z\n * @param prevPlaybackData an optional previously loaded tilePlaybackData array (when adding time range)\n */\nexport const getTilePlaybackData = (data, colsByName, tileCoordinates, prevPlaybackData) => {\n  const tilePlaybackData = prevPlaybackData === undefined ? [] : prevPlaybackData\n\n  const zoom = tileCoordinates.zoom\n  const zoomFactorRadius = convert.getZoomFactorRadius(zoom)\n  const zoomFactorRadiusRenderingMode = convert.getZoomFactorRadiusRenderingMode(zoom)\n  const zoomFactorOpacity = convert.getZoomFactorOpacity(zoom)\n\n  // store all available columns as object keys\n  const columns = {}\n  const columnsArr = Object.keys(colsByName)\n  columnsArr.forEach((c) => {\n    columns[c] = true\n  })\n\n  // columns specified by layer header columns\n  let storedColumns = [].concat(columnsArr)\n  if (columns.sigma === true) storedColumns.push('radius')\n  if (columns.weight === true) storedColumns.push('opacity')\n  if (columns.longitude === true) {\n    storedColumns.push('worldX')\n    storedColumns.push('worldY')\n  }\n  if (columns.id === true) {\n    storedColumns.push('series')\n  }\n\n  // omit values that will be transformed before being stored to playback data (ie lat -> worldY)\n  // only if hidden: true flag is set on header\n  ;['latitude', 'longitude', 'datetime'].forEach((col) => {\n    if (colsByName[col] === undefined || colsByName[col].hidden === true) {\n      pull(storedColumns, col)\n    }\n  })\n  // always pull sigma and weight\n  pull(storedColumns, 'sigma', 'weight')\n  storedColumns = uniq(storedColumns)\n\n  const numPoints = data.latitude.length\n\n  const newFrames = {}\n  const timeIndexes = []\n  for (let index = 0, length = numPoints; index < length; index++) {\n    let point = {}\n    columnsArr.forEach((c) => {\n      point[c] = data[c][index]\n    })\n\n    const timeIndex = columns.timeIndex\n      ? point.timeIndex\n      : convert.getOffsetedTimeAtPrecision(point.datetime)\n\n    // FIXME: this should not be done when headers declare worldX/Y -  if (!columns.worldX) {\n    const [worldX, worldY] = lngLatToWorld([point.longitude, point.latitude], 1)\n    point.worldX = worldX\n    point.worldY = worldY\n\n    if (columns.sigma) {\n      point.radius = convert.sigmaToRadius(\n        point.sigma,\n        zoomFactorRadiusRenderingMode,\n        zoomFactorRadius\n      )\n    }\n    if (columns.weight) {\n      point.opacity = convert.weightToOpacity(point.weight, zoomFactorOpacity)\n    }\n    if (columns.id) {\n      point.series = point.id\n    }\n\n    if (!newFrames[timeIndex]) {\n      timeIndexes.push(timeIndex)\n      const frame = {}\n      storedColumns.forEach((column) => {\n        frame[column] = [point[column]]\n      })\n      newFrames[timeIndex] = frame\n      continue\n    }\n    const frame = newFrames[timeIndex]\n    storedColumns.forEach((column) => {\n      frame[column].push(point[column])\n    })\n  }\n\n  // finally, copy new frames to the overall tilePlaybackData object\n  // frames previously existing here will be overwritten\n  timeIndexes.forEach((timeIndex) => {\n    tilePlaybackData[timeIndex] = newFrames[timeIndex]\n  })\n  return tilePlaybackData\n}\n\nexport const vesselSatisfiesFilters = (frame, index, filterValues) => {\n  const satisfiesFilters = Object.keys(filterValues).every((field) => {\n    if (frame[field] === undefined) {\n      // this field is not available on this layer. This can happen in an edge case described\n      // here: https://github.com/GlobalFishingWatch/map-client/issues/661#issuecomment-334496469\n      return false\n    }\n    return filterValues[field].indexOf(frame[field][index]) > -1\n  })\n  return satisfiesFilters\n}\n\nconst vesselSatisfiesAllFilters = (frame, index, filters) => {\n  const satisfiesAllFilters = filters\n    .filter((f) => f.pass !== true)\n    .some((filter) => vesselSatisfiesFilters(frame, index, filter.filterValues))\n  return satisfiesAllFilters\n}\n\nexport const selectVesselsAt = (tileData, tileQuery, startIndex, endIndex, currentFilters) => {\n  const vessels = []\n\n  const { worldX, worldY, toleranceRadiusInWorldUnits } = tileQuery\n\n  for (let f = startIndex; f < endIndex; f++) {\n    const frame = tileData[f]\n    if (frame === undefined) continue\n    for (let i = 0; i < frame.worldX.length; i++) {\n      const wx = frame.worldX[i]\n      const wy = frame.worldY[i]\n\n      if (\n        (!currentFilters.length || vesselSatisfiesAllFilters(frame, i, currentFilters)) &&\n        wx >= worldX - toleranceRadiusInWorldUnits &&\n        wx <= worldX + toleranceRadiusInWorldUnits &&\n        wy >= worldY - toleranceRadiusInWorldUnits &&\n        wy <= worldY + toleranceRadiusInWorldUnits\n      ) {\n        const vessel = {}\n\n        Object.keys(frame).forEach((key) => {\n          vessel[key] = frame[key][i]\n        })\n        vessel.timeIndex = f\n        vessels.push(vessel)\n      }\n    }\n  }\n  return vessels\n}\n\n/*\nexport const getHistogram = (tiles, propName = 'weight') => {\n  let data = tiles\n    .filter(tile => tile.ready)\n    .map(tile => tile.data\n      .map(frame => frame[propName]));\n  data = flattenDeep(data);\n  if (data.length) {\n    const bins = d3.histogram().thresholds(d3.thresholdScott)(data);\n    const x = d3.scaleLinear().domain([0, d3.max(bins, d => d.length)]).range([0, 50]);\n    console.table(bins.filter(bin => bin.length).map((bin) => {\n      const binMin = d3.min(bin).toLocaleString({ maximumFractionDigits: 2 });\n      const binMax = d3.max(bin).toLocaleString({ maximumFractionDigits: 2 });\n      return {\n        range: [binMin, binMax].join('﹣'),\n        bars: Array(Math.round(x(bin.length))).join('█'),\n        num: bin.length\n      };\n    }));\n  }\n};\n*/\n","import tilecover from '@mapbox/tile-cover/index'\nimport debounce from 'lodash/debounce'\nimport { PerspectiveMercatorViewport } from 'viewport-mercator-project'\nimport {\n  ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING,\n  TILES_LOAD_ZOOM_OFFSET,\n  TILES_LOAD_ZOOM_OFFSET_HI_DEF,\n} from '../config'\nimport {\n  getTile,\n  releaseTiles,\n  highlightVesselFromHeatmap,\n  updateLoadedTiles,\n} from './heatmap.actions'\n\nexport const SET_CURRENTLY_VISIBLE_TILES = 'SET_CURRENTLY_VISIBLE_TILES'\nexport const SET_CURRENTLY_LOADED_TILES = 'SET_CURRENTLY_LOADED_TILES'\nexport const SET_CURRENTLY_SWAPPED_TILE_UIDS = 'SET_CURRENTLY_SWAPPED_TILE_UIDS'\nexport const MARK_TILES_UIDS_AS_LOADED = 'MARK_TILES_UIDS_AS_LOADED'\nexport const RELEASE_MARKED_TILES_UIDS = 'RELEASE_MARKED_TILES_UIDS'\n\nlet currentTilesLoadZoomOffset = TILES_LOAD_ZOOM_OFFSET\n\ndocument.addEventListener('keydown', function(event) {\n  const KEY_H = 72\n  if (event.keyCode == KEY_H) {\n    currentTilesLoadZoomOffset = TILES_LOAD_ZOOM_OFFSET_HI_DEF\n  }\n})\n\n// restrict tilecover to a single zoom level\n// could be customized to load less or more detailed tiles\nconst getTilecoverLimits = (viewportZoom) => {\n  let zoom = Math.ceil(viewportZoom + currentTilesLoadZoomOffset)\n  let tilesAvailable = true\n  if (zoom > ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING) {\n    zoom = ACTIVITY_LAYERS_MAX_ZOOM_LEVEL_TILE_LOADING\n    tilesAvailable = false\n  }\n  return {\n    min_zoom: zoom,\n    max_zoom: zoom,\n    tilesAvailable,\n  }\n}\n\nconst flushToReleaseTiles = () => (dispatch, getState) => {\n  const state = getState()\n  const currentToLoadTileUids = state.map.heatmapTiles.currentToLoadTileUids\n  // console.log('Tiles left to load: ', currentToLoadTileUids);\n\n  // Tiles are released only when all to-load tiles have finished loading\n  // this is to ensure smooth visual transitions between zoom levels\n  if (!currentToLoadTileUids.length) {\n    const currentTilesToReleaseUids = state.map.heatmapTiles.currentToReleaseTileUids\n    // console.log('no more tiles to load, releasing ', currentTilesToReleaseUids);\n    dispatch(releaseTiles(currentTilesToReleaseUids))\n    dispatch({\n      type: RELEASE_MARKED_TILES_UIDS,\n    })\n  }\n}\n\nexport const markTileAsLoaded = (tileUids) => (dispatch) => {\n  dispatch({\n    type: MARK_TILES_UIDS_AS_LOADED,\n    payload: tileUids,\n  })\n  // console.log(tileUids, 'have finished loading');\n  dispatch(flushToReleaseTiles())\n}\n\nconst flushTileState = (forceLoadingAllVisibleTiles = false) => (dispatch, getState) => {\n  const state = getState()\n  const currentVisibleTiles = state.map.heatmapTiles.currentVisibleTiles\n  let tilesToLoad = []\n  const tilesToReleaseUids = []\n\n  if (forceLoadingAllVisibleTiles === true) {\n    tilesToLoad = currentVisibleTiles\n  } else {\n    const currentLoadedTiles = state.map.heatmapTiles.currentLoadedTiles\n\n    currentVisibleTiles.forEach((visibleTile) => {\n      if (currentLoadedTiles.find((t) => t.uid === visibleTile.uid) === undefined) {\n        tilesToLoad.push(visibleTile)\n      }\n    })\n\n    currentLoadedTiles.forEach((loadedTile) => {\n      if (currentVisibleTiles.find((t) => t.uid === loadedTile.uid) === undefined) {\n        tilesToReleaseUids.push(loadedTile.uid)\n      }\n    })\n  }\n\n  const tilesToLoadUids = tilesToLoad.map((t) => t.uid)\n  // console.log('force loading:', forceLoadingAllVisibleTiles)\n  // console.log('visible', currentVisibleTiles.map(t => t.uid))\n  // console.log('load', tilesToLoadUids)\n  // console.log('release', tilesToReleaseUids)\n  // console.log('----')\n\n  tilesToLoad.forEach((tile) => {\n    dispatch(getTile(tile))\n  })\n  dispatch({\n    type: SET_CURRENTLY_LOADED_TILES,\n    payload: currentVisibleTiles,\n  })\n\n  dispatch({\n    type: SET_CURRENTLY_SWAPPED_TILE_UIDS,\n    payload: {\n      tilesToLoadUids,\n      tilesToReleaseUids,\n    },\n  })\n\n  dispatch(updateLoadedTiles())\n  dispatch(flushToReleaseTiles())\n}\n\nconst _debouncedFlushState = (dispatch) => {\n  dispatch(flushTileState())\n}\nconst debouncedFlushState = debounce(_debouncedFlushState, 500)\n\nexport const updateHeatmapTilesFromViewport = (forceLoadingAllVisibleTiles = false) => (\n  dispatch,\n  getState\n) => {\n  // if in transition, skip loading/releasing\n  // else\n  //   collect all tiles in viewport\n  //   save them to reducer: currentVisibleTiles\n  // if not zooming: flush immediately\n  //   if forceLoadingAllVisiblelTiles\n  //     get tiles from currentVisibleTiles\n  //   else\n  //     get tiles from currentVisibleTiles\n  //     make delta with currentLoadedTiles\n  //     get tiles from delta+\n  //     release tiles from delta-\n  //   save to reducer: currentVisibleTiles -> currentLoadedTiles\n  // if zooming: debounced flush to avoid \"tile spam\"\n  const mapViewport = getState().map.viewport\n  const viewport = mapViewport.viewport\n\n  // do not allow any tile update during transitions (currently only zoom)\n  // wait for the end of the transition to look at viewport and load matching tiles\n  if (!viewport.width || !viewport.height || mapViewport.currentTransition !== null) {\n    return\n  }\n\n  // instanciate a viewport instance to get lat/lon from screen top left/ bottom right bounds\n  const boundsViewport = new PerspectiveMercatorViewport(viewport)\n  const bounds = [\n    boundsViewport.unproject([0, 0]),\n    boundsViewport.unproject([viewport.width, viewport.height]),\n  ]\n\n  const [wn, es] = bounds\n  const [w, s, e, n] = [wn[0], es[1], es[0], wn[1]]\n  const boundsPolygonsCoordinates = []\n\n  const limits = getTilecoverLimits(viewport.zoom)\n  if (limits.tilesAvailable === false && forceLoadingAllVisibleTiles !== true) {\n    return\n  }\n\n  if (e > 180 || w < -180) {\n    // deal with the antimeridian situation by splitting the bounds polygon into two polygons\n    const w1 = e > 180 ? w : w + 360\n    const e1 = 180 - 0.001\n    const w2 = -180\n    const e2 = e > 180 ? e - 360 : e\n    boundsPolygonsCoordinates.push([\n      [\n        [w1, n],\n        [e1, n],\n        [e1, s],\n        [w1, s],\n        [w1, n],\n      ],\n    ])\n    boundsPolygonsCoordinates.push([\n      [\n        [w2, n],\n        [e2, n],\n        [e2, s],\n        [w2, s],\n        [w2, n],\n      ],\n    ])\n  } else {\n    boundsPolygonsCoordinates.push([\n      [\n        [w, n],\n        [e, n],\n        [e, s],\n        [w, s],\n        [w, n],\n      ],\n    ])\n  }\n\n  const geom = {\n    type: 'MultiPolygon',\n    coordinates: boundsPolygonsCoordinates,\n  }\n\n  // using tilecover, get xyz tile coords as well as quadkey indexes (named uid through the app)\n  const viewportTilesCoords = tilecover.tiles(geom, limits)\n  const viewportTilesIndexes = tilecover.indexes(geom, limits)\n  const visibleTiles = []\n\n  viewportTilesCoords.forEach((coords, i) => {\n    const uid = viewportTilesIndexes[i]\n    const zoom = coords[2]\n    if (zoom >= 2) {\n      visibleTiles.push({\n        tileCoordinates: {\n          x: coords[0],\n          y: coords[1],\n          zoom: coords[2],\n        },\n        uid,\n      })\n    }\n  })\n\n  dispatch({\n    type: SET_CURRENTLY_VISIBLE_TILES,\n    payload: visibleTiles,\n  })\n\n  const isMouseWheelZooming = mapViewport.prevZoom !== viewport.zoom\n\n  if (isMouseWheelZooming === false) {\n    dispatch(flushTileState(forceLoadingAllVisibleTiles))\n  } else {\n    debouncedFlushState(dispatch)\n  }\n}\n\nexport const queryHeatmapVessels = (coords, temporalExtentIndexes) => (dispatch, getState) => {\n  // use tilecover to get what tile quadkey/uid \"belongs\" to the point\n  const geom = {\n    type: 'Point',\n    coordinates: [coords.longitude, coords.latitude],\n  }\n  const zoom = getState().map.viewport.viewport.zoom\n\n  // get quadkey for tile at current zoom level, but also neighbouring zoom levels,\n  // in case current zoom level tiles has not been loaded yet\n  const uids = [zoom, zoom - 1, zoom + 1]\n    .map((z) => getTilecoverLimits(z))\n    .map((limits) => tilecover.indexes(geom, limits))\n    .map((indexes) => indexes[0])\n\n  const query = {\n    ...coords,\n    uids,\n  }\n\n  // console.log(query);\n  dispatch(highlightVesselFromHeatmap(query, temporalExtentIndexes))\n}\n","import difference from 'lodash/difference'\nimport uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport {\n  getTilePromises,\n  getCleanVectorArrays,\n  groupData,\n  getTilePlaybackData,\n  selectVesselsAt,\n} from '../utils/heatmapTileData'\nimport { markTileAsLoaded } from './heatmapTiles.actions'\nimport { startLoader, completeLoader } from '../module/module.actions'\n\nexport const ADD_HEATMAP_LAYER = 'ADD_HEATMAP_LAYER'\nexport const UPDATE_HEATMAP_LAYER_STYLE = 'UPDATE_HEATMAP_LAYER_STYLE'\nexport const ADD_REFERENCE_TILE = 'ADD_REFERENCE_TILE'\nexport const HIGHLIGHT_VESSELS = 'HIGHLIGHT_VESSELS'\nexport const INIT_HEATMAP_LAYERS = 'INIT_HEATMAP_LAYERS'\nexport const REMOVE_HEATMAP_LAYER = 'REMOVE_HEATMAP_LAYER'\nexport const UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES =\n  'UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES'\nexport const UPDATE_HEATMAP_TILE = 'UPDATE_HEATMAP_TILE'\nexport const RELEASE_HEATMAP_TILES = 'RELEASE_HEATMAP_TILES'\nexport const UPDATE_LOADED_TILES = 'UPDATE_LOADED_TILES'\nexport const HIGHLIGHT_CLICKED_VESSEL = 'HIGHLIGHT_CLICKED_VESSEL'\nexport const CLEAR_HIGHLIGHT_CLICKED_VESSEL = 'CLEAR_HIGHLIGHT_CLICKED_VESSEL'\n\n/**\n * getTemporalExtentsVisibleIndices - Compares timebar outer extent with temporal extents present on the layer header\n * @param  {array} loadTemporalExtent Current timebar outer extent\n * @param  {array} layerTemporalExtents Temporal extent present on the layer's header (an array of extent arrays)\n * @return {array}                    Indices of the layer's temporal extents that should be visible\n */\nfunction getTemporalExtentsVisibleIndices(loadTemporalExtent, layerTemporalExtents) {\n  const currentExtentStart = loadTemporalExtent[0].getTime()\n  const currentExtentEnd = loadTemporalExtent[1].getTime()\n  const indices = []\n  layerTemporalExtents.forEach((temporalExtent, index) => {\n    const temporalExtentStart = temporalExtent[0]\n    const temporalExtentEnd = temporalExtent[1]\n    if (temporalExtentEnd >= currentExtentStart && temporalExtentStart <= currentExtentEnd) {\n      indices.push(index)\n    }\n  })\n  return indices\n}\n\n/**\n * loadLayerTile - loads an heatmap tile.\n *\n * @param  {string} layerId              layer id\n * @param  {object} tileCoordinates      tile coordinates from reference tile\n * @param  {string} token                the user's token\n * @param  {array} temporalExtentsIndices which of the temporal extents from  temporalExtents should be loaded\n * @param  {string} urls                 tile endpoints provided by header\n * @param  {array} temporalExtents       all of the layer's header temporal extents\n * @param  {bool} temporalExtentsLess    true = don't try to load different tiles based on current time extent\n * @return {Promise}                     a Promise that will be resolved when tile is loaded\n */\nfunction loadLayerTile(\n  layerId,\n  tileCoordinates,\n  token,\n  temporalExtentsIndices,\n  { url, temporalExtents, temporalExtentsLess }\n) {\n  // console.log('loadLayerTile', layerId, tileCoordinates, temporalExtentsIndices)\n  if (url === undefined) {\n    throw new Error('URL/endpoints object is not available on this tilesets header')\n  }\n  const pelagosPromises = getTilePromises(url, token, temporalExtents, {\n    tileCoordinates,\n    temporalExtentsIndices,\n    temporalExtentsLess,\n  })\n  const allLayerPromises = Promise.all(pelagosPromises)\n\n  const layerTilePromise = new Promise((resolve) => {\n    allLayerPromises.then((rawTileData) => {\n      resolve({\n        loadedLayerId: layerId,\n        rawTileData,\n      })\n    })\n  })\n\n  return layerTilePromise\n}\n\n/**\n * parseLayerTile - parses an heatmap tile to a playback-ready format.\n *\n * @param  {Object} rawTileData          the raw tile data, loaded either from the pelagos client or as a MVT/PBF vector tile\n * @param  {array} colsByName            names of the columns present in the raw tiles that need to be included in the final playback data\n * @param  {object} tileCoordinates      tile coordinates from reference tile\n * @param  {array} prevPlaybackData      (optional) in case some time extent was already loaded for this tile, append to this data\n * @return {Object}                      playback-ready merged data\n */\nfunction parseLayerTile(rawTileData, colsByName, tileCoordinates, prevPlaybackData) {\n  let data\n\n  const cleanVectorArrays = getCleanVectorArrays(rawTileData)\n  data = groupData(cleanVectorArrays, Object.keys(colsByName))\n  if (Object.keys(data).length === 0) {\n    return []\n  }\n\n  const playbackData = getTilePlaybackData(data, colsByName, tileCoordinates, prevPlaybackData)\n  return playbackData\n}\n\n/**\n * getTiles - loads a bunch of heatmap tiles\n * @param  {array} layerIds                 list of layer Ids that need to be loaded for this/these tiles\n * @param  {array} referenceTiles           list of reference tiles (tile data regardless of layer) that need to be loaded\n * @param  {object} newTemporalExtentsToLoad (optional) a dict (layerId is the key) of temporal extents\n * indices that should be appended to existing data\n */\nfunction getTiles(layerIds, referenceTiles, newTemporalExtentsToLoad = undefined) {\n  return (dispatch, getState) => {\n    const state = getState()\n    const loaderID = startLoader(dispatch, state, layerIds.join('-'))\n    const token = state.map.module.token\n    const heatmapLayers = state.map.heatmap.heatmapLayers\n    const tilesByLayer = {}\n    layerIds.forEach((id) => {\n      tilesByLayer[id] = [...heatmapLayers[id].tiles]\n    })\n    const allPromises = []\n\n    layerIds.forEach((layerId) => {\n      const heatmapLayerHeader = heatmapLayers[layerId].header\n      const { temporalExtents, temporalExtentsLess, colsByName } = { ...heatmapLayerHeader }\n      const url = heatmapLayerHeader.endpoints.tiles\n\n      referenceTiles.forEach((referenceTile) => {\n        // check if tile does not already exist first\n        let tile = tilesByLayer[layerId].find((t) => t.uid === referenceTile.uid)\n        if (!tile) {\n          // console.log('create tile ', referenceTile.uid)\n          tile = {\n            uid: referenceTile.uid,\n            temporalExtentsIndicesLoaded: [],\n          }\n          tilesByLayer[layerId].push(tile)\n        } else {\n          // console.log('found tile', referenceTile.uid)\n        }\n\n        const queriedTemporalExtentsIndices =\n          newTemporalExtentsToLoad === undefined\n            ? heatmapLayers[layerId].visibleTemporalExtentsIndices\n            : newTemporalExtentsToLoad[layerId]\n\n        const temporalExtentsIndicesToLoad = difference(\n          queriedTemporalExtentsIndices,\n          tile.temporalExtentsIndicesLoaded\n        )\n\n        const tilePromise = loadLayerTile(\n          layerId,\n          referenceTile.tileCoordinates,\n          token,\n          temporalExtentsIndicesToLoad,\n          {\n            url,\n            temporalExtents,\n            temporalExtentsLess,\n          }\n        )\n\n        allPromises.push(tilePromise)\n\n        tilePromise.then(({ loadedLayerId, rawTileData }) => {\n          tile.temporalExtentsIndicesLoaded = uniq(\n            tile.temporalExtentsIndicesLoaded.concat(temporalExtentsIndicesToLoad)\n          )\n          tile.data = parseLayerTile(\n            rawTileData,\n            colsByName,\n            referenceTile.tileCoordinates,\n            tile.data\n          )\n\n          dispatch({\n            type: UPDATE_HEATMAP_TILE,\n            payload: {\n              layerId: loadedLayerId,\n              tile,\n            },\n          })\n        })\n      })\n    })\n\n    Promise.all(allPromises).then(() => {\n      dispatch(completeLoader(loaderID))\n      dispatch(markTileAsLoaded(referenceTiles.map((tile) => tile.uid)))\n    })\n  }\n}\n\n/**\n * getTile - This action is emitted when a new tile is queried from panning or zooming the map\n * This will load a tile for all currently visible heatmap layers\n *\n * @param  {object} referenceTile a reference tile containing xyz coords and uid\n */\nexport function getTile(referenceTile) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_REFERENCE_TILE,\n      payload: referenceTile,\n    })\n    const visibleHeatmapLayers = getState().map.heatmap.heatmapLayers\n    const visibleHeatmapLayersIds = Object.keys(visibleHeatmapLayers).filter(\n      (id) => visibleHeatmapLayers[id].visible === true\n    )\n\n    if (visibleHeatmapLayersIds.length) {\n      dispatch(getTiles(visibleHeatmapLayersIds, [referenceTile]))\n    }\n  }\n}\n\n/**\n * releaseTiles - This action is emitted when an existing tile is removed from panning or zooming the map\n * @param  {array} uids tile ref uids to release\n */\nexport const releaseTiles = (uids) => ({\n  type: RELEASE_HEATMAP_TILES,\n  payload: uids,\n})\n\nexport const updateLoadedTiles = () => ({\n  type: UPDATE_LOADED_TILES,\n})\n\n// triggered when a layer is added or set to visible\nfunction loadAllTilesForLayer(layerId) {\n  return (dispatch, getState) => {\n    //                current layer, all reference tiles\n    const referenceTiles = getState().map.heatmap.referenceTiles\n    dispatch(getTiles([layerId], referenceTiles))\n  }\n}\n\nexport const addHeatmapLayer = (layer, loadTemporalExtent) => (dispatch) => {\n  const layerTemporalExtents = layer.header.temporalExtents\n  dispatch({\n    type: ADD_HEATMAP_LAYER,\n    payload: {\n      ...layer,\n      // initially attach which of the temporal extents indices are visible with initial outerExtent\n      visibleTemporalExtentsIndices: getTemporalExtentsVisibleIndices(\n        loadTemporalExtent,\n        layerTemporalExtents\n      ),\n    },\n  })\n\n  if (layer.visible === true) {\n    dispatch(loadAllTilesForLayer(layer.id))\n  }\n}\n\nexport const removeHeatmapLayer = (id) => (dispatch) => {\n  dispatch({\n    type: REMOVE_HEATMAP_LAYER,\n    payload: {\n      id,\n    },\n  })\n}\n\n/**\n * updateLayerLoadTemporalExtents - when outer time extent changes, checks if more tiles needs to be loaded\n * by comparing the outer time range with the temporalExtent already loaded on each layer.\n * @param  {array} loadTemporalExtent Current app-wide extent of tiles that need to load, expressed\n * as an array of two dates\n */\nexport function updateLayerLoadTemporalExtents(loadTemporalExtent) {\n  return (dispatch, getState) => {\n    const state = getState()\n    const heatmapLayers = state.map.heatmap.heatmapLayers\n    const indicesToAddByLayer = {}\n\n    Object.keys(heatmapLayers).forEach((layerId) => {\n      const heatmapLayer = heatmapLayers[layerId]\n      const temporalExtents = heatmapLayer.header.temporalExtents\n      const oldVisibleTemporalExtentsIndices = heatmapLayer.visibleTemporalExtentsIndices\n      const newVisibleTemporalExtentsIndices = getTemporalExtentsVisibleIndices(\n        loadTemporalExtent,\n        temporalExtents\n      )\n\n      const indicesAdded = difference(\n        newVisibleTemporalExtentsIndices,\n        oldVisibleTemporalExtentsIndices\n      )\n\n      const indicesRemoved = difference(\n        oldVisibleTemporalExtentsIndices,\n        newVisibleTemporalExtentsIndices\n      )\n\n      if (indicesAdded.length || indicesRemoved.length) {\n        // add new loaded indices to heatmap layer if applicable\n        dispatch({\n          type: UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES,\n          payload: {\n            layerId,\n            newVisibleTemporalExtentsIndices,\n            indicesRemoved,\n          },\n        })\n      }\n      if (indicesAdded.length) {\n        indicesToAddByLayer[layerId] = indicesAdded\n      }\n    })\n\n    // getTiles with indices diff\n    const layerIdsWithIndicesToAdd = Object.keys(indicesToAddByLayer)\n    if (layerIdsWithIndicesToAdd.length) {\n      dispatch(\n        getTiles(layerIdsWithIndicesToAdd, state.map.heatmap.referenceTiles, indicesToAddByLayer)\n      )\n    }\n  }\n}\n\n/**\n * Returns clusters or vessels data from a tileQuery\n * @param {object} state - the application state\n * @param {string} tileQuery - the id of a heatmap layer\n * @return {object} { isEmpty, isCluster, isMouseCluster, foundVessels, layerId, tilesetId }\n */\nconst _queryHeatmap = (state, tileQuery, temporalExtentIndexes) => {\n  const layers = state.map.heatmap.heatmapLayers\n  const startIndex = temporalExtentIndexes[0]\n  const endIndex = temporalExtentIndexes[1]\n  const layersVessels = []\n\n  Object.keys(layers).forEach((layerId) => {\n    const layer = layers[layerId]\n    if (layer.visible !== true) {\n      return\n    }\n    const allPossibleTilesByPreference = tileQuery.uids.map((uid) =>\n      layer.tiles.find((tile) => tile.uid === uid)\n    )\n    const availableTiles = allPossibleTilesByPreference.filter(\n      (tile) => tile !== undefined && tile.data !== undefined\n    )\n\n    const currentFilters = layer.filters\n    if (availableTiles.length) {\n      const bestTile = availableTiles[0]\n      layersVessels.push({\n        layer,\n        vessels: selectVesselsAt(bestTile.data, tileQuery, startIndex, endIndex, currentFilters),\n      })\n    }\n  })\n\n  const layersVesselsResults = layersVessels.filter(\n    (layerVessels) => layerVessels.vessels.length > 0\n  )\n\n  // it's a cluster because of aggregation on the server side\n  let isCluster\n  // its a cluster because or multiple vessels under mouse\n  let isMouseCluster\n  let isEmpty\n  let layerVesselsResult\n  let foundVessels\n\n  if (layersVesselsResults.length === 0) {\n    isEmpty = true\n  } else if (layersVesselsResults.length > 1) {\n    // if there are points over multiple layers, consider this a cluster (ie don't select, zoom instead, or don't highlight)\n    // there's an exception if vessel selection contains an encounter, in which case it will take priority\n    isCluster = true\n  } else {\n    // layersVesselsResults should contain a single result\n    layerVesselsResult = layersVesselsResults[0]\n\n    // we can get multiple points with similar series and id, in which case\n    // we should treat that as a successful vessel query, not a cluster\n    const vessels = layerVesselsResult.vessels\n\n    if (vessels.length === 0) {\n      isEmpty = true\n    } else {\n      // look up for any negatives ids (clusters on the server side)\n      const clusteredVessels = vessels.filter(\n        (v) =>\n          (v.id !== undefined && v.id < 0) || (v.seriesgroup !== undefined && v.seriesgroup < 0)\n      )\n      if (clusteredVessels.length) {\n        isCluster = true\n      } else {\n        foundVessels = uniqBy(vessels, (v) => v.series)\n        isMouseCluster = foundVessels.length > 1\n      }\n    }\n  }\n\n  const layer = layerVesselsResult === undefined ? {} : layerVesselsResult.layer\n\n  return { isEmpty, isCluster, isMouseCluster, foundVessels, layer }\n}\n\nexport function clearHighlightedVessels() {\n  return {\n    type: HIGHLIGHT_VESSELS,\n    payload: {\n      isEmpty: true,\n      clickableCluster: false,\n    },\n  }\n}\n\nexport function highlightVesselFromHeatmap(tileQuery, temporalExtentIndexes) {\n  return (dispatch, getState) => {\n    const state = getState()\n    const { layer, isEmpty, isCluster, isMouseCluster, foundVessels } = _queryHeatmap(\n      state,\n      tileQuery,\n      temporalExtentIndexes\n    )\n\n    if (\n      isCluster === true ||\n      layer.id !== undefined ||\n      state.map.heatmap.highlightedVessels.layerId !== layer.id\n    ) {\n      const layerPayload =\n        layer === undefined\n          ? null\n          : {\n              id: layer.id,\n              tilesetId: layer.tilesetId,\n              subtype: layer.subtype,\n              header: layer.header,\n            }\n      dispatch({\n        type: HIGHLIGHT_VESSELS,\n        payload: {\n          layer: layerPayload,\n          isEmpty,\n          clickableCluster: isCluster === true || isMouseCluster === true,\n          highlightableCluster: isCluster !== true,\n          foundVessels,\n        },\n      })\n    } else {\n      dispatch(clearHighlightedVessels())\n    }\n  }\n}\n\nexport const highlightClickedVessel = (id, layerId) => ({\n  type: HIGHLIGHT_CLICKED_VESSEL,\n  payload: {\n    id,\n    layerId,\n  },\n})\n\nexport const clearHighlightedClickedVessel = () => ({\n  type: CLEAR_HIGHLIGHT_CLICKED_VESSEL,\n})\n\nexport const updateHeatmapLayers = (newLayers, currentLoadTemporalExtent) => (\n  dispatch,\n  getState\n) => {\n  if (newLayers === null) {\n    console.warn(\"New layers in updateHeatmapLayers can't be null\")\n    return\n  }\n  const prevLayersDict = getState().map.heatmap.heatmapLayers\n\n  // add and update layers\n  newLayers.forEach((newLayer) => {\n    const layerId = newLayer.id\n    const prevLayer = prevLayersDict[layerId]\n    if (prevLayer === undefined) {\n      // console.log('adding', layerId)\n      dispatch(addHeatmapLayer(newLayer, currentLoadTemporalExtent))\n    } else {\n      if (prevLayer.visible !== newLayer.visible && newLayer.visible === true) {\n        dispatch(loadAllTilesForLayer(layerId))\n      }\n      if (\n        prevLayer.visible !== newLayer.visible ||\n        prevLayer.hue !== newLayer.hue ||\n        prevLayer.opacity !== newLayer.opacity ||\n        prevLayer.filters !== newLayer.filters ||\n        prevLayer.interactive !== newLayer.interactive\n      ) {\n        // console.log('updating', layerId, ' with visibilty', newLayer.visible)\n        dispatch({\n          type: UPDATE_HEATMAP_LAYER_STYLE,\n          payload: {\n            id: newLayer.id,\n            visible: newLayer.visible,\n            hue: newLayer.hue,\n            opacity: newLayer.opacity,\n            filters: newLayer.filters,\n            interactive: newLayer.interactive,\n          },\n        })\n      }\n    }\n  })\n\n  // clean up unused layers\n  Object.keys(prevLayersDict).forEach((prevLayerId) => {\n    if (!newLayers.find((l) => l.id === prevLayerId)) {\n      dispatch(removeHeatmapLayer(prevLayerId))\n    }\n  })\n}\n","import { fitBounds, pixelsToWorld } from 'viewport-mercator-project'\nimport { updateHeatmapTilesFromViewport } from '../heatmap/heatmapTiles.actions'\nimport { onViewportChange } from '../module/module.actions'\nimport { CLUSTER_CLICK_ZOOM_INCREMENT } from '../config' // TODO MAP MODULE\n\nexport const SET_BOUNDS = 'SET_BOUNDS'\nexport const SET_VIEWPORT = 'SET_VIEWPORT'\nexport const UPDATE_VIEWPORT = 'UPDATE_VIEWPORT'\nexport const SET_ZOOM_INCREMENT = 'SET_ZOOM_INCREMENT'\nexport const SET_MOUSE_LAT_LONG = 'SET_MOUSE_LAT_LONG'\nexport const TRANSITION_END = 'TRANSITION_END'\nexport const SET_NATIVE_VIEWPORT = 'SET_NATIVE_VIEWPORT'\n\nexport const setBounds = (bounds) => ({\n  type: SET_BOUNDS,\n  payload: bounds,\n})\n\nexport const setViewport = (viewport, interactionState) => (dispatch) => {\n  dispatch({\n    type: SET_VIEWPORT,\n    payload: viewport,\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  dispatch(onViewportChange(interactionState))\n}\n\nexport const updateViewport = (viewportUpdate) => (dispatch) => {\n  dispatch({\n    type: UPDATE_VIEWPORT,\n    payload: viewportUpdate,\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  // Not needed as call the callback with the same values\n  // dispatch(onViewportChange())\n}\n\nconst transitionTo = (increment, latitude = null, longitude = null, zoom = null) => (dispatch) => {\n  dispatch({\n    type: SET_ZOOM_INCREMENT,\n    payload: {\n      increment,\n      latitude,\n      longitude,\n      zoom,\n    },\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  dispatch(onViewportChange())\n}\n\nexport const transitionToZoom = (viewport) => (dispatch) => {\n  dispatch(transitionTo(null, viewport.center[0], viewport.center[1], viewport.zoom))\n}\n\nexport const transitionEnd = () => (dispatch) => {\n  dispatch({\n    type: TRANSITION_END,\n  })\n  dispatch(updateHeatmapTilesFromViewport())\n  dispatch(onViewportChange())\n}\n\nexport const zoomIntoVesselCenter = (latitude, longitude, zoom = null) => (dispatch) => {\n  dispatch(transitionTo(CLUSTER_CLICK_ZOOM_INCREMENT, latitude, longitude, zoom))\n}\n\nexport const fitToBounds = (bounds) => (dispatch, getState) => {\n  const state = getState()\n  const vp = fitBounds({\n    bounds: [[bounds.minLng, bounds.minLat], [bounds.maxLng, bounds.maxLat]],\n    width: state.map.viewport.viewport.width,\n    height: state.map.viewport.viewport.height,\n    padding: 50,\n  })\n  dispatch(transitionTo(null, vp.latitude, vp.longitude, vp.zoom))\n}\n\nexport const exportNativeViewport = (nativeViewport) => (dispatch) => {\n  const topLeftPx = [0, 0]\n  const bottomRightPx = [nativeViewport.width, nativeViewport.height]\n\n  // compute left and right offsets to deal with antimeridian issue\n  const topLeftWorld = pixelsToWorld(topLeftPx, nativeViewport.pixelUnprojectionMatrix)\n  const bottomRightWorld = pixelsToWorld(bottomRightPx, nativeViewport.pixelUnprojectionMatrix)\n  const leftWorldScaled = topLeftWorld[0] / nativeViewport.scale\n  const rightWorldScaled = bottomRightWorld[0] / nativeViewport.scale\n\n  // lat/lon corners for miniglobe\n  const northWest = nativeViewport.unproject(topLeftPx)\n  const southEast = nativeViewport.unproject(bottomRightPx)\n  const bounds = {\n    north: northWest[1],\n    south: southEast[1],\n    west: northWest[0],\n    east: southEast[0],\n  }\n\n  dispatch({\n    type: SET_NATIVE_VIEWPORT,\n    payload: {\n      leftWorldScaled,\n      rightWorldScaled,\n      bounds,\n    },\n  })\n}\n","import area from '@turf/area'\nimport { POLYGON_LAYERS_AREA } from '../constants'\nimport { clearHighlightedVessels, clearHighlightedClickedVessel } from '../heatmap/heatmap.actions'\nimport { zoomIntoVesselCenter } from './viewport.actions'\n\nexport const SET_POPUP = 'SET_POPUP'\nexport const CLEAR_POPUP = 'CLEAR_POPUP'\nexport const SET_MAP_CURSOR = 'SET_MAP_CURSOR'\n\nconst getAreaKm2 = (glFeature) => {\n  const areakm2 = 10 ** -6 * area(glFeature.geometry)\n  const formatted = areakm2.toLocaleString('en-US', { maximumFractionDigits: 0 })\n  return formatted\n}\n\nconst getFields = (glFeature, source = null) => {\n  if (source === null || source === undefined) {\n    // console.warn('Couldnt find source when looking for fields of layer', sourceId)\n  }\n\n  const fieldsDefinition =\n    !source || source.metadata === undefined || source.metadata['gfw:popups'] === undefined\n      ? []\n      : source.metadata['gfw:popups']\n\n  const properties = glFeature.properties\n\n  // whitelist if 'gfw:popups' exist, if not return all\n  const fieldsKeys = Object.keys(glFeature.properties).filter(\n    (k) => fieldsDefinition.length === 0 || fieldsDefinition.find((fd) => fd.id === k) !== undefined\n  )\n\n  const fields = fieldsKeys.map((fieldKey) => {\n    const value = fieldKey === POLYGON_LAYERS_AREA ? getAreaKm2(glFeature) : properties[fieldKey]\n    const def = fieldsDefinition.find((fd) => fd.id === fieldKey) || {}\n    const label = def.label || fieldKey\n    return {\n      id: fieldKey,\n      label,\n      value,\n      title: `${label}: ${value}`,\n      isLink: def.isLink,\n      isMain: def.isMain,\n    }\n  })\n\n  const mainField =\n    fields.find((f) => f.isMain === true) ||\n    fields.find((f) => f.id === 'name') ||\n    fields.find((f) => f.id === 'id') ||\n    fields[0]\n\n  if (mainField !== undefined) {\n    mainField.isMain = true\n  }\n  return fields\n}\n\nconst getCluster = (glFeature, glGetSource) => {\n  const clusterId = glFeature.properties.cluster_id\n  const sourceId = glFeature.source\n  const glSource = glGetSource(sourceId)\n  const promise = new Promise((resolve, reject) => {\n    glSource.getClusterExpansionZoom(clusterId, (err1, zoom) => {\n      glSource.getClusterLeaves(clusterId, 99, 0, (err2, children) => {\n        if (err1 || err2) {\n          reject()\n        }\n        const childrenFeatures = children.map((child) =>\n          getFeature(child, glFeature.layer.id, glSource)\n        )\n        resolve({\n          zoom,\n          childrenFeatures,\n        })\n      })\n    })\n  })\n  return promise\n}\n\nconst getFeature = (glFeature, layerId, source) => {\n  const feature = {\n    properties: glFeature.properties,\n  }\n  const fields = getFields(glFeature, source)\n  feature.fields = fields\n\n  // Get most likely feature title\n  const mainField = fields.find((f) => f.isMain === true)\n  feature.title = mainField === undefined ? layerId : mainField.value\n\n  return feature\n}\n\nexport const mapInteraction = (interactionType, latitude, longitude, glFeatures, glGetSource) => (\n  dispatch,\n  getState\n) => {\n  if (interactionType === 'click') {\n    dispatch(clearHighlightedClickedVessel())\n  }\n\n  const currentStyle = getState().map.style.mapStyle.toJS()\n\n  const event = {\n    latitude,\n    longitude,\n    features: [],\n  }\n\n  // Collect and normalize features on legacy heatmap\n  const currentLegacyHeatmapData = getState().map.heatmap.highlightedVessels\n  let legacyHeatmapFeature\n\n  if (currentLegacyHeatmapData.isEmpty !== true) {\n    const foundVessels =\n      currentLegacyHeatmapData.foundVessels === undefined\n        ? []\n        : currentLegacyHeatmapData.foundVessels\n    const properties = foundVessels.length === 0 ? [] : foundVessels[0]\n    const isCluster = currentLegacyHeatmapData.clickableCluster === true\n    const count =\n      isCluster === true && currentLegacyHeatmapData.highlightableCluster === false\n        ? -1\n        : foundVessels.length\n    legacyHeatmapFeature = {\n      isCluster,\n      count,\n      layer: {\n        id: currentLegacyHeatmapData.layer.id,\n        group: 'legacyHeatmap',\n      },\n      properties,\n    }\n    event.features.push(legacyHeatmapFeature)\n  }\n\n  // Try to retrieve 'gfw:id' (generated when instanciating CARTO layer to preserve original style.json id)\n  // In most cases it won't exist, so fall back to source id\n  const getStaticLayerIdFromGlFeature = (glFeature) =>\n    (glFeature.layer.metadata !== undefined && glFeature.layer.metadata['gfw:id']) ||\n    glFeature.layer.source\n\n  // Collect gl features\n  const clusterPromises = []\n  const allGlFeatures = glFeatures || []\n  allGlFeatures.forEach((glFeature) => {\n    const layerId = getStaticLayerIdFromGlFeature(glFeature)\n    const source = currentStyle.sources[layerId]\n    const feature = {\n      layer: {\n        id: layerId,\n        group: glFeature.layer.metadata && glFeature.layer.metadata['mapbox:group'],\n      },\n      ...getFeature(glFeature, layerId, source),\n    }\n\n    if (glFeature.properties.cluster === true) {\n      // lookup for cluster\n      const clusterPromise = getCluster(glFeature, glGetSource).then((cluster) => {\n        feature.cluster = cluster\n        feature.count = cluster.childrenFeatures.length\n      })\n      clusterPromises.push(clusterPromise)\n      feature.isCluster = true\n    } else {\n      feature.isCluster = false\n    }\n    event.features.push(feature)\n  })\n\n  Promise.all(clusterPromises).then(() => {\n    // The whole set of features is considered a cluster\n    // if any feature is a cluster, or there is more than one feature\n    event.isCluster =\n      event.features.length > 1 || event.features.some((feature) => feature.isCluster === true)\n\n    // legacy heatmap layers can yield clusters with an unknown number of features, handle this here:\n    if (legacyHeatmapFeature !== undefined && legacyHeatmapFeature.count === -1) {\n      event.count = -1\n    } else {\n      event.count = event.features.reduce((count, feature) => {\n        let featureCount = feature.count || 1\n        return count + featureCount\n      }, 0)\n    }\n\n    if (event.count === 1) {\n      event.feature = event.features[0]\n    }\n\n    // When autoClusterZoom is set to true, we handle zoom here\n    const autoClusterZoom = getState().map.module.autoClusterZoom === true\n\n    // Check if cluster using customizable isCluster() callback\n    // If not set resolves simply to (event) => event.isCluster === true\n    const clusterBehavior = getState().map.module.isCluster(event)\n    event.isCluster = clusterBehavior\n\n    if (autoClusterZoom) {\n      if (interactionType === 'click' && event.isCluster === true) {\n        dispatch(clearHighlightedVessels())\n        const clusterZoom = event.features[0].cluster && event.features[0].cluster.zoom\n        dispatch(zoomIntoVesselCenter(latitude, longitude, clusterZoom))\n      }\n    }\n\n    let cursor = event.features.length ? 'pointer' : null\n    if (event.isCluster === true) {\n      cursor = 'zoom-in'\n    }\n\n    dispatch({\n      type: SET_MAP_CURSOR,\n      payload: cursor,\n    })\n\n    const callback =\n      interactionType === 'click' ? getState().map.module.onClick : getState().map.module.onHover\n\n    if (callback !== undefined) {\n      callback(event)\n    }\n  })\n}\n","const RGB_MAX = 255\nconst HUE_MAX = 360\nconst SV_MAX = 100\n\nexport const VESSELS_HUES_INCREMENTS_NUM = 31 // 360 / VESSELS_HUES_INCREMENTS_NUM - 1  should give a round number\nexport const VESSELS_HUES_INCREMENT = 360 / (VESSELS_HUES_INCREMENTS_NUM - 1)\n\n// Legacy: this is only here for compatibility with pre-mapbox branch workspaces\nexport const COLOR_HUES = {\n  orange: 0,\n  peach: 22,\n  yellow: 60,\n  green: 85,\n  brightGreen: 145,\n  lightBlue: 182,\n  blue: 236,\n  purple: 284,\n  pink: 312,\n}\n\n// FIXME mark explicitely as legacy. Check all usages.\nexport const getKeyByValue = (obj, value) => {\n  let result = null\n  Object.entries(obj).forEach((entry) => {\n    if (entry[1] === value) result = entry[0]\n  })\n  return result\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport const rgbToHsv = (_r, _g, _b) => {\n  const r = _r / 255\n  const g = _g / 255\n  const b = _b / 255\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h\n  const v = max\n\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0 // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n      default:\n        h = 0\n    }\n\n    h /= 6\n  }\n\n  return [h, s, v]\n}\n\n// converts hue, saturation, luminance to an rgb object\nexport const hsvToRgb = (h_, s_, v_) => {\n  const h = ((h_ % HUE_MAX) / parseFloat(HUE_MAX)) * 6\n  const s = s_ === SV_MAX ? 1 : (s_ % SV_MAX) / parseFloat(SV_MAX)\n  const v = v_ === SV_MAX ? 1 : (v_ % SV_MAX) / parseFloat(SV_MAX)\n\n  const i = Math.floor(h)\n  const f = h - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  const mod = i % 6\n  const r = [v, q, p, p, t, v][mod]\n  const g = [t, v, v, q, p, p][mod]\n  const b = [p, p, t, v, v, q][mod]\n\n  return { r: Math.round(r * RGB_MAX), g: Math.round(g * RGB_MAX), b: Math.round(b * RGB_MAX) }\n}\n\n// returns an rgb string with default saturation and luminance values\nconst hueToRgbDefaults = (hue) => hsvToRgb(hue, 50, 100)\n\nexport const hueToRgbString = (hue) => {\n  const rgb = hueToRgbDefaults(hue)\n  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n}\n\nexport const rgbToHexString = (rgb, css) => {\n  const str = ['r', 'g', 'b']\n    .map((channelName) => {\n      const channelValue = rgb[channelName]\n      let channelStr = channelValue.toString(16)\n      if (channelValue < 16) {\n        channelStr = `0${channelStr}`\n      }\n      return channelStr\n    })\n    .join('')\n  const prefix = css === true ? '#' : '0x'\n  return `${prefix}${str}`\n}\n\nexport const hueToRgbHexString = (hue, css) => {\n  const rgb = hueToRgbDefaults(hue)\n  return rgbToHexString(rgb, css)\n}\n\nconst closestNumber = (numberArray, goal) =>\n  numberArray.reduce((prev, curr) => (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev))\n\nexport const hueToClosestColor = (hue) => {\n  if (hue === undefined || hue === null) return undefined\n  const colorHueValues = Object.keys(COLOR_HUES).map((key) => COLOR_HUES[key])\n  const closestHue = closestNumber(colorHueValues, hue)\n  return getKeyByValue(COLOR_HUES, closestHue)\n}\n\nexport const hexToRgb = (hex) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null\n}\n\nconst rgbToRgbaString = (rgb, opacity) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${opacity})`\n\nexport const hueToRgbaString = (hue, opacity) => {\n  const rgb = hueToRgbDefaults(hue)\n  return rgbToRgbaString(rgb, opacity)\n}\n\nexport const hexToRgba = (hex, opacity) => {\n  const rgb = hexToRgb(hex)\n  return rgbToRgbaString(rgb, opacity)\n}\n\nexport const hueIncrementToHue = (hueIncrement) => hueIncrement * VESSELS_HUES_INCREMENT\n\nexport const hueToHueIncrement = (hue) =>\n  Math.round((hue / 360) * (VESSELS_HUES_INCREMENTS_NUM - 1))\n\nexport const wrapHue = (hue) => hue % 360\n\nexport const hueOrColorToHexColor = (color, hue) => {\n  if (hue !== undefined) {\n    return hueToRgbHexString(hue, true)\n  }\n\n  return color\n}\n","/* global PIXI */\nimport 'pixi.js'\nimport { hueToHueIncrement, VESSELS_HUES_INCREMENTS_NUM } from '../utils/map-colors'\nimport { VESSELS_BASE_RADIUS, MAX_SPRITES_PER_LAYER } from '../config'\n\nexport default class HeatmapSubLayer {\n  constructor(baseTexture, renderingStyleIndex, hue, useNormalBlendMode = false) {\n    // this.stage = new PIXI.Container();\n    // the ParticleContainer is a faster version of the PIXI sprite container\n    this.stage = new PIXI.particles.ParticleContainer(MAX_SPRITES_PER_LAYER, {\n      scale: true,\n      alpha: true,\n      position: true,\n      uvs: true,\n    })\n    if (useNormalBlendMode === false) {\n      this.stage.blendMode = PIXI.BLEND_MODES.SCREEN\n    }\n\n    this.spritesPool = []\n\n    const initialTextureFrame = new PIXI.Rectangle(\n      0,\n      0,\n      VESSELS_BASE_RADIUS * 2,\n      VESSELS_BASE_RADIUS * 2\n    )\n    this.mainVesselTexture = new PIXI.Texture(baseTexture, initialTextureFrame)\n    this._setTextureFrame(renderingStyleIndex, hue)\n\n    this.clearSpriteProps()\n  }\n\n  clearSpriteProps() {\n    this.spritesProps = {\n      x: new Float32Array(MAX_SPRITES_PER_LAYER),\n      y: new Float32Array(MAX_SPRITES_PER_LAYER),\n      a: new Float32Array(MAX_SPRITES_PER_LAYER),\n      s: new Float32Array(MAX_SPRITES_PER_LAYER),\n    }\n    this.spritesPropsCount = 0\n  }\n\n  pushSpriteProps(x, y, a, s) {\n    this.spritesProps.x[this.spritesPropsCount] = x\n    this.spritesProps.y[this.spritesPropsCount] = y\n    this.spritesProps.a[this.spritesPropsCount] = a\n    this.spritesProps.s[this.spritesPropsCount] = s\n    this.spritesPropsCount++\n  }\n\n  setRenderingStyleIndex(renderingStyleIndex) {\n    this._setTextureFrame(renderingStyleIndex)\n  }\n\n  destroy() {\n    this.spritesPool = null\n    this.stage.destroy({ children: true })\n  }\n\n  /**\n   * Updates the main texture frame offset to show different brush styles and hues\n   * Both args are optional, if one is omitted, previous value is used\n   * @heatmapStyle bool whether to use heatmap style or solid circle style\n   * @hue number hue value between 0 and 360\n   */\n  _setTextureFrame(renderingStyleIndex = null, hue = null) {\n    const textureFrame = this.mainVesselTexture.frame.clone()\n\n    if (renderingStyleIndex !== null) {\n      // one diameter + tiny offset between 2 frames\n      textureFrame.x = VESSELS_BASE_RADIUS * 2 * renderingStyleIndex + renderingStyleIndex\n    }\n\n    if (hue !== null) {\n      let hueIncrement = hueToHueIncrement(hue)\n      if (hueIncrement === VESSELS_HUES_INCREMENTS_NUM - 1) {\n        hueIncrement = 0\n      }\n      textureFrame.y = hueIncrement * VESSELS_BASE_RADIUS * 2\n      if (hueIncrement > 0) {\n        textureFrame.y += hueIncrement\n      }\n    }\n\n    this.mainVesselTexture.frame = textureFrame\n    this.mainVesselTexture.update()\n  }\n\n  render() {\n    const numProps = this.spritesPropsCount\n    this.resizeSpritesPool()\n\n    for (let i = 0; i < numProps; i++) {\n      const sprite = this.stage.children[i]\n      const s = this.spritesProps.s[i]\n      sprite.setTransform(this.spritesProps.x[i], this.spritesProps.y[i], s, s)\n      sprite.alpha = this.spritesProps.a[i]\n    }\n\n    const numSprites = this.stage.children.length\n    for (let i = numProps; i < numSprites; i++) {\n      const sprite = this.stage.children[i]\n      sprite.x = -100\n    }\n  }\n\n  resizeSpritesPool() {\n    const numProps = this.spritesPropsCount\n    const prevNumSprites = this.stage.children.length\n    const delta = numProps - prevNumSprites\n    // console.log(prevNumSprites, '->', numProps, ' delta:', delta);\n\n    if (delta < -4999) {\n      // sprite needs to be removed. Do that progressively (max 100) to avoid UI lock\n      const toRemove = Math.min(100, -delta)\n      // console.log('removing ', toRemove);\n      for (let i = 0; i < toRemove; i++) {\n        this.stage.removeChildAt(0)\n      }\n    }\n\n    if (delta > 0) {\n      const toAdd = Math.max(5000, delta)\n      // console.log('adding ', toAdd);\n      this._addSprites(toAdd)\n    }\n  }\n\n  _addSprites(num) {\n    for (let i = 0; i < num; i++) {\n      const vessel = new PIXI.Sprite(this.mainVesselTexture)\n      vessel.anchor.x = 0.5\n      vessel.anchor.y = 0.5\n      // ParticlesContainer does not support .visible, so we just move the sprite out of the viewport\n      vessel.x = -100\n      // vessel.blendMode = PIXI.BLEND_MODES.SCREEN;\n      // vessel.filters=  [new PIXI.filters.BlurFilter(10,10)]\n      this.stage.addChild(vessel)\n    }\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport uniq from 'lodash/uniq'\nimport * as PIXI from 'pixi.js'\nimport { worldToPixels } from 'viewport-mercator-project'\nimport { BRUSH_RENDERING_STYLE, BRUSH_ZOOM_RENDERING_STYLE } from '../constants'\nimport { vesselSatisfiesFilters } from '../utils/heatmapTileData'\nimport HeatmapSubLayer from './HeatmapSubLayer'\n\n// This is a faster version of worldToPixels that omits pitch,\n// and ignores values from the matrix that are consistently = 0\nconst s = 1 / 1.5\nconst worldToPixelsSimple = (x, y, m) => {\n  const fx = s * (m[0] * x + m[4] * y + m[12])\n  const fy = s * (m[5] * y + m[13])\n  return [fx, fy]\n}\n\nclass HeatmapLayer extends React.Component {\n  componentDidMount() {\n    this._build()\n  }\n\n  componentWillUnmount() {\n    this._destroy()\n  }\n\n  componentDidUpdate() {\n    this._redraw()\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.useRadialGradientStyle !== this.props.useRadialGradientStyle) {\n      this.setBrushZoomRenderingStyle(nextProps.useRadialGradientStyle)\n    }\n  }\n\n  _build() {\n    const { layer, rootStage, useRadialGradientStyle, customRenderingStyle } = this.props\n    this.subLayers = {}\n    this.renderingStyle =\n      layer.header && layer.header.rendering ? layer.header.rendering : customRenderingStyle\n\n    this.setBrushRenderingStyle(this.renderingStyle.style)\n    this.setBrushZoomRenderingStyle(useRadialGradientStyle)\n\n    this.stage = new PIXI.Container()\n\n    rootStage.addChild(this.stage)\n  }\n\n  setBrushRenderingStyle(style = BRUSH_RENDERING_STYLE.NORMAL) {\n    if (typeof style === 'string') {\n      this.brushRenderingStyle = BRUSH_RENDERING_STYLE[style.toUpperCase()]\n    } else {\n      this.brushRenderingStyle = style\n    }\n    this._setBrushRenderingStyleIndex()\n  }\n\n  setBrushZoomRenderingStyle(useRadialGradientStyle) {\n    this.brushZoomRenderingStyle =\n      useRadialGradientStyle === true\n        ? BRUSH_ZOOM_RENDERING_STYLE.RADIAL_GRADIENT\n        : BRUSH_ZOOM_RENDERING_STYLE.CIRCLE\n    this._setBrushRenderingStyleIndex()\n  }\n\n  _setBrushRenderingStyleIndex() {\n    // only NORMAL brush styles support different zoom styles\n    const cappedZoomRenderingStyle =\n      this.brushRenderingStyle === BRUSH_RENDERING_STYLE.NORMAL ? this.brushZoomRenderingStyle : 0\n    const newStyleIndex = this.brushRenderingStyle + cappedZoomRenderingStyle\n    if (newStyleIndex === this.renderingStyleIndex) {\n      return\n    }\n    this.renderingStyleIndex = newStyleIndex\n    Object.values(this.subLayers).forEach((subLayer) => {\n      subLayer.setRenderingStyleIndex(this.renderingStyleIndex)\n    })\n  }\n\n  _redraw() {\n    const { filters, baseTexture, layer } = this.props\n\n    if (\n      layer === null ||\n      layer === undefined ||\n      layer.tiles === undefined ||\n      layer.visible === false\n    ) {\n      this.stage.visible = false\n      return\n    }\n\n    this.stage.visible = true\n    this.stage.alpha = layer.opacity\n\n    const tiles = layer.tiles\n    const defaultHue = layer.hue\n    const allHuesToRender =\n      filters !== undefined && filters.length\n        ? filters\n            // pass is set to true by filterGroupActions when none of the filters fields\n            // in the filter group is supported by the layer headers\n            .filter((f) => f.pass !== true)\n            .map((f) => (f.hue === undefined ? '0' : f.hue.toString()))\n        : [defaultHue.toString()]\n    const currentlyUsedHues = Object.keys(this.subLayers)\n\n    // get all hues, old and new\n    const allHues = uniq(allHuesToRender.concat(currentlyUsedHues))\n\n    for (let i = 0; i < allHues.length; i++) {\n      const hue = allHues[i]\n      if (allHuesToRender.indexOf(hue) === -1) {\n        // not on new hues: delete sublayer\n        this._destroySubLayer(this.subLayers[hue])\n        delete this.subLayers[hue]\n        continue\n      }\n      if (currentlyUsedHues.indexOf(hue) === -1) {\n        // not on old hues: create sublayer\n        this.subLayers[hue] = this._createSublayer(baseTexture, this.renderingStyleIndex, hue)\n      }\n      this.subLayers[hue].clearSpriteProps()\n    }\n\n    if (!allHuesToRender.length) return\n    tiles.forEach((tile) => {\n      this._setSubLayersSpritePropsForTile({\n        data: tile.data,\n        numFilters: filters.length,\n        defaultHue,\n      })\n    })\n\n    allHuesToRender.forEach((hueToRender) => {\n      this.subLayers[hueToRender].render()\n    })\n  }\n\n  _setSubLayersSpritePropsForTile({ data, numFilters, defaultHue }) {\n    if (!data) {\n      return\n    }\n\n    const { startIndex, endIndex, viewport, filters, viewportLeft, viewportRight } = this.props\n\n    for (let timeIndex = startIndex; timeIndex < endIndex; timeIndex++) {\n      const frame = data[timeIndex]\n\n      if (!frame) continue\n\n      for (let index = 0, len = frame.worldX.length; index < len; index++) {\n        let hue\n        if (filters === undefined || !filters.length) {\n          hue = defaultHue\n        }\n        for (let fi = 0; fi < numFilters; fi++) {\n          const filter = filters[fi]\n          if (vesselSatisfiesFilters(frame, index, filter.filterValues)) {\n            hue = filter.hue\n            break\n          }\n        }\n\n        // no filter passes: bail\n        if (hue === undefined) {\n          continue\n        }\n\n        // wrap worldX when point crosses the antimeridian/dateline\n        // world points go from 0 to 512. There is no way to determine if worldX is on the \"wrong\" side\n        // of the antimeridian just by looking at its value (where with lat/lon we can simply look at -/+)\n        // Therefore we compare it to the viewport's left or right boundary, depending on what is currently\n        // \"the right side\" of the antimeridian\n        let worldX = frame.worldX[index]\n        if (viewportLeft > 0 && worldX < viewportLeft) {\n          // worldX is \"behind\" viewportLeft, which means it is \"on the right\" of the antimeridian\n          worldX += 512\n        } else if (viewportLeft < 0 && worldX > viewportRight) {\n          worldX -= 512\n        }\n\n        const scaledX = worldX * viewport.scale\n        const scaledY = frame.worldY[index] * viewport.scale\n        const mtx = viewport.pixelProjectionMatrix\n\n        const [x, y] =\n          viewport.pitch === 0\n            ? worldToPixelsSimple(scaledX, scaledY, mtx)\n            : worldToPixels([scaledX, scaledY], mtx)\n\n        if (x > -10 && x < viewport.width + 10 && y > -10 && y < viewport.height + 10) {\n          this.subLayers[hue].pushSpriteProps(\n            x,\n            y,\n            frame.opacity ? frame.opacity[index] : this.renderingStyle.defaultOpacity,\n            frame.radius ? frame.radius[index] : this.renderingStyle.defaultSize\n          )\n        }\n      }\n    }\n  }\n\n  _createSublayer(baseTexture, renderingStyleIndex, hue) {\n    const subLayer = new HeatmapSubLayer(\n      baseTexture,\n      renderingStyleIndex,\n      hue,\n      this.brushRenderingStyle === BRUSH_RENDERING_STYLE.BULLSEYE\n    )\n    this.stage.addChild(subLayer.stage)\n    return subLayer\n  }\n\n  _destroy() {\n    Object.values(this.subLayers).forEach(this._destroySubLayer.bind(this))\n    this.stage.destroy({ children: true })\n    const { rootStage } = this.props\n    rootStage.removeChild(this.stage)\n  }\n\n  _destroySubLayer(subLayer) {\n    this.stage.removeChild(subLayer.stage)\n    subLayer.destroy()\n  }\n\n  render() {\n    return null\n  }\n}\n\nHeatmapLayer.propTypes = {\n  layer: PropTypes.object,\n  rootStage: PropTypes.object,\n  viewport: PropTypes.object,\n  startIndex: PropTypes.number,\n  endIndex: PropTypes.number,\n  filters: PropTypes.array,\n  baseTexture: PropTypes.object,\n  useRadialGradientStyle: PropTypes.bool,\n  customRenderingStyle: PropTypes.object,\n  viewportLeft: PropTypes.number,\n  viewportRight: PropTypes.number,\n}\n\nexport default HeatmapLayer\n","import React, { Fragment } from 'react'\nimport * as PIXI from 'pixi.js'\nimport PropTypes from 'prop-types'\nimport { BaseControl } from 'react-map-gl'\nimport { lngLatToWorld } from 'viewport-mercator-project'\nimport {\n  hsvToRgb,\n  hueToRgbString,\n  hueIncrementToHue,\n  wrapHue,\n  VESSELS_HUES_INCREMENTS_NUM,\n} from '../utils/map-colors'\nimport {\n  VESSELS_BASE_RADIUS,\n  VESSELS_HEATMAP_BLUR_FACTOR,\n  ACTIVITY_HIGHLIGHT_HUE,\n  VESSELS_HEATMAP_DIMMING_ALPHA,\n  VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD,\n  VESSEL_CLICK_TOLERANCE_PX,\n} from '../config'\nimport HeatmapLayer from '../heatmap/HeatmapLayer'\n\nconst shouldUseRadialGradientStyle = (zoom) => zoom < VESSELS_RADIAL_GRADIENT_STYLE_ZOOM_THRESHOLD\n\n// builds a texture spritesheet containing\n// - the heatmap style (radial gradient)\n// - the circle style that is used at higher zoom levels\n// - the 'bullseye' style used for encounters\n// as well as a number of hues for each in a 2D grid.\n// Then, only the texture frame (mesh UVs) is modified depending on the zoom level,\n// in order not to have to recreate sprites\nconst getVesselTexture = (radius, blurFactor) => {\n  const tplCanvas = document.createElement('canvas')\n  const tplCtx = tplCanvas.getContext('2d')\n  const diameter = radius * 2\n  const NUM_STYLES = 3\n  tplCanvas.width = diameter * NUM_STYLES + (NUM_STYLES - 1) // + (NUM_STYLES - 1): tiny offset between 2 frames\n  tplCanvas.height = diameter * VESSELS_HUES_INCREMENTS_NUM + VESSELS_HUES_INCREMENTS_NUM\n\n  for (let hueIncrement = 0; hueIncrement < VESSELS_HUES_INCREMENTS_NUM; hueIncrement++) {\n    const y = diameter * hueIncrement + hueIncrement\n    const yCenter = y + radius\n\n    // heatmap style\n    let x = radius\n    const gradient = tplCtx.createRadialGradient(\n      x,\n      yCenter,\n      radius * blurFactor,\n      x,\n      yCenter,\n      radius\n    )\n    const hue = hueIncrementToHue(hueIncrement)\n    const rgbString = hueToRgbString(hue)\n    gradient.addColorStop(0, rgbString)\n\n    const rgbOuter = hsvToRgb(wrapHue(hue + 30), 80, 100)\n    gradient.addColorStop(1, `rgba(${rgbOuter.r}, ${rgbOuter.g}, ${rgbOuter.b}, 0)`)\n\n    tplCtx.fillStyle = gradient\n    tplCtx.fillRect(0, y, diameter, diameter)\n\n    // circle style\n    x += diameter + 1 // tiny offset between 2 frames\n    tplCtx.beginPath()\n    tplCtx.arc(x, yCenter, radius, 0, 2 * Math.PI, false)\n    tplCtx.fillStyle = rgbString\n    tplCtx.fill()\n\n    // bullseye style\n    x += diameter + 1\n    tplCtx.beginPath()\n    tplCtx.arc(x, yCenter, radius * 0.4, 0, 2 * Math.PI, false)\n    tplCtx.fillStyle = rgbString\n    tplCtx.fill()\n    tplCtx.beginPath()\n    tplCtx.arc(x, yCenter, radius * 0.95, 0, 2 * Math.PI, false)\n    tplCtx.lineWidth = 1\n    tplCtx.strokeStyle = rgbString\n    tplCtx.stroke()\n  }\n\n  return tplCanvas\n}\n\nclass ActivityLayers extends BaseControl {\n  state = {\n    pixiReady: false,\n  }\n\n  componentDidMount() {\n    this._build()\n    this.setState({\n      pixiReady: true,\n    })\n  }\n\n  componentWillUnmount() {\n    this._destroy()\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.props.exportNativeViewport(this._context.viewport)\n\n    if (\n      nextProps.viewport.width !== this.props.viewport.width ||\n      nextProps.viewport.height !== this.props.viewport.height\n    ) {\n      this._updateViewportSize(nextProps.viewport.width, nextProps.viewport.height)\n    }\n  }\n\n  _build() {\n    const { width, height } = this.props.viewport\n\n    this.pixi = new PIXI.Application({\n      width,\n      height,\n      transparent: true,\n      antialias: true,\n    })\n\n    this.renderer = this.pixi.renderer\n    this.canvas = this.pixi.view\n    this.canvas.style.position = 'absolute'\n\n    this.container.appendChild(this.canvas)\n\n    this.stage = this.pixi.stage\n\n    const baseTextureCanvas = getVesselTexture(VESSELS_BASE_RADIUS, VESSELS_HEATMAP_BLUR_FACTOR)\n    this.baseTexture = PIXI.Texture.fromCanvas(baseTextureCanvas)\n\n    this.heatmapStage = new PIXI.Container()\n    this.stage.addChild(this.heatmapStage)\n\n    this.pixi.ticker.add(this._onTick)\n  }\n\n  _destroy() {\n    this.pixi.destroy()\n  }\n\n  _updateViewportSize(viewportWidth, viewportHeight) {\n    this.renderer.resize(viewportWidth, viewportHeight)\n  }\n\n  toggleHeatmapDimming(dim) {\n    if (this.heatmapStage === undefined) {\n      return\n    }\n    if (dim === true) {\n      this.heatmapFadingIn = false\n    }\n    this.heatmapStage.alpha = dim === true ? VESSELS_HEATMAP_DIMMING_ALPHA : 1\n  }\n\n  onTouchStart = (event) => {\n    if (!event.touches.length) {\n      return\n    }\n    this.queryCoords(event.touches[0].clientX, event.touches[0].clientY)\n  }\n\n  onMouseMove = (event) => {\n    this.queryCoords(event.clientX, event.clientY)\n  }\n\n  queryCoords(x, y) {\n    // bail if all heatmap layers are set to non-interactive\n    if (this.props.heatmapLayers.every((l) => l.interactive !== true)) {\n      return\n    }\n\n    const { viewport } = this._context\n    const [longitude, latitude] = viewport.unproject([x, y])\n\n    let wrappedLongitude = longitude\n    if (wrappedLongitude > 180) {\n      wrappedLongitude -= 360\n    } else if (wrappedLongitude < -180) {\n      wrappedLongitude += 360\n    }\n\n    const [worldX, worldY] = lngLatToWorld([wrappedLongitude, latitude], 1)\n\n    const toleranceRadiusInWorldUnits = VESSEL_CLICK_TOLERANCE_PX / viewport.scale\n\n    this.props.queryHeatmapVessels(\n      {\n        longitude: wrappedLongitude,\n        latitude,\n        worldX,\n        worldY,\n        toleranceRadiusInWorldUnits,\n      },\n      this.props.temporalExtentIndexes\n    )\n  }\n\n  _onTick = () => {\n    if (this.heatmapFadingIn === true && this.heatmapStage.alpha < 1) {\n      this._heatmapFadeinStep()\n    }\n  }\n\n  _startHeatmapFadein() {\n    this.heatmapFadingIn = true\n    this.heatmapFadeinStartTimestamp = undefined\n  }\n\n  _heatmapFadeinStep() {\n    if (this.heatmapFadeinStartTimestamp === undefined) {\n      this.heatmapFadeinStartTimestamp = Date.now()\n    }\n    const timeElapsed = (Date.now() - this.heatmapFadeinStartTimestamp) / 1000\n    let alpha = this.heatmapStage.alpha + (1 - this.heatmapStage.alpha) * timeElapsed\n    if (alpha >= 1) {\n      alpha = 1\n      this.heatmapFadingIn = false\n    }\n    this.heatmapStage.alpha = alpha\n  }\n\n  // FIXME move to container?\n  _getHighlightData(highlightedVessels, highlightedClickedVessel, heatmapLayers) {\n    const hue = ACTIVITY_HIGHLIGHT_HUE\n    let highlightLayerData = {\n      id: '__HIGHLIGHT__',\n      visible: true,\n      opacity: 1,\n      hue: ACTIVITY_HIGHLIGHT_HUE,\n    }\n    let highlightFilters = []\n\n    if (\n      highlightedVessels !== undefined &&\n      highlightedVessels.layer !== undefined &&\n      highlightedVessels.foundVessels !== undefined &&\n      highlightedVessels.isEmpty !== true\n    ) {\n      const sourceLayer = heatmapLayers.find((l) => l.id === highlightedVessels.layer.id)\n      highlightLayerData = { highlightLayerData, ...sourceLayer }\n      highlightFilters = highlightedVessels.foundVessels.map((vessel) => ({\n        hue,\n        filterValues: {\n          series: [vessel.series],\n        },\n      }))\n    } else if (highlightedClickedVessel !== null) {\n      const sourceLayer = heatmapLayers.find((l) => l.id === highlightedClickedVessel.layer.id)\n      highlightLayerData = { highlightLayerData, ...sourceLayer }\n      highlightFilters = [\n        {\n          hue,\n          filterValues: {\n            series: [highlightedClickedVessel.id],\n          },\n        },\n      ]\n    }\n    return {\n      highlightLayerData,\n      highlightFilters,\n    }\n  }\n  _render() {\n    const {\n      zoom,\n      heatmapLayers,\n      temporalExtentIndexes,\n      highlightedVessels,\n      highlightedClickedVessel,\n      leftWorldScaled,\n      rightWorldScaled,\n    } = this.props\n    const { viewport } = this._context\n    const { pixiReady } = this.state\n\n    const startIndex = temporalExtentIndexes[0]\n    const endIndex = temporalExtentIndexes[1]\n    const useRadialGradientStyle = shouldUseRadialGradientStyle(zoom)\n\n    if (highlightedVessels.isEmpty !== true) {\n      this.toggleHeatmapDimming(true)\n    }\n    if (highlightedVessels.isEmpty === true) {\n      this._startHeatmapFadein()\n    }\n    if (this.renderer && this.renderer.gl && this.renderer.gl.getError !== undefined) {\n      const err = this.renderer.gl.getError()\n      if (err !== 0) console.log(err)\n    }\n\n    const { highlightLayerData, highlightFilters } = this._getHighlightData(\n      highlightedVessels,\n      highlightedClickedVessel,\n      heatmapLayers\n    )\n\n    return (\n      <div\n        ref={(ref) => {\n          this.container = ref\n        }}\n        style={{ position: 'absolute' }}\n        onMouseMove={this.onMouseMove}\n        onTouchStart={this.onTouchStart}\n      >\n        {pixiReady === true && (\n          <Fragment>\n            {heatmapLayers.map((layer) => (\n              <HeatmapLayer\n                key={layer.id}\n                layer={layer}\n                filters={layer.filters || []}\n                viewport={viewport}\n                startIndex={startIndex}\n                endIndex={endIndex}\n                baseTexture={this.baseTexture}\n                rootStage={this.heatmapStage}\n                useRadialGradientStyle={useRadialGradientStyle}\n                customRenderingStyle={{}}\n                viewportLeft={leftWorldScaled}\n                viewportRight={rightWorldScaled}\n              />\n            ))}\n            {this.stage !== undefined && (\n              <HeatmapLayer\n                key=\"highlighted\"\n                layer={highlightLayerData}\n                filters={highlightFilters}\n                viewport={viewport}\n                startIndex={startIndex}\n                endIndex={endIndex}\n                baseTexture={this.baseTexture}\n                rootStage={this.heatmapStage}\n                useRadialGradientStyle={useRadialGradientStyle}\n                customRenderingStyle={{ defaultOpacity: 1, defaultSize: 1 }}\n                viewportLeft={leftWorldScaled}\n                viewportRight={rightWorldScaled}\n              />\n            )}\n          </Fragment>\n        )}\n      </div>\n    )\n  }\n}\n\nActivityLayers.propTypes = {\n  zoom: PropTypes.number,\n  heatmapLayers: PropTypes.array,\n  temporalExtentIndexes: PropTypes.array,\n  highlightedVessels: PropTypes.object,\n  highlightedClickedVessel: PropTypes.object,\n  queryHeatmapVessels: PropTypes.func,\n  exportNativeViewport: PropTypes.func,\n  leftWorldScaled: PropTypes.number,\n  rightWorldScaled: PropTypes.number,\n}\n\nActivityLayers.contextTypes = {\n  viewport: PropTypes.object,\n}\n\nexport default ActivityLayers\n","import { connect } from 'react-redux'\nimport { createSelector } from 'reselect'\nimport convert from '@globalfishingwatch/map-convert'\nimport { exportNativeViewport } from '../glmap/viewport.actions'\nimport { getTemporalExtent } from '../module/module.selectors'\nimport ActivityLayers from './ActivityLayers'\nimport { queryHeatmapVessels } from '../heatmap/heatmapTiles.actions'\nimport { MIN_FRAME_LENGTH_MS } from '../config'\n\nconst getHeatmapLayers = (state) => state.map.heatmap.heatmapLayers\n\nconst getHeatmapLayersAsArray = createSelector(\n  [getHeatmapLayers],\n  (heatmapLayers) => {\n    const a = Object.keys(heatmapLayers).map((id) => ({\n      ...heatmapLayers[id],\n    }))\n    // console.log(a)\n    return a\n  }\n)\n\nconst getTemporalExtentIndexes = createSelector(\n  [getTemporalExtent],\n  (temporalExtent) => {\n    const startTimestamp = temporalExtent[0].getTime()\n    const endTimestamp = Math.max(\n      temporalExtent[1].getTime(),\n      temporalExtent[0].getTime() + MIN_FRAME_LENGTH_MS\n    )\n    const startIndex = convert.getOffsetedTimeAtPrecision(startTimestamp)\n    const endIndex = convert.getOffsetedTimeAtPrecision(endTimestamp)\n    return [startIndex, endIndex]\n  }\n)\n\nconst mapStateToProps = (state) => ({\n  highlightedVessels: state.map.heatmap.highlightedVessels,\n  highlightedClickedVessel: state.map.heatmap.highlightedClickedVessel,\n  viewport: state.map.viewport.viewport,\n  zoom: state.map.viewport.viewport.zoom,\n  heatmapLayers: getHeatmapLayersAsArray(state),\n  leftWorldScaled: state.map.viewport.leftWorldScaled,\n  rightWorldScaled: state.map.viewport.rightWorldScaled,\n  temporalExtentIndexes: getTemporalExtentIndexes(state),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  queryHeatmapVessels: (coords, temporalExtentIndexes) => {\n    dispatch(queryHeatmapVessels(coords, temporalExtentIndexes))\n  },\n  exportNativeViewport: (viewport) => {\n    dispatch(exportNativeViewport(viewport))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActivityLayers)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MapGL, { Popup, Marker } from 'react-map-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { TILES_URL_NEEDING_AUTHENTICATION } from '../config'\nimport ActivityLayers from '../activity/ActivityLayers.container.js'\nimport styles from './map.css'\n\nconst PopupWrapper = (props) => {\n  const { latitude, longitude, children, closeButton, onClose } = props\n  return (\n    <Popup\n      latitude={latitude}\n      longitude={longitude}\n      closeButton={closeButton}\n      onClose={onClose}\n      anchor=\"bottom\"\n      offsetTop={-10}\n      tipSize={4}\n      closeOnClick={false}\n    >\n      {children}\n    </Popup>\n  )\n}\n\nPopupWrapper.propTypes = {\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n  closeButton: PropTypes.bool.isRequired,\n  onClose: PropTypes.func,\n}\n\nPopupWrapper.defaultProps = {\n  onClose: () => {},\n}\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mouseOver: true,\n    }\n    this._mapContainerRef = null\n  }\n\n  componentDidMount() {\n    if (this._mapContainerRef !== null) {\n      this.loadObserver()\n    }\n    this.setBounds()\n  }\n\n  componentDidUpdate() {\n    this.setBounds()\n  }\n\n  onLoad = () => {\n    if (this.props.onLoad !== undefined) {\n      this.props.onLoad(this.getBounds())\n    }\n  }\n\n  setBounds = () => {\n    const bounds = this.getBounds()\n    if (bounds !== null && this.props.setBounds !== undefined) {\n      this.props.setBounds(bounds)\n    }\n  }\n\n  getBounds = () => {\n    if (!this.glMap) return null\n\n    const { _ne, _sw } = this.glMap.getBounds()\n    return {\n      north: _ne.lat,\n      south: _sw.lat,\n      west: _sw.lng,\n      east: _ne.lng,\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._containerResizeObserver) {\n      this._containerResizeObserver.disconnect()\n    }\n  }\n\n  loadObserver = async () => {\n    if ('ResizeObserver' in window === false) {\n      const module = await import('resize-observer-polyfill')\n      window.ResizeObserver = module.ResizeObserver || module.default\n    }\n    this._containerResizeObserver = new ResizeObserver(this.handleResizeObserver)\n    this._containerResizeObserver.observe(this._mapContainerRef)\n  }\n\n  handleResizeObserver = (entries) => {\n    const { width, height } = entries[0].contentRect\n    const { viewport, setViewport } = this.props\n\n    if (width !== viewport.width || height !== viewport.height) {\n      setViewport({\n        ...viewport,\n        width,\n        height,\n      })\n    }\n  }\n\n  onViewportChange = (viewport, interactionState) => {\n    const propsViewport = this.props.viewport\n    if (\n      propsViewport.latitude !== viewport.latitude ||\n      propsViewport.longitude !== viewport.longitude ||\n      propsViewport.zoom !== viewport.zoom ||\n      propsViewport.bearing !== viewport.bearing ||\n      propsViewport.pitch !== viewport.pitch\n    ) {\n      this.props.setViewport(viewport, interactionState)\n    }\n  }\n\n  onMapInteraction = (event, type) => {\n    this.props.mapInteraction(\n      type,\n      event.lngLat[1],\n      event.lngLat[0],\n      event.features,\n      this.glGetSource\n    )\n  }\n\n  onHover = (event) => {\n    this.onMapInteraction(event, 'hover')\n  }\n\n  onClick = (event) => {\n    this.onMapInteraction(event, 'click')\n  }\n\n  getRef = (ref) => {\n    if (ref !== null) {\n      this.glMap = ref.getMap()\n      this.glGetSource = this.glMap.getSource.bind(this.glMap)\n    }\n  }\n\n  getCursor = ({ isDragging }) => {\n    const { cursor } = this.props\n    if (cursor === null) {\n      return isDragging ? 'grabbing' : 'grab'\n    }\n    return cursor\n  }\n\n  transformRequest = (url, resourceType) => {\n    const { token } = this.props\n    if (token !== null && resourceType === 'Tile' && url.match(TILES_URL_NEEDING_AUTHENTICATION)) {\n      return {\n        url: url,\n        headers: { Authorization: 'Bearer ' + token },\n      }\n    }\n  }\n\n  render() {\n    const {\n      viewport,\n      maxZoom,\n      minZoom,\n      transitionEnd,\n      mapStyle,\n      onClosePopup,\n      clickPopup,\n      hoverPopup,\n      hasHeatmapLayers,\n      markers,\n      interactiveLayerIds,\n    } = this.props\n\n    return (\n      <div\n        id=\"map\"\n        className={styles.map}\n        ref={(ref) => {\n          this._mapContainerRef = ref\n        }}\n        onMouseLeave={() => {\n          this.setState({ mouseOver: false })\n        }}\n        onMouseEnter={() => {\n          this.setState({ mouseOver: true })\n        }}\n      >\n        <MapGL\n          {...viewport}\n          ref={this.getRef}\n          transformRequest={this.transformRequest}\n          onTransitionEnd={transitionEnd}\n          onLoad={this.onLoad}\n          onHover={this.onHover}\n          onClick={this.onClick}\n          getCursor={this.getCursor}\n          mapStyle={mapStyle}\n          maxZoom={maxZoom}\n          minZoom={minZoom}\n          onViewportChange={this.onViewportChange}\n          interactiveLayerIds={interactiveLayerIds}\n          clickRadius={4}\n          disableTokenWarning={true}\n        >\n          {hasHeatmapLayers !== false && <ActivityLayers />}\n          {clickPopup !== undefined && clickPopup !== null && (\n            <PopupWrapper\n              latitude={clickPopup.latitude}\n              longitude={clickPopup.longitude}\n              closeButton\n              onClose={onClosePopup}\n            >\n              {clickPopup.content}\n            </PopupWrapper>\n          )}\n          {this.state.mouseOver === true && hoverPopup !== undefined && hoverPopup !== null && (\n            <PopupWrapper\n              latitude={hoverPopup.latitude}\n              longitude={hoverPopup.longitude}\n              closeButton={false}\n            >\n              {hoverPopup.content}\n            </PopupWrapper>\n          )}\n          {markers !== null &&\n            markers.length > 0 &&\n            markers.map((marker, i) => (\n              <Marker key={i} latitude={marker.latitude} longitude={marker.longitude}>\n                {marker.content}\n              </Marker>\n            ))}\n        </MapGL>\n        <div className={styles.googleLogo} />\n      </div>\n    )\n  }\n}\n\nMap.propTypes = {\n  token: PropTypes.string,\n  viewport: PropTypes.object.isRequired,\n  mapStyle: PropTypes.object.isRequired,\n  clickPopup: PropTypes.object,\n  hoverPopup: PropTypes.object,\n  maxZoom: PropTypes.number.isRequired,\n  minZoom: PropTypes.number.isRequired,\n  setViewport: PropTypes.func.isRequired,\n  setBounds: PropTypes.func,\n  mapInteraction: PropTypes.func,\n  onLoad: PropTypes.func,\n  onClosePopup: PropTypes.func,\n  transitionEnd: PropTypes.func,\n  cursor: PropTypes.string,\n  hasHeatmapLayers: PropTypes.bool.isRequired,\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n      content: PropTypes.node,\n    })\n  ),\n  interactiveLayerIds: PropTypes.arrayOf(PropTypes.string),\n}\n\nMap.defaultProps = {\n  token: null,\n  clickPopup: null,\n  hoverPopup: null,\n  mapInteraction: () => {},\n  onLoad: () => {},\n  onClosePopup: () => {},\n  transitionEnd: () => {},\n  cursor: null,\n  markers: null,\n  interactiveLayerIds: null,\n  setBounds: undefined,\n}\n\nexport default Map\n","import { connect } from 'react-redux'\nimport { createSelector } from 'reselect'\nimport { fromJS } from 'immutable'\nimport { TRACKS_LAYER_IN_FRONT_OF_GROUP } from '../config'\nimport { closePopup } from '../module/module.actions.js'\nimport { getTracksStyles } from '../tracks/tracks.selectors.js'\nimport { mapInteraction } from './interaction.actions.js'\nimport { setBounds, setViewport, transitionEnd } from './viewport.actions.js'\nimport Map from './Map'\n\nconst getStaticLayers = (state) => state.map.style.staticLayers\nconst getHeatmapLayers = (state) => state.map.heatmap.heatmapLayers\nconst getInternalCursor = (state) => state.map.interaction.cursor\nconst getModuleCursor = (state) => state.map.module.cursor\n\nconst hasHeatmapLayers = createSelector(\n  [getHeatmapLayers],\n  (heatmapLayers) => {\n    return Object.keys(heatmapLayers).length > 0\n  }\n)\nconst getInteractiveLayerIds = createSelector(\n  [getStaticLayers],\n  // Note: here we assume that layer IDs provided with module match the GL layers that should\n  // be interactive or not, ie typically the fill layer if a label layer is present\n  (staticLayers) => {\n    return staticLayers.reduce((acc, layer) => {\n      if (!layer.interactive || !layer.visible) return acc\n      // We also need to check nested layers interactivity when custom gl layers are provided\n      if (layer.gl !== undefined) {\n        layer.gl.layers.forEach((glLayer, index) => {\n          // layers.length === 1 is used to ensure when parent layer is marked as interactive we have to\n          // have at least one interactive sublayer, then checked eah one individually\n          if (\n            layer.gl.layers.length === 1 ||\n            (glLayer.metadata !== undefined && glLayer.metadata['gfw:interactive'] === true)\n          ) {\n            const glLayerId = glLayer.id || index > 0 ? `${layer.id}-${index}` : layer.id\n            acc.push(glLayerId)\n          }\n        })\n      } else {\n        acc.push(layer.id)\n      }\n      return acc\n    }, [])\n  }\n)\n\nconst getMapStyles = (state) => state.map.style.mapStyle\nconst getMapStyle = createSelector(\n  [getMapStyles, getTracksStyles],\n  (mapStyles, trackStyles) => {\n    if (!trackStyles) return mapStyles\n\n    const currentLayerGroups = mapStyles\n      .toJS()\n      .layers.filter((l) => l.metadata !== undefined)\n      .map((l) => l.metadata['mapbox:group'])\n    const trackLayersIndex = currentLayerGroups.lastIndexOf(TRACKS_LAYER_IN_FRONT_OF_GROUP) + 1\n\n    let finalMapStyles = mapStyles.mergeIn(['sources'], trackStyles.sources)\n    let mapStylesLayers = mapStyles.get('layers')\n    trackStyles.layers.forEach((trackLayer, i) => {\n      mapStylesLayers = mapStylesLayers.insert(trackLayersIndex + i, fromJS(trackLayer))\n    })\n    finalMapStyles = finalMapStyles.set('layers', mapStylesLayers)\n    return finalMapStyles\n  }\n)\n\nconst getCursor = createSelector(\n  [getInternalCursor, getModuleCursor],\n  (internalCursor, moduleCursor) => {\n    if (moduleCursor !== null) {\n      return moduleCursor\n    }\n    return internalCursor\n  }\n)\nconst mapStateToProps = (state) => ({\n  viewport: state.map.viewport.viewport,\n  maxZoom: state.map.viewport.maxZoom,\n  minZoom: state.map.viewport.minZoom,\n  onLoad: state.map.module.onLoad,\n  cursor: getCursor(state),\n  token: state.map.module.token,\n  mapStyle: getMapStyle(state),\n  hasHeatmapLayers: hasHeatmapLayers(state),\n  interactiveLayerIds: getInteractiveLayerIds(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setViewport: (viewport, interactionState) => {\n    dispatch(setViewport(viewport, interactionState))\n  },\n  setBounds: (bounds) => {\n    dispatch(setBounds(bounds))\n  },\n  mapInteraction: (type, lat, long, features, cluster, glGetSource) => {\n    dispatch(mapInteraction(type, lat, long, features, cluster, glGetSource))\n  },\n  transitionEnd: () => {\n    dispatch(transitionEnd())\n  },\n  onClosePopup: () => {\n    dispatch(closePopup())\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Map)\n","import { fromJS } from 'immutable'\nimport uniq from 'lodash/uniq'\nimport GL_STYLE from './gl-styles/style.json'\nimport {\n  SET_MAP_STYLE,\n  MARK_CARTO_LAYERS_AS_INSTANCIATED,\n  INIT_MAP_STYLE,\n  SET_STATIC_LAYERS,\n  SET_BASEMAP_LAYERS,\n} from './style.actions'\n\nconst attributions = uniq(\n  Object.keys(GL_STYLE.sources)\n    .map((sourceKey) => GL_STYLE.sources[sourceKey].attribution)\n    .filter((source) => source !== undefined)\n)\n\nexport const setLayerStyleDefaults = (layer) => {\n  if (layer.layout === undefined) {\n    layer.layout = {}\n  }\n  if (layer.paint === undefined) {\n    layer.paint = {}\n  }\n  if (layer.metadata === undefined) {\n    layer.metadata = {}\n  }\n  // initialize time filter for time-filterable layers\n  if (layer.metadata['gfw:temporal'] === true) {\n    const temporalField =\n      layer.metadata['gfw:temporalField'] === undefined\n        ? 'timestamp'\n        : layer.metadata['gfw:temporalField']\n    layer.filter = ['all', ['>', temporalField, 0], ['<', temporalField, 999999999999]]\n  }\n\n  if (layer.metadata['mapbox:group'] === undefined) {\n    layer.metadata['mapbox:group'] = 'temporal'\n  }\n\n  // set all layers to not visible except layers explicitely marked as visible (default basemap)\n  if (layer.layout.visibility !== 'visible') {\n    layer.layout.visibility = 'none'\n  }\n  return layer\n}\n\nconst setStyleDefaults = (style) => {\n  style.layers.forEach((layer) => {\n    setLayerStyleDefaults(layer)\n  })\n  return style\n}\n\nconst initialState = {\n  mapStyle: fromJS(setStyleDefaults(GL_STYLE)),\n  cartoLayersInstanciated: [],\n  staticLayers: [],\n  basemapLayers: [],\n  attributions,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case INIT_MAP_STYLE: {\n      const newMapStyle = state.mapStyle.setIn(['glyphs'], action.payload.glyphsPath)\n      return { ...state, mapStyle: newMapStyle }\n    }\n    case SET_MAP_STYLE: {\n      return { ...state, mapStyle: action.payload }\n    }\n    case SET_STATIC_LAYERS: {\n      return { ...state, staticLayers: action.payload }\n    }\n    case SET_BASEMAP_LAYERS: {\n      return { ...state, basemapLayers: action.payload }\n    }\n    case MARK_CARTO_LAYERS_AS_INSTANCIATED: {\n      const cartoLayersInstanciated = [...state.cartoLayersInstanciated, ...action.payload]\n      return { ...state, cartoLayersInstanciated }\n    }\n    default:\n      return state\n  }\n}\n","// This utility looks at GeoJSON features and returns the predominant geometry type\n\nconst TYPES = [\n  { gl: 'line', geoJSON: ['LineString', 'MultiLineString'] },\n  { gl: 'fill', geoJSON: ['Polygon', 'MultiPolygon'] },\n  { gl: 'circle', geoJSON: ['Point', 'MultiPoint'] },\n]\n\nexport default (geoJSON) => {\n  // collect all geoJSON geom types\n  const allGeoJSONTypes = geoJSON.features.map((feature) => {\n    const geom = feature.geometry\n    if (geom === undefined) {\n      return null\n    }\n    return geom.type\n  })\n\n  // collect number of geometries by GL geom types\n  const numByGLType = TYPES.map((type) => {\n    let num = 0\n    allGeoJSONTypes.forEach((geoJSONType) => {\n      if (type.geoJSON.indexOf(geoJSONType) > -1) {\n        num++\n      }\n    })\n    return { gl: type.gl, num }\n  })\n\n  // get feature types with the higher count\n  let glType = 'fill'\n  let glTypeMax = 0\n  numByGLType.forEach((t) => {\n    if (t.num > glTypeMax) {\n      glType = t.gl\n      glTypeMax = t.num\n    }\n  })\n\n  return glType\n}\n","import { fromJS } from 'immutable'\nimport convert from '@globalfishingwatch/map-convert'\nimport uniq from 'lodash/uniq'\nimport throttle from 'lodash/throttle'\nimport { hexToRgb } from '../utils/map-colors'\nimport { STATIC_LAYERS_CARTO_ENDPOINT, STATIC_LAYERS_CARTO_TILES_ENDPOINT } from '../config'\nimport { CUSTOM_LAYERS_SUBTYPES, GL_TRANSPARENT } from '../constants'\nimport GL_STYLE from './gl-styles/style.json'\nimport { setLayerStyleDefaults } from './style.reducer.js'\nimport getMainGeomType from '../utils/getMainGeomType'\n\nexport const INIT_MAP_STYLE = 'INIT_MAP_STYLE'\nexport const SET_MAP_STYLE = 'SET_MAP_STYLE'\nexport const MARK_CARTO_LAYERS_AS_INSTANCIATED = 'MARK_CARTO_LAYERS_AS_INSTANCIATED'\nexport const SET_STATIC_LAYERS = 'SET_STATIC_LAYERS'\nexport const SET_BASEMAP_LAYERS = 'SET_BASEMAP_LAYERS'\n\nconst setDefaultVectorTiles = (currentSource, refLayerUrl) => {\n  if (currentSource.type !== 'vector') {\n    return currentSource\n  }\n  const tiles = currentSource.tiles\n  const refLayerUrls = refLayerUrl === undefined ? [] : [refLayerUrl]\n\n  const newTiles =\n    tiles !== undefined && tiles.length > 0 ? uniq([...refLayerUrls, ...tiles]) : refLayerUrls\n  return {\n    ...currentSource,\n    tiles: newTiles,\n  }\n}\n\nexport const initStyle = ({ glyphsPath }) => ({\n  type: INIT_MAP_STYLE,\n  payload: {\n    glyphsPath,\n  },\n})\n\nconst setMapStyle = (style) => ({\n  type: SET_MAP_STYLE,\n  payload: style,\n})\n\nconst setStyleTemporalExtent = (dispatch, getState, temporalExtent, applyToThrottled = false) => {\n  const state = getState().map.style\n  let style = state.mapStyle\n  const currentStyle = style.toJS()\n  const glLayers = currentStyle.layers\n\n  let start = Math.round(temporalExtent[0].getTime() / 1000)\n  let end = Math.round(temporalExtent[1].getTime() / 1000)\n\n  // TEMPORARY, remove later - temporal layers points should have a timestamp, this is legacy\n  // logic for legacy encounters layer that only have a 'timeIndex'\n  const startIndex = convert.getOffsetedTimeAtPrecision(temporalExtent[0].getTime())\n  const endIndex = convert.getOffsetedTimeAtPrecision(temporalExtent[1].getTime())\n\n  for (let i = 0; i < glLayers.length; i++) {\n    const glLayer = glLayers[i]\n    if (glLayer.metadata === undefined || glLayer.metadata['gfw:temporal'] !== true) {\n      continue\n    }\n\n    if (\n      (applyToThrottled === true && glLayer.metadata['gfw:temporal:throttled'] !== true) ||\n      (applyToThrottled === false && glLayer.metadata['gfw:temporal:throttled'] === true)\n    ) {\n      continue\n    }\n\n    // if layer is temporal, a filter must always be preset on the style.json object\n    // because each layer can have a different time field to be filtered\n    const currentFilter = style.getIn(['layers', i, 'filter']).toJS()\n    if (currentFilter === null) {\n      throw new Error('filter must be preset on style.json for temporal layer: ', glLayer.id)\n    }\n\n    // TEMPORARY, remove later - temporal layers points should have a timestamp, this is legacy\n    // logic for legacy encounters layer that only have a 'timeIndex'\n    const isLegacy = glLayer.metadata && glLayer.metadata['gfw:temporalField'] === 'timeIndex'\n    currentFilter[1][2] = isLegacy ? startIndex : start\n    currentFilter[2][2] = isLegacy ? endIndex : end\n    style = style.setIn(['layers', i, 'filter'], fromJS(currentFilter))\n  }\n  dispatch(setMapStyle(style))\n}\n\nconst applyTemporalExtentThrottled = throttle((dispatch, getState, temporalExtent) => {\n  setStyleTemporalExtent(dispatch, getState, temporalExtent, true)\n}, 400)\n\nexport const applyTemporalExtent = (temporalExtent) => (dispatch, getState) => {\n  setStyleTemporalExtent(dispatch, getState, temporalExtent)\n  applyTemporalExtentThrottled(dispatch, getState, temporalExtent)\n}\n\nconst applyLayerExpressions = (style, refLayer, currentGlLayer, glLayerIndex) => {\n  let newStyle = style\n  const currentStyle = style.toJS()\n  const glType = currentGlLayer.type\n  const defaultStyles = currentStyle.metadata['gfw:styles']\n  const metadata = currentGlLayer.metadata\n  ;['selected', 'highlighted'].forEach((styleType) => {\n    // get selectedFeatures or highlightedFeatures\n    const features = refLayer[`${styleType}Features`]\n    const refLayerStyle = features && features.style ? features.style[glType] : {}\n    const hasFeatures = features !== null && features !== undefined && features.values.length > 0\n    const applyStyleToAllFeatures = refLayer[styleType]\n\n    const defaultStyle = defaultStyles[styleType][glType] || {}\n    const layerStyle =\n      (metadata && metadata['gfw:styles'] && metadata['gfw:styles'][styleType]) || {}\n    const allPaintProperties = { ...defaultStyle, ...layerStyle, ...refLayerStyle }\n\n    if (Object.keys(allPaintProperties).length) {\n      // go through each applicable gl paint property\n      Object.keys(allPaintProperties).forEach((glPaintProperty) => {\n        const selectedValue = allPaintProperties[glPaintProperty][0]\n        const fallbackValue = allPaintProperties[glPaintProperty][1]\n        const paintOrLayout = ['icon-size', 'icon-image'].includes(glPaintProperty)\n          ? 'layout'\n          : 'paint'\n        let glPaintFinalValue\n        if (\n          hasFeatures === false &&\n          applyStyleToAllFeatures !== true &&\n          applyStyleToAllFeatures !== false\n        ) {\n          // style reset when no features filter is declared and neither is applyAll\n          const originalLayerStyle = GL_STYLE.layers.find((l) => l.id === currentGlLayer.id)\n\n          if (originalLayerStyle !== undefined) {\n            // for reset: do not repaint with default style when layer as a custom main color property\n            if (\n              currentGlLayer.metadata &&\n              currentGlLayer.metadata['gfw:mainColorPaintProperty'] === glPaintProperty\n            ) {\n              glPaintFinalValue = null\n            } else {\n              glPaintFinalValue = originalLayerStyle[paintOrLayout][glPaintProperty]\n            }\n          } else {\n            // this will happen when no style exist in the original definition (ie custom layers)\n            // in this case set glPaintFinalValue to null and we'll just skip applying\n            // any selected/highlighted style for this layer\n            glPaintFinalValue = null\n          }\n        } else if (applyStyleToAllFeatures === true || applyStyleToAllFeatures === false) {\n          glPaintFinalValue = applyStyleToAllFeatures === true ? selectedValue : fallbackValue\n        } else {\n          let layerColorRgbString = ''\n          if (refLayer.color !== null && refLayer.color !== undefined) {\n            const layerColorRgb = hexToRgb(refLayer.color)\n            layerColorRgbString = `${layerColorRgb.r},${layerColorRgb.g},${layerColorRgb.b}`\n          }\n          glPaintFinalValue = [\n            'match',\n            ['get', features.field],\n            features.values,\n            typeof selectedValue !== 'string'\n              ? selectedValue\n              : selectedValue.replace('$REFLAYER_COLOR_RGB', layerColorRgbString),\n            typeof fallbackValue !== 'string'\n              ? fallbackValue\n              : fallbackValue.replace('$REFLAYER_COLOR_RGB', layerColorRgbString),\n          ]\n        }\n\n        if (glPaintFinalValue !== undefined && glPaintFinalValue !== null) {\n          newStyle = newStyle.setIn(\n            ['layers', glLayerIndex, paintOrLayout, glPaintProperty],\n            glPaintFinalValue\n          )\n        }\n      })\n    }\n  })\n  return newStyle\n}\n\nconst toggleLayerVisibility = (style, refLayer, glLayerIndex) => {\n  const visibility = refLayer.visible === true ? 'visible' : 'none'\n  return style.setIn(['layers', glLayerIndex, 'layout', 'visibility'], visibility)\n}\n\nconst updateGLLayer = (style, glLayerId, refLayer) => {\n  const currentStyle = style.toJS()\n  const currentStyleLayers = currentStyle.layers\n  let newStyle = style\n\n  const glLayerIndex = currentStyleLayers.findIndex((l) => l.id === glLayerId)\n  const glLayer = currentStyleLayers.find((l) => l.id === glLayerId)\n\n  // visibility\n  newStyle = toggleLayerVisibility(newStyle, refLayer, glLayerIndex)\n\n  if (refLayer.isBasemap === true) {\n    return newStyle\n  }\n\n  const refLayerOpacity = refLayer.opacity === undefined ? 1 : refLayer.opacity\n\n  // color/opacity\n  switch (glLayer.type) {\n    case 'fill': {\n      newStyle = newStyle\n        .setIn(['layers', glLayerIndex, 'paint', 'fill-opacity'], refLayerOpacity)\n        .setIn(['layers', glLayerIndex, 'paint', 'fill-outline-color'], refLayer.color)\n        .setIn(['layers', glLayerIndex, 'paint', 'fill-color'], GL_TRANSPARENT)\n      break\n    }\n    case 'line': {\n      const color = refLayer.color || (glLayer.paint && glLayer.paint['line-color'])\n      newStyle = newStyle\n        .setIn(['layers', glLayerIndex, 'paint', 'line-opacity'], refLayerOpacity)\n        .setIn(['layers', glLayerIndex, 'paint', 'line-color'], color)\n      break\n    }\n    case 'symbol': {\n      if (glLayer.metadata && glLayer.metadata['gfw:isLabel'] === true) {\n        const parentLayerIsVisible =\n          newStyle.getIn(['layers', glLayerIndex, 'layout', 'visibility']) === 'visible'\n        const labelsVisibility =\n          parentLayerIsVisible && refLayer.showLabels === true ? 'visible' : 'none'\n        newStyle = newStyle.setIn(\n          ['layers', glLayerIndex, 'layout', 'visibility'],\n          labelsVisibility\n        )\n        if (refLayer.showLabels !== true) {\n          break\n        }\n      }\n      newStyle = newStyle.setIn(['layers', glLayerIndex, 'paint', 'text-opacity'], refLayerOpacity)\n\n      if (refLayer.color !== undefined) {\n        newStyle = newStyle.setIn(['layers', glLayerIndex, 'paint', 'text-color'], refLayer.color)\n      }\n      break\n    }\n    // Event layers and custom layers with point geom types\n    case 'circle': {\n      newStyle = newStyle\n        .setIn(['layers', glLayerIndex, 'paint', 'circle-opacity'], refLayerOpacity)\n        .setIn(['layers', glLayerIndex, 'paint', 'circle-stroke-opacity'], refLayerOpacity)\n\n      if (refLayer.color !== undefined) {\n        const colorPaintProperty =\n          glLayer && glLayer.metadata && glLayer.metadata['gfw:mainColorPaintProperty']\n            ? glLayer.metadata['gfw:mainColorPaintProperty']\n            : 'circle-color'\n        newStyle = newStyle.setIn(\n          ['layers', glLayerIndex, 'paint', colorPaintProperty],\n          refLayer.color\n        )\n      }\n      break\n    }\n    case 'raster': {\n      newStyle = newStyle.setIn(\n        ['layers', glLayerIndex, 'paint', 'raster-opacity'],\n        refLayerOpacity\n      )\n      break\n    }\n    default: {\n      break\n    }\n  }\n\n  newStyle = applyLayerExpressions(newStyle, refLayer, glLayer, glLayerIndex)\n\n  return newStyle\n}\n\nconst addCustomGLLayer = (subtype, layerId, url, data) => (dispatch, getState) => {\n  const state = getState()\n  let style = state.map.style.mapStyle\n  const currentStyle = style.toJS()\n\n  // add source if it doesn't exist yet\n  if (currentStyle.sources[layerId] === undefined) {\n    const source = { type: subtype }\n    if (subtype === CUSTOM_LAYERS_SUBTYPES.geojson) {\n      source.data = data\n    } else if (subtype === CUSTOM_LAYERS_SUBTYPES.raster) {\n      source.tiles = [url]\n      source.tileSize = 256\n    }\n    style = style.setIn(['sources', layerId], fromJS(source))\n  }\n\n  if (currentStyle.layers.find((glLayer) => glLayer.id === layerId) === undefined) {\n    const glType = subtype === CUSTOM_LAYERS_SUBTYPES.geojson ? getMainGeomType(data) : subtype\n    const glLayer = fromJS({\n      id: layerId,\n      source: layerId,\n      type: glType,\n      layout: {},\n      paint: {},\n    })\n    const layerIndex =\n      subtype === CUSTOM_LAYERS_SUBTYPES.raster\n        ? // if raster, put at index of last raster layer except labels\n          currentStyle.layers.length -\n          1 -\n          currentStyle.layers\n            .filter((l) => l.id !== 'labels')\n            .reverse()\n            .findIndex((l) => l.type === 'raster')\n        : currentStyle.layers.length - 1\n    style = style.set('layers', style.get('layers').splice(layerIndex, 0, glLayer))\n  }\n\n  dispatch(setMapStyle(style))\n}\n\nconst updateWorkspaceGLLayers = (workspaceGLLayers) => (dispatch, getState) => {\n  const state = getState()\n  let style = state.map.style.mapStyle\n\n  workspaceGLLayers.forEach((workspaceGLLayer) => {\n    const { id, gl } = workspaceGLLayer\n    const finalSource = setDefaultVectorTiles(gl.source, workspaceGLLayer.url)\n    style = style.setIn(['sources', id], fromJS(finalSource))\n\n    const existingLayerIds = style\n      .get('layers')\n      .toJS()\n      .map((l) => l.id)\n    const layersToAdd = gl.layers.filter((layer, index) => {\n      const layerId = layer.id || index > 0 ? `${id}-${index}` : id\n      return !existingLayerIds.includes(layerId)\n    })\n    layersToAdd.forEach((layerToAdd, index) => {\n      // doesn't add a sufix in the first elements but it will for the following ones\n      let layerToAddId = layerToAdd.id || index > 0 ? `${id}-${index}` : id\n      const defaultGlLayer = setLayerStyleDefaults(layerToAdd)\n\n      const glLayer = {\n        ...defaultGlLayer,\n        id: layerToAddId,\n        source: id,\n      }\n\n      // set source-layer - defaults to source id\n      if (gl.source.type === 'vector') {\n        const sourceLayer =\n          layerToAdd['source-layer'] === undefined ? id : layerToAdd['source-layer']\n        glLayer['source-layer'] = sourceLayer\n      }\n\n      // find correct z-index\n      const existingLayers = style.get('layers')\n      const newLayerGroup = glLayer.metadata['mapbox:group']\n      const newLayerIndex = existingLayers.findLastIndex((l) => {\n        return newLayerGroup === l.toJS().metadata['mapbox:group']\n      })\n      style = style.set('layers', existingLayers.splice(newLayerIndex, 0, fromJS(glLayer)))\n    })\n  })\n\n  dispatch(setMapStyle(style))\n  dispatch(applyTemporalExtent(state.map.module.temporalExtent))\n}\n\nconst getCartoLayerInstanciatePromise = ({ sourceId, sourceCartoSQL }) => {\n  const mapConfig = { layers: [{ id: sourceId, options: { sql: sourceCartoSQL } }] }\n  const mapConfigURL = encodeURIComponent(JSON.stringify(mapConfig))\n  const cartoAnonymousMapUrl = STATIC_LAYERS_CARTO_ENDPOINT.replace('$MAPCONFIG', mapConfigURL)\n\n  return new Promise((resolve) => {\n    fetch(cartoAnonymousMapUrl)\n      .then((res) => {\n        if (res.status >= 400) {\n          console.warn(`loading of layer failed ${sourceId}`)\n          Promise.reject()\n          return null\n        }\n        return res.json()\n      })\n      .then((data) => {\n        resolve({\n          layergroupid: data.layergroupid,\n          sourceId,\n        })\n      })\n      .catch((err) => {\n        console.warn(err)\n      })\n  })\n}\n\nconst instanciateCartoLayers = (layers) => (dispatch, getState) => {\n  dispatch({\n    type: MARK_CARTO_LAYERS_AS_INSTANCIATED,\n    payload: layers.map((layer) => layer.sourceId),\n  })\n  const cartoLayersPromises = layers.map((layer) => getCartoLayerInstanciatePromise(layer))\n  const cartoLayersPromisesPromise = Promise.all(cartoLayersPromises.map((p) => p.catch((e) => e)))\n  cartoLayersPromisesPromise\n    .then((instanciatedCartoLayers) => {\n      let style = getState().map.style.mapStyle\n      const currentStyle = style.toJS()\n      instanciatedCartoLayers.forEach((cartoLayer) => {\n        const tilesURL = STATIC_LAYERS_CARTO_TILES_ENDPOINT.replace(\n          '$LAYERGROUPID',\n          cartoLayer.layergroupid\n        )\n\n        // replace gl source with a new source that use tiles provided by Carto anonymous maps API\n        const newSourceId = `${cartoLayer.sourceId}-instanciated`\n        style = style.setIn(\n          ['sources', newSourceId],\n          fromJS({\n            type: 'vector',\n            tiles: [tilesURL],\n          })\n        )\n\n        style = style.deleteIn(['sources', cartoLayer.sourceId])\n\n        // change source in all layers that are using it (generally polygon + labels)\n        currentStyle.layers.forEach((glLayer, glLayerIndex) => {\n          if (glLayer.source === cartoLayer.sourceId) {\n            style = style.setIn(['layers', glLayerIndex, 'source'], newSourceId)\n            style = style.setIn(['layers', glLayerIndex, 'metadata', 'gfw:id'], cartoLayer.sourceId)\n            const refLayer = layers.find((l) => l.refLayer.id === cartoLayer.sourceId).refLayer\n            style = updateGLLayer(style, glLayer.id, refLayer)\n          }\n        })\n      })\n\n      dispatch(setMapStyle(style))\n    })\n    .catch((err) => {\n      console.warn(err)\n    })\n}\n\nexport const commitStyleUpdates = (staticLayers, basemapLayers) => (dispatch, getState) => {\n  // Store a copy of static and basemap layers. This is not used directly by\n  // the Map component which only needs a prepared style object\n  dispatch({\n    type: SET_STATIC_LAYERS,\n    payload: staticLayers,\n  })\n  dispatch({\n    type: SET_BASEMAP_LAYERS,\n    payload: basemapLayers,\n  })\n\n  const layers = [...staticLayers, ...basemapLayers.map((bl) => ({ ...bl, isBasemap: true }))]\n\n  const currentGLSources = getState().map.style.mapStyle.toJS().sources\n\n  // collect layers declared in workspace but not in original gl style\n  const workspaceGLLayers = layers.filter((layer) => layer.gl !== undefined)\n\n  if (workspaceGLLayers.length) {\n    // Adds the gl layers again in case the source is a dynamic geojson source\n    dispatch(updateWorkspaceGLLayers(workspaceGLLayers))\n  }\n\n  // instanciate custom layers if needed\n  const customLayers = layers.filter(\n    (layer) => layer.isCustom === true && currentGLSources[layer.id] === undefined\n  )\n  if (customLayers.length) {\n    customLayers.forEach((layer) => {\n      dispatch(addCustomGLLayer(layer.subtype, layer.id, layer.url, layer.data))\n    })\n  }\n\n  const state = getState().map.style\n  let style = state.mapStyle\n  const currentStyle = style.toJS()\n  const glLayers = currentStyle.layers\n  const glSources = currentStyle.sources\n\n  const cartoLayersToInstanciate = []\n\n  // update source when needed\n  staticLayers.forEach((refLayer) => {\n    const sourceId = refLayer.id\n    if (currentGLSources[sourceId] !== undefined && refLayer.visible === true) {\n      if (refLayer.data !== undefined) {\n        style = style.setIn(['sources', sourceId, 'data'], fromJS(refLayer.data))\n      }\n      if (refLayer.url !== undefined) {\n        const newSource = setDefaultVectorTiles(currentGLSources[sourceId], refLayer.url)\n        style = style.setIn(['sources', sourceId], fromJS(newSource))\n      }\n    }\n  })\n\n  for (let i = 0; i < glLayers.length; i++) {\n    const glLayer = glLayers[i]\n    const sourceId = glLayer.source\n    const glSource = glSources[sourceId]\n    const layerId = (glLayer.metadata !== undefined && glLayer.metadata['gfw:id']) || sourceId\n\n    const refLayer = layers.find((l) => l.id === layerId)\n\n    if (refLayer === undefined) {\n      if (glLayer.type !== 'background') {\n        // console.warn('gl layer does not exists in workspace', glLayer);\n      }\n      continue\n    }\n\n    // check if layer is served from Carto, which means we need to instanciate it first\n    // TODO BUG: check if layer is not instanciatING too\n    const sourceCartoSQL = glSource.metadata !== undefined && glSource.metadata['gfw:carto-sql']\n    if (sourceCartoSQL !== false && sourceCartoSQL !== undefined) {\n      // only if layer is visible and has not been instanciated yet\n      const cartoLayerInstanciated = state.cartoLayersInstanciated.indexOf(sourceId) > -1\n      if (\n        refLayer.visible === true &&\n        !cartoLayerInstanciated &&\n        !cartoLayersToInstanciate.find((l) => l.sourceId === sourceId)\n      ) {\n        cartoLayersToInstanciate.push({ sourceId, sourceCartoSQL, refLayer })\n      }\n      continue\n    }\n\n    style = updateGLLayer(style, glLayer.id, refLayer)\n  }\n\n  if (cartoLayersToInstanciate.length) {\n    dispatch(instanciateCartoLayers(cartoLayersToInstanciate))\n  }\n\n  dispatch(setMapStyle(style))\n}\n","import FlyToInterpolator from 'react-map-gl/dist/esm/utils/transition/viewport-fly-to-interpolator'\nimport { easeCubic } from 'd3-ease'\nimport { MIN_ZOOM_LEVEL, MAX_ZOOM_LEVEL } from '../config'\nimport { TRANSITION_TYPE } from '../constants'\nimport {\n  SET_BOUNDS,\n  SET_VIEWPORT,\n  UPDATE_VIEWPORT,\n  SET_ZOOM_INCREMENT,\n  SET_MOUSE_LAT_LONG,\n  TRANSITION_END,\n  SET_NATIVE_VIEWPORT,\n} from './viewport.actions'\n\nexport const TRANSITION_DURATION = 500\n\nconst DEFAULT_TRANSITION = {\n  transitionDuration: TRANSITION_DURATION,\n  transitionInterpolator: new FlyToInterpolator(),\n  transitionEasing: easeCubic,\n}\n\nconst initialState = {\n  viewport: {\n    latitude: 0,\n    longitude: 0,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0,\n    width: 1000,\n    height: 800,\n    bounds: {},\n  },\n  maxZoom: MAX_ZOOM_LEVEL,\n  minZoom: MIN_ZOOM_LEVEL,\n  prevZoom: 3,\n  currentTransition: null,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_VIEWPORT: {\n      return {\n        ...state,\n        viewport: action.payload,\n        canZoomIn: action.payload.zoom < state.maxZoom,\n        canZoomOut: action.payload.zoom > state.minZoom,\n        prevZoom: state.viewport.zoom,\n      }\n    }\n\n    case SET_BOUNDS: {\n      return {\n        ...state,\n        bounds: action.payload,\n      }\n    }\n\n    case UPDATE_VIEWPORT: {\n      const viewport = { ...state.viewport, ...action.payload }\n      return {\n        ...state,\n        viewport,\n        prevZoom: viewport.zoom,\n      }\n    }\n\n    case SET_ZOOM_INCREMENT: {\n      const currentZoom = state.viewport.zoom\n      const zoom = Math.min(\n        state.maxZoom,\n        action.payload.zoom || currentZoom + action.payload.increment\n      )\n      const viewport = {\n        ...state.viewport,\n        ...DEFAULT_TRANSITION,\n        zoom,\n        latitude:\n          action.payload.latitude === null ? state.viewport.latitude : action.payload.latitude,\n        longitude:\n          action.payload.longitude === null ? state.viewport.longitude : action.payload.longitude,\n      }\n      return {\n        ...state,\n        viewport,\n        canZoomIn: zoom < state.maxZoom,\n        canZoomOut: zoom > state.minZoom,\n        prevZoom: state.viewport.zoom,\n        currentTransition: TRANSITION_TYPE.ZOOM,\n      }\n    }\n\n    case SET_MOUSE_LAT_LONG: {\n      return { ...state, mouseLatLong: action.payload }\n    }\n\n    case TRANSITION_END: {\n      return { ...state, currentTransition: null }\n    }\n\n    case SET_NATIVE_VIEWPORT: {\n      return { ...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}\n","import { compose, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { TRANSITION_DURATION } from '../glmap/viewport.reducer'\nimport { fitToBounds as fitToBoundsAction, transitionEnd } from '../glmap/viewport.actions'\n\nlet composeEnhancers = compose\nif (\n  process.env.NODE_ENV === 'development' &&\n  (process.env.MAP_REDUX_REMOTE_DEBUG === 'true' ||\n    process.env.REACT_APP_MAP_REDUX_REMOTE_DEBUG === 'true')\n) {\n  const composeWithDevTools = require('remote-redux-devtools').composeWithDevTools\n  composeEnhancers = composeWithDevTools({\n    name: 'Map module',\n    realtime: true,\n    hostname: 'localhost',\n    port: 8000,\n    maxAge: 30,\n    stateSanitizer: (state) => ({ ...state, map: { ...state.map, heatmap: 'NOT_SERIALIZED' } }),\n  })\n}\n\nconst store = createStore(() => {}, {}, composeEnhancers(applyMiddleware(thunk)))\n\nexport const targetMapVessel = (id) => {\n  const track = store.getState().map.tracks.data.find((t) => t.id === id.toString())\n  store.dispatch(fitToBoundsAction(track.geoBounds))\n\n  return track.timelineBounds\n}\nexport const fitToBounds = (bounds) => {\n  store.dispatch(fitToBoundsAction(bounds))\n  setTimeout(() => {\n    // needed as the transition end is not being called on first fitToBounds trigger\n    if (store.getState().map.viewport.currentTransition !== null) {\n      store.dispatch(transitionEnd())\n    }\n  }, TRANSITION_DURATION + 1)\n}\n\nexport default store\n","import tbbox from '@turf/bbox'\n\nexport const getTrackTimeBounds = (geojson) => {\n  const time = { start: Infinity, end: 0 }\n  if (geojson && geojson.features) {\n    geojson.features.forEach((feature) => {\n      const hasTimes =\n        feature.properties &&\n        feature.properties.coordinateProperties &&\n        feature.properties.coordinateProperties.times &&\n        feature.properties.coordinateProperties.times.length > 0\n      if (hasTimes) {\n        feature.properties.coordinateProperties.times.forEach((datetime) => {\n          if (datetime < time.start) {\n            time.start = datetime\n          } else if (datetime > time.end) {\n            time.end = datetime\n          }\n        })\n      }\n    })\n  }\n  return [time.start, time.end]\n}\n\nexport const getTrackBounds = (geojson) => {\n  const bounds = tbbox(geojson)\n  return {\n    minLat: bounds[3],\n    minLng: bounds[0],\n    maxLat: bounds[1],\n    maxLng: bounds[2],\n  }\n}\n","import { targetMapVessel } from '../store'\n\nimport { getTilePromises, getCleanVectorArrays, groupData } from '../utils/heatmapTileData'\nimport { startLoader, completeLoader } from '../module/module.actions'\nimport { getTrackBounds, getTrackTimeBounds } from '../utils/getTrackBounds'\n\nexport const ADD_TRACK = 'ADD_TRACK'\nexport const UPDATE_TRACK = 'UPDATE_TRACK'\nexport const REMOVE_TRACK = 'REMOVE_TRACK'\n\nconst convertLegacyTrackToGeoJSON = (vectorArrays) => {\n  const createFeature = (segId, type = 'track', geomType = 'LineString') => ({\n    type: 'Feature',\n    geometry: {\n      type: geomType,\n      coordinates: [],\n    },\n    properties: {\n      type,\n      segId,\n      coordinateProperties: {\n        times: [],\n      },\n    },\n  })\n\n  let currentLng\n  let currentSeries = vectorArrays.series[0]\n  let currentFeature = createFeature(currentSeries)\n  const fishingPoints = createFeature('fishing', 'fishing', 'MultiPoint')\n  const features = []\n  let lngOffset = 0\n\n  for (let index = 0, length = vectorArrays.latitude.length; index < length; index++) {\n    const series = vectorArrays.series[index]\n    const longitude = vectorArrays.longitude[index]\n    const latitude = vectorArrays.latitude[index]\n    const weight = vectorArrays.weight[index]\n\n    if (currentLng) {\n      if (longitude - currentLng < -180) {\n        lngOffset += 360\n      } else if (longitude - currentLng > 180) {\n        lngOffset -= 360\n      }\n    }\n\n    const ll = [longitude + lngOffset, latitude]\n    if (series !== currentSeries && index !== 0) {\n      features.push(currentFeature)\n      currentFeature = createFeature(series)\n    }\n\n    currentFeature.geometry.coordinates.push(ll)\n    if (weight > 0) {\n      fishingPoints.geometry.coordinates.push(ll)\n      fishingPoints.properties.coordinateProperties.times.push(vectorArrays.datetime[index])\n    }\n    currentFeature.properties.coordinateProperties.times.push(vectorArrays.datetime[index])\n\n    currentSeries = series\n    currentLng = longitude\n  }\n\n  features.push(currentFeature)\n  features.push(fishingPoints)\n\n  return {\n    type: 'FeatureCollection',\n    features,\n  }\n}\n\nfunction loadTrack(track) {\n  return (dispatch, getState) => {\n    const { id, url, type, fitBoundsOnLoad, layerTemporalExtents, color, data } = track\n    const state = getState()\n    const token = state.map.module.token\n\n    if (state.map.tracks.data.find((t) => t.id === id)) {\n      return\n    }\n\n    const payload = {\n      id,\n      url,\n      type,\n      color,\n      fitBoundsOnLoad,\n    }\n    const trackHasData = track.data !== undefined && track.data !== null\n    const trackHasUrl = url !== undefined && url !== null && url !== ''\n    if (trackHasData) {\n      payload.data = data\n      payload.geoBounds = getTrackBounds(data)\n    }\n    dispatch({ type: ADD_TRACK, payload })\n\n    if (trackHasData || !trackHasUrl) {\n      return\n    }\n\n    const loaderID = startLoader(dispatch, state)\n    if (type !== 'geojson') {\n      // Deprecated tracks format logic to be deleted some day\n      const token = state.map.module.token\n\n      const promises = getTilePromises(url, token, layerTemporalExtents)\n\n      Promise.all(promises.map((p) => p.catch((e) => e))).then((rawTileData) => {\n        const cleanData = getCleanVectorArrays(rawTileData)\n\n        if (!cleanData.length) {\n          return\n        }\n        const rawTrackData = groupData(cleanData, [\n          'latitude',\n          'longitude',\n          'datetime',\n          'series',\n          'weight',\n          'sigma',\n        ])\n\n        const data = convertLegacyTrackToGeoJSON(rawTrackData)\n        const timelineBounds = getTrackTimeBounds(data)\n        const geoBounds = getTrackBounds(data)\n\n        dispatch({\n          type: UPDATE_TRACK,\n          payload: {\n            id,\n            data,\n            geoBounds,\n            timelineBounds,\n          },\n        })\n        dispatch(completeLoader(loaderID))\n      })\n    } else {\n      fetch(url, { headers: { Authorization: 'Bearer ' + token } })\n        .then((res) => {\n          if (res.status >= 400) throw new Error(res.statusText)\n          return res.json()\n        })\n        .then((data) => {\n          const timelineBounds = getTrackTimeBounds(data)\n          const geoBounds = getTrackBounds(data)\n          dispatch({\n            type: UPDATE_TRACK,\n            payload: {\n              id,\n              data,\n              geoBounds,\n              timelineBounds,\n            },\n          })\n          if (fitBoundsOnLoad) {\n            targetMapVessel(id)\n          }\n        })\n        .catch((err) => console.warn(err))\n        .finally(() => dispatch(completeLoader(loaderID)))\n    }\n  }\n}\n\nconst removeTrack = (trackId) => ({\n  type: REMOVE_TRACK,\n  payload: {\n    trackId,\n  },\n})\n\nexport const updateTracks = (newTracks = []) => (dispatch, getState) => {\n  const prevTracks = getState().map.tracks.data\n  // add and update layers\n  if (newTracks) {\n    newTracks.forEach((newTrack) => {\n      const trackId = newTrack.id\n      const prevTrack = prevTracks.find((t) => t.id === trackId)\n      if (prevTrack === undefined) {\n        dispatch(loadTrack(newTrack))\n      } else if (prevTrack.color !== newTrack.color) {\n        dispatch({\n          type: UPDATE_TRACK,\n          payload: {\n            id: newTrack.id,\n            color: newTrack.color,\n          },\n        })\n      }\n    })\n  }\n\n  // clean up unused tracks\n  prevTracks.forEach((prevTrack) => {\n    if (!newTracks || !newTracks.find((t) => t.id === prevTrack.id)) {\n      dispatch(removeTrack(prevTrack.id))\n    }\n  })\n}\n","import PropTypes from 'prop-types'\n\nconst withReducerPropTypes = (name, propTypesSchema) => (reducer) => {\n  if (process.env.NODE_ENV === 'development') {\n    return (state, action) => {\n      const result = reducer(state, action)\n      PropTypes.checkPropTypes(propTypesSchema, result, 'reducer', name)\n\n      return result\n    }\n  }\n  return reducer\n}\n\nexport default withReducerPropTypes\n","import PropTypes from 'prop-types'\nimport withReducerTypes from '../utils/withReducerTypes'\nimport {\n  INIT_MODULE,\n  SET_TEMPORAL_EXTENT,\n  SET_HIGHLIGHT_TEMPORAL_EXTENT,\n  START_LOADER,\n  COMPLETE_LOADER,\n  SET_MODULE_CURSOR,\n} from './module.actions'\n\nconst initialState = {\n  loaders: null,\n  token: undefined,\n  temporalExtent: [new Date(1970), new Date()],\n  highlightTemporalExtent: null,\n  cursor: null,\n  onViewportChange: undefined,\n  onHover: undefined,\n  onClick: undefined,\n  onLoad: undefined,\n  onLoadStart: undefined,\n  onLoadComplete: undefined,\n  onClosePopup: undefined,\n  onAttributionsChange: undefined,\n}\n\nconst moduleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_MODULE: {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    }\n\n    case SET_TEMPORAL_EXTENT: {\n      return {\n        ...state,\n        temporalExtent: action.payload,\n      }\n    }\n\n    case SET_HIGHLIGHT_TEMPORAL_EXTENT: {\n      return {\n        ...state,\n        highlightTemporalExtent: action.payload,\n      }\n    }\n\n    case START_LOADER: {\n      const loaders = state.loaders !== null ? [...state.loaders] : []\n      loaders.push(action.payload)\n      return { ...state, loaders }\n    }\n\n    case COMPLETE_LOADER: {\n      const loaders = [...state.loaders]\n      const loaderIndex = loaders.findIndex((l) => l === action.payload)\n      loaders.splice(loaderIndex, 1)\n      return { ...state, loaders }\n    }\n\n    case SET_MODULE_CURSOR: {\n      return { ...state, cursor: action.payload }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst moduleTypes = {\n  loaders: PropTypes.arrayOf(PropTypes.number),\n  token: PropTypes.string,\n  temporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  onViewportChange: PropTypes.func,\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onLoad: PropTypes.func,\n  onLoadStart: PropTypes.func,\n  onLoadComplete: PropTypes.func,\n  onClosePopup: PropTypes.func,\n  onAttributionsChange: PropTypes.func,\n}\n\nexport default withReducerTypes('module', moduleTypes)(moduleReducer)\n","import PropTypes from 'prop-types'\nimport { trackTypes } from '../proptypes/tracks'\nimport withReducerTypes from '../utils/withReducerTypes'\n\nimport { ADD_TRACK, UPDATE_TRACK, REMOVE_TRACK } from './tracks.actions'\n\nconst initialState = {\n  data: [],\n}\n\nconst tracksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TRACK: {\n      const data = [...state.data, action.payload]\n      return { ...state, data }\n    }\n\n    case UPDATE_TRACK: {\n      const trackData = action.payload\n      const data = state.data.map((track) => {\n        if (track.id !== trackData.id) return track\n        return {\n          ...track,\n          ...trackData,\n        }\n      })\n      return { ...state, data }\n    }\n\n    case REMOVE_TRACK: {\n      const removedTrackId = action.payload.trackId\n      const data = state.data.filter((track) => track.id !== removedTrackId)\n      return { ...state, data }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst tracksTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.exact({\n      ...trackTypes,\n      data: PropTypes.object,\n      timelineBounds: PropTypes.array,\n      geoBounds: PropTypes.exact({\n        minLat: PropTypes.number,\n        minLng: PropTypes.number,\n        maxLat: PropTypes.number,\n        maxLng: PropTypes.number,\n      }),\n    })\n  ),\n}\n\nexport default withReducerTypes('tracks', tracksTypes)(tracksReducer)\n","import difference from 'lodash/difference'\nimport {\n  INIT_HEATMAP_LAYERS,\n  UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES,\n  ADD_HEATMAP_LAYER,\n  UPDATE_HEATMAP_LAYER_STYLE,\n  REMOVE_HEATMAP_LAYER,\n  ADD_REFERENCE_TILE,\n  UPDATE_HEATMAP_TILE,\n  RELEASE_HEATMAP_TILES,\n  HIGHLIGHT_VESSELS,\n  UPDATE_LOADED_TILES,\n  HIGHLIGHT_CLICKED_VESSEL,\n  CLEAR_HIGHLIGHT_CLICKED_VESSEL,\n} from './heatmap.actions'\n\nconst initialState = {\n  // a dict of heatmap layers (key is layer id)\n  // each containing data, url, tiles, visibleTemporalExtentsIndices\n  heatmapLayers: {},\n  // store a list of tiles currently visible in the map\n  // those are necessary when adding a new layer to know which tiles need to be loaded\n  referenceTiles: [],\n  highlightedVessels: { isEmpty: true },\n  highlightedClickedVessel: null,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case INIT_HEATMAP_LAYERS: {\n      return Object.assign({}, state, { heatmapLayers: action.payload })\n    }\n\n    case UPDATE_HEATMAP_LAYER_TEMPORAL_EXTENTS_LOADED_INDICES: {\n      const heatmapLayers = state.heatmapLayers\n      heatmapLayers[action.payload.layerId].visibleTemporalExtentsIndices =\n        action.payload.newVisibleTemporalExtentsIndices\n\n      // also removing indices within each tile\n      // adding is done after tile has actually loaded\n      heatmapLayers[action.payload.layerId].tiles.forEach((tile) => {\n        tile.temporalExtentsIndicesLoaded = difference(\n          tile.temporalExtentsIndicesLoaded,\n          action.payload.indicesRemoved\n        )\n      })\n      return { ...state, heatmapLayers }\n    }\n\n    case ADD_HEATMAP_LAYER: {\n      const heatmapLayers = Object.assign({}, state.heatmapLayers, {\n        [action.payload.id]: {\n          tiles: [],\n          ...action.payload,\n        },\n      })\n      return Object.assign({}, state, { heatmapLayers })\n    }\n\n    case UPDATE_HEATMAP_LAYER_STYLE: {\n      const newLayer = action.payload\n      const layer = { ...state.heatmapLayers[newLayer.id], ...newLayer }\n      const heatmapLayers = { ...state.heatmapLayers, [newLayer.id]: layer }\n      return { ...state, heatmapLayers }\n    }\n\n    case REMOVE_HEATMAP_LAYER: {\n      const heatmapLayers = Object.assign({}, state.heatmapLayers)\n      delete heatmapLayers[action.payload.id]\n      return Object.assign({}, state, { heatmapLayers })\n    }\n\n    case ADD_REFERENCE_TILE: {\n      return Object.assign({}, state, { referenceTiles: [...state.referenceTiles, action.payload] })\n    }\n\n    case UPDATE_HEATMAP_TILE: {\n      const layerId = action.payload.layerId\n      const newTile = action.payload.tile\n      const layer = { ...state.heatmapLayers[layerId] }\n      let layerTiles = [...layer.tiles]\n      const tileIndex = layerTiles.findIndex((t) => t.uid === newTile.uid)\n      if (tileIndex === -1) {\n        layerTiles.push(newTile)\n      } else {\n        layerTiles = [\n          ...layerTiles.slice(0, tileIndex),\n          newTile,\n          ...layerTiles.slice(tileIndex + 1),\n        ]\n      }\n      layer.tiles = layerTiles\n      const heatmapLayers = { ...state.heatmapLayers, [layerId]: layer }\n      return { ...state, heatmapLayers }\n    }\n\n    case RELEASE_HEATMAP_TILES: {\n      const uids = action.payload\n\n      // remove tiles\n      const layerIds = Object.keys(state.heatmapLayers)\n      const heatmapLayers = { ...state.heatmapLayers }\n      layerIds.forEach((layerId) => {\n        const prevLayer = { ...heatmapLayers[layerId] }\n        uids.forEach((tileUid) => {\n          const releasedTileIndex = prevLayer.tiles.findIndex((tile) => tile.uid === tileUid)\n          if (releasedTileIndex > -1) {\n            // console.log('releasing', layerId, tileUid);\n            prevLayer.tiles.splice(releasedTileIndex, 1)\n          }\n        })\n      })\n\n      // remove reference tiles\n      let referenceTiles = [...state.referenceTiles]\n      uids.forEach((tileUid) => {\n        const releasedRefTileIndex = referenceTiles.findIndex((tile) => tile.uid === tileUid)\n        if (releasedRefTileIndex > -1) {\n          referenceTiles = [\n            ...referenceTiles.slice(0, releasedRefTileIndex),\n            ...referenceTiles.slice(releasedRefTileIndex + 1),\n          ]\n        }\n      })\n\n      return { ...state, heatmapLayers, referenceTiles }\n    }\n\n    case UPDATE_LOADED_TILES: {\n      const newHeatmapLayers = { ...state.heatmapLayers }\n      return { ...state, heatmapLayers: newHeatmapLayers }\n    }\n\n    case HIGHLIGHT_VESSELS: {\n      return Object.assign({}, state, { highlightedVessels: action.payload })\n    }\n\n    case HIGHLIGHT_CLICKED_VESSEL: {\n      return { ...state, highlightedClickedVessel: action.payload }\n    }\n\n    case CLEAR_HIGHLIGHT_CLICKED_VESSEL: {\n      return { ...state, highlightedClickedVessel: null }\n    }\n\n    default:\n      return state\n  }\n}\n","import uniq from 'lodash/uniq'\nimport {\n  SET_CURRENTLY_VISIBLE_TILES,\n  SET_CURRENTLY_LOADED_TILES,\n  SET_CURRENTLY_SWAPPED_TILE_UIDS,\n  MARK_TILES_UIDS_AS_LOADED,\n  RELEASE_MARKED_TILES_UIDS,\n} from './heatmapTiles.actions'\n\nconst initialState = {\n  currentVisibleTiles: [],\n  currentLoadedTiles: [],\n  currentToLoadTileUids: [],\n  currentToReleaseTileUids: [],\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENTLY_VISIBLE_TILES: {\n      const currentVisibleTiles = [].concat(action.payload)\n      return { ...state, currentVisibleTiles }\n    }\n\n    case SET_CURRENTLY_LOADED_TILES: {\n      const currentLoadedTiles = [].concat(action.payload)\n      return { ...state, currentLoadedTiles }\n    }\n\n    case SET_CURRENTLY_SWAPPED_TILE_UIDS: {\n      const currentToLoadTileUids = uniq(\n        state.currentToLoadTileUids.concat(action.payload.tilesToLoadUids)\n      )\n      const currentToReleaseTileUids = uniq(\n        state.currentToReleaseTileUids.concat(action.payload.tilesToReleaseUids)\n      )\n      // clean to load tiles of tiles that needs to be released\n      const newToLoadTilesUids = currentToLoadTileUids.filter(\n        (tileUid) => currentToReleaseTileUids.indexOf(tileUid) === -1\n      )\n      return { ...state, currentToLoadTileUids: newToLoadTilesUids, currentToReleaseTileUids }\n    }\n\n    case MARK_TILES_UIDS_AS_LOADED: {\n      const currentToLoadTileUids = state.currentToLoadTileUids\n      const tileUidsMarkedAsLoaded = action.payload\n      const newCurrentToLoadTileUids = currentToLoadTileUids.filter(\n        (tileUid) => tileUidsMarkedAsLoaded.indexOf(tileUid) === -1\n      )\n      return { ...state, currentToLoadTileUids: newCurrentToLoadTileUids }\n    }\n\n    case RELEASE_MARKED_TILES_UIDS: {\n      return { ...state, currentToReleaseTileUids: [] }\n    }\n\n    default:\n      return state\n  }\n}\n","// TODO MAP MODULE remove whole reducer\nimport { SET_MAP_CURSOR } from './interaction.actions'\n\nconst initialState = {\n  cursor: 'progress',\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MAP_CURSOR: {\n      return { ...state, cursor: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport ModuleReducer from '../module/module.reducer'\nimport TracksReducer from '../tracks/tracks.reducer'\nimport HeatmapReducer from '../heatmap/heatmap.reducer'\nimport HeatmapTilesReducer from '../heatmap/heatmapTiles.reducer'\nimport ViewportReducer from '../glmap/viewport.reducer'\nimport StyleReducer from '../glmap/style.reducer'\nimport InteractionReducer from '../glmap/interaction.reducer'\n\nconst mapReducer = combineReducers({\n  module: ModuleReducer,\n  tracks: TracksReducer,\n  heatmap: HeatmapReducer,\n  heatmapTiles: HeatmapTilesReducer,\n  style: StyleReducer,\n  viewport: ViewportReducer,\n  interaction: InteractionReducer,\n})\n\nexport default mapReducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport throttle from 'lodash/throttle'\nimport { trackTypes } from './proptypes/tracks'\nimport { heatmapLayerTypes, basemapLayerTypes, staticLayerTypes } from './proptypes/layers'\nimport { viewportTypes, popupTypes } from './proptypes/shared'\n\nimport Map from './glmap/Map.container'\nimport {\n  initModule,\n  setTemporalExtent,\n  setHighlightTemporalExtent,\n  setCursor,\n} from './module/module.actions'\nimport { updateViewport, transitionToZoom } from './glmap/viewport.actions'\nimport { initStyle, commitStyleUpdates, applyTemporalExtent } from './glmap/style.actions'\nimport { updateTracks } from './tracks/tracks.actions'\nimport { updateHeatmapLayers, updateLayerLoadTemporalExtents } from './heatmap/heatmap.actions'\n\nimport store from './store'\nimport mapReducers from './store/reducers'\n\nconst mapReducer = combineReducers({\n  map: mapReducers,\n})\n\nstore.replaceReducer(mapReducer)\n\nconst throttleApplyTemporalExtent = throttle((temporalExtent) => {\n  store.dispatch(applyTemporalExtent(temporalExtent))\n  store.dispatch(setTemporalExtent(temporalExtent))\n}, 16)\n\nconst updateViewportFromIncomingProps = (incomingViewport) => {\n  store.dispatch(\n    updateViewport({\n      latitude: incomingViewport.center[0],\n      longitude: incomingViewport.center[1],\n      zoom: incomingViewport.zoom,\n    })\n  )\n}\n\nclass MapModule extends React.Component {\n  state = {\n    initialized: false,\n    error: null,\n    errorInfo: null,\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo)\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    })\n  }\n\n  componentDidMount() {\n    // First trigger synchronous actions that should happen before any map render\n    // At the end of this, set a flag to allow map rendering\n\n    if (this.props.viewport !== undefined) {\n      updateViewportFromIncomingProps(this.props.viewport)\n    }\n\n    // TODO\n    if (this.props.glyphsPath !== null) {\n      store.dispatch(\n        initStyle({\n          glyphsPath: this.props.glyphsPath,\n          // TODO apply URL updates here\n        })\n      )\n    }\n\n    if (this.props.onAttributionsChange !== undefined) {\n      this.props.onAttributionsChange(store.getState().map.style.attributions)\n    }\n\n    if (store && store.getState().map.module.token === undefined) {\n      store.dispatch(\n        initModule({\n          token: this.props.token,\n          autoClusterZoom: this.props.autoClusterZoom,\n          isCluster: this.props.isCluster,\n          onViewportChange: this.props.onViewportChange,\n          onHover: this.props.onHover,\n          onClick: this.props.onClick,\n          onLoad: this.props.onLoad,\n          onLoadStart: this.props.onLoadStart,\n          onLoadComplete: this.props.onLoadComplete,\n          onClosePopup: this.props.onClosePopup,\n          onAttributionsChange: this.props.onAttributionsChange,\n        })\n      )\n    }\n\n    if (this.props.highlightTemporalExtent !== null && this.props.highlightTemporalExtent.length) {\n      store.dispatch(setHighlightTemporalExtent(this.props.highlightTemporalExtent))\n    }\n\n    if (\n      (this.props.basemapLayers !== null && this.props.basemapLayers.length) ||\n      (this.props.staticLayers !== null && this.props.staticLayers.length)\n    ) {\n      store.dispatch(\n        commitStyleUpdates(this.props.staticLayers || [], this.props.basemapLayers || [])\n      )\n    }\n\n    if (this.props.tracks !== null) {\n      store.dispatch(updateTracks(this.props.tracks))\n    }\n\n    // Now trigger async actions\n\n    if (this.props.temporalExtent !== null && this.props.temporalExtent.length) {\n      throttleApplyTemporalExtent(this.props.temporalExtent)\n    }\n\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({\n      initialized: true,\n    })\n\n    // heatmap layers\n    if (this.props.heatmapLayers !== null) {\n      store.dispatch(updateHeatmapLayers(this.props.heatmapLayers, this.props.loadTemporalExtent))\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // tracks\n    if (this.props.tracks !== prevProps.tracks) {\n      store.dispatch(updateTracks(this.props.tracks))\n    }\n\n    // heatmap layers\n    if (this.props.heatmapLayers !== prevProps.heatmapLayers) {\n      store.dispatch(updateHeatmapLayers(this.props.heatmapLayers, this.props.loadTemporalExtent))\n    }\n\n    // basemap / static layers\n    if (\n      (this.props.basemapLayers !== null && this.props.basemapLayers.length) ||\n      (this.props.staticLayers !== null && this.props.staticLayers.length)\n    ) {\n      if (\n        this.props.basemapLayers !== prevProps.basemapLayers ||\n        this.props.staticLayers !== prevProps.staticLayers\n      ) {\n        store.dispatch(\n          commitStyleUpdates(this.props.staticLayers || [], this.props.basemapLayers || [])\n        )\n      }\n    }\n\n    // loadTemporalExtent\n    if (this.props.loadTemporalExtent !== null && this.props.loadTemporalExtent.length) {\n      if (\n        prevProps.loadTemporalExtent === null ||\n        !prevProps.loadTemporalExtent.length ||\n        this.props.loadTemporalExtent[0].getTime() !== prevProps.loadTemporalExtent[0].getTime() ||\n        this.props.loadTemporalExtent[1].getTime() !== prevProps.loadTemporalExtent[1].getTime()\n      ) {\n        store.dispatch(updateLayerLoadTemporalExtents(this.props.loadTemporalExtent))\n      }\n    }\n    // temporalExtent\n    if (this.props.temporalExtent !== null && this.props.temporalExtent.length) {\n      if (\n        prevProps.temporalExtent === null ||\n        !prevProps.temporalExtent.length ||\n        this.props.temporalExtent[0].getTime() !== prevProps.temporalExtent[0].getTime() ||\n        this.props.temporalExtent[1].getTime() !== prevProps.temporalExtent[1].getTime()\n      ) {\n        throttleApplyTemporalExtent(this.props.temporalExtent)\n      }\n    }\n\n    // highlightTemporalExtent\n    if (this.props.highlightTemporalExtent !== null && this.props.highlightTemporalExtent.length) {\n      if (\n        prevProps.highlightTemporalExtent === null ||\n        !prevProps.highlightTemporalExtent.length ||\n        this.props.highlightTemporalExtent[0].getTime() !==\n          prevProps.highlightTemporalExtent[0].getTime() ||\n        this.props.highlightTemporalExtent[1].getTime() !==\n          prevProps.highlightTemporalExtent[1].getTime()\n      ) {\n        store.dispatch(setHighlightTemporalExtent(this.props.highlightTemporalExtent))\n      }\n    } else {\n      if (this.props.highlightTemporalExtent !== prevProps.highlightTemporalExtent) {\n        store.dispatch(setHighlightTemporalExtent(this.props.highlightTemporalExtent))\n      }\n    }\n\n    // viewport - since viewport will be updated internally to the module,\n    // we have to compare incoming props to existing viewport in store, ie:\n    // update viewport from incoming props ONLY if zoom or center is different\n    // from the internally stored one\n    // TODO FFS incoming lat lon should be an object, not an array\n    const currentViewport = store.getState().map.viewport.viewport\n    // stop propagating updates from outside when zooming in\n    if (\n      this.props.viewport !== undefined &&\n      store.getState().map.viewport.currentTransition === null\n    ) {\n      if (\n        currentViewport.latitude !== this.props.viewport.center[0] ||\n        currentViewport.longitude !== this.props.viewport.center[1] ||\n        currentViewport.zoom !== this.props.viewport.zoom\n      ) {\n        // if zoom delta is precisely === 1, zoom with a transition\n        if (Math.abs(currentViewport.zoom - this.props.viewport.zoom) === 1) {\n          store.dispatch(transitionToZoom(this.props.viewport))\n        } else {\n          updateViewportFromIncomingProps(this.props.viewport)\n        }\n      }\n    }\n\n    if (this.props.cursor !== prevProps.cursor) {\n      store.dispatch(setCursor(this.props.cursor))\n    }\n  }\n  render() {\n    if (this.state.error !== null) {\n      console.log(this.state.error)\n      return (\n        <div>\n          <h2>Map component crashed!</h2>\n          <p className=\"red\">{this.state.error && this.state.error.toString()}</p>\n          <div>Component Stack Error Details:</div>\n          <p className=\"red\">{this.state.errorInfo.componentStack}</p>\n        </div>\n      )\n    }\n    // won't render anything before actions in componentDidMount have been triggered\n    return this.state.initialized !== true ? null : (\n      <Provider store={store}>\n        <Map {...this.props} />\n      </Provider>\n    )\n  }\n}\n\nMapModule.propTypes = {\n  token: PropTypes.string,\n  viewport: PropTypes.shape(viewportTypes).isRequired,\n  autoClusterZoom: PropTypes.bool,\n  isCluster: PropTypes.func,\n  tracks: PropTypes.arrayOf(PropTypes.exact(trackTypes)),\n  heatmapLayers: PropTypes.arrayOf(PropTypes.shape(heatmapLayerTypes)),\n  temporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  highlightTemporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  loadTemporalExtent: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  basemapLayers: PropTypes.arrayOf(PropTypes.shape(basemapLayerTypes)),\n  staticLayers: PropTypes.arrayOf(PropTypes.shape(staticLayerTypes)),\n  cursor: PropTypes.string,\n  // customLayers\n  hoverPopup: PropTypes.shape(popupTypes),\n  clickPopup: PropTypes.shape(popupTypes),\n  glyphsPath: PropTypes.string,\n  onViewportChange: PropTypes.func,\n  onLoad: PropTypes.func,\n  onLoadStart: PropTypes.func,\n  onLoadComplete: PropTypes.func,\n  onClick: PropTypes.func,\n  onHover: PropTypes.func,\n  onAttributionsChange: PropTypes.func,\n  onClosePopup: PropTypes.func,\n}\n\nMapModule.defaultProps = {\n  token: null,\n  glyphsPath: null,\n  autoClusterZoom: true,\n  isCluster: (event) => event.isCluster === true,\n  highlightTemporalExtent: null,\n  tracks: null,\n  hoverPopup: null,\n  clickPopup: null,\n  heatmapLayers: null,\n  temporalExtent: null,\n  loadTemporalExtent: null,\n  basemapLayers: null,\n  staticLayers: null,\n  cursor: null,\n  onViewportChange: () => {},\n  onLoad: () => {},\n  onLoadStart: () => {},\n  onLoadComplete: () => {},\n  onClick: () => {},\n  onHover: () => {},\n  onAttributionsChange: () => {},\n  onClosePopup: () => {},\n}\n\nexport default MapModule\n","import GL_STYLE from '../glmap/gl-styles/style.json'\n\nconst AVAILABLE_BASEMAPS = GL_STYLE.metadata['gfw:basemap-layers']\n\nexport default AVAILABLE_BASEMAPS\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport Map from './index.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"map\"\n    }}>{`Map`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`This component displays and load fishing activity and fishing-related layers on a map, used in various GFW projects:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GlobalFishingWatch/map-client/blob/9c5179358d4870c0fd4c2c0742917e72e6025c59/app/src/map/components/MapWrapper.jsx#L5\"\n        }}>{`Map client`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GlobalFishingWatch/vessel-profiles/blob/aa0e17395f6a4947bb3fdf3106cb9d0a744ba64f/src/profile/components/MapWrapper.js#L3\"\n        }}>{`Vessel profiles`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GlobalFishingWatch/data-portal/blob/96b1e24efcff58ade672a67229da0610d9d241ab/src/map/MapWrapper.jsx#L2\"\n        }}>{`Data portal`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"available-properties\"\n    }}>{`Available properties`}</h2>\n    <p>{`TODO: fix crash on Props docz component`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<Map viewport={{ center: [0.026, 123.61], zoom: 5 }} />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Map\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Map viewport={{\n        center: [0.026, 123.61],\n        zoom: 5\n      }} mdxType=\"Map\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}